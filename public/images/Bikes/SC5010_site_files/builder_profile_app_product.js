/******/ (function (modules) {
  // webpackBootstrap
  /******/ // The module cache
  /******/ var installedModules = {}; // The require function

  /******/ /******/ function __webpack_require__(moduleId) {
    /******/ // Check if module is in cache
    /******/ if (installedModules[moduleId]) /******/ return installedModules[moduleId].exports; // Create a new module (and put it into the cache)

    /******/ /******/ var module = (installedModules[moduleId] = {
      /******/ i: moduleId,
      /******/ l: false,
      /******/ exports: {},
      /******/
    }); // Execute the module function

    /******/ /******/ modules[moduleId].call(
      module.exports,
      module,
      module.exports,
      __webpack_require__
    ); // Flag the module as loaded

    /******/ /******/ module.l = true; // Return the exports of the module

    /******/ /******/ return module.exports;
    /******/
  } // expose the modules object (__webpack_modules__)

  /******/ /******/ __webpack_require__.m = modules; // expose the module cache

  /******/ /******/ __webpack_require__.c = installedModules; // identity function for calling harmony imports with the correct context

  /******/ /******/ __webpack_require__.i = function (value) {
    return value;
  }; // define getter function for harmony exports

  /******/ /******/ __webpack_require__.d = function (exports, name, getter) {
    /******/ if (!__webpack_require__.o(exports, name)) {
      /******/ Object.defineProperty(exports, name, {
        /******/ configurable: false,
        /******/ enumerable: true,
        /******/ get: getter,
        /******/
      });
      /******/
    }
    /******/
  }; // getDefaultExport function for compatibility with non-harmony modules

  /******/ /******/ __webpack_require__.n = function (module) {
    /******/ var getter =
      module && module.__esModule
        ? /******/ function getDefault() {
            return module['default'];
          }
        : /******/ function getModuleExports() {
            return module;
          };
    /******/ __webpack_require__.d(getter, 'a', getter);
    /******/ return getter;
    /******/
  }; // Object.prototype.hasOwnProperty.call

  /******/ /******/ __webpack_require__.o = function (object, property) {
    return Object.prototype.hasOwnProperty.call(object, property);
  }; // __webpack_public_path__

  /******/ /******/ __webpack_require__.p = ''; // Load entry module and return exports

  /******/ /******/ return __webpack_require__((__webpack_require__.s = 802));
  /******/
})(
  /************************************************************************/
  /******/ [
    /* 0 */
    /***/ function (module, exports, __webpack_require__) {
      var global = __webpack_require__(6),
        core = __webpack_require__(44),
        hide = __webpack_require__(24),
        redefine = __webpack_require__(25),
        ctx = __webpack_require__(45),
        PROTOTYPE = 'prototype';

      var $export = function (type, name, source) {
        var IS_FORCED = type & $export.F,
          IS_GLOBAL = type & $export.G,
          IS_STATIC = type & $export.S,
          IS_PROTO = type & $export.P,
          IS_BIND = type & $export.B,
          target = IS_GLOBAL
            ? global
            : IS_STATIC
            ? global[name] || (global[name] = {})
            : (global[name] || {})[PROTOTYPE],
          exports = IS_GLOBAL ? core : core[name] || (core[name] = {}),
          expProto = exports[PROTOTYPE] || (exports[PROTOTYPE] = {}),
          key,
          own,
          out,
          exp;
        if (IS_GLOBAL) source = name;
        for (key in source) {
          // contains in native
          own = !IS_FORCED && target && target[key] !== undefined;
          // export native or passed
          out = (own ? target : source)[key];
          // bind timers to global for call from export context
          exp =
            IS_BIND && own
              ? ctx(out, global)
              : IS_PROTO && typeof out == 'function'
              ? ctx(Function.call, out)
              : out;
          // extend global
          if (target) redefine(target, key, out, type & $export.U);
          // export
          if (exports[key] != out) hide(exports, key, exp);
          if (IS_PROTO && expProto[key] != out) expProto[key] = out;
        }
      };
      global.core = core;
      // type bitmap
      $export.F = 1; // forced
      $export.G = 2; // global
      $export.S = 4; // static
      $export.P = 8; // proto
      $export.B = 16; // bind
      $export.W = 32; // wrap
      $export.U = 64; // safe
      $export.R = 128; // real proto method for `library`
      module.exports = $export;

      /***/
    },
    /* 1 */
    /***/ function (module, exports) {
      // shim for using process in browser
      var process = (module.exports = {});

      // cached from whatever global is present so that test runners that stub it
      // don't break things.  But we need to wrap it in a try catch in case it is
      // wrapped in strict mode code which doesn't define any globals.  It's inside a
      // function because try/catches deoptimize in certain engines.

      var cachedSetTimeout;
      var cachedClearTimeout;

      function defaultSetTimout() {
        throw new Error('setTimeout has not been defined');
      }
      function defaultClearTimeout() {
        throw new Error('clearTimeout has not been defined');
      }
      (function () {
        try {
          if (typeof setTimeout === 'function') {
            cachedSetTimeout = setTimeout;
          } else {
            cachedSetTimeout = defaultSetTimout;
          }
        } catch (e) {
          cachedSetTimeout = defaultSetTimout;
        }
        try {
          if (typeof clearTimeout === 'function') {
            cachedClearTimeout = clearTimeout;
          } else {
            cachedClearTimeout = defaultClearTimeout;
          }
        } catch (e) {
          cachedClearTimeout = defaultClearTimeout;
        }
      })();
      function runTimeout(fun) {
        if (cachedSetTimeout === setTimeout) {
          //normal enviroments in sane situations
          return setTimeout(fun, 0);
        }
        // if setTimeout wasn't available but was latter defined
        if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {
          cachedSetTimeout = setTimeout;
          return setTimeout(fun, 0);
        }
        try {
          // when when somebody has screwed with setTimeout but no I.E. maddness
          return cachedSetTimeout(fun, 0);
        } catch (e) {
          try {
            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally
            return cachedSetTimeout.call(null, fun, 0);
          } catch (e) {
            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error
            return cachedSetTimeout.call(this, fun, 0);
          }
        }
      }
      function runClearTimeout(marker) {
        if (cachedClearTimeout === clearTimeout) {
          //normal enviroments in sane situations
          return clearTimeout(marker);
        }
        // if clearTimeout wasn't available but was latter defined
        if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {
          cachedClearTimeout = clearTimeout;
          return clearTimeout(marker);
        }
        try {
          // when when somebody has screwed with setTimeout but no I.E. maddness
          return cachedClearTimeout(marker);
        } catch (e) {
          try {
            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally
            return cachedClearTimeout.call(null, marker);
          } catch (e) {
            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.
            // Some versions of I.E. have different rules for clearTimeout vs setTimeout
            return cachedClearTimeout.call(this, marker);
          }
        }
      }
      var queue = [];
      var draining = false;
      var currentQueue;
      var queueIndex = -1;

      function cleanUpNextTick() {
        if (!draining || !currentQueue) {
          return;
        }
        draining = false;
        if (currentQueue.length) {
          queue = currentQueue.concat(queue);
        } else {
          queueIndex = -1;
        }
        if (queue.length) {
          drainQueue();
        }
      }

      function drainQueue() {
        if (draining) {
          return;
        }
        var timeout = runTimeout(cleanUpNextTick);
        draining = true;

        var len = queue.length;
        while (len) {
          currentQueue = queue;
          queue = [];
          while (++queueIndex < len) {
            if (currentQueue) {
              currentQueue[queueIndex].run();
            }
          }
          queueIndex = -1;
          len = queue.length;
        }
        currentQueue = null;
        draining = false;
        runClearTimeout(timeout);
      }

      process.nextTick = function (fun) {
        var args = new Array(arguments.length - 1);
        if (arguments.length > 1) {
          for (var i = 1; i < arguments.length; i++) {
            args[i - 1] = arguments[i];
          }
        }
        queue.push(new Item(fun, args));
        if (queue.length === 1 && !draining) {
          runTimeout(drainQueue);
        }
      };

      // v8 likes predictible objects
      function Item(fun, array) {
        this.fun = fun;
        this.array = array;
      }
      Item.prototype.run = function () {
        this.fun.apply(null, this.array);
      };
      process.title = 'browser';
      process.browser = true;
      process.env = {};
      process.argv = [];
      process.version = ''; // empty string to avoid regexp issues
      process.versions = {};

      function noop() {}

      process.on = noop;
      process.addListener = noop;
      process.once = noop;
      process.off = noop;
      process.removeListener = noop;
      process.removeAllListeners = noop;
      process.emit = noop;

      process.binding = function (name) {
        throw new Error('process.binding is not supported');
      };

      process.cwd = function () {
        return '/';
      };
      process.chdir = function (dir) {
        throw new Error('process.chdir is not supported');
      };
      process.umask = function () {
        return 0;
      };

      /***/
    },
    /* 2 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';
      /* WEBPACK VAR INJECTION */ (function (process) {
        /**
         * Copyright (c) 2013-present, Facebook, Inc.
         * All rights reserved.
         *
         * This source code is licensed under the BSD-style license found in the
         * LICENSE file in the root directory of this source tree. An additional grant
         * of patent rights can be found in the PATENTS file in the same directory.
         *
         */

        /**
         * Use invariant() to assert state which your program assumes to be true.
         *
         * Provide sprintf-style format (only %s is supported) and arguments
         * to provide information about what broke and what you were
         * expecting.
         *
         * The invariant message will be stripped in production, but the invariant
         * will remain to ensure logic does not differ in production.
         */

        var validateFormat = function validateFormat(format) {};

        if (process.env.NODE_ENV !== 'production') {
          validateFormat = function validateFormat(format) {
            if (format === undefined) {
              throw new Error('invariant requires an error message argument');
            }
          };
        }

        function invariant(condition, format, a, b, c, d, e, f) {
          validateFormat(format);

          if (!condition) {
            var error;
            if (format === undefined) {
              error = new Error(
                'Minified exception occurred; use the non-minified dev environment ' +
                  'for the full error message and additional helpful warnings.'
              );
            } else {
              var args = [a, b, c, d, e, f];
              var argIndex = 0;
              error = new Error(
                format.replace(/%s/g, function () {
                  return args[argIndex++];
                })
              );
              error.name = 'Invariant Violation';
            }

            error.framesToPop = 1; // we don't care about invariant's own frame
            throw error;
          }
        }

        module.exports = invariant;
        /* WEBPACK VAR INJECTION */
      }.call(exports, __webpack_require__(1)));

      /***/
    },
    /* 3 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';
      /* WEBPACK VAR INJECTION */ (function (process) {
        /**
         * Copyright 2014-2015, Facebook, Inc.
         * All rights reserved.
         *
         * This source code is licensed under the BSD-style license found in the
         * LICENSE file in the root directory of this source tree. An additional grant
         * of patent rights can be found in the PATENTS file in the same directory.
         *
         */

        var emptyFunction = __webpack_require__(28);

        /**
         * Similar to invariant but only logs a warning if the condition is not met.
         * This can be used to log issues in development environments in critical
         * paths. Removing the logging code for production environments will keep the
         * same logic and follow the same code paths.
         */

        var warning = emptyFunction;

        if (process.env.NODE_ENV !== 'production') {
          (function () {
            var printWarning = function printWarning(format) {
              for (
                var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1;
                _key < _len;
                _key++
              ) {
                args[_key - 1] = arguments[_key];
              }

              var argIndex = 0;
              var message =
                'Warning: ' +
                format.replace(/%s/g, function () {
                  return args[argIndex++];
                });
              if (typeof console !== 'undefined') {
                console.error(message);
              }
              try {
                // --- Welcome to debugging React ---
                // This error was thrown as a convenience so that you can use this stack
                // to find the callsite that caused this warning to fire.
                throw new Error(message);
              } catch (x) {}
            };

            warning = function warning(condition, format) {
              if (format === undefined) {
                throw new Error(
                  '`warning(condition, format, ...args)` requires a warning ' + 'message argument'
                );
              }

              if (format.indexOf('Failed Composite propType: ') === 0) {
                return; // Ignore CompositeComponent proptype check.
              }

              if (!condition) {
                for (
                  var _len2 = arguments.length, args = Array(_len2 > 2 ? _len2 - 2 : 0), _key2 = 2;
                  _key2 < _len2;
                  _key2++
                ) {
                  args[_key2 - 2] = arguments[_key2];
                }

                printWarning.apply(undefined, [format].concat(args));
              }
            };
          })();
        }

        module.exports = warning;
        /* WEBPACK VAR INJECTION */
      }.call(exports, __webpack_require__(1)));

      /***/
    },
    /* 4 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';

      module.exports = __webpack_require__(85);

      /***/
    },
    /* 5 */
    /***/ function (module, exports, __webpack_require__) {
      var isObject = __webpack_require__(9);
      module.exports = function (it) {
        if (!isObject(it)) throw TypeError(it + ' is not an object!');
        return it;
      };

      /***/
    },
    /* 6 */
    /***/ function (module, exports) {
      // https://github.com/zloirock/core-js/issues/86#issuecomment-115759028
      var global = (module.exports =
        typeof window != 'undefined' && window.Math == Math
          ? window
          : typeof self != 'undefined' && self.Math == Math
          ? self
          : Function('return this')());
      if (typeof __g == 'number') __g = global; // eslint-disable-line no-undef

      /***/
    },
    /* 7 */
    /***/ function (module, exports) {
      module.exports = function (exec) {
        try {
          return !!exec();
        } catch (e) {
          return true;
        }
      };

      /***/
    },
    /* 8 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';
      /**
       * Copyright (c) 2013-present, Facebook, Inc.
       * All rights reserved.
       *
       * This source code is licensed under the BSD-style license found in the
       * LICENSE file in the root directory of this source tree. An additional grant
       * of patent rights can be found in the PATENTS file in the same directory.
       *
       *
       */

      /**
       * WARNING: DO NOT manually require this module.
       * This is a replacement for `invariant(...)` used by the error code system
       * and will _only_ be required by the corresponding babel pass.
       * It always throws.
       */

      function reactProdInvariant(code) {
        var argCount = arguments.length - 1;

        var message =
          'Minified React error #' +
          code +
          '; visit ' +
          'http://facebook.github.io/react/docs/error-decoder.html?invariant=' +
          code;

        for (var argIdx = 0; argIdx < argCount; argIdx++) {
          message += '&args[]=' + encodeURIComponent(arguments[argIdx + 1]);
        }

        message +=
          ' for the full message or use the non-minified dev environment' +
          ' for full errors and additional helpful warnings.';

        var error = new Error(message);
        error.name = 'Invariant Violation';
        error.framesToPop = 1; // we don't care about reactProdInvariant's own frame

        throw error;
      }

      module.exports = reactProdInvariant;

      /***/
    },
    /* 9 */
    /***/ function (module, exports) {
      module.exports = function (it) {
        return typeof it === 'object' ? it !== null : typeof it === 'function';
      };

      /***/
    },
    /* 10 */
    /***/ function (module, exports, __webpack_require__) {
      var store = __webpack_require__(115)('wks'),
        uid = __webpack_require__(67),
        Symbol = __webpack_require__(6).Symbol,
        USE_SYMBOL = typeof Symbol == 'function';

      var $exports = (module.exports = function (name) {
        return (
          store[name] ||
          (store[name] =
            (USE_SYMBOL && Symbol[name]) || (USE_SYMBOL ? Symbol : uid)('Symbol.' + name))
        );
      });

      $exports.store = store;

      /***/
    },
    /* 11 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true,
      });
      exports.getExpandedState = exports.getClosest = exports.getRenderBuffer = exports.getWheelsizeOptions = exports.getAllWheelsizes = exports.getMaterialOptions = exports.getAllMaterials = exports.formatWeight = exports.returnCurrencySymbolFromUnicode = exports.getItemSpecs = exports.getDefaultProductPriceWeightSpecs = exports.getSelectedProductPriceWeightSpecs = exports.getProductWheelsize = exports.getProductMaterial = exports.getWheelsizeProducts = exports.getMaterialProducts = exports.getRegionalProducts = exports.t = exports.getRegionsForProduct = exports.getDefaultSelectedForProduct = exports.getModelForProduct = exports.getKeyedInformation = exports.parseProductToState = exports.fetch = exports.frameOnlyPricing = exports.linkRoot = exports.eventBuilderModalClose = exports.eventBuilderModalOpen = undefined;

      var _typeof =
        typeof Symbol === 'function' && typeof Symbol.iterator === 'symbol'
          ? function (obj) {
              return typeof obj;
            }
          : function (obj) {
              return obj &&
                typeof Symbol === 'function' &&
                obj.constructor === Symbol &&
                obj !== Symbol.prototype
                ? 'symbol'
                : typeof obj;
            };

      var _immutable = __webpack_require__(82);

      var _immutable2 = _interopRequireDefault(_immutable);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      //export const regionID = 'us'; //Drupal.settings.builder_preview.rid;

      var eventBuilderModalOpen = (exports.eventBuilderModalOpen = new CustomEvent(
        'builderModalOpen'
      ));
      var eventBuilderModalClose = (exports.eventBuilderModalClose = new CustomEvent(
        'builderModalClose'
      ));

      var linkRoot = (exports.linkRoot = '/');
      var frameOnlyPricing = (exports.frameOnlyPricing = '');

      String.prototype.getMachineMaterial = function () {
        return this.toLowerCase().replace(' ', '_');
      };

      String.prototype.getLabelMaterial = function () {
        var label = this.replace('_cc', ' CC').replace('_c', ' C');
        return label.charAt(0).toUpperCase() + label.slice(1);
      };

      var fetch = (exports.fetch = function fetch(url) {
        return new Promise(function (resolve, reject) {
          var request = new XMLHttpRequest();
          request.onload = resolve;
          request.onerror = reject;
          request.open('GET', url);
          request.send();
        });
      });

      var parseProductToState = (exports.parseProductToState = function parseProductToState(
        productData
      ) {
        return { productData: productData.payload };
      });

      var getKeyedInformation = (exports.getKeyedInformation = function getKeyedInformation(
        lib,
        obj
      ) {
        return lib[obj.includedType][obj.id];
      });

      var getModelForProduct = (exports.getModelForProduct = function getModelForProduct(
        selected_product
      ) {
        var model_id = 0;
        if (selected_product.included.models !== undefined) {
          for (var i in selected_product.included.models) {
            model_id = selected_product.included.models[i].nid;
          }
        }
        return model_id;
      });

      var getDefaultSelectedForProduct = (exports.getDefaultSelectedForProduct = function getDefaultSelectedForProduct(
        selected_product,
        region
      ) {
        var components = selected_product.builder.components;
        var selected = {};

        for (var compType in components) {
          var defaultFound = false;

          if (!components.hasOwnProperty(compType)) continue;
          selected[compType] = {
            cid: null,
            vid: null,
          };

          for (var c in components[compType]) {
            if (!components[compType].hasOwnProperty(c)) continue;
            if (typeof components[compType][c]['regions'][region] == 'undefined') continue; //new region added
            if (!components[compType][c]['regions'][region].status) continue;

            var component = components[compType][c];

            if (component.fallbackDefault && !defaultFound) {
              selected[compType].cid = component.nid;
              if (component.variantsCount <= 0) continue; //no variants, so done here, skip
              for (var v in component.variants) {
                var variantDefaultFound = false;
                if (!component.variants.hasOwnProperty(v)) continue;
                var variant = component.variants[v];
                if (variant.fallbackDefault && !variantDefaultFound) {
                  selected[compType].vid = variant.nid;
                }
                if (!variant.default) continue;
                selected[compType].vid = variant.nid;
                variantDefaultFound = true;
              }
            }
            if (!component.default) continue; //not the default component so skip it
            defaultFound = true;
            selected[compType].cid = component.nid;

            if (component.variantsCount <= 0) continue; //no variants, so done here, skip
            for (var v in component.variants) {
              if (!component.variants.hasOwnProperty(v)) continue;
              var _variant = component.variants[v];
              if (!_variant.default) continue;
              selected[compType].vid = _variant.nid;
            }
          }

          selected[compType] = _immutable2.default.Map(selected[compType]);
        }
        return _immutable2.default.Map(selected); //if you want to use setIn etc. to change immutable object, then the nested objects need to be immutable too
      });

      var getRegionsForProduct = (exports.getRegionsForProduct = function getRegionsForProduct(
        selected_product
      ) {
        var regions = {};
        for (var r in selected_product.builder.product.regions) {
          regions[r] = r;
        }
        return regions;
      });

      var t = (exports.t = function t(string) {
        const builderNode = document.getElementsByClassName("builder-instance");
        
        if(builderNode[0].dataset.translations) {
          const translatableContent = JSON.parse(builderNode[0].dataset.translations);

          /* filter by string occurances that match 'original_text' values & return translated string */
          const filterCriteria = translatableContent.filter((obj) => obj.original_text === string);
          const textResult = filterCriteria.length > 0 ? filterCriteria[0].translated_text : string;
      
          return textResult;
        }
        return string
      });

      var getRegionalProducts = (exports.getRegionalProducts = function getRegionalProducts(
        allProducts,
        region,
        hideprods
      ) {
        //receives list of (all) products

        var regionProducts = [];
        for (var i in allProducts) {
          //if the product is active in the region, then add to the regional array
          if (
            allProducts[i].data.builder.product.regions[region].status &&
            !hideprods.includes(allProducts[i].data.builder.product.nid)
          ) {
            regionProducts.push(allProducts[i]);
          }
        }
        return regionProducts;
      });

      var getMaterialProducts = (exports.getMaterialProducts = function getMaterialProducts(
        products,
        material,
        region
      ) {
        //receives list of products to filter, and material to filter by, and current region
        if (material == 'all') return products;

        var productsToReturn = [];

        for (var i in products) {
          var productMaterial = getProductMaterial(products[i].data, region);
          //https://ventureweb.teamwork.com/#tasks/17410072
          //only display carbon if carbon c or cc is available
          if (
            productMaterial == material ||
            (material == 'carbon' &&
              (productMaterial == 'carbon_c' || productMaterial == 'carbon_cc'))
          ) {
            productsToReturn.push(products[i]);
          }
        }

        return productsToReturn;
      });

      var getWheelsizeProducts = (exports.getWheelsizeProducts = function getWheelsizeProducts(
        products,
        size,
        region
      ) {
        //receives list of products to filter, and material to filter by, and current region
        if (size == 'all') return products;

        var productsToReturn = [];

        for (var i in products) {
          var productSize = getProductWheelsize(products[i].data, region);
          //https://ventureweb.teamwork.com/#tasks/17410072
          //only display carbon if carbon c or cc is available

          if (
            productSize == size ||
            productSize.replace('.', '') == size //27.5 vs 275
          ) {
            productsToReturn.push(products[i]);
          }
        }

        return productsToReturn;
      });

      var getProductMaterial = (exports.getProductMaterial = function getProductMaterial(
        product,
        region
      ) {
        var material = null;
        // 1) Assume product is of type frame if not, return all
        var defaults = getDefaultSelectedForProduct(product, region);
        var frame = defaults.get('frame', null);
        if (!frame) return material;

        var cid = frame.get('cid');
        var vid = frame.get('vid', null);

        product.builder.components.frame[cid].specs.forEach(function (item) {
          for (var i in item) {
            if (material) return;
            var spec_item = getKeyedInformation(product.included, item[i]);
            if (spec_item.type == 'material') {
              material = spec_item.value.getMachineMaterial();
            }
          }
        });

        if (vid) {
          var v_material = null;
          product.builder.components.frame[cid].variants[vid].specs.forEach(function (item) {
            for (var i in item) {
              if (v_material) return;
              var spec_item = getKeyedInformation(product.included, item[i]);
              if (spec_item.type == 'material') {
                v_material = spec_item.value.getMachineMaterial();
              }
            }
          });
          if (v_material) {
            material = v_material.getMachineMaterial();
          }
        }

        return material;
      });

      var getProductWheelsize = (exports.getProductWheelsize = function getProductWheelsize(
        product,
        region
      ) {
        var size = null;
        // 1) Assume product is of type rim if not, return all
        var defaults = getDefaultSelectedForProduct(product, region);

        var rim = defaults.get('rim', null);
        if (!rim) return null;

        var cid = rim.get('cid');
        //const vid = rim.get('vid', null);

        if (cid && product.builder.components.rim[cid].config.wheel_size) {
          return getKeyedInformation(
            product.included,
            product.builder.components.rim[cid].config.wheel_size
          )['label'];
        }
        return null;
      });

      //see summary container
      var getSelectedProductPriceWeightSpecs = (exports.getSelectedProductPriceWeightSpecs = function getSelectedProductPriceWeightSpecs(
        state,
        currentRegion,
        library
      ) {
        var prod = state.getIn(['productData', 'builder']).product;
        var components = state.getIn(['productData', 'builder'])['components'];
        var selected = state.getIn(['productData', 'selected']);

        return _getProductPriceWeightSpecs(currentRegion, prod, components, selected, library);
      });

      //see specs container
      var getDefaultProductPriceWeightSpecs = (exports.getDefaultProductPriceWeightSpecs = function getDefaultProductPriceWeightSpecs(
        currentRegion,
        prod,
        components,
        defaults,
        library
      ) {
        return _getProductPriceWeightSpecs(currentRegion, prod, components, defaults, library);
      });

      var getItemSpecs = (exports.getItemSpecs = function getItemSpecs(obj, libraryData) {
        var specs = {};
        var incWeight = 'undefined' != obj.incSpecWeight && obj.incSpecWeight;
        if (obj.hasOwnProperty('specs')) {
          obj.specs.forEach(function (items) {
            for (var i in items) {
              var itemData = getKeyedInformation(libraryData, items[i]);
              if (!incWeight) itemData.weight = null;
              specs[itemData.type] = itemData;
            }
          });
        }
        return specs;
      });

      function _getProductPriceWeightSpecs(currentRegion, prod, components, selected, library) {
        var price = 0;
        var weight = 0;
        var specs = {};
        var kitName = void 0;

        //for wheels
        if (
          prod.machine &&
          prod.machine.machine &&
          (prod.machine.machine == 'rim' || prod.machine.machine == 'wheel')
        ) {
          kitName = prod.displayTitle;
        } else {
          kitName = prod.displayTitle.split('/')[0]; //assumes KITNAME / FRAME MATERIAL (for frames) @TODO - not safe
        }

        weight = prod.modifierWeight ? prod.modifierWeight : weight;

        price = prod.regions[currentRegion].modifier_price
          ? prod.regions[currentRegion].modifier_price
          : price;
        specs = Object.assign(specs, getItemSpecs(prod, library));

        //now components
        selected.map(function (value, compType) {
          var cid = value.get('cid');
          var vid = value.get('vid');

          var modWeight = 0; //do nothing by default
          var modPrice = 0; //do nothing by default

          var item = null;
          //variants override component, and my not be set, so need to get component data first, then override if set in variant
          if (cid) {
            item = components[compType][cid];
            modWeight = typeof item.modifierWeight != 'undefined' ? item.modifierWeight : 0;
            modPrice =
              typeof item.regions[currentRegion].modifier_price != 'undefined'
                ? item.regions[currentRegion].modifier_price
                : 0;
            //add some config values to the specs too, if not set (material, wheelsize)
            if ('undefined' != typeof item.config['wheel_size']) {
              var size = getKeyedInformation(library, item.config['wheel_size']);
              size.type = 'wheelsize';
              size.value = size.label;
              specs = Object.assign(specs, { wheelsize: size });
            }
            specs = Object.assign(specs, getItemSpecs(item, library));

            if (item.type == 'kit' && item.hasOwnProperty('displayTitle')) {
              kitName = item.displayTitle;
            }

            if (vid && item.variants.hasOwnProperty(vid)) {
              var vmodWeight =
                typeof item.variants[vid].modifierWeight != 'undefined'
                  ? item.variants[vid].modifierWeight
                  : 0;
              //variant weights override component weights only when
              if (vmodWeight > 0 || vmodWeight < 0) modWeight = vmodWeight; //if variant has weight that isn't 0, then override the modWeight

              //only override price if defined and set (not null)
              modPrice =
                typeof item.variants[vid].regions[currentRegion].modifier_price != 'undefined' &&
                item.variants[vid].regions[currentRegion].modifier_price != null
                  ? item.variants[vid].regions[currentRegion].modifier_price
                  : modPrice;
              specs = Object.assign(specs, getItemSpecs(item.variants[vid], library));

              if ('undefined' != typeof item.variants[vid].config['wheel_size']) {
                var _size = getKeyedInformation(library, item.variants[vid].config['wheel_size']);
                _size.type = 'wheelsize';
                _size.value = _size.label;
                specs = Object.assign(specs, { wheelsize: _size });
              }

              if (item.type == 'kit' && item.variants[vid].hasOwnProperty('displayTitle')) {
                kitName = item.variants[vid].displayTitle;
              } else if (item.type == 'rim' && item.variants[vid].hasOwnProperty('displayTitle')) {
                kitName = item.variants[vid].displayTitle;
              }
            }
          }

          if (modWeight) weight = weight + modWeight;
          if (modPrice) price = price + modPrice;
        });

        //optional components - adjust specs only (not weight or price)
        var comps = _immutable2.default.fromJS(components);
        comps.map(function (options, type) {
          options.map(function (option, cid) {
            var s = selected.getIn([type, 'cid'], null);
            if (
              (s && s == cid) ||
              option.default ||
              !option.getIn(['regions', currentRegion, 'status'], 1) //assume that it is allowed unless otherwise stated
            )
              return;

            var specType = type + '_option';
            //sometimes there is MORE than one option, in which case, add to the 'label' - e.g. AUS rim upgrade options
            if ('undefined' != typeof specs[specType]) {
              specs[specType]['label'] =
                specs[specType]['label'] +
                ', ' +
                option.get('displayTitle', option.get('title', 'n/a'));
              specs[specType]['value'] =
                specs[specType]['value'] +
                ', ' +
                option.get('displayTitle', option.get('title', 'n/a'));
            } else {
              specs[specType] = {
                id: option.get('nid'),
                info: null,
                label: option.get('displayTitle', option.get('title', 'n/a')),
                type: specType,
                typeLabel: type.charAt(0).toUpperCase() + type.slice(1) + ' Options',
                uri: '',
                value: option.get('displayTitle', option.get('title', 'n/a')),
                weight: null,
              };
            }
          });
        });

        //add all specs weights to the weight (remember only selected items have weight
        Object.keys(specs).forEach(function (key) {
          var record = specs[key];
          if (record.weight) {
            weight = weight + parseFloat(record.weight);
          }
        });

        var regionInfo = getKeyedInformation(library, {
          includedType: 'regions',
          id: currentRegion,
        });

        specs = Object.assign(
          {
            kitname: {
              id: 'kitname',
              type: 'kitname',
              value: kitName,
              prefix: null,
              suffix: null,
            },
            price: {
              id: 'price',
              type: 'price',
              value: price,
              suffix: regionInfo.currency.suffix,
              prefix: returnCurrencySymbolFromUnicode(regionInfo.currency.symbol),
            },
            weight: {
              id: 'weight',
              type: 'weight',
              value: formatWeight(weight),
              suffix: null,
              prefix: null,
            },
          },
          specs
        );

        return {
          specs: specs,
          price: price,
          weight: weight,
        };
      }

      var returnCurrencySymbolFromUnicode = (exports.returnCurrencySymbolFromUnicode = function returnCurrencySymbolFromUnicode(
        _symbol
      ) {
        //https://stackoverflow.com/questions/7885096/how-do-i-decode-a-string-with-escaped-unicode
        var _replace = /\\u([\d\w]{4})/gi;
        _symbol = _symbol.replace(_replace, function (match, grp) {
          return String.fromCharCode(parseInt(grp, 16));
        });
        _symbol = unescape(_symbol);
        return _symbol;
      });

      var formatWeight = (exports.formatWeight = function formatWeight(_ingrams) {
        var kg = _ingrams / 1000;
        var lbs = kg * 2.2046;
        return Math.round(kg * 100) / 100 + 'kg / ' + Math.round(lbs * 100) / 100 + 'lbs';
      });

      var getAllMaterials = (exports.getAllMaterials = function getAllMaterials(state) {
        var region = state.getIn(['productData', 'region'], 'us');
        var allProducts = state.getIn(['productData', 'allProducts']); //all products from the orignal data
        var hideprods = state.getIn(['productData', 'hideprods'], []);
        var products = getRegionalProducts(allProducts, region, hideprods);
        var materials = [];
        products.forEach(function (product) {
          var mat = getProductMaterial(product.data, region);
          materials.push(mat);
        });
        return materials.filter(function (el, index, arr) {
          return index == arr.indexOf(el);
        });
      });

      var getMaterialOptions = (exports.getMaterialOptions = function getMaterialOptions(state) {
        var materials = getAllMaterials(state);
        var options = [];
        materials.forEach(function (machine) {
          if (
            (typeof machine === 'undefined' ? 'undefined' : _typeof(machine)) == undefined ||
            machine === null
          )
            return; //for wheels

          var label = machine.getLabelMaterial();

          options.push({
            id: machine,
            label: t(label),
          });
        });
        return options;
      });

      var getAllWheelsizes = (exports.getAllWheelsizes = function getAllWheelsizes(state) {
        var region = state.getIn(['productData', 'region'], 'us');
        var allProducts = state.getIn(['productData', 'allProducts']); //all products from the orignal data
        var hideprods = state.getIn(['productData', 'hideprods'], []);
        var products = getRegionalProducts(allProducts, region, hideprods);
        var sizes = [];
        products.forEach(function (product) {
          var size = getProductWheelsize(product.data, region);
          sizes.push(size);
        });
        return sizes.filter(function (el, index, arr) {
          return index == arr.indexOf(el);
        });
      });

      var getWheelsizeOptions = (exports.getWheelsizeOptions = function getWheelsizeOptions(state) {
        var options = [];
        var sizes = getAllWheelsizes(state);

        sizes.forEach(function (label) {
          options.push({
            id: label.replace('.', ''),
            label: t(label),
          });
        });
        return options;
      });

      var getRenderBuffer = (exports.getRenderBuffer = function getRenderBuffer(state) {
        var renderBuffer = [];
        var fidsToHide = state.getIn(['productData', 'image_overrides'], null);

        //const selectedComponents = state.getIn(['app', 'builderSelected']);
        var selectedComponents = state.getIn(['productData', 'selected']).toJS(); //only need values

        for (var t in selectedComponents) {
          var item = selectedComponents[t];
          if (item.cid) {
            var img = state.getIn(['productData', 'builder'])['components'][t][item.cid]['images'];
            renderBuffer = renderBuffer.concat(img);
          }
          if (item.vid) {
            var _img = state.getIn(['productData', 'builder'])['components'][t][item.cid][
              'variants'
            ][item.vid]['images'];
            renderBuffer = renderBuffer.concat(_img);
          }
        }

        renderBuffer = renderBuffer.filter(function (el) {
          return fidsToHide.indexOf(parseInt(el.fid)) < 0;
        });

        return renderBuffer;
      });

      var getClosest = (exports.getClosest = function getClosest(elem, selector) {
        // Element.matches() polyfill
        if (!Element.prototype.matches) {
          Element.prototype.matches =
            Element.prototype.matchesSelector ||
            Element.prototype.mozMatchesSelector ||
            Element.prototype.msMatchesSelector ||
            Element.prototype.oMatchesSelector ||
            Element.prototype.webkitMatchesSelector ||
            function (s) {
              var matches = (this.document || this.ownerDocument).querySelectorAll(s),
                i = matches.length;
              while (--i >= 0 && matches.item(i) !== this) {}
              return i > -1;
            };
        }

        // Get the closest matching element
        for (; elem && elem !== document; elem = elem.parentNode) {
          if (elem.matches(selector)) return elem;
        }
        return null;
      });

      var getExpandedState = (exports.getExpandedState = function getExpandedState(state) {
        //const builderType = state.getIn(['productData', 'builderType'], 'frame');
        var expanded = state.getIn(['specsData', 'specs_expanded'], false);
        //if(builderType === "rim") expanded = !expanded; //if rim, open by default
        return expanded;
      });

      /***/
    },
    /* 12 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';
      /*
object-assign
(c) Sindre Sorhus
@license MIT
*/

      /* eslint-disable no-unused-vars */
      var getOwnPropertySymbols = Object.getOwnPropertySymbols;
      var hasOwnProperty = Object.prototype.hasOwnProperty;
      var propIsEnumerable = Object.prototype.propertyIsEnumerable;

      function toObject(val) {
        if (val === null || val === undefined) {
          throw new TypeError('Object.assign cannot be called with null or undefined');
        }

        return Object(val);
      }

      function shouldUseNative() {
        try {
          if (!Object.assign) {
            return false;
          }

          // Detect buggy property enumeration order in older V8 versions.

          // https://bugs.chromium.org/p/v8/issues/detail?id=4118
          var test1 = new String('abc'); // eslint-disable-line no-new-wrappers
          test1[5] = 'de';
          if (Object.getOwnPropertyNames(test1)[0] === '5') {
            return false;
          }

          // https://bugs.chromium.org/p/v8/issues/detail?id=3056
          var test2 = {};
          for (var i = 0; i < 10; i++) {
            test2['_' + String.fromCharCode(i)] = i;
          }
          var order2 = Object.getOwnPropertyNames(test2).map(function (n) {
            return test2[n];
          });
          if (order2.join('') !== '0123456789') {
            return false;
          }

          // https://bugs.chromium.org/p/v8/issues/detail?id=3056
          var test3 = {};
          'abcdefghijklmnopqrst'.split('').forEach(function (letter) {
            test3[letter] = letter;
          });
          if (Object.keys(Object.assign({}, test3)).join('') !== 'abcdefghijklmnopqrst') {
            return false;
          }

          return true;
        } catch (err) {
          // We don't expect any of the above to throw, but better to be safe.
          return false;
        }
      }

      module.exports = shouldUseNative()
        ? Object.assign
        : function (target, source) {
            var from;
            var to = toObject(target);
            var symbols;

            for (var s = 1; s < arguments.length; s++) {
              from = Object(arguments[s]);

              for (var key in from) {
                if (hasOwnProperty.call(from, key)) {
                  to[key] = from[key];
                }
              }

              if (getOwnPropertySymbols) {
                symbols = getOwnPropertySymbols(from);
                for (var i = 0; i < symbols.length; i++) {
                  if (propIsEnumerable.call(from, symbols[i])) {
                    to[symbols[i]] = from[symbols[i]];
                  }
                }
              }
            }

            return to;
          };

      /***/
    },
    /* 13 */
    /***/ function (module, exports, __webpack_require__) {
      // Thank's IE8 for his funny defineProperty
      module.exports = !__webpack_require__(7)(function () {
        return (
          Object.defineProperty({}, 'a', {
            get: function () {
              return 7;
            },
          }).a != 7
        );
      });

      /***/
    },
    /* 14 */
    /***/ function (module, exports, __webpack_require__) {
      var anObject = __webpack_require__(5),
        IE8_DOM_DEFINE = __webpack_require__(237),
        toPrimitive = __webpack_require__(39),
        dP = Object.defineProperty;

      exports.f = __webpack_require__(13)
        ? Object.defineProperty
        : function defineProperty(O, P, Attributes) {
            anObject(O);
            P = toPrimitive(P, true);
            anObject(Attributes);
            if (IE8_DOM_DEFINE)
              try {
                return dP(O, P, Attributes);
              } catch (e) {
                /* empty */
              }
            if ('get' in Attributes || 'set' in Attributes)
              throw TypeError('Accessors not supported!');
            if ('value' in Attributes) O[P] = Attributes.value;
            return O;
          };

      /***/
    },
    /* 15 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';
      /* WEBPACK VAR INJECTION */ (function (process) {
        /**
         * Copyright 2013-present, Facebook, Inc.
         * All rights reserved.
         *
         * This source code is licensed under the BSD-style license found in the
         * LICENSE file in the root directory of this source tree. An additional grant
         * of patent rights can be found in the PATENTS file in the same directory.
         *
         */

        var _prodInvariant = __webpack_require__(8);

        var DOMProperty = __webpack_require__(53);
        var ReactDOMComponentFlags = __webpack_require__(284);

        var invariant = __webpack_require__(2);

        var ATTR_NAME = DOMProperty.ID_ATTRIBUTE_NAME;
        var Flags = ReactDOMComponentFlags;

        var internalInstanceKey = '__reactInternalInstance$' + Math.random().toString(36).slice(2);

        /**
         * Check if a given node should be cached.
         */
        function shouldPrecacheNode(node, nodeID) {
          return (
            (node.nodeType === 1 && node.getAttribute(ATTR_NAME) === String(nodeID)) ||
            (node.nodeType === 8 && node.nodeValue === ' react-text: ' + nodeID + ' ') ||
            (node.nodeType === 8 && node.nodeValue === ' react-empty: ' + nodeID + ' ')
          );
        }

        /**
         * Drill down (through composites and empty components) until we get a host or
         * host text component.
         *
         * This is pretty polymorphic but unavoidable with the current structure we have
         * for `_renderedChildren`.
         */
        function getRenderedHostOrTextFromComponent(component) {
          var rendered;
          while ((rendered = component._renderedComponent)) {
            component = rendered;
          }
          return component;
        }

        /**
         * Populate `_hostNode` on the rendered host/text component with the given
         * DOM node. The passed `inst` can be a composite.
         */
        function precacheNode(inst, node) {
          var hostInst = getRenderedHostOrTextFromComponent(inst);
          hostInst._hostNode = node;
          node[internalInstanceKey] = hostInst;
        }

        function uncacheNode(inst) {
          var node = inst._hostNode;
          if (node) {
            delete node[internalInstanceKey];
            inst._hostNode = null;
          }
        }

        /**
         * Populate `_hostNode` on each child of `inst`, assuming that the children
         * match up with the DOM (element) children of `node`.
         *
         * We cache entire levels at once to avoid an n^2 problem where we access the
         * children of a node sequentially and have to walk from the start to our target
         * node every time.
         *
         * Since we update `_renderedChildren` and the actual DOM at (slightly)
         * different times, we could race here and see a newer `_renderedChildren` than
         * the DOM nodes we see. To avoid this, ReactMultiChild calls
         * `prepareToManageChildren` before we change `_renderedChildren`, at which
         * time the container's child nodes are always cached (until it unmounts).
         */
        function precacheChildNodes(inst, node) {
          if (inst._flags & Flags.hasCachedChildNodes) {
            return;
          }
          var children = inst._renderedChildren;
          var childNode = node.firstChild;
          outer: for (var name in children) {
            if (!children.hasOwnProperty(name)) {
              continue;
            }
            var childInst = children[name];
            var childID = getRenderedHostOrTextFromComponent(childInst)._domID;
            if (childID === 0) {
              // We're currently unmounting this child in ReactMultiChild; skip it.
              continue;
            }
            // We assume the child nodes are in the same order as the child instances.
            for (; childNode !== null; childNode = childNode.nextSibling) {
              if (shouldPrecacheNode(childNode, childID)) {
                precacheNode(childInst, childNode);
                continue outer;
              }
            }
            // We reached the end of the DOM children without finding an ID match.
            true
              ? process.env.NODE_ENV !== 'production'
                ? invariant(false, 'Unable to find element with ID %s.', childID)
                : _prodInvariant('32', childID)
              : void 0;
          }
          inst._flags |= Flags.hasCachedChildNodes;
        }

        /**
         * Given a DOM node, return the closest ReactDOMComponent or
         * ReactDOMTextComponent instance ancestor.
         */
        function getClosestInstanceFromNode(node) {
          if (node[internalInstanceKey]) {
            return node[internalInstanceKey];
          }

          // Walk up the tree until we find an ancestor whose instance we have cached.
          var parents = [];
          while (!node[internalInstanceKey]) {
            parents.push(node);
            if (node.parentNode) {
              node = node.parentNode;
            } else {
              // Top of the tree. This node must not be part of a React tree (or is
              // unmounted, potentially).
              return null;
            }
          }

          var closest;
          var inst;
          for (; node && (inst = node[internalInstanceKey]); node = parents.pop()) {
            closest = inst;
            if (parents.length) {
              precacheChildNodes(inst, node);
            }
          }

          return closest;
        }

        /**
         * Given a DOM node, return the ReactDOMComponent or ReactDOMTextComponent
         * instance, or null if the node was not rendered by this React.
         */
        function getInstanceFromNode(node) {
          var inst = getClosestInstanceFromNode(node);
          if (inst != null && inst._hostNode === node) {
            return inst;
          } else {
            return null;
          }
        }

        /**
         * Given a ReactDOMComponent or ReactDOMTextComponent, return the corresponding
         * DOM node.
         */
        function getNodeFromInstance(inst) {
          // Without this first invariant, passing a non-DOM-component triggers the next
          // invariant for a missing parent, which is super confusing.
          !(inst._hostNode !== undefined)
            ? process.env.NODE_ENV !== 'production'
              ? invariant(false, 'getNodeFromInstance: Invalid argument.')
              : _prodInvariant('33')
            : void 0;

          if (inst._hostNode) {
            return inst._hostNode;
          }

          // Walk up the tree until we find an ancestor whose DOM node we have cached.
          var parents = [];
          while (!inst._hostNode) {
            parents.push(inst);
            !inst._hostParent
              ? process.env.NODE_ENV !== 'production'
                ? invariant(false, 'React DOM tree root should always have a node reference.')
                : _prodInvariant('34')
              : void 0;
            inst = inst._hostParent;
          }

          // Now parents contains each ancestor that does *not* have a cached native
          // node, and `inst` is the deepest ancestor that does.
          for (; parents.length; inst = parents.pop()) {
            precacheChildNodes(inst, inst._hostNode);
          }

          return inst._hostNode;
        }

        var ReactDOMComponentTree = {
          getClosestInstanceFromNode: getClosestInstanceFromNode,
          getInstanceFromNode: getInstanceFromNode,
          getNodeFromInstance: getNodeFromInstance,
          precacheChildNodes: precacheChildNodes,
          precacheNode: precacheNode,
          uncacheNode: uncacheNode,
        };

        module.exports = ReactDOMComponentTree;
        /* WEBPACK VAR INJECTION */
      }.call(exports, __webpack_require__(1)));

      /***/
    },
    /* 16 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true,
      });
      exports.loadData = loadData;
      exports.initData = initData;
      exports.clickOption = clickOption;
      exports.resetOption = resetOption;
      exports.updateRegion = updateRegion;
      exports.updateProduct = updateProduct;
      exports.applyRules = applyRules;
      exports.clickOptionRules = clickOptionRules;
      exports.updateSpecRules = updateSpecRules;
      exports.updateImageRules = updateImageRules;
      exports.filterMaterial = filterMaterial;
      exports.filterWheelsize = filterWheelsize;
      exports.expandSpecs = expandSpecs;
      exports.prevNext = prevNext;
      exports.toggleImageExpansion = toggleImageExpansion;
      exports.toggleShareWidget = toggleShareWidget;
      exports.toggleConfigVisible = toggleConfigVisible;
      exports.toggleDealerLink = toggleDealerLink;
      exports.openCompareWidget = openCompareWidget;
      exports.compareConfirm = compareConfirm;
      exports.closeCompareWidget = closeCompareWidget;
      exports.compareClear = compareClear;
      // Actions
      // Actions are payloads of information that send data from your application to your store.
      // They are the only source of information for the store. You send them to the store
      // using store.dispatch().
      // @SEE http://redux.js.org/docs/basics/Actions.html

      var LOAD_DATA = (exports.LOAD_DATA = 'LOAD_DATA');
      var INIT_DATA = (exports.INIT_DATA = 'INIT_DATA');
      var CLICK_OPTION = (exports.CLICK_OPTION = 'CLICK_OPTION');
      var RESET_OPTION = (exports.RESET_OPTION = 'RESET_OPTION');
      var UPDATE_PRODUCT = (exports.UPDATE_PRODUCT = 'UPDATE_PRODUCT');
      var UPDATE_REGION = (exports.UPDATE_REGION = 'UPDATE_REGION');
      var APPLY_RULES = (exports.APPLY_RULES = 'APPLY_RULES');

      //rules specific actions
      var CLICK_OPTION_RULES = (exports.CLICK_OPTION_RULES = 'CLICK_OPTION_RULES');
      var UPDATE_SPEC_RULES = (exports.UPDATE_SPEC_RULES = 'UPDATE_SPEC_RULES');
      var UPDATE_IMAGE_RULES = (exports.UPDATE_IMAGE_RULES = 'UPDATE_IMAGE_RULES');

      //specs specific actions
      var FILTER_MATERIAL = (exports.FILTER_MATERIAL = 'FILTER_MATERIAL');
      var FILTER_WHEELSIZE = (exports.FILTER_WHEELSIZE = 'FILTER_WHEELSIZE');
      var EXPAND_SPECS = (exports.EXPAND_SPECS = 'EXPAND_SPECS');
      var PREV_NEXT = (exports.PREV_NEXT = 'PREV_NEXT');

      //image specific actions
      var TOGGLE_IMAGE_EXPANSION = (exports.TOGGLE_IMAGE_EXPANSION = 'TOGGLE_IMAGE_EXPANSION');

      //share
      var TOGGLE_SHARE_WIDGET = (exports.TOGGLE_SHARE_WIDGET = 'TOGGLE_SHARE_WIDGET');

      //mobile config
      var TOGGLE_CONFIG_VISIBLE = (exports.TOGGLE_CONFIG_VISIBLE = 'TOGGLE_CONFIG_VISIBLE');

      //dealer link
      var TOGGLE_DEALER_LINK = (exports.TOGGLE_DEALER_LINK = 'TOGGLE_DEALER_LINK');

      //compare
      var OPEN_COMPARE_WIDGET = (exports.OPEN_COMPARE_WIDGET = 'OPEN_COMPARE_WIDGET');
      var COMPARE_CONFIRM = (exports.COMPARE_CONFIRM = 'COMPARE_CONFIRM');
      var CLOSE_COMPARE_WIDGET = (exports.CLOSE_COMPARE_WIDGET = 'CLOSE_COMPARE_WIDGET');
      var COMPARE_CLEAR = (exports.COMPARE_CLEAR = 'COMPARE_CLEAR');

      function loadData(payload, queries, restrictions, hideprods, region, frameonly, linkRoot) {
        return {
          type: LOAD_DATA,
          payload: payload,
          queries: queries,
          restrictions: restrictions,
          hideprods: hideprods,
          region: region,
          frameonly: frameonly,
          linkRoot: linkRoot,
        };
      }

      function initData(payload) {
        return {
          type: INIT_DATA,
          payload: payload,
        };
      }

      function clickOption(payload) {
        return {
          type: CLICK_OPTION,
          payload: payload,
        };
      }

      function resetOption(optionType) {
        return {
          type: RESET_OPTION,
          optionType: optionType,
        };
      }

      function updateRegion(rid) {
        return {
          type: UPDATE_REGION,
          rid: rid,
        };
      }

      function updateProduct(payload) {
        return {
          type: UPDATE_PRODUCT,
          payload: payload,
        };
      }

      //action that can be called to apply rules
      //TODO parameter for last rule applied?
      function applyRules() {
        return {
          type: APPLY_RULES,
        };
      }

      function clickOptionRules(payload) {
        return {
          type: CLICK_OPTION_RULES,
          payload: payload,
        };
      }

      function updateSpecRules(payload) {
        return {
          type: UPDATE_SPEC_RULES,
          payload: payload,
        };
      }

      function updateImageRules(payload) {
        return {
          type: UPDATE_IMAGE_RULES,
          payload: payload,
        };
      }

      function filterMaterial(payload) {
        return {
          type: FILTER_MATERIAL,
          payload: payload,
        };
      }

      function filterWheelsize(payload) {
        return {
          type: FILTER_WHEELSIZE,
          payload: payload,
        };
      }

      function expandSpecs(payload) {
        return {
          type: EXPAND_SPECS,
          payload: payload,
        };
      }

      function prevNext(payload) {
        return {
          type: PREV_NEXT,
          payload: payload,
        };
      }

      function toggleImageExpansion(payload) {
        return {
          type: TOGGLE_IMAGE_EXPANSION,
          payload: payload,
        };
      }

      function toggleShareWidget(payload) {
        return {
          type: TOGGLE_SHARE_WIDGET,
          payload: payload,
        };
      }

      function toggleConfigVisible(payload) {
        return {
          type: TOGGLE_CONFIG_VISIBLE,
          payload: payload,
        };
      }

      function toggleDealerLink(payload) {
        return {
          type: TOGGLE_DEALER_LINK,
          payload: payload,
        };
      }

      function openCompareWidget(payload) {
        return {
          type: OPEN_COMPARE_WIDGET,
          payload: payload,
        };
      }

      function compareConfirm(payload) {
        return {
          type: COMPARE_CONFIRM,
          payload: payload,
        };
      }
      function closeCompareWidget(payload) {
        return {
          type: CLOSE_COMPARE_WIDGET,
          payload: payload,
        };
      }

      function compareClear(payload) {
        return {
          type: COMPARE_CLEAR,
          payload: payload,
        };
      }

      /***/
    },
    /* 17 */
    /***/ function (module, exports, __webpack_require__) {
      // 7.1.15 ToLength
      var toInteger = __webpack_require__(52),
        min = Math.min;
      module.exports = function (it) {
        return it > 0 ? min(toInteger(it), 0x1fffffffffffff) : 0; // pow(2, 53) - 1 == 9007199254740991
      };

      /***/
    },
    /* 18 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';
      /**
       * Copyright (c) 2013-present, Facebook, Inc.
       * All rights reserved.
       *
       * This source code is licensed under the BSD-style license found in the
       * LICENSE file in the root directory of this source tree. An additional grant
       * of patent rights can be found in the PATENTS file in the same directory.
       *
       */

      var canUseDOM = !!(
        typeof window !== 'undefined' &&
        window.document &&
        window.document.createElement
      );

      /**
       * Simple, lightweight module assisting with the detection and context of
       * Worker. Helps avoid circular dependencies and allows code to reason about
       * whether or not they are in a Worker, even if they never include the main
       * `ReactWorker` dependency.
       */
      var ExecutionEnvironment = {
        canUseDOM: canUseDOM,

        canUseWorkers: typeof Worker !== 'undefined',

        canUseEventListeners: canUseDOM && !!(window.addEventListener || window.attachEvent),

        canUseViewport: canUseDOM && !!window.screen,

        isInWorker: !canUseDOM, // For now, this is true - might change in the future.
      };

      module.exports = ExecutionEnvironment;

      /***/
    },
    /* 19 */
    /***/ function (module, exports, __webpack_require__) {
      // 7.1.13 ToObject(argument)
      var defined = __webpack_require__(35);
      module.exports = function (it) {
        return Object(defined(it));
      };

      /***/
    },
    /* 20 */
    /***/ function (module, exports) {
      var g;

      // This works in non-strict mode
      g = (function () {
        return this;
      })();

      try {
        // This works if eval is allowed (see CSP)
        g = g || Function('return this')() || (1, eval)('this');
      } catch (e) {
        // This works if the window reference is available
        if (typeof window === 'object') g = window;
      }

      // g can still be undefined, but nothing to do about it...
      // We return undefined, instead of nothing here, so it's
      // easier to handle this case. if(!global) { ...}

      module.exports = g;

      /***/
    },
    /* 21 */
    /***/ function (module, exports) {
      var hasOwnProperty = {}.hasOwnProperty;
      module.exports = function (it, key) {
        return hasOwnProperty.call(it, key);
      };

      /***/
    },
    /* 22 */
    /***/ function (module, __webpack_exports__, __webpack_require__) {
      'use strict';
      Object.defineProperty(__webpack_exports__, '__esModule', { value: true });
      /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__components_Provider__ = __webpack_require__(
        735
      );
      /* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__components_connectAdvanced__ = __webpack_require__(
        302
      );
      /* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__connect_connect__ = __webpack_require__(
        736
      );
      /* harmony reexport (binding) */ __webpack_require__.d(
        __webpack_exports__,
        'Provider',
        function () {
          return __WEBPACK_IMPORTED_MODULE_0__components_Provider__['a'];
        }
      );
      /* harmony reexport (binding) */ __webpack_require__.d(
        __webpack_exports__,
        'connectAdvanced',
        function () {
          return __WEBPACK_IMPORTED_MODULE_1__components_connectAdvanced__['a'];
        }
      );
      /* harmony reexport (binding) */ __webpack_require__.d(
        __webpack_exports__,
        'connect',
        function () {
          return __WEBPACK_IMPORTED_MODULE_2__connect_connect__['a'];
        }
      );

      /***/
    },
    /* 23 */
    /***/ function (module, exports) {
      module.exports = function (it) {
        if (typeof it != 'function') throw TypeError(it + ' is not a function!');
        return it;
      };

      /***/
    },
    /* 24 */
    /***/ function (module, exports, __webpack_require__) {
      var dP = __webpack_require__(14),
        createDesc = __webpack_require__(51);
      module.exports = __webpack_require__(13)
        ? function (object, key, value) {
            return dP.f(object, key, createDesc(1, value));
          }
        : function (object, key, value) {
            object[key] = value;
            return object;
          };

      /***/
    },
    /* 25 */
    /***/ function (module, exports, __webpack_require__) {
      var global = __webpack_require__(6),
        hide = __webpack_require__(24),
        has = __webpack_require__(21),
        SRC = __webpack_require__(67)('src'),
        TO_STRING = 'toString',
        $toString = Function[TO_STRING],
        TPL = ('' + $toString).split(TO_STRING);

      __webpack_require__(44).inspectSource = function (it) {
        return $toString.call(it);
      };

      (module.exports = function (O, key, val, safe) {
        var isFunction = typeof val == 'function';
        if (isFunction) has(val, 'name') || hide(val, 'name', key);
        if (O[key] === val) return;
        if (isFunction)
          has(val, SRC) || hide(val, SRC, O[key] ? '' + O[key] : TPL.join(String(key)));
        if (O === global) {
          O[key] = val;
        } else {
          if (!safe) {
            delete O[key];
            hide(O, key, val);
          } else {
            if (O[key]) O[key] = val;
            else hide(O, key, val);
          }
        }
        // add fake Function#toString for correct work wrapped methods / constructors with methods like LoDash isNative
      })(Function.prototype, TO_STRING, function toString() {
        return (typeof this == 'function' && this[SRC]) || $toString.call(this);
      });

      /***/
    },
    /* 26 */
    /***/ function (module, exports, __webpack_require__) {
      var $export = __webpack_require__(0),
        fails = __webpack_require__(7),
        defined = __webpack_require__(35),
        quot = /"/g;
      // B.2.3.2.1 CreateHTML(string, tag, attribute, value)
      var createHTML = function (string, tag, attribute, value) {
        var S = String(defined(string)),
          p1 = '<' + tag;
        if (attribute !== '')
          p1 += ' ' + attribute + '="' + String(value).replace(quot, '&quot;') + '"';
        return p1 + '>' + S + '</' + tag + '>';
      };
      module.exports = function (NAME, exec) {
        var O = {};
        O[NAME] = exec(createHTML);
        $export(
          $export.P +
            $export.F *
              fails(function () {
                var test = ''[NAME]('"');
                return test !== test.toLowerCase() || test.split('"').length > 3;
              }),
          'String',
          O
        );
      };

      /***/
    },
    /* 27 */
    /***/ function (module, exports, __webpack_require__) {
      // to indexed object, toObject with fallback for non-array-like ES3 strings
      var IObject = __webpack_require__(89),
        defined = __webpack_require__(35);
      module.exports = function (it) {
        return IObject(defined(it));
      };

      /***/
    },
    /* 28 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';

      /**
       * Copyright (c) 2013-present, Facebook, Inc.
       * All rights reserved.
       *
       * This source code is licensed under the BSD-style license found in the
       * LICENSE file in the root directory of this source tree. An additional grant
       * of patent rights can be found in the PATENTS file in the same directory.
       *
       *
       */

      function makeEmptyFunction(arg) {
        return function () {
          return arg;
        };
      }

      /**
       * This function accepts and discards inputs; it has no side effects. This is
       * primarily useful idiomatically for overridable function endpoints which
       * always need to be callable, since JS lacks a null-call idiom ala Cocoa.
       */
      var emptyFunction = function emptyFunction() {};

      emptyFunction.thatReturns = makeEmptyFunction;
      emptyFunction.thatReturnsFalse = makeEmptyFunction(false);
      emptyFunction.thatReturnsTrue = makeEmptyFunction(true);
      emptyFunction.thatReturnsNull = makeEmptyFunction(null);
      emptyFunction.thatReturnsThis = function () {
        return this;
      };
      emptyFunction.thatReturnsArgument = function (arg) {
        return arg;
      };

      module.exports = emptyFunction;

      /***/
    },
    /* 29 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';
      /* WEBPACK VAR INJECTION */ (function (process) {
        /**
         * Copyright 2016-present, Facebook, Inc.
         * All rights reserved.
         *
         * This source code is licensed under the BSD-style license found in the
         * LICENSE file in the root directory of this source tree. An additional grant
         * of patent rights can be found in the PATENTS file in the same directory.
         *
         *
         */

        var _prodInvariant = __webpack_require__(70);

        var ReactCurrentOwner = __webpack_require__(42);

        var invariant = __webpack_require__(2);
        var warning = __webpack_require__(3);

        function isNative(fn) {
          // Based on isNative() from Lodash
          var funcToString = Function.prototype.toString;
          var hasOwnProperty = Object.prototype.hasOwnProperty;
          var reIsNative = RegExp(
            '^' +
              funcToString
                // Take an example native function source for comparison
                .call(hasOwnProperty)
                // Strip regex characters so we can use it for regex
                .replace(/[\\^$.*+?()[\]{}|]/g, '\\$&')
                // Remove hasOwnProperty from the template to make it generic
                .replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g, '$1.*?') +
              '$'
          );
          try {
            var source = funcToString.call(fn);
            return reIsNative.test(source);
          } catch (err) {
            return false;
          }
        }

        var canUseCollections =
          // Array.from
          typeof Array.from === 'function' &&
          // Map
          typeof Map === 'function' &&
          isNative(Map) &&
          // Map.prototype.keys
          Map.prototype != null &&
          typeof Map.prototype.keys === 'function' &&
          isNative(Map.prototype.keys) &&
          // Set
          typeof Set === 'function' &&
          isNative(Set) &&
          // Set.prototype.keys
          Set.prototype != null &&
          typeof Set.prototype.keys === 'function' &&
          isNative(Set.prototype.keys);

        var setItem;
        var getItem;
        var removeItem;
        var getItemIDs;
        var addRoot;
        var removeRoot;
        var getRootIDs;

        if (canUseCollections) {
          var itemMap = new Map();
          var rootIDSet = new Set();

          setItem = function (id, item) {
            itemMap.set(id, item);
          };
          getItem = function (id) {
            return itemMap.get(id);
          };
          removeItem = function (id) {
            itemMap['delete'](id);
          };
          getItemIDs = function () {
            return Array.from(itemMap.keys());
          };

          addRoot = function (id) {
            rootIDSet.add(id);
          };
          removeRoot = function (id) {
            rootIDSet['delete'](id);
          };
          getRootIDs = function () {
            return Array.from(rootIDSet.keys());
          };
        } else {
          var itemByKey = {};
          var rootByKey = {};

          // Use non-numeric keys to prevent V8 performance issues:
          // https://github.com/facebook/react/pull/7232
          var getKeyFromID = function (id) {
            return '.' + id;
          };
          var getIDFromKey = function (key) {
            return parseInt(key.substr(1), 10);
          };

          setItem = function (id, item) {
            var key = getKeyFromID(id);
            itemByKey[key] = item;
          };
          getItem = function (id) {
            var key = getKeyFromID(id);
            return itemByKey[key];
          };
          removeItem = function (id) {
            var key = getKeyFromID(id);
            delete itemByKey[key];
          };
          getItemIDs = function () {
            return Object.keys(itemByKey).map(getIDFromKey);
          };

          addRoot = function (id) {
            var key = getKeyFromID(id);
            rootByKey[key] = true;
          };
          removeRoot = function (id) {
            var key = getKeyFromID(id);
            delete rootByKey[key];
          };
          getRootIDs = function () {
            return Object.keys(rootByKey).map(getIDFromKey);
          };
        }

        var unmountedIDs = [];

        function purgeDeep(id) {
          var item = getItem(id);
          if (item) {
            var childIDs = item.childIDs;

            removeItem(id);
            childIDs.forEach(purgeDeep);
          }
        }

        function describeComponentFrame(name, source, ownerName) {
          return (
            '\n    in ' +
            (name || 'Unknown') +
            (source
              ? ' (at ' + source.fileName.replace(/^.*[\\\/]/, '') + ':' + source.lineNumber + ')'
              : ownerName
              ? ' (created by ' + ownerName + ')'
              : '')
          );
        }

        function getDisplayName(element) {
          if (element == null) {
            return '#empty';
          } else if (typeof element === 'string' || typeof element === 'number') {
            return '#text';
          } else if (typeof element.type === 'string') {
            return element.type;
          } else {
            return element.type.displayName || element.type.name || 'Unknown';
          }
        }

        function describeID(id) {
          var name = ReactComponentTreeHook.getDisplayName(id);
          var element = ReactComponentTreeHook.getElement(id);
          var ownerID = ReactComponentTreeHook.getOwnerID(id);
          var ownerName;
          if (ownerID) {
            ownerName = ReactComponentTreeHook.getDisplayName(ownerID);
          }
          process.env.NODE_ENV !== 'production'
            ? warning(
                element,
                'ReactComponentTreeHook: Missing React element for debugID %s when ' +
                  'building stack',
                id
              )
            : void 0;
          return describeComponentFrame(name, element && element._source, ownerName);
        }

        var ReactComponentTreeHook = {
          onSetChildren: function (id, nextChildIDs) {
            var item = getItem(id);
            !item
              ? process.env.NODE_ENV !== 'production'
                ? invariant(false, 'Item must have been set')
                : _prodInvariant('144')
              : void 0;
            item.childIDs = nextChildIDs;

            for (var i = 0; i < nextChildIDs.length; i++) {
              var nextChildID = nextChildIDs[i];
              var nextChild = getItem(nextChildID);
              !nextChild
                ? process.env.NODE_ENV !== 'production'
                  ? invariant(
                      false,
                      'Expected hook events to fire for the child before its parent includes it in onSetChildren().'
                    )
                  : _prodInvariant('140')
                : void 0;
              !(
                nextChild.childIDs != null ||
                typeof nextChild.element !== 'object' ||
                nextChild.element == null
              )
                ? process.env.NODE_ENV !== 'production'
                  ? invariant(
                      false,
                      'Expected onSetChildren() to fire for a container child before its parent includes it in onSetChildren().'
                    )
                  : _prodInvariant('141')
                : void 0;
              !nextChild.isMounted
                ? process.env.NODE_ENV !== 'production'
                  ? invariant(
                      false,
                      'Expected onMountComponent() to fire for the child before its parent includes it in onSetChildren().'
                    )
                  : _prodInvariant('71')
                : void 0;
              if (nextChild.parentID == null) {
                nextChild.parentID = id;
                // TODO: This shouldn't be necessary but mounting a new root during in
                // componentWillMount currently causes not-yet-mounted components to
                // be purged from our tree data so their parent id is missing.
              }
              !(nextChild.parentID === id)
                ? process.env.NODE_ENV !== 'production'
                  ? invariant(
                      false,
                      'Expected onBeforeMountComponent() parent and onSetChildren() to be consistent (%s has parents %s and %s).',
                      nextChildID,
                      nextChild.parentID,
                      id
                    )
                  : _prodInvariant('142', nextChildID, nextChild.parentID, id)
                : void 0;
            }
          },
          onBeforeMountComponent: function (id, element, parentID) {
            var item = {
              element: element,
              parentID: parentID,
              text: null,
              childIDs: [],
              isMounted: false,
              updateCount: 0,
            };
            setItem(id, item);
          },
          onBeforeUpdateComponent: function (id, element) {
            var item = getItem(id);
            if (!item || !item.isMounted) {
              // We may end up here as a result of setState() in componentWillUnmount().
              // In this case, ignore the element.
              return;
            }
            item.element = element;
          },
          onMountComponent: function (id) {
            var item = getItem(id);
            !item
              ? process.env.NODE_ENV !== 'production'
                ? invariant(false, 'Item must have been set')
                : _prodInvariant('144')
              : void 0;
            item.isMounted = true;
            var isRoot = item.parentID === 0;
            if (isRoot) {
              addRoot(id);
            }
          },
          onUpdateComponent: function (id) {
            var item = getItem(id);
            if (!item || !item.isMounted) {
              // We may end up here as a result of setState() in componentWillUnmount().
              // In this case, ignore the element.
              return;
            }
            item.updateCount++;
          },
          onUnmountComponent: function (id) {
            var item = getItem(id);
            if (item) {
              // We need to check if it exists.
              // `item` might not exist if it is inside an error boundary, and a sibling
              // error boundary child threw while mounting. Then this instance never
              // got a chance to mount, but it still gets an unmounting event during
              // the error boundary cleanup.
              item.isMounted = false;
              var isRoot = item.parentID === 0;
              if (isRoot) {
                removeRoot(id);
              }
            }
            unmountedIDs.push(id);
          },
          purgeUnmountedComponents: function () {
            if (ReactComponentTreeHook._preventPurging) {
              // Should only be used for testing.
              return;
            }

            for (var i = 0; i < unmountedIDs.length; i++) {
              var id = unmountedIDs[i];
              purgeDeep(id);
            }
            unmountedIDs.length = 0;
          },
          isMounted: function (id) {
            var item = getItem(id);
            return item ? item.isMounted : false;
          },
          getCurrentStackAddendum: function (topElement) {
            var info = '';
            if (topElement) {
              var name = getDisplayName(topElement);
              var owner = topElement._owner;
              info += describeComponentFrame(name, topElement._source, owner && owner.getName());
            }

            var currentOwner = ReactCurrentOwner.current;
            var id = currentOwner && currentOwner._debugID;

            info += ReactComponentTreeHook.getStackAddendumByID(id);
            return info;
          },
          getStackAddendumByID: function (id) {
            var info = '';
            while (id) {
              info += describeID(id);
              id = ReactComponentTreeHook.getParentID(id);
            }
            return info;
          },
          getChildIDs: function (id) {
            var item = getItem(id);
            return item ? item.childIDs : [];
          },
          getDisplayName: function (id) {
            var element = ReactComponentTreeHook.getElement(id);
            if (!element) {
              return null;
            }
            return getDisplayName(element);
          },
          getElement: function (id) {
            var item = getItem(id);
            return item ? item.element : null;
          },
          getOwnerID: function (id) {
            var element = ReactComponentTreeHook.getElement(id);
            if (!element || !element._owner) {
              return null;
            }
            return element._owner._debugID;
          },
          getParentID: function (id) {
            var item = getItem(id);
            return item ? item.parentID : null;
          },
          getSource: function (id) {
            var item = getItem(id);
            var element = item ? item.element : null;
            var source = element != null ? element._source : null;
            return source;
          },
          getText: function (id) {
            var element = ReactComponentTreeHook.getElement(id);
            if (typeof element === 'string') {
              return element;
            } else if (typeof element === 'number') {
              return '' + element;
            } else {
              return null;
            }
          },
          getUpdateCount: function (id) {
            var item = getItem(id);
            return item ? item.updateCount : 0;
          },

          getRootIDs: getRootIDs,
          getRegisteredIDs: getItemIDs,
        };

        module.exports = ReactComponentTreeHook;
        /* WEBPACK VAR INJECTION */
      }.call(exports, __webpack_require__(1)));

      /***/
    },
    /* 30 */
    /***/ function (module, exports, __webpack_require__) {
      var pIE = __webpack_require__(90),
        createDesc = __webpack_require__(51),
        toIObject = __webpack_require__(27),
        toPrimitive = __webpack_require__(39),
        has = __webpack_require__(21),
        IE8_DOM_DEFINE = __webpack_require__(237),
        gOPD = Object.getOwnPropertyDescriptor;

      exports.f = __webpack_require__(13)
        ? gOPD
        : function getOwnPropertyDescriptor(O, P) {
            O = toIObject(O);
            P = toPrimitive(P, true);
            if (IE8_DOM_DEFINE)
              try {
                return gOPD(O, P);
              } catch (e) {
                /* empty */
              }
            if (has(O, P)) return createDesc(!pIE.f.call(O, P), O[P]);
          };

      /***/
    },
    /* 31 */
    /***/ function (module, exports, __webpack_require__) {
      // 19.1.2.9 / 15.2.3.2 Object.getPrototypeOf(O)
      var has = __webpack_require__(21),
        toObject = __webpack_require__(19),
        IE_PROTO = __webpack_require__(160)('IE_PROTO'),
        ObjectProto = Object.prototype;

      module.exports =
        Object.getPrototypeOf ||
        function (O) {
          O = toObject(O);
          if (has(O, IE_PROTO)) return O[IE_PROTO];
          if (typeof O.constructor == 'function' && O instanceof O.constructor) {
            return O.constructor.prototype;
          }
          return O instanceof Object ? ObjectProto : null;
        };

      /***/
    },
    /* 32 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';
      /* WEBPACK VAR INJECTION */ (function (process) {
        /**
         * Copyright 2016-present, Facebook, Inc.
         * All rights reserved.
         *
         * This source code is licensed under the BSD-style license found in the
         * LICENSE file in the root directory of this source tree. An additional grant
         * of patent rights can be found in the PATENTS file in the same directory.
         *
         *
         */

        // Trust the developer to only use ReactInstrumentation with a __DEV__ check

        var debugTool = null;

        if (process.env.NODE_ENV !== 'production') {
          var ReactDebugTool = __webpack_require__(689);
          debugTool = ReactDebugTool;
        }

        module.exports = { debugTool: debugTool };
        /* WEBPACK VAR INJECTION */
      }.call(exports, __webpack_require__(1)));

      /***/
    },
    /* 33 */
    /***/ function (module, exports) {
      var core = (module.exports = { version: '2.4.0' });
      if (typeof __e == 'number') __e = core; // eslint-disable-line no-undef

      /***/
    },
    /* 34 */
    /***/ function (module, exports) {
      var toString = {}.toString;

      module.exports = function (it) {
        return toString.call(it).slice(8, -1);
      };

      /***/
    },
    /* 35 */
    /***/ function (module, exports) {
      // 7.2.1 RequireObjectCoercible(argument)
      module.exports = function (it) {
        if (it == undefined) throw TypeError("Can't call method on  " + it);
        return it;
      };

      /***/
    },
    /* 36 */
    /***/ function (module, exports, __webpack_require__) {
      var fails = __webpack_require__(7);

      module.exports = function (method, arg) {
        return (
          !!method &&
          fails(function () {
            arg ? method.call(null, function () {}, 1) : method.call(null);
          })
        );
      };

      /***/
    },
    /* 37 */
    /***/ function (module, exports, __webpack_require__) {
      // 0 -> Array#forEach
      // 1 -> Array#map
      // 2 -> Array#filter
      // 3 -> Array#some
      // 4 -> Array#every
      // 5 -> Array#find
      // 6 -> Array#findIndex
      var ctx = __webpack_require__(45),
        IObject = __webpack_require__(89),
        toObject = __webpack_require__(19),
        toLength = __webpack_require__(17),
        asc = __webpack_require__(409);
      module.exports = function (TYPE, $create) {
        var IS_MAP = TYPE == 1,
          IS_FILTER = TYPE == 2,
          IS_SOME = TYPE == 3,
          IS_EVERY = TYPE == 4,
          IS_FIND_INDEX = TYPE == 6,
          NO_HOLES = TYPE == 5 || IS_FIND_INDEX,
          create = $create || asc;
        return function ($this, callbackfn, that) {
          var O = toObject($this),
            self = IObject(O),
            f = ctx(callbackfn, that, 3),
            length = toLength(self.length),
            index = 0,
            result = IS_MAP ? create($this, length) : IS_FILTER ? create($this, 0) : undefined,
            val,
            res;
          for (; length > index; index++)
            if (NO_HOLES || index in self) {
              val = self[index];
              res = f(val, index, O);
              if (TYPE) {
                if (IS_MAP) result[index] = res;
                // map
                else if (res)
                  switch (TYPE) {
                    case 3:
                      return true; // some
                    case 5:
                      return val; // find
                    case 6:
                      return index; // findIndex
                    case 2:
                      result.push(val); // filter
                  }
                else if (IS_EVERY) return false; // every
              }
            }
          return IS_FIND_INDEX ? -1 : IS_SOME || IS_EVERY ? IS_EVERY : result;
        };
      };

      /***/
    },
    /* 38 */
    /***/ function (module, exports, __webpack_require__) {
      // most Object methods by ES6 should accept primitives
      var $export = __webpack_require__(0),
        core = __webpack_require__(44),
        fails = __webpack_require__(7);
      module.exports = function (KEY, exec) {
        var fn = (core.Object || {})[KEY] || Object[KEY],
          exp = {};
        exp[KEY] = exec(fn);
        $export(
          $export.S +
            $export.F *
              fails(function () {
                fn(1);
              }),
          'Object',
          exp
        );
      };

      /***/
    },
    /* 39 */
    /***/ function (module, exports, __webpack_require__) {
      // 7.1.1 ToPrimitive(input [, PreferredType])
      var isObject = __webpack_require__(9);
      // instead of the ES6 spec version, we didn't implement @@toPrimitive case
      // and the second argument - flag - preferred type is a string
      module.exports = function (it, S) {
        if (!isObject(it)) return it;
        var fn, val;
        if (S && typeof (fn = it.toString) == 'function' && !isObject((val = fn.call(it))))
          return val;
        if (typeof (fn = it.valueOf) == 'function' && !isObject((val = fn.call(it)))) return val;
        if (!S && typeof (fn = it.toString) == 'function' && !isObject((val = fn.call(it))))
          return val;
        throw TypeError("Can't convert object to primitive value");
      };

      /***/
    },
    /* 40 */
    /***/ function (module, exports) {
      if (typeof Object.create === 'function') {
        // implementation from standard node.js 'util' module
        module.exports = function inherits(ctor, superCtor) {
          ctor.super_ = superCtor;
          ctor.prototype = Object.create(superCtor.prototype, {
            constructor: {
              value: ctor,
              enumerable: false,
              writable: true,
              configurable: true,
            },
          });
        };
      } else {
        // old school shim for old browsers
        module.exports = function inherits(ctor, superCtor) {
          ctor.super_ = superCtor;
          var TempCtor = function () {};
          TempCtor.prototype = superCtor.prototype;
          ctor.prototype = new TempCtor();
          ctor.prototype.constructor = ctor;
        };
      }

      /***/
    },
    /* 41 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';
      /* WEBPACK VAR INJECTION */ (function (process) {
        /**
         * Copyright 2013-present, Facebook, Inc.
         * All rights reserved.
         *
         * This source code is licensed under the BSD-style license found in the
         * LICENSE file in the root directory of this source tree. An additional grant
         * of patent rights can be found in the PATENTS file in the same directory.
         *
         */

        var _prodInvariant = __webpack_require__(8),
          _assign = __webpack_require__(12);

        var CallbackQueue = __webpack_require__(282);
        var PooledClass = __webpack_require__(68);
        var ReactFeatureFlags = __webpack_require__(287);
        var ReactReconciler = __webpack_require__(84);
        var Transaction = __webpack_require__(123);

        var invariant = __webpack_require__(2);

        var dirtyComponents = [];
        var updateBatchNumber = 0;
        var asapCallbackQueue = CallbackQueue.getPooled();
        var asapEnqueued = false;

        var batchingStrategy = null;

        function ensureInjected() {
          !(ReactUpdates.ReactReconcileTransaction && batchingStrategy)
            ? process.env.NODE_ENV !== 'production'
              ? invariant(
                  false,
                  'ReactUpdates: must inject a reconcile transaction class and batching strategy'
                )
              : _prodInvariant('123')
            : void 0;
        }

        var NESTED_UPDATES = {
          initialize: function () {
            this.dirtyComponentsLength = dirtyComponents.length;
          },
          close: function () {
            if (this.dirtyComponentsLength !== dirtyComponents.length) {
              // Additional updates were enqueued by componentDidUpdate handlers or
              // similar; before our own UPDATE_QUEUEING wrapper closes, we want to run
              // these new updates so that if A's componentDidUpdate calls setState on
              // B, B will update before the callback A's updater provided when calling
              // setState.
              dirtyComponents.splice(0, this.dirtyComponentsLength);
              flushBatchedUpdates();
            } else {
              dirtyComponents.length = 0;
            }
          },
        };

        var UPDATE_QUEUEING = {
          initialize: function () {
            this.callbackQueue.reset();
          },
          close: function () {
            this.callbackQueue.notifyAll();
          },
        };

        var TRANSACTION_WRAPPERS = [NESTED_UPDATES, UPDATE_QUEUEING];

        function ReactUpdatesFlushTransaction() {
          this.reinitializeTransaction();
          this.dirtyComponentsLength = null;
          this.callbackQueue = CallbackQueue.getPooled();
          this.reconcileTransaction = ReactUpdates.ReactReconcileTransaction.getPooled(
            /* useCreateElement */ true
          );
        }

        _assign(ReactUpdatesFlushTransaction.prototype, Transaction, {
          getTransactionWrappers: function () {
            return TRANSACTION_WRAPPERS;
          },

          destructor: function () {
            this.dirtyComponentsLength = null;
            CallbackQueue.release(this.callbackQueue);
            this.callbackQueue = null;
            ReactUpdates.ReactReconcileTransaction.release(this.reconcileTransaction);
            this.reconcileTransaction = null;
          },

          perform: function (method, scope, a) {
            // Essentially calls `this.reconcileTransaction.perform(method, scope, a)`
            // with this transaction's wrappers around it.
            return Transaction.perform.call(
              this,
              this.reconcileTransaction.perform,
              this.reconcileTransaction,
              method,
              scope,
              a
            );
          },
        });

        PooledClass.addPoolingTo(ReactUpdatesFlushTransaction);

        function batchedUpdates(callback, a, b, c, d, e) {
          ensureInjected();
          return batchingStrategy.batchedUpdates(callback, a, b, c, d, e);
        }

        /**
         * Array comparator for ReactComponents by mount ordering.
         *
         * @param {ReactComponent} c1 first component you're comparing
         * @param {ReactComponent} c2 second component you're comparing
         * @return {number} Return value usable by Array.prototype.sort().
         */
        function mountOrderComparator(c1, c2) {
          return c1._mountOrder - c2._mountOrder;
        }

        function runBatchedUpdates(transaction) {
          var len = transaction.dirtyComponentsLength;
          !(len === dirtyComponents.length)
            ? process.env.NODE_ENV !== 'production'
              ? invariant(
                  false,
                  "Expected flush transaction's stored dirty-components length (%s) to match dirty-components array length (%s).",
                  len,
                  dirtyComponents.length
                )
              : _prodInvariant('124', len, dirtyComponents.length)
            : void 0;

          // Since reconciling a component higher in the owner hierarchy usually (not
          // always -- see shouldComponentUpdate()) will reconcile children, reconcile
          // them before their children by sorting the array.
          dirtyComponents.sort(mountOrderComparator);

          // Any updates enqueued while reconciling must be performed after this entire
          // batch. Otherwise, if dirtyComponents is [A, B] where A has children B and
          // C, B could update twice in a single batch if C's render enqueues an update
          // to B (since B would have already updated, we should skip it, and the only
          // way we can know to do so is by checking the batch counter).
          updateBatchNumber++;

          for (var i = 0; i < len; i++) {
            // If a component is unmounted before pending changes apply, it will still
            // be here, but we assume that it has cleared its _pendingCallbacks and
            // that performUpdateIfNecessary is a noop.
            var component = dirtyComponents[i];

            // If performUpdateIfNecessary happens to enqueue any new updates, we
            // shouldn't execute the callbacks until the next render happens, so
            // stash the callbacks first
            var callbacks = component._pendingCallbacks;
            component._pendingCallbacks = null;

            var markerName;
            if (ReactFeatureFlags.logTopLevelRenders) {
              var namedComponent = component;
              // Duck type TopLevelWrapper. This is probably always true.
              if (component._currentElement.type.isReactTopLevelWrapper) {
                namedComponent = component._renderedComponent;
              }
              markerName = 'React update: ' + namedComponent.getName();
              console.time(markerName);
            }

            ReactReconciler.performUpdateIfNecessary(
              component,
              transaction.reconcileTransaction,
              updateBatchNumber
            );

            if (markerName) {
              console.timeEnd(markerName);
            }

            if (callbacks) {
              for (var j = 0; j < callbacks.length; j++) {
                transaction.callbackQueue.enqueue(callbacks[j], component.getPublicInstance());
              }
            }
          }
        }

        var flushBatchedUpdates = function () {
          // ReactUpdatesFlushTransaction's wrappers will clear the dirtyComponents
          // array and perform any updates enqueued by mount-ready handlers (i.e.,
          // componentDidUpdate) but we need to check here too in order to catch
          // updates enqueued by setState callbacks and asap calls.
          while (dirtyComponents.length || asapEnqueued) {
            if (dirtyComponents.length) {
              var transaction = ReactUpdatesFlushTransaction.getPooled();
              transaction.perform(runBatchedUpdates, null, transaction);
              ReactUpdatesFlushTransaction.release(transaction);
            }

            if (asapEnqueued) {
              asapEnqueued = false;
              var queue = asapCallbackQueue;
              asapCallbackQueue = CallbackQueue.getPooled();
              queue.notifyAll();
              CallbackQueue.release(queue);
            }
          }
        };

        /**
         * Mark a component as needing a rerender, adding an optional callback to a
         * list of functions which will be executed once the rerender occurs.
         */
        function enqueueUpdate(component) {
          ensureInjected();

          // Various parts of our code (such as ReactCompositeComponent's
          // _renderValidatedComponent) assume that calls to render aren't nested;
          // verify that that's the case. (This is called by each top-level update
          // function, like setState, forceUpdate, etc.; creation and
          // destruction of top-level components is guarded in ReactMount.)

          if (!batchingStrategy.isBatchingUpdates) {
            batchingStrategy.batchedUpdates(enqueueUpdate, component);
            return;
          }

          dirtyComponents.push(component);
          if (component._updateBatchNumber == null) {
            component._updateBatchNumber = updateBatchNumber + 1;
          }
        }

        /**
         * Enqueue a callback to be run at the end of the current batching cycle. Throws
         * if no updates are currently being performed.
         */
        function asap(callback, context) {
          !batchingStrategy.isBatchingUpdates
            ? process.env.NODE_ENV !== 'production'
              ? invariant(
                  false,
                  "ReactUpdates.asap: Can't enqueue an asap callback in a context whereupdates are not being batched."
                )
              : _prodInvariant('125')
            : void 0;
          asapCallbackQueue.enqueue(callback, context);
          asapEnqueued = true;
        }

        var ReactUpdatesInjection = {
          injectReconcileTransaction: function (ReconcileTransaction) {
            !ReconcileTransaction
              ? process.env.NODE_ENV !== 'production'
                ? invariant(false, 'ReactUpdates: must provide a reconcile transaction class')
                : _prodInvariant('126')
              : void 0;
            ReactUpdates.ReactReconcileTransaction = ReconcileTransaction;
          },

          injectBatchingStrategy: function (_batchingStrategy) {
            !_batchingStrategy
              ? process.env.NODE_ENV !== 'production'
                ? invariant(false, 'ReactUpdates: must provide a batching strategy')
                : _prodInvariant('127')
              : void 0;
            !(typeof _batchingStrategy.batchedUpdates === 'function')
              ? process.env.NODE_ENV !== 'production'
                ? invariant(false, 'ReactUpdates: must provide a batchedUpdates() function')
                : _prodInvariant('128')
              : void 0;
            !(typeof _batchingStrategy.isBatchingUpdates === 'boolean')
              ? process.env.NODE_ENV !== 'production'
                ? invariant(
                    false,
                    'ReactUpdates: must provide an isBatchingUpdates boolean attribute'
                  )
                : _prodInvariant('129')
              : void 0;
            batchingStrategy = _batchingStrategy;
          },
        };

        var ReactUpdates = {
          /**
           * React references `ReactReconcileTransaction` using this property in order
           * to allow dependency injection.
           *
           * @internal
           */
          ReactReconcileTransaction: null,

          batchedUpdates: batchedUpdates,
          enqueueUpdate: enqueueUpdate,
          flushBatchedUpdates: flushBatchedUpdates,
          injection: ReactUpdatesInjection,
          asap: asap,
        };

        module.exports = ReactUpdates;
        /* WEBPACK VAR INJECTION */
      }.call(exports, __webpack_require__(1)));

      /***/
    },
    /* 42 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';
      /**
       * Copyright 2013-present, Facebook, Inc.
       * All rights reserved.
       *
       * This source code is licensed under the BSD-style license found in the
       * LICENSE file in the root directory of this source tree. An additional grant
       * of patent rights can be found in the PATENTS file in the same directory.
       *
       *
       */

      /**
       * Keeps track of the current owner.
       *
       * The current owner is the component who should own any components that are
       * currently being constructed.
       */
      var ReactCurrentOwner = {
        /**
         * @internal
         * @type {ReactComponent}
         */
        current: null,
      };

      module.exports = ReactCurrentOwner;

      /***/
    },
    /* 43 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';
      /* WEBPACK VAR INJECTION */ (function (global) {
        /*!
         * The buffer module from node.js, for the browser.
         *
         * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>
         * @license  MIT
         */
        /* eslint-disable no-proto */

        var base64 = __webpack_require__(367);
        var ieee754 = __webpack_require__(626);
        var isArray = __webpack_require__(266);

        exports.Buffer = Buffer;
        exports.SlowBuffer = SlowBuffer;
        exports.INSPECT_MAX_BYTES = 50;

        /**
 * If `Buffer.TYPED_ARRAY_SUPPORT`:
 *   === true    Use Uint8Array implementation (fastest)
 *   === false   Use Object implementation (most compatible, even IE6)
 *
 * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,
 * Opera 11.6+, iOS 4.2+.
 *
 * Due to various browser bugs, sometimes the Object implementation will be used even
 * when the browser supports typed arrays.
 *
 * Note:
 *
 *   - Firefox 4-29 lacks support for adding new properties to `Uint8Array` instances,
 *     See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438.
 *
 *   - Chrome 9-10 is missing the `TypedArray.prototype.subarray` function.
 *
 *   - IE10 has a broken `TypedArray.prototype.subarray` function which returns arrays of
 *     incorrect length in some situations.

 * We detect these buggy browsers and set `Buffer.TYPED_ARRAY_SUPPORT` to `false` so they
 * get the Object implementation, which is slower but behaves correctly.
 */
        Buffer.TYPED_ARRAY_SUPPORT =
          global.TYPED_ARRAY_SUPPORT !== undefined
            ? global.TYPED_ARRAY_SUPPORT
            : typedArraySupport();

        /*
         * Export kMaxLength after typed array support is determined.
         */
        exports.kMaxLength = kMaxLength();

        function typedArraySupport() {
          try {
            var arr = new Uint8Array(1);
            arr.__proto__ = {
              __proto__: Uint8Array.prototype,
              foo: function () {
                return 42;
              },
            };
            return (
              arr.foo() === 42 && // typed array instances can be augmented
              typeof arr.subarray === 'function' && // chrome 9-10 lack `subarray`
              arr.subarray(1, 1).byteLength === 0
            ); // ie10 has broken `subarray`
          } catch (e) {
            return false;
          }
        }

        function kMaxLength() {
          return Buffer.TYPED_ARRAY_SUPPORT ? 0x7fffffff : 0x3fffffff;
        }

        function createBuffer(that, length) {
          if (kMaxLength() < length) {
            throw new RangeError('Invalid typed array length');
          }
          if (Buffer.TYPED_ARRAY_SUPPORT) {
            // Return an augmented `Uint8Array` instance, for best performance
            that = new Uint8Array(length);
            that.__proto__ = Buffer.prototype;
          } else {
            // Fallback: Return an object instance of the Buffer class
            if (that === null) {
              that = new Buffer(length);
            }
            that.length = length;
          }

          return that;
        }

        /**
         * The Buffer constructor returns instances of `Uint8Array` that have their
         * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of
         * `Uint8Array`, so the returned instances will have all the node `Buffer` methods
         * and the `Uint8Array` methods. Square bracket notation works as expected -- it
         * returns a single octet.
         *
         * The `Uint8Array` prototype remains unmodified.
         */

        function Buffer(arg, encodingOrOffset, length) {
          if (!Buffer.TYPED_ARRAY_SUPPORT && !(this instanceof Buffer)) {
            return new Buffer(arg, encodingOrOffset, length);
          }

          // Common case.
          if (typeof arg === 'number') {
            if (typeof encodingOrOffset === 'string') {
              throw new Error('If encoding is specified then the first argument must be a string');
            }
            return allocUnsafe(this, arg);
          }
          return from(this, arg, encodingOrOffset, length);
        }

        Buffer.poolSize = 8192; // not used by this implementation

        // TODO: Legacy, not needed anymore. Remove in next major version.
        Buffer._augment = function (arr) {
          arr.__proto__ = Buffer.prototype;
          return arr;
        };

        function from(that, value, encodingOrOffset, length) {
          if (typeof value === 'number') {
            throw new TypeError('"value" argument must not be a number');
          }

          if (typeof ArrayBuffer !== 'undefined' && value instanceof ArrayBuffer) {
            return fromArrayBuffer(that, value, encodingOrOffset, length);
          }

          if (typeof value === 'string') {
            return fromString(that, value, encodingOrOffset);
          }

          return fromObject(that, value);
        }

        /**
         * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError
         * if value is a number.
         * Buffer.from(str[, encoding])
         * Buffer.from(array)
         * Buffer.from(buffer)
         * Buffer.from(arrayBuffer[, byteOffset[, length]])
         **/
        Buffer.from = function (value, encodingOrOffset, length) {
          return from(null, value, encodingOrOffset, length);
        };

        if (Buffer.TYPED_ARRAY_SUPPORT) {
          Buffer.prototype.__proto__ = Uint8Array.prototype;
          Buffer.__proto__ = Uint8Array;
          if (
            typeof Symbol !== 'undefined' &&
            Symbol.species &&
            Buffer[Symbol.species] === Buffer
          ) {
            // Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97
            Object.defineProperty(Buffer, Symbol.species, {
              value: null,
              configurable: true,
            });
          }
        }

        function assertSize(size) {
          if (typeof size !== 'number') {
            throw new TypeError('"size" argument must be a number');
          } else if (size < 0) {
            throw new RangeError('"size" argument must not be negative');
          }
        }

        function alloc(that, size, fill, encoding) {
          assertSize(size);
          if (size <= 0) {
            return createBuffer(that, size);
          }
          if (fill !== undefined) {
            // Only pay attention to encoding if it's a string. This
            // prevents accidentally sending in a number that would
            // be interpretted as a start offset.
            return typeof encoding === 'string'
              ? createBuffer(that, size).fill(fill, encoding)
              : createBuffer(that, size).fill(fill);
          }
          return createBuffer(that, size);
        }

        /**
         * Creates a new filled Buffer instance.
         * alloc(size[, fill[, encoding]])
         **/
        Buffer.alloc = function (size, fill, encoding) {
          return alloc(null, size, fill, encoding);
        };

        function allocUnsafe(that, size) {
          assertSize(size);
          that = createBuffer(that, size < 0 ? 0 : checked(size) | 0);
          if (!Buffer.TYPED_ARRAY_SUPPORT) {
            for (var i = 0; i < size; ++i) {
              that[i] = 0;
            }
          }
          return that;
        }

        /**
         * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.
         * */
        Buffer.allocUnsafe = function (size) {
          return allocUnsafe(null, size);
        };
        /**
         * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.
         */
        Buffer.allocUnsafeSlow = function (size) {
          return allocUnsafe(null, size);
        };

        function fromString(that, string, encoding) {
          if (typeof encoding !== 'string' || encoding === '') {
            encoding = 'utf8';
          }

          if (!Buffer.isEncoding(encoding)) {
            throw new TypeError('"encoding" must be a valid string encoding');
          }

          var length = byteLength(string, encoding) | 0;
          that = createBuffer(that, length);

          var actual = that.write(string, encoding);

          if (actual !== length) {
            // Writing a hex string, for example, that contains invalid characters will
            // cause everything after the first invalid character to be ignored. (e.g.
            // 'abxxcd' will be treated as 'ab')
            that = that.slice(0, actual);
          }

          return that;
        }

        function fromArrayLike(that, array) {
          var length = array.length < 0 ? 0 : checked(array.length) | 0;
          that = createBuffer(that, length);
          for (var i = 0; i < length; i += 1) {
            that[i] = array[i] & 255;
          }
          return that;
        }

        function fromArrayBuffer(that, array, byteOffset, length) {
          array.byteLength; // this throws if `array` is not a valid ArrayBuffer

          if (byteOffset < 0 || array.byteLength < byteOffset) {
            throw new RangeError("'offset' is out of bounds");
          }

          if (array.byteLength < byteOffset + (length || 0)) {
            throw new RangeError("'length' is out of bounds");
          }

          if (byteOffset === undefined && length === undefined) {
            array = new Uint8Array(array);
          } else if (length === undefined) {
            array = new Uint8Array(array, byteOffset);
          } else {
            array = new Uint8Array(array, byteOffset, length);
          }

          if (Buffer.TYPED_ARRAY_SUPPORT) {
            // Return an augmented `Uint8Array` instance, for best performance
            that = array;
            that.__proto__ = Buffer.prototype;
          } else {
            // Fallback: Return an object instance of the Buffer class
            that = fromArrayLike(that, array);
          }
          return that;
        }

        function fromObject(that, obj) {
          if (Buffer.isBuffer(obj)) {
            var len = checked(obj.length) | 0;
            that = createBuffer(that, len);

            if (that.length === 0) {
              return that;
            }

            obj.copy(that, 0, 0, len);
            return that;
          }

          if (obj) {
            if (
              (typeof ArrayBuffer !== 'undefined' && obj.buffer instanceof ArrayBuffer) ||
              'length' in obj
            ) {
              if (typeof obj.length !== 'number' || isnan(obj.length)) {
                return createBuffer(that, 0);
              }
              return fromArrayLike(that, obj);
            }

            if (obj.type === 'Buffer' && isArray(obj.data)) {
              return fromArrayLike(that, obj.data);
            }
          }

          throw new TypeError(
            'First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.'
          );
        }

        function checked(length) {
          // Note: cannot use `length < kMaxLength()` here because that fails when
          // length is NaN (which is otherwise coerced to zero.)
          if (length >= kMaxLength()) {
            throw new RangeError(
              'Attempt to allocate Buffer larger than maximum ' +
                'size: 0x' +
                kMaxLength().toString(16) +
                ' bytes'
            );
          }
          return length | 0;
        }

        function SlowBuffer(length) {
          if (+length != length) {
            // eslint-disable-line eqeqeq
            length = 0;
          }
          return Buffer.alloc(+length);
        }

        Buffer.isBuffer = function isBuffer(b) {
          return !!(b != null && b._isBuffer);
        };

        Buffer.compare = function compare(a, b) {
          if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {
            throw new TypeError('Arguments must be Buffers');
          }

          if (a === b) return 0;

          var x = a.length;
          var y = b.length;

          for (var i = 0, len = Math.min(x, y); i < len; ++i) {
            if (a[i] !== b[i]) {
              x = a[i];
              y = b[i];
              break;
            }
          }

          if (x < y) return -1;
          if (y < x) return 1;
          return 0;
        };

        Buffer.isEncoding = function isEncoding(encoding) {
          switch (String(encoding).toLowerCase()) {
            case 'hex':
            case 'utf8':
            case 'utf-8':
            case 'ascii':
            case 'latin1':
            case 'binary':
            case 'base64':
            case 'ucs2':
            case 'ucs-2':
            case 'utf16le':
            case 'utf-16le':
              return true;
            default:
              return false;
          }
        };

        Buffer.concat = function concat(list, length) {
          if (!isArray(list)) {
            throw new TypeError('"list" argument must be an Array of Buffers');
          }

          if (list.length === 0) {
            return Buffer.alloc(0);
          }

          var i;
          if (length === undefined) {
            length = 0;
            for (i = 0; i < list.length; ++i) {
              length += list[i].length;
            }
          }

          var buffer = Buffer.allocUnsafe(length);
          var pos = 0;
          for (i = 0; i < list.length; ++i) {
            var buf = list[i];
            if (!Buffer.isBuffer(buf)) {
              throw new TypeError('"list" argument must be an Array of Buffers');
            }
            buf.copy(buffer, pos);
            pos += buf.length;
          }
          return buffer;
        };

        function byteLength(string, encoding) {
          if (Buffer.isBuffer(string)) {
            return string.length;
          }
          if (
            typeof ArrayBuffer !== 'undefined' &&
            typeof ArrayBuffer.isView === 'function' &&
            (ArrayBuffer.isView(string) || string instanceof ArrayBuffer)
          ) {
            return string.byteLength;
          }
          if (typeof string !== 'string') {
            string = '' + string;
          }

          var len = string.length;
          if (len === 0) return 0;

          // Use a for loop to avoid recursion
          var loweredCase = false;
          for (;;) {
            switch (encoding) {
              case 'ascii':
              case 'latin1':
              case 'binary':
                return len;
              case 'utf8':
              case 'utf-8':
              case undefined:
                return utf8ToBytes(string).length;
              case 'ucs2':
              case 'ucs-2':
              case 'utf16le':
              case 'utf-16le':
                return len * 2;
              case 'hex':
                return len >>> 1;
              case 'base64':
                return base64ToBytes(string).length;
              default:
                if (loweredCase) return utf8ToBytes(string).length; // assume utf8
                encoding = ('' + encoding).toLowerCase();
                loweredCase = true;
            }
          }
        }
        Buffer.byteLength = byteLength;

        function slowToString(encoding, start, end) {
          var loweredCase = false;

          // No need to verify that "this.length <= MAX_UINT32" since it's a read-only
          // property of a typed array.

          // This behaves neither like String nor Uint8Array in that we set start/end
          // to their upper/lower bounds if the value passed is out of range.
          // undefined is handled specially as per ECMA-262 6th Edition,
          // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.
          if (start === undefined || start < 0) {
            start = 0;
          }
          // Return early if start > this.length. Done here to prevent potential uint32
          // coercion fail below.
          if (start > this.length) {
            return '';
          }

          if (end === undefined || end > this.length) {
            end = this.length;
          }

          if (end <= 0) {
            return '';
          }

          // Force coersion to uint32. This will also coerce falsey/NaN values to 0.
          end >>>= 0;
          start >>>= 0;

          if (end <= start) {
            return '';
          }

          if (!encoding) encoding = 'utf8';

          while (true) {
            switch (encoding) {
              case 'hex':
                return hexSlice(this, start, end);

              case 'utf8':
              case 'utf-8':
                return utf8Slice(this, start, end);

              case 'ascii':
                return asciiSlice(this, start, end);

              case 'latin1':
              case 'binary':
                return latin1Slice(this, start, end);

              case 'base64':
                return base64Slice(this, start, end);

              case 'ucs2':
              case 'ucs-2':
              case 'utf16le':
              case 'utf-16le':
                return utf16leSlice(this, start, end);

              default:
                if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding);
                encoding = (encoding + '').toLowerCase();
                loweredCase = true;
            }
          }
        }

        // The property is used by `Buffer.isBuffer` and `is-buffer` (in Safari 5-7) to detect
        // Buffer instances.
        Buffer.prototype._isBuffer = true;

        function swap(b, n, m) {
          var i = b[n];
          b[n] = b[m];
          b[m] = i;
        }

        Buffer.prototype.swap16 = function swap16() {
          var len = this.length;
          if (len % 2 !== 0) {
            throw new RangeError('Buffer size must be a multiple of 16-bits');
          }
          for (var i = 0; i < len; i += 2) {
            swap(this, i, i + 1);
          }
          return this;
        };

        Buffer.prototype.swap32 = function swap32() {
          var len = this.length;
          if (len % 4 !== 0) {
            throw new RangeError('Buffer size must be a multiple of 32-bits');
          }
          for (var i = 0; i < len; i += 4) {
            swap(this, i, i + 3);
            swap(this, i + 1, i + 2);
          }
          return this;
        };

        Buffer.prototype.swap64 = function swap64() {
          var len = this.length;
          if (len % 8 !== 0) {
            throw new RangeError('Buffer size must be a multiple of 64-bits');
          }
          for (var i = 0; i < len; i += 8) {
            swap(this, i, i + 7);
            swap(this, i + 1, i + 6);
            swap(this, i + 2, i + 5);
            swap(this, i + 3, i + 4);
          }
          return this;
        };

        Buffer.prototype.toString = function toString() {
          var length = this.length | 0;
          if (length === 0) return '';
          if (arguments.length === 0) return utf8Slice(this, 0, length);
          return slowToString.apply(this, arguments);
        };

        Buffer.prototype.equals = function equals(b) {
          if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer');
          if (this === b) return true;
          return Buffer.compare(this, b) === 0;
        };

        Buffer.prototype.inspect = function inspect() {
          var str = '';
          var max = exports.INSPECT_MAX_BYTES;
          if (this.length > 0) {
            str = this.toString('hex', 0, max).match(/.{2}/g).join(' ');
            if (this.length > max) str += ' ... ';
          }
          return '<Buffer ' + str + '>';
        };

        Buffer.prototype.compare = function compare(target, start, end, thisStart, thisEnd) {
          if (!Buffer.isBuffer(target)) {
            throw new TypeError('Argument must be a Buffer');
          }

          if (start === undefined) {
            start = 0;
          }
          if (end === undefined) {
            end = target ? target.length : 0;
          }
          if (thisStart === undefined) {
            thisStart = 0;
          }
          if (thisEnd === undefined) {
            thisEnd = this.length;
          }

          if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {
            throw new RangeError('out of range index');
          }

          if (thisStart >= thisEnd && start >= end) {
            return 0;
          }
          if (thisStart >= thisEnd) {
            return -1;
          }
          if (start >= end) {
            return 1;
          }

          start >>>= 0;
          end >>>= 0;
          thisStart >>>= 0;
          thisEnd >>>= 0;

          if (this === target) return 0;

          var x = thisEnd - thisStart;
          var y = end - start;
          var len = Math.min(x, y);

          var thisCopy = this.slice(thisStart, thisEnd);
          var targetCopy = target.slice(start, end);

          for (var i = 0; i < len; ++i) {
            if (thisCopy[i] !== targetCopy[i]) {
              x = thisCopy[i];
              y = targetCopy[i];
              break;
            }
          }

          if (x < y) return -1;
          if (y < x) return 1;
          return 0;
        };

        // Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,
        // OR the last index of `val` in `buffer` at offset <= `byteOffset`.
        //
        // Arguments:
        // - buffer - a Buffer to search
        // - val - a string, Buffer, or number
        // - byteOffset - an index into `buffer`; will be clamped to an int32
        // - encoding - an optional encoding, relevant is val is a string
        // - dir - true for indexOf, false for lastIndexOf
        function bidirectionalIndexOf(buffer, val, byteOffset, encoding, dir) {
          // Empty buffer means no match
          if (buffer.length === 0) return -1;

          // Normalize byteOffset
          if (typeof byteOffset === 'string') {
            encoding = byteOffset;
            byteOffset = 0;
          } else if (byteOffset > 0x7fffffff) {
            byteOffset = 0x7fffffff;
          } else if (byteOffset < -0x80000000) {
            byteOffset = -0x80000000;
          }
          byteOffset = +byteOffset; // Coerce to Number.
          if (isNaN(byteOffset)) {
            // byteOffset: it it's undefined, null, NaN, "foo", etc, search whole buffer
            byteOffset = dir ? 0 : buffer.length - 1;
          }

          // Normalize byteOffset: negative offsets start from the end of the buffer
          if (byteOffset < 0) byteOffset = buffer.length + byteOffset;
          if (byteOffset >= buffer.length) {
            if (dir) return -1;
            else byteOffset = buffer.length - 1;
          } else if (byteOffset < 0) {
            if (dir) byteOffset = 0;
            else return -1;
          }

          // Normalize val
          if (typeof val === 'string') {
            val = Buffer.from(val, encoding);
          }

          // Finally, search either indexOf (if dir is true) or lastIndexOf
          if (Buffer.isBuffer(val)) {
            // Special case: looking for empty string/buffer always fails
            if (val.length === 0) {
              return -1;
            }
            return arrayIndexOf(buffer, val, byteOffset, encoding, dir);
          } else if (typeof val === 'number') {
            val = val & 0xff; // Search for a byte value [0-255]
            if (Buffer.TYPED_ARRAY_SUPPORT && typeof Uint8Array.prototype.indexOf === 'function') {
              if (dir) {
                return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset);
              } else {
                return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset);
              }
            }
            return arrayIndexOf(buffer, [val], byteOffset, encoding, dir);
          }

          throw new TypeError('val must be string, number or Buffer');
        }

        function arrayIndexOf(arr, val, byteOffset, encoding, dir) {
          var indexSize = 1;
          var arrLength = arr.length;
          var valLength = val.length;

          if (encoding !== undefined) {
            encoding = String(encoding).toLowerCase();
            if (
              encoding === 'ucs2' ||
              encoding === 'ucs-2' ||
              encoding === 'utf16le' ||
              encoding === 'utf-16le'
            ) {
              if (arr.length < 2 || val.length < 2) {
                return -1;
              }
              indexSize = 2;
              arrLength /= 2;
              valLength /= 2;
              byteOffset /= 2;
            }
          }

          function read(buf, i) {
            if (indexSize === 1) {
              return buf[i];
            } else {
              return buf.readUInt16BE(i * indexSize);
            }
          }

          var i;
          if (dir) {
            var foundIndex = -1;
            for (i = byteOffset; i < arrLength; i++) {
              if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {
                if (foundIndex === -1) foundIndex = i;
                if (i - foundIndex + 1 === valLength) return foundIndex * indexSize;
              } else {
                if (foundIndex !== -1) i -= i - foundIndex;
                foundIndex = -1;
              }
            }
          } else {
            if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength;
            for (i = byteOffset; i >= 0; i--) {
              var found = true;
              for (var j = 0; j < valLength; j++) {
                if (read(arr, i + j) !== read(val, j)) {
                  found = false;
                  break;
                }
              }
              if (found) return i;
            }
          }

          return -1;
        }

        Buffer.prototype.includes = function includes(val, byteOffset, encoding) {
          return this.indexOf(val, byteOffset, encoding) !== -1;
        };

        Buffer.prototype.indexOf = function indexOf(val, byteOffset, encoding) {
          return bidirectionalIndexOf(this, val, byteOffset, encoding, true);
        };

        Buffer.prototype.lastIndexOf = function lastIndexOf(val, byteOffset, encoding) {
          return bidirectionalIndexOf(this, val, byteOffset, encoding, false);
        };

        function hexWrite(buf, string, offset, length) {
          offset = Number(offset) || 0;
          var remaining = buf.length - offset;
          if (!length) {
            length = remaining;
          } else {
            length = Number(length);
            if (length > remaining) {
              length = remaining;
            }
          }

          // must be an even number of digits
          var strLen = string.length;
          if (strLen % 2 !== 0) throw new TypeError('Invalid hex string');

          if (length > strLen / 2) {
            length = strLen / 2;
          }
          for (var i = 0; i < length; ++i) {
            var parsed = parseInt(string.substr(i * 2, 2), 16);
            if (isNaN(parsed)) return i;
            buf[offset + i] = parsed;
          }
          return i;
        }

        function utf8Write(buf, string, offset, length) {
          return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length);
        }

        function asciiWrite(buf, string, offset, length) {
          return blitBuffer(asciiToBytes(string), buf, offset, length);
        }

        function latin1Write(buf, string, offset, length) {
          return asciiWrite(buf, string, offset, length);
        }

        function base64Write(buf, string, offset, length) {
          return blitBuffer(base64ToBytes(string), buf, offset, length);
        }

        function ucs2Write(buf, string, offset, length) {
          return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length);
        }

        Buffer.prototype.write = function write(string, offset, length, encoding) {
          // Buffer#write(string)
          if (offset === undefined) {
            encoding = 'utf8';
            length = this.length;
            offset = 0;
            // Buffer#write(string, encoding)
          } else if (length === undefined && typeof offset === 'string') {
            encoding = offset;
            length = this.length;
            offset = 0;
            // Buffer#write(string, offset[, length][, encoding])
          } else if (isFinite(offset)) {
            offset = offset | 0;
            if (isFinite(length)) {
              length = length | 0;
              if (encoding === undefined) encoding = 'utf8';
            } else {
              encoding = length;
              length = undefined;
            }
            // legacy write(string, encoding, offset, length) - remove in v0.13
          } else {
            throw new Error(
              'Buffer.write(string, encoding, offset[, length]) is no longer supported'
            );
          }

          var remaining = this.length - offset;
          if (length === undefined || length > remaining) length = remaining;

          if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {
            throw new RangeError('Attempt to write outside buffer bounds');
          }

          if (!encoding) encoding = 'utf8';

          var loweredCase = false;
          for (;;) {
            switch (encoding) {
              case 'hex':
                return hexWrite(this, string, offset, length);

              case 'utf8':
              case 'utf-8':
                return utf8Write(this, string, offset, length);

              case 'ascii':
                return asciiWrite(this, string, offset, length);

              case 'latin1':
              case 'binary':
                return latin1Write(this, string, offset, length);

              case 'base64':
                // Warning: maxLength not taken into account in base64Write
                return base64Write(this, string, offset, length);

              case 'ucs2':
              case 'ucs-2':
              case 'utf16le':
              case 'utf-16le':
                return ucs2Write(this, string, offset, length);

              default:
                if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding);
                encoding = ('' + encoding).toLowerCase();
                loweredCase = true;
            }
          }
        };

        Buffer.prototype.toJSON = function toJSON() {
          return {
            type: 'Buffer',
            data: Array.prototype.slice.call(this._arr || this, 0),
          };
        };

        function base64Slice(buf, start, end) {
          if (start === 0 && end === buf.length) {
            return base64.fromByteArray(buf);
          } else {
            return base64.fromByteArray(buf.slice(start, end));
          }
        }

        function utf8Slice(buf, start, end) {
          end = Math.min(buf.length, end);
          var res = [];

          var i = start;
          while (i < end) {
            var firstByte = buf[i];
            var codePoint = null;
            var bytesPerSequence =
              firstByte > 0xef ? 4 : firstByte > 0xdf ? 3 : firstByte > 0xbf ? 2 : 1;

            if (i + bytesPerSequence <= end) {
              var secondByte, thirdByte, fourthByte, tempCodePoint;

              switch (bytesPerSequence) {
                case 1:
                  if (firstByte < 0x80) {
                    codePoint = firstByte;
                  }
                  break;
                case 2:
                  secondByte = buf[i + 1];
                  if ((secondByte & 0xc0) === 0x80) {
                    tempCodePoint = ((firstByte & 0x1f) << 0x6) | (secondByte & 0x3f);
                    if (tempCodePoint > 0x7f) {
                      codePoint = tempCodePoint;
                    }
                  }
                  break;
                case 3:
                  secondByte = buf[i + 1];
                  thirdByte = buf[i + 2];
                  if ((secondByte & 0xc0) === 0x80 && (thirdByte & 0xc0) === 0x80) {
                    tempCodePoint =
                      ((firstByte & 0xf) << 0xc) |
                      ((secondByte & 0x3f) << 0x6) |
                      (thirdByte & 0x3f);
                    if (
                      tempCodePoint > 0x7ff &&
                      (tempCodePoint < 0xd800 || tempCodePoint > 0xdfff)
                    ) {
                      codePoint = tempCodePoint;
                    }
                  }
                  break;
                case 4:
                  secondByte = buf[i + 1];
                  thirdByte = buf[i + 2];
                  fourthByte = buf[i + 3];
                  if (
                    (secondByte & 0xc0) === 0x80 &&
                    (thirdByte & 0xc0) === 0x80 &&
                    (fourthByte & 0xc0) === 0x80
                  ) {
                    tempCodePoint =
                      ((firstByte & 0xf) << 0x12) |
                      ((secondByte & 0x3f) << 0xc) |
                      ((thirdByte & 0x3f) << 0x6) |
                      (fourthByte & 0x3f);
                    if (tempCodePoint > 0xffff && tempCodePoint < 0x110000) {
                      codePoint = tempCodePoint;
                    }
                  }
              }
            }

            if (codePoint === null) {
              // we did not generate a valid codePoint so insert a
              // replacement char (U+FFFD) and advance only 1 byte
              codePoint = 0xfffd;
              bytesPerSequence = 1;
            } else if (codePoint > 0xffff) {
              // encode to utf16 (surrogate pair dance)
              codePoint -= 0x10000;
              res.push(((codePoint >>> 10) & 0x3ff) | 0xd800);
              codePoint = 0xdc00 | (codePoint & 0x3ff);
            }

            res.push(codePoint);
            i += bytesPerSequence;
          }

          return decodeCodePointsArray(res);
        }

        // Based on http://stackoverflow.com/a/22747272/680742, the browser with
        // the lowest limit is Chrome, with 0x10000 args.
        // We go 1 magnitude less, for safety
        var MAX_ARGUMENTS_LENGTH = 0x1000;

        function decodeCodePointsArray(codePoints) {
          var len = codePoints.length;
          if (len <= MAX_ARGUMENTS_LENGTH) {
            return String.fromCharCode.apply(String, codePoints); // avoid extra slice()
          }

          // Decode in chunks to avoid "call stack size exceeded".
          var res = '';
          var i = 0;
          while (i < len) {
            res += String.fromCharCode.apply(
              String,
              codePoints.slice(i, (i += MAX_ARGUMENTS_LENGTH))
            );
          }
          return res;
        }

        function asciiSlice(buf, start, end) {
          var ret = '';
          end = Math.min(buf.length, end);

          for (var i = start; i < end; ++i) {
            ret += String.fromCharCode(buf[i] & 0x7f);
          }
          return ret;
        }

        function latin1Slice(buf, start, end) {
          var ret = '';
          end = Math.min(buf.length, end);

          for (var i = start; i < end; ++i) {
            ret += String.fromCharCode(buf[i]);
          }
          return ret;
        }

        function hexSlice(buf, start, end) {
          var len = buf.length;

          if (!start || start < 0) start = 0;
          if (!end || end < 0 || end > len) end = len;

          var out = '';
          for (var i = start; i < end; ++i) {
            out += toHex(buf[i]);
          }
          return out;
        }

        function utf16leSlice(buf, start, end) {
          var bytes = buf.slice(start, end);
          var res = '';
          for (var i = 0; i < bytes.length; i += 2) {
            res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256);
          }
          return res;
        }

        Buffer.prototype.slice = function slice(start, end) {
          var len = this.length;
          start = ~~start;
          end = end === undefined ? len : ~~end;

          if (start < 0) {
            start += len;
            if (start < 0) start = 0;
          } else if (start > len) {
            start = len;
          }

          if (end < 0) {
            end += len;
            if (end < 0) end = 0;
          } else if (end > len) {
            end = len;
          }

          if (end < start) end = start;

          var newBuf;
          if (Buffer.TYPED_ARRAY_SUPPORT) {
            newBuf = this.subarray(start, end);
            newBuf.__proto__ = Buffer.prototype;
          } else {
            var sliceLen = end - start;
            newBuf = new Buffer(sliceLen, undefined);
            for (var i = 0; i < sliceLen; ++i) {
              newBuf[i] = this[i + start];
            }
          }

          return newBuf;
        };

        /*
         * Need to make sure that buffer isn't trying to write out of bounds.
         */
        function checkOffset(offset, ext, length) {
          if (offset % 1 !== 0 || offset < 0) throw new RangeError('offset is not uint');
          if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length');
        }

        Buffer.prototype.readUIntLE = function readUIntLE(offset, byteLength, noAssert) {
          offset = offset | 0;
          byteLength = byteLength | 0;
          if (!noAssert) checkOffset(offset, byteLength, this.length);

          var val = this[offset];
          var mul = 1;
          var i = 0;
          while (++i < byteLength && (mul *= 0x100)) {
            val += this[offset + i] * mul;
          }

          return val;
        };

        Buffer.prototype.readUIntBE = function readUIntBE(offset, byteLength, noAssert) {
          offset = offset | 0;
          byteLength = byteLength | 0;
          if (!noAssert) {
            checkOffset(offset, byteLength, this.length);
          }

          var val = this[offset + --byteLength];
          var mul = 1;
          while (byteLength > 0 && (mul *= 0x100)) {
            val += this[offset + --byteLength] * mul;
          }

          return val;
        };

        Buffer.prototype.readUInt8 = function readUInt8(offset, noAssert) {
          if (!noAssert) checkOffset(offset, 1, this.length);
          return this[offset];
        };

        Buffer.prototype.readUInt16LE = function readUInt16LE(offset, noAssert) {
          if (!noAssert) checkOffset(offset, 2, this.length);
          return this[offset] | (this[offset + 1] << 8);
        };

        Buffer.prototype.readUInt16BE = function readUInt16BE(offset, noAssert) {
          if (!noAssert) checkOffset(offset, 2, this.length);
          return (this[offset] << 8) | this[offset + 1];
        };

        Buffer.prototype.readUInt32LE = function readUInt32LE(offset, noAssert) {
          if (!noAssert) checkOffset(offset, 4, this.length);

          return (
            (this[offset] | (this[offset + 1] << 8) | (this[offset + 2] << 16)) +
            this[offset + 3] * 0x1000000
          );
        };

        Buffer.prototype.readUInt32BE = function readUInt32BE(offset, noAssert) {
          if (!noAssert) checkOffset(offset, 4, this.length);

          return (
            this[offset] * 0x1000000 +
            ((this[offset + 1] << 16) | (this[offset + 2] << 8) | this[offset + 3])
          );
        };

        Buffer.prototype.readIntLE = function readIntLE(offset, byteLength, noAssert) {
          offset = offset | 0;
          byteLength = byteLength | 0;
          if (!noAssert) checkOffset(offset, byteLength, this.length);

          var val = this[offset];
          var mul = 1;
          var i = 0;
          while (++i < byteLength && (mul *= 0x100)) {
            val += this[offset + i] * mul;
          }
          mul *= 0x80;

          if (val >= mul) val -= Math.pow(2, 8 * byteLength);

          return val;
        };

        Buffer.prototype.readIntBE = function readIntBE(offset, byteLength, noAssert) {
          offset = offset | 0;
          byteLength = byteLength | 0;
          if (!noAssert) checkOffset(offset, byteLength, this.length);

          var i = byteLength;
          var mul = 1;
          var val = this[offset + --i];
          while (i > 0 && (mul *= 0x100)) {
            val += this[offset + --i] * mul;
          }
          mul *= 0x80;

          if (val >= mul) val -= Math.pow(2, 8 * byteLength);

          return val;
        };

        Buffer.prototype.readInt8 = function readInt8(offset, noAssert) {
          if (!noAssert) checkOffset(offset, 1, this.length);
          if (!(this[offset] & 0x80)) return this[offset];
          return (0xff - this[offset] + 1) * -1;
        };

        Buffer.prototype.readInt16LE = function readInt16LE(offset, noAssert) {
          if (!noAssert) checkOffset(offset, 2, this.length);
          var val = this[offset] | (this[offset + 1] << 8);
          return val & 0x8000 ? val | 0xffff0000 : val;
        };

        Buffer.prototype.readInt16BE = function readInt16BE(offset, noAssert) {
          if (!noAssert) checkOffset(offset, 2, this.length);
          var val = this[offset + 1] | (this[offset] << 8);
          return val & 0x8000 ? val | 0xffff0000 : val;
        };

        Buffer.prototype.readInt32LE = function readInt32LE(offset, noAssert) {
          if (!noAssert) checkOffset(offset, 4, this.length);

          return (
            this[offset] |
            (this[offset + 1] << 8) |
            (this[offset + 2] << 16) |
            (this[offset + 3] << 24)
          );
        };

        Buffer.prototype.readInt32BE = function readInt32BE(offset, noAssert) {
          if (!noAssert) checkOffset(offset, 4, this.length);

          return (
            (this[offset] << 24) |
            (this[offset + 1] << 16) |
            (this[offset + 2] << 8) |
            this[offset + 3]
          );
        };

        Buffer.prototype.readFloatLE = function readFloatLE(offset, noAssert) {
          if (!noAssert) checkOffset(offset, 4, this.length);
          return ieee754.read(this, offset, true, 23, 4);
        };

        Buffer.prototype.readFloatBE = function readFloatBE(offset, noAssert) {
          if (!noAssert) checkOffset(offset, 4, this.length);
          return ieee754.read(this, offset, false, 23, 4);
        };

        Buffer.prototype.readDoubleLE = function readDoubleLE(offset, noAssert) {
          if (!noAssert) checkOffset(offset, 8, this.length);
          return ieee754.read(this, offset, true, 52, 8);
        };

        Buffer.prototype.readDoubleBE = function readDoubleBE(offset, noAssert) {
          if (!noAssert) checkOffset(offset, 8, this.length);
          return ieee754.read(this, offset, false, 52, 8);
        };

        function checkInt(buf, value, offset, ext, max, min) {
          if (!Buffer.isBuffer(buf))
            throw new TypeError('"buffer" argument must be a Buffer instance');
          if (value > max || value < min) throw new RangeError('"value" argument is out of bounds');
          if (offset + ext > buf.length) throw new RangeError('Index out of range');
        }

        Buffer.prototype.writeUIntLE = function writeUIntLE(value, offset, byteLength, noAssert) {
          value = +value;
          offset = offset | 0;
          byteLength = byteLength | 0;
          if (!noAssert) {
            var maxBytes = Math.pow(2, 8 * byteLength) - 1;
            checkInt(this, value, offset, byteLength, maxBytes, 0);
          }

          var mul = 1;
          var i = 0;
          this[offset] = value & 0xff;
          while (++i < byteLength && (mul *= 0x100)) {
            this[offset + i] = (value / mul) & 0xff;
          }

          return offset + byteLength;
        };

        Buffer.prototype.writeUIntBE = function writeUIntBE(value, offset, byteLength, noAssert) {
          value = +value;
          offset = offset | 0;
          byteLength = byteLength | 0;
          if (!noAssert) {
            var maxBytes = Math.pow(2, 8 * byteLength) - 1;
            checkInt(this, value, offset, byteLength, maxBytes, 0);
          }

          var i = byteLength - 1;
          var mul = 1;
          this[offset + i] = value & 0xff;
          while (--i >= 0 && (mul *= 0x100)) {
            this[offset + i] = (value / mul) & 0xff;
          }

          return offset + byteLength;
        };

        Buffer.prototype.writeUInt8 = function writeUInt8(value, offset, noAssert) {
          value = +value;
          offset = offset | 0;
          if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0);
          if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value);
          this[offset] = value & 0xff;
          return offset + 1;
        };

        function objectWriteUInt16(buf, value, offset, littleEndian) {
          if (value < 0) value = 0xffff + value + 1;
          for (var i = 0, j = Math.min(buf.length - offset, 2); i < j; ++i) {
            buf[offset + i] =
              (value & (0xff << (8 * (littleEndian ? i : 1 - i)))) >>>
              ((littleEndian ? i : 1 - i) * 8);
          }
        }

        Buffer.prototype.writeUInt16LE = function writeUInt16LE(value, offset, noAssert) {
          value = +value;
          offset = offset | 0;
          if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0);
          if (Buffer.TYPED_ARRAY_SUPPORT) {
            this[offset] = value & 0xff;
            this[offset + 1] = value >>> 8;
          } else {
            objectWriteUInt16(this, value, offset, true);
          }
          return offset + 2;
        };

        Buffer.prototype.writeUInt16BE = function writeUInt16BE(value, offset, noAssert) {
          value = +value;
          offset = offset | 0;
          if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0);
          if (Buffer.TYPED_ARRAY_SUPPORT) {
            this[offset] = value >>> 8;
            this[offset + 1] = value & 0xff;
          } else {
            objectWriteUInt16(this, value, offset, false);
          }
          return offset + 2;
        };

        function objectWriteUInt32(buf, value, offset, littleEndian) {
          if (value < 0) value = 0xffffffff + value + 1;
          for (var i = 0, j = Math.min(buf.length - offset, 4); i < j; ++i) {
            buf[offset + i] = (value >>> ((littleEndian ? i : 3 - i) * 8)) & 0xff;
          }
        }

        Buffer.prototype.writeUInt32LE = function writeUInt32LE(value, offset, noAssert) {
          value = +value;
          offset = offset | 0;
          if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0);
          if (Buffer.TYPED_ARRAY_SUPPORT) {
            this[offset + 3] = value >>> 24;
            this[offset + 2] = value >>> 16;
            this[offset + 1] = value >>> 8;
            this[offset] = value & 0xff;
          } else {
            objectWriteUInt32(this, value, offset, true);
          }
          return offset + 4;
        };

        Buffer.prototype.writeUInt32BE = function writeUInt32BE(value, offset, noAssert) {
          value = +value;
          offset = offset | 0;
          if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0);
          if (Buffer.TYPED_ARRAY_SUPPORT) {
            this[offset] = value >>> 24;
            this[offset + 1] = value >>> 16;
            this[offset + 2] = value >>> 8;
            this[offset + 3] = value & 0xff;
          } else {
            objectWriteUInt32(this, value, offset, false);
          }
          return offset + 4;
        };

        Buffer.prototype.writeIntLE = function writeIntLE(value, offset, byteLength, noAssert) {
          value = +value;
          offset = offset | 0;
          if (!noAssert) {
            var limit = Math.pow(2, 8 * byteLength - 1);

            checkInt(this, value, offset, byteLength, limit - 1, -limit);
          }

          var i = 0;
          var mul = 1;
          var sub = 0;
          this[offset] = value & 0xff;
          while (++i < byteLength && (mul *= 0x100)) {
            if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {
              sub = 1;
            }
            this[offset + i] = (((value / mul) >> 0) - sub) & 0xff;
          }

          return offset + byteLength;
        };

        Buffer.prototype.writeIntBE = function writeIntBE(value, offset, byteLength, noAssert) {
          value = +value;
          offset = offset | 0;
          if (!noAssert) {
            var limit = Math.pow(2, 8 * byteLength - 1);

            checkInt(this, value, offset, byteLength, limit - 1, -limit);
          }

          var i = byteLength - 1;
          var mul = 1;
          var sub = 0;
          this[offset + i] = value & 0xff;
          while (--i >= 0 && (mul *= 0x100)) {
            if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {
              sub = 1;
            }
            this[offset + i] = (((value / mul) >> 0) - sub) & 0xff;
          }

          return offset + byteLength;
        };

        Buffer.prototype.writeInt8 = function writeInt8(value, offset, noAssert) {
          value = +value;
          offset = offset | 0;
          if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80);
          if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value);
          if (value < 0) value = 0xff + value + 1;
          this[offset] = value & 0xff;
          return offset + 1;
        };

        Buffer.prototype.writeInt16LE = function writeInt16LE(value, offset, noAssert) {
          value = +value;
          offset = offset | 0;
          if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000);
          if (Buffer.TYPED_ARRAY_SUPPORT) {
            this[offset] = value & 0xff;
            this[offset + 1] = value >>> 8;
          } else {
            objectWriteUInt16(this, value, offset, true);
          }
          return offset + 2;
        };

        Buffer.prototype.writeInt16BE = function writeInt16BE(value, offset, noAssert) {
          value = +value;
          offset = offset | 0;
          if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000);
          if (Buffer.TYPED_ARRAY_SUPPORT) {
            this[offset] = value >>> 8;
            this[offset + 1] = value & 0xff;
          } else {
            objectWriteUInt16(this, value, offset, false);
          }
          return offset + 2;
        };

        Buffer.prototype.writeInt32LE = function writeInt32LE(value, offset, noAssert) {
          value = +value;
          offset = offset | 0;
          if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000);
          if (Buffer.TYPED_ARRAY_SUPPORT) {
            this[offset] = value & 0xff;
            this[offset + 1] = value >>> 8;
            this[offset + 2] = value >>> 16;
            this[offset + 3] = value >>> 24;
          } else {
            objectWriteUInt32(this, value, offset, true);
          }
          return offset + 4;
        };

        Buffer.prototype.writeInt32BE = function writeInt32BE(value, offset, noAssert) {
          value = +value;
          offset = offset | 0;
          if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000);
          if (value < 0) value = 0xffffffff + value + 1;
          if (Buffer.TYPED_ARRAY_SUPPORT) {
            this[offset] = value >>> 24;
            this[offset + 1] = value >>> 16;
            this[offset + 2] = value >>> 8;
            this[offset + 3] = value & 0xff;
          } else {
            objectWriteUInt32(this, value, offset, false);
          }
          return offset + 4;
        };

        function checkIEEE754(buf, value, offset, ext, max, min) {
          if (offset + ext > buf.length) throw new RangeError('Index out of range');
          if (offset < 0) throw new RangeError('Index out of range');
        }

        function writeFloat(buf, value, offset, littleEndian, noAssert) {
          if (!noAssert) {
            checkIEEE754(buf, value, offset, 4, 3.4028234663852886e38, -3.4028234663852886e38);
          }
          ieee754.write(buf, value, offset, littleEndian, 23, 4);
          return offset + 4;
        }

        Buffer.prototype.writeFloatLE = function writeFloatLE(value, offset, noAssert) {
          return writeFloat(this, value, offset, true, noAssert);
        };

        Buffer.prototype.writeFloatBE = function writeFloatBE(value, offset, noAssert) {
          return writeFloat(this, value, offset, false, noAssert);
        };

        function writeDouble(buf, value, offset, littleEndian, noAssert) {
          if (!noAssert) {
            checkIEEE754(buf, value, offset, 8, 1.7976931348623157e308, -1.7976931348623157e308);
          }
          ieee754.write(buf, value, offset, littleEndian, 52, 8);
          return offset + 8;
        }

        Buffer.prototype.writeDoubleLE = function writeDoubleLE(value, offset, noAssert) {
          return writeDouble(this, value, offset, true, noAssert);
        };

        Buffer.prototype.writeDoubleBE = function writeDoubleBE(value, offset, noAssert) {
          return writeDouble(this, value, offset, false, noAssert);
        };

        // copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)
        Buffer.prototype.copy = function copy(target, targetStart, start, end) {
          if (!start) start = 0;
          if (!end && end !== 0) end = this.length;
          if (targetStart >= target.length) targetStart = target.length;
          if (!targetStart) targetStart = 0;
          if (end > 0 && end < start) end = start;

          // Copy 0 bytes; we're done
          if (end === start) return 0;
          if (target.length === 0 || this.length === 0) return 0;

          // Fatal error conditions
          if (targetStart < 0) {
            throw new RangeError('targetStart out of bounds');
          }
          if (start < 0 || start >= this.length) throw new RangeError('sourceStart out of bounds');
          if (end < 0) throw new RangeError('sourceEnd out of bounds');

          // Are we oob?
          if (end > this.length) end = this.length;
          if (target.length - targetStart < end - start) {
            end = target.length - targetStart + start;
          }

          var len = end - start;
          var i;

          if (this === target && start < targetStart && targetStart < end) {
            // descending copy from end
            for (i = len - 1; i >= 0; --i) {
              target[i + targetStart] = this[i + start];
            }
          } else if (len < 1000 || !Buffer.TYPED_ARRAY_SUPPORT) {
            // ascending copy from start
            for (i = 0; i < len; ++i) {
              target[i + targetStart] = this[i + start];
            }
          } else {
            Uint8Array.prototype.set.call(target, this.subarray(start, start + len), targetStart);
          }

          return len;
        };

        // Usage:
        //    buffer.fill(number[, offset[, end]])
        //    buffer.fill(buffer[, offset[, end]])
        //    buffer.fill(string[, offset[, end]][, encoding])
        Buffer.prototype.fill = function fill(val, start, end, encoding) {
          // Handle string cases:
          if (typeof val === 'string') {
            if (typeof start === 'string') {
              encoding = start;
              start = 0;
              end = this.length;
            } else if (typeof end === 'string') {
              encoding = end;
              end = this.length;
            }
            if (val.length === 1) {
              var code = val.charCodeAt(0);
              if (code < 256) {
                val = code;
              }
            }
            if (encoding !== undefined && typeof encoding !== 'string') {
              throw new TypeError('encoding must be a string');
            }
            if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {
              throw new TypeError('Unknown encoding: ' + encoding);
            }
          } else if (typeof val === 'number') {
            val = val & 255;
          }

          // Invalid ranges are not set to a default, so can range check early.
          if (start < 0 || this.length < start || this.length < end) {
            throw new RangeError('Out of range index');
          }

          if (end <= start) {
            return this;
          }

          start = start >>> 0;
          end = end === undefined ? this.length : end >>> 0;

          if (!val) val = 0;

          var i;
          if (typeof val === 'number') {
            for (i = start; i < end; ++i) {
              this[i] = val;
            }
          } else {
            var bytes = Buffer.isBuffer(val)
              ? val
              : utf8ToBytes(new Buffer(val, encoding).toString());
            var len = bytes.length;
            for (i = 0; i < end - start; ++i) {
              this[i + start] = bytes[i % len];
            }
          }

          return this;
        };

        // HELPER FUNCTIONS
        // ================

        var INVALID_BASE64_RE = /[^+\/0-9A-Za-z-_]/g;

        function base64clean(str) {
          // Node strips out invalid characters like \n and \t from the string, base64-js does not
          str = stringtrim(str).replace(INVALID_BASE64_RE, '');
          // Node converts strings with length < 2 to ''
          if (str.length < 2) return '';
          // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not
          while (str.length % 4 !== 0) {
            str = str + '=';
          }
          return str;
        }

        function stringtrim(str) {
          if (str.trim) return str.trim();
          return str.replace(/^\s+|\s+$/g, '');
        }

        function toHex(n) {
          if (n < 16) return '0' + n.toString(16);
          return n.toString(16);
        }

        function utf8ToBytes(string, units) {
          units = units || Infinity;
          var codePoint;
          var length = string.length;
          var leadSurrogate = null;
          var bytes = [];

          for (var i = 0; i < length; ++i) {
            codePoint = string.charCodeAt(i);

            // is surrogate component
            if (codePoint > 0xd7ff && codePoint < 0xe000) {
              // last char was a lead
              if (!leadSurrogate) {
                // no lead yet
                if (codePoint > 0xdbff) {
                  // unexpected trail
                  if ((units -= 3) > -1) bytes.push(0xef, 0xbf, 0xbd);
                  continue;
                } else if (i + 1 === length) {
                  // unpaired lead
                  if ((units -= 3) > -1) bytes.push(0xef, 0xbf, 0xbd);
                  continue;
                }

                // valid lead
                leadSurrogate = codePoint;

                continue;
              }

              // 2 leads in a row
              if (codePoint < 0xdc00) {
                if ((units -= 3) > -1) bytes.push(0xef, 0xbf, 0xbd);
                leadSurrogate = codePoint;
                continue;
              }

              // valid surrogate pair
              codePoint = (((leadSurrogate - 0xd800) << 10) | (codePoint - 0xdc00)) + 0x10000;
            } else if (leadSurrogate) {
              // valid bmp char, but last char was a lead
              if ((units -= 3) > -1) bytes.push(0xef, 0xbf, 0xbd);
            }

            leadSurrogate = null;

            // encode utf8
            if (codePoint < 0x80) {
              if ((units -= 1) < 0) break;
              bytes.push(codePoint);
            } else if (codePoint < 0x800) {
              if ((units -= 2) < 0) break;
              bytes.push((codePoint >> 0x6) | 0xc0, (codePoint & 0x3f) | 0x80);
            } else if (codePoint < 0x10000) {
              if ((units -= 3) < 0) break;
              bytes.push(
                (codePoint >> 0xc) | 0xe0,
                ((codePoint >> 0x6) & 0x3f) | 0x80,
                (codePoint & 0x3f) | 0x80
              );
            } else if (codePoint < 0x110000) {
              if ((units -= 4) < 0) break;
              bytes.push(
                (codePoint >> 0x12) | 0xf0,
                ((codePoint >> 0xc) & 0x3f) | 0x80,
                ((codePoint >> 0x6) & 0x3f) | 0x80,
                (codePoint & 0x3f) | 0x80
              );
            } else {
              throw new Error('Invalid code point');
            }
          }

          return bytes;
        }

        function asciiToBytes(str) {
          var byteArray = [];
          for (var i = 0; i < str.length; ++i) {
            // Node's code seems to be doing this and not & 0x7F..
            byteArray.push(str.charCodeAt(i) & 0xff);
          }
          return byteArray;
        }

        function utf16leToBytes(str, units) {
          var c, hi, lo;
          var byteArray = [];
          for (var i = 0; i < str.length; ++i) {
            if ((units -= 2) < 0) break;

            c = str.charCodeAt(i);
            hi = c >> 8;
            lo = c % 256;
            byteArray.push(lo);
            byteArray.push(hi);
          }

          return byteArray;
        }

        function base64ToBytes(str) {
          return base64.toByteArray(base64clean(str));
        }

        function blitBuffer(src, dst, offset, length) {
          for (var i = 0; i < length; ++i) {
            if (i + offset >= dst.length || i >= src.length) break;
            dst[i + offset] = src[i];
          }
          return i;
        }

        function isnan(val) {
          return val !== val; // eslint-disable-line no-self-compare
        }

        /* WEBPACK VAR INJECTION */
      }.call(exports, __webpack_require__(20)));

      /***/
    },
    /* 44 */
    /***/ function (module, exports) {
      var core = (module.exports = { version: '2.4.0' });
      if (typeof __e == 'number') __e = core; // eslint-disable-line no-undef

      /***/
    },
    /* 45 */
    /***/ function (module, exports, __webpack_require__) {
      // optional / simple context binding
      var aFunction = __webpack_require__(23);
      module.exports = function (fn, that, length) {
        aFunction(fn);
        if (that === undefined) return fn;
        switch (length) {
          case 1:
            return function (a) {
              return fn.call(that, a);
            };
          case 2:
            return function (a, b) {
              return fn.call(that, a, b);
            };
          case 3:
            return function (a, b, c) {
              return fn.call(that, a, b, c);
            };
        }
        return function (/* ...args */) {
          return fn.apply(that, arguments);
        };
      };

      /***/
    },
    /* 46 */
    /***/ function (module, exports, __webpack_require__) {
      var Map = __webpack_require__(253),
        $export = __webpack_require__(0),
        shared = __webpack_require__(115)('metadata'),
        store = shared.store || (shared.store = new (__webpack_require__(256))());

      var getOrCreateMetadataMap = function (target, targetKey, create) {
        var targetMetadata = store.get(target);
        if (!targetMetadata) {
          if (!create) return undefined;
          store.set(target, (targetMetadata = new Map()));
        }
        var keyMetadata = targetMetadata.get(targetKey);
        if (!keyMetadata) {
          if (!create) return undefined;
          targetMetadata.set(targetKey, (keyMetadata = new Map()));
        }
        return keyMetadata;
      };
      var ordinaryHasOwnMetadata = function (MetadataKey, O, P) {
        var metadataMap = getOrCreateMetadataMap(O, P, false);
        return metadataMap === undefined ? false : metadataMap.has(MetadataKey);
      };
      var ordinaryGetOwnMetadata = function (MetadataKey, O, P) {
        var metadataMap = getOrCreateMetadataMap(O, P, false);
        return metadataMap === undefined ? undefined : metadataMap.get(MetadataKey);
      };
      var ordinaryDefineOwnMetadata = function (MetadataKey, MetadataValue, O, P) {
        getOrCreateMetadataMap(O, P, true).set(MetadataKey, MetadataValue);
      };
      var ordinaryOwnMetadataKeys = function (target, targetKey) {
        var metadataMap = getOrCreateMetadataMap(target, targetKey, false),
          keys = [];
        if (metadataMap)
          metadataMap.forEach(function (_, key) {
            keys.push(key);
          });
        return keys;
      };
      var toMetaKey = function (it) {
        return it === undefined || typeof it == 'symbol' ? it : String(it);
      };
      var exp = function (O) {
        $export($export.S, 'Reflect', O);
      };

      module.exports = {
        store: store,
        map: getOrCreateMetadataMap,
        has: ordinaryHasOwnMetadata,
        get: ordinaryGetOwnMetadata,
        set: ordinaryDefineOwnMetadata,
        keys: ordinaryOwnMetadataKeys,
        key: toMetaKey,
        exp: exp,
      };

      /***/
    },
    /* 47 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';

      if (__webpack_require__(13)) {
        var LIBRARY = __webpack_require__(60),
          global = __webpack_require__(6),
          fails = __webpack_require__(7),
          $export = __webpack_require__(0),
          $typed = __webpack_require__(116),
          $buffer = __webpack_require__(167),
          ctx = __webpack_require__(45),
          anInstance = __webpack_require__(59),
          propertyDesc = __webpack_require__(51),
          hide = __webpack_require__(24),
          redefineAll = __webpack_require__(64),
          toInteger = __webpack_require__(52),
          toLength = __webpack_require__(17),
          toIndex = __webpack_require__(66),
          toPrimitive = __webpack_require__(39),
          has = __webpack_require__(21),
          same = __webpack_require__(250),
          classof = __webpack_require__(88),
          isObject = __webpack_require__(9),
          toObject = __webpack_require__(19),
          isArrayIter = __webpack_require__(152),
          create = __webpack_require__(61),
          getPrototypeOf = __webpack_require__(31),
          gOPN = __webpack_require__(62).f,
          getIterFn = __webpack_require__(169),
          uid = __webpack_require__(67),
          wks = __webpack_require__(10),
          createArrayMethod = __webpack_require__(37),
          createArrayIncludes = __webpack_require__(106),
          speciesConstructor = __webpack_require__(161),
          ArrayIterators = __webpack_require__(170),
          Iterators = __webpack_require__(79),
          $iterDetect = __webpack_require__(112),
          setSpecies = __webpack_require__(65),
          arrayFill = __webpack_require__(145),
          arrayCopyWithin = __webpack_require__(230),
          $DP = __webpack_require__(14),
          $GOPD = __webpack_require__(30),
          dP = $DP.f,
          gOPD = $GOPD.f,
          RangeError = global.RangeError,
          TypeError = global.TypeError,
          Uint8Array = global.Uint8Array,
          ARRAY_BUFFER = 'ArrayBuffer',
          SHARED_BUFFER = 'Shared' + ARRAY_BUFFER,
          BYTES_PER_ELEMENT = 'BYTES_PER_ELEMENT',
          PROTOTYPE = 'prototype',
          ArrayProto = Array[PROTOTYPE],
          $ArrayBuffer = $buffer.ArrayBuffer,
          $DataView = $buffer.DataView,
          arrayForEach = createArrayMethod(0),
          arrayFilter = createArrayMethod(2),
          arraySome = createArrayMethod(3),
          arrayEvery = createArrayMethod(4),
          arrayFind = createArrayMethod(5),
          arrayFindIndex = createArrayMethod(6),
          arrayIncludes = createArrayIncludes(true),
          arrayIndexOf = createArrayIncludes(false),
          arrayValues = ArrayIterators.values,
          arrayKeys = ArrayIterators.keys,
          arrayEntries = ArrayIterators.entries,
          arrayLastIndexOf = ArrayProto.lastIndexOf,
          arrayReduce = ArrayProto.reduce,
          arrayReduceRight = ArrayProto.reduceRight,
          arrayJoin = ArrayProto.join,
          arraySort = ArrayProto.sort,
          arraySlice = ArrayProto.slice,
          arrayToString = ArrayProto.toString,
          arrayToLocaleString = ArrayProto.toLocaleString,
          ITERATOR = wks('iterator'),
          TAG = wks('toStringTag'),
          TYPED_CONSTRUCTOR = uid('typed_constructor'),
          DEF_CONSTRUCTOR = uid('def_constructor'),
          ALL_CONSTRUCTORS = $typed.CONSTR,
          TYPED_ARRAY = $typed.TYPED,
          VIEW = $typed.VIEW,
          WRONG_LENGTH = 'Wrong length!';

        var $map = createArrayMethod(1, function (O, length) {
          return allocate(speciesConstructor(O, O[DEF_CONSTRUCTOR]), length);
        });

        var LITTLE_ENDIAN = fails(function () {
          return new Uint8Array(new Uint16Array([1]).buffer)[0] === 1;
        });

        var FORCED_SET =
          !!Uint8Array &&
          !!Uint8Array[PROTOTYPE].set &&
          fails(function () {
            new Uint8Array(1).set({});
          });

        var strictToLength = function (it, SAME) {
          if (it === undefined) throw TypeError(WRONG_LENGTH);
          var number = +it,
            length = toLength(it);
          if (SAME && !same(number, length)) throw RangeError(WRONG_LENGTH);
          return length;
        };

        var toOffset = function (it, BYTES) {
          var offset = toInteger(it);
          if (offset < 0 || offset % BYTES) throw RangeError('Wrong offset!');
          return offset;
        };

        var validate = function (it) {
          if (isObject(it) && TYPED_ARRAY in it) return it;
          throw TypeError(it + ' is not a typed array!');
        };

        var allocate = function (C, length) {
          if (!(isObject(C) && TYPED_CONSTRUCTOR in C)) {
            throw TypeError('It is not a typed array constructor!');
          }
          return new C(length);
        };

        var speciesFromList = function (O, list) {
          return fromList(speciesConstructor(O, O[DEF_CONSTRUCTOR]), list);
        };

        var fromList = function (C, list) {
          var index = 0,
            length = list.length,
            result = allocate(C, length);
          while (length > index) result[index] = list[index++];
          return result;
        };

        var addGetter = function (it, key, internal) {
          dP(it, key, {
            get: function () {
              return this._d[internal];
            },
          });
        };

        var $from = function from(source /*, mapfn, thisArg */) {
          var O = toObject(source),
            aLen = arguments.length,
            mapfn = aLen > 1 ? arguments[1] : undefined,
            mapping = mapfn !== undefined,
            iterFn = getIterFn(O),
            i,
            length,
            values,
            result,
            step,
            iterator;
          if (iterFn != undefined && !isArrayIter(iterFn)) {
            for (
              iterator = iterFn.call(O), values = [], i = 0;
              !(step = iterator.next()).done;
              i++
            ) {
              values.push(step.value);
            }
            O = values;
          }
          if (mapping && aLen > 2) mapfn = ctx(mapfn, arguments[2], 2);
          for (
            i = 0, length = toLength(O.length), result = allocate(this, length);
            length > i;
            i++
          ) {
            result[i] = mapping ? mapfn(O[i], i) : O[i];
          }
          return result;
        };

        var $of = function of(/*...items*/) {
          var index = 0,
            length = arguments.length,
            result = allocate(this, length);
          while (length > index) result[index] = arguments[index++];
          return result;
        };

        // iOS Safari 6.x fails here
        var TO_LOCALE_BUG =
          !!Uint8Array &&
          fails(function () {
            arrayToLocaleString.call(new Uint8Array(1));
          });

        var $toLocaleString = function toLocaleString() {
          return arrayToLocaleString.apply(
            TO_LOCALE_BUG ? arraySlice.call(validate(this)) : validate(this),
            arguments
          );
        };

        var proto = {
          copyWithin: function copyWithin(target, start /*, end */) {
            return arrayCopyWithin.call(
              validate(this),
              target,
              start,
              arguments.length > 2 ? arguments[2] : undefined
            );
          },
          every: function every(callbackfn /*, thisArg */) {
            return arrayEvery(
              validate(this),
              callbackfn,
              arguments.length > 1 ? arguments[1] : undefined
            );
          },
          fill: function fill(value /*, start, end */) {
            // eslint-disable-line no-unused-vars
            return arrayFill.apply(validate(this), arguments);
          },
          filter: function filter(callbackfn /*, thisArg */) {
            return speciesFromList(
              this,
              arrayFilter(
                validate(this),
                callbackfn,
                arguments.length > 1 ? arguments[1] : undefined
              )
            );
          },
          find: function find(predicate /*, thisArg */) {
            return arrayFind(
              validate(this),
              predicate,
              arguments.length > 1 ? arguments[1] : undefined
            );
          },
          findIndex: function findIndex(predicate /*, thisArg */) {
            return arrayFindIndex(
              validate(this),
              predicate,
              arguments.length > 1 ? arguments[1] : undefined
            );
          },
          forEach: function forEach(callbackfn /*, thisArg */) {
            arrayForEach(
              validate(this),
              callbackfn,
              arguments.length > 1 ? arguments[1] : undefined
            );
          },
          indexOf: function indexOf(searchElement /*, fromIndex */) {
            return arrayIndexOf(
              validate(this),
              searchElement,
              arguments.length > 1 ? arguments[1] : undefined
            );
          },
          includes: function includes(searchElement /*, fromIndex */) {
            return arrayIncludes(
              validate(this),
              searchElement,
              arguments.length > 1 ? arguments[1] : undefined
            );
          },
          join: function join(separator) {
            // eslint-disable-line no-unused-vars
            return arrayJoin.apply(validate(this), arguments);
          },
          lastIndexOf: function lastIndexOf(searchElement /*, fromIndex */) {
            // eslint-disable-line no-unused-vars
            return arrayLastIndexOf.apply(validate(this), arguments);
          },
          map: function map(mapfn /*, thisArg */) {
            return $map(validate(this), mapfn, arguments.length > 1 ? arguments[1] : undefined);
          },
          reduce: function reduce(callbackfn /*, initialValue */) {
            // eslint-disable-line no-unused-vars
            return arrayReduce.apply(validate(this), arguments);
          },
          reduceRight: function reduceRight(callbackfn /*, initialValue */) {
            // eslint-disable-line no-unused-vars
            return arrayReduceRight.apply(validate(this), arguments);
          },
          reverse: function reverse() {
            var that = this,
              length = validate(that).length,
              middle = Math.floor(length / 2),
              index = 0,
              value;
            while (index < middle) {
              value = that[index];
              that[index++] = that[--length];
              that[length] = value;
            }
            return that;
          },
          some: function some(callbackfn /*, thisArg */) {
            return arraySome(
              validate(this),
              callbackfn,
              arguments.length > 1 ? arguments[1] : undefined
            );
          },
          sort: function sort(comparefn) {
            return arraySort.call(validate(this), comparefn);
          },
          subarray: function subarray(begin, end) {
            var O = validate(this),
              length = O.length,
              $begin = toIndex(begin, length);
            return new (speciesConstructor(O, O[DEF_CONSTRUCTOR]))(
              O.buffer,
              O.byteOffset + $begin * O.BYTES_PER_ELEMENT,
              toLength((end === undefined ? length : toIndex(end, length)) - $begin)
            );
          },
        };

        var $slice = function slice(start, end) {
          return speciesFromList(this, arraySlice.call(validate(this), start, end));
        };

        var $set = function set(arrayLike /*, offset */) {
          validate(this);
          var offset = toOffset(arguments[1], 1),
            length = this.length,
            src = toObject(arrayLike),
            len = toLength(src.length),
            index = 0;
          if (len + offset > length) throw RangeError(WRONG_LENGTH);
          while (index < len) this[offset + index] = src[index++];
        };

        var $iterators = {
          entries: function entries() {
            return arrayEntries.call(validate(this));
          },
          keys: function keys() {
            return arrayKeys.call(validate(this));
          },
          values: function values() {
            return arrayValues.call(validate(this));
          },
        };

        var isTAIndex = function (target, key) {
          return (
            isObject(target) &&
            target[TYPED_ARRAY] &&
            typeof key != 'symbol' &&
            key in target &&
            String(+key) == String(key)
          );
        };
        var $getDesc = function getOwnPropertyDescriptor(target, key) {
          return isTAIndex(target, (key = toPrimitive(key, true)))
            ? propertyDesc(2, target[key])
            : gOPD(target, key);
        };
        var $setDesc = function defineProperty(target, key, desc) {
          if (
            isTAIndex(target, (key = toPrimitive(key, true))) &&
            isObject(desc) &&
            has(desc, 'value') &&
            !has(desc, 'get') &&
            !has(desc, 'set') &&
            // TODO: add validation descriptor w/o calling accessors
            !desc.configurable &&
            (!has(desc, 'writable') || desc.writable) &&
            (!has(desc, 'enumerable') || desc.enumerable)
          ) {
            target[key] = desc.value;
            return target;
          } else return dP(target, key, desc);
        };

        if (!ALL_CONSTRUCTORS) {
          $GOPD.f = $getDesc;
          $DP.f = $setDesc;
        }

        $export($export.S + $export.F * !ALL_CONSTRUCTORS, 'Object', {
          getOwnPropertyDescriptor: $getDesc,
          defineProperty: $setDesc,
        });

        if (
          fails(function () {
            arrayToString.call({});
          })
        ) {
          arrayToString = arrayToLocaleString = function toString() {
            return arrayJoin.call(this);
          };
        }

        var $TypedArrayPrototype$ = redefineAll({}, proto);
        redefineAll($TypedArrayPrototype$, $iterators);
        hide($TypedArrayPrototype$, ITERATOR, $iterators.values);
        redefineAll($TypedArrayPrototype$, {
          slice: $slice,
          set: $set,
          constructor: function () {
            /* noop */
          },
          toString: arrayToString,
          toLocaleString: $toLocaleString,
        });
        addGetter($TypedArrayPrototype$, 'buffer', 'b');
        addGetter($TypedArrayPrototype$, 'byteOffset', 'o');
        addGetter($TypedArrayPrototype$, 'byteLength', 'l');
        addGetter($TypedArrayPrototype$, 'length', 'e');
        dP($TypedArrayPrototype$, TAG, {
          get: function () {
            return this[TYPED_ARRAY];
          },
        });

        module.exports = function (KEY, BYTES, wrapper, CLAMPED) {
          CLAMPED = !!CLAMPED;
          var NAME = KEY + (CLAMPED ? 'Clamped' : '') + 'Array',
            ISNT_UINT8 = NAME != 'Uint8Array',
            GETTER = 'get' + KEY,
            SETTER = 'set' + KEY,
            TypedArray = global[NAME],
            Base = TypedArray || {},
            TAC = TypedArray && getPrototypeOf(TypedArray),
            FORCED = !TypedArray || !$typed.ABV,
            O = {},
            TypedArrayPrototype = TypedArray && TypedArray[PROTOTYPE];
          var getter = function (that, index) {
            var data = that._d;
            return data.v[GETTER](index * BYTES + data.o, LITTLE_ENDIAN);
          };
          var setter = function (that, index, value) {
            var data = that._d;
            if (CLAMPED)
              value = (value = Math.round(value)) < 0 ? 0 : value > 0xff ? 0xff : value & 0xff;
            data.v[SETTER](index * BYTES + data.o, value, LITTLE_ENDIAN);
          };
          var addElement = function (that, index) {
            dP(that, index, {
              get: function () {
                return getter(this, index);
              },
              set: function (value) {
                return setter(this, index, value);
              },
              enumerable: true,
            });
          };
          if (FORCED) {
            TypedArray = wrapper(function (that, data, $offset, $length) {
              anInstance(that, TypedArray, NAME, '_d');
              var index = 0,
                offset = 0,
                buffer,
                byteLength,
                length,
                klass;
              if (!isObject(data)) {
                length = strictToLength(data, true);
                byteLength = length * BYTES;
                buffer = new $ArrayBuffer(byteLength);
              } else if (
                data instanceof $ArrayBuffer ||
                (klass = classof(data)) == ARRAY_BUFFER ||
                klass == SHARED_BUFFER
              ) {
                buffer = data;
                offset = toOffset($offset, BYTES);
                var $len = data.byteLength;
                if ($length === undefined) {
                  if ($len % BYTES) throw RangeError(WRONG_LENGTH);
                  byteLength = $len - offset;
                  if (byteLength < 0) throw RangeError(WRONG_LENGTH);
                } else {
                  byteLength = toLength($length) * BYTES;
                  if (byteLength + offset > $len) throw RangeError(WRONG_LENGTH);
                }
                length = byteLength / BYTES;
              } else if (TYPED_ARRAY in data) {
                return fromList(TypedArray, data);
              } else {
                return $from.call(TypedArray, data);
              }
              hide(that, '_d', {
                b: buffer,
                o: offset,
                l: byteLength,
                e: length,
                v: new $DataView(buffer),
              });
              while (index < length) addElement(that, index++);
            });
            TypedArrayPrototype = TypedArray[PROTOTYPE] = create($TypedArrayPrototype$);
            hide(TypedArrayPrototype, 'constructor', TypedArray);
          } else if (
            !$iterDetect(function (iter) {
              // V8 works with iterators, but fails in many other cases
              // https://code.google.com/p/v8/issues/detail?id=4552
              new TypedArray(null); // eslint-disable-line no-new
              new TypedArray(iter); // eslint-disable-line no-new
            }, true)
          ) {
            TypedArray = wrapper(function (that, data, $offset, $length) {
              anInstance(that, TypedArray, NAME);
              var klass;
              // `ws` module bug, temporarily remove validation length for Uint8Array
              // https://github.com/websockets/ws/pull/645
              if (!isObject(data)) return new Base(strictToLength(data, ISNT_UINT8));
              if (
                data instanceof $ArrayBuffer ||
                (klass = classof(data)) == ARRAY_BUFFER ||
                klass == SHARED_BUFFER
              ) {
                return $length !== undefined
                  ? new Base(data, toOffset($offset, BYTES), $length)
                  : $offset !== undefined
                  ? new Base(data, toOffset($offset, BYTES))
                  : new Base(data);
              }
              if (TYPED_ARRAY in data) return fromList(TypedArray, data);
              return $from.call(TypedArray, data);
            });
            arrayForEach(
              TAC !== Function.prototype ? gOPN(Base).concat(gOPN(TAC)) : gOPN(Base),
              function (key) {
                if (!(key in TypedArray)) hide(TypedArray, key, Base[key]);
              }
            );
            TypedArray[PROTOTYPE] = TypedArrayPrototype;
            if (!LIBRARY) TypedArrayPrototype.constructor = TypedArray;
          }
          var $nativeIterator = TypedArrayPrototype[ITERATOR],
            CORRECT_ITER_NAME =
              !!$nativeIterator &&
              ($nativeIterator.name == 'values' || $nativeIterator.name == undefined),
            $iterator = $iterators.values;
          hide(TypedArray, TYPED_CONSTRUCTOR, true);
          hide(TypedArrayPrototype, TYPED_ARRAY, NAME);
          hide(TypedArrayPrototype, VIEW, true);
          hide(TypedArrayPrototype, DEF_CONSTRUCTOR, TypedArray);

          if (CLAMPED ? new TypedArray(1)[TAG] != NAME : !(TAG in TypedArrayPrototype)) {
            dP(TypedArrayPrototype, TAG, {
              get: function () {
                return NAME;
              },
            });
          }

          O[NAME] = TypedArray;

          $export($export.G + $export.W + $export.F * (TypedArray != Base), O);

          $export($export.S, NAME, {
            BYTES_PER_ELEMENT: BYTES,
            from: $from,
            of: $of,
          });

          if (!(BYTES_PER_ELEMENT in TypedArrayPrototype))
            hide(TypedArrayPrototype, BYTES_PER_ELEMENT, BYTES);

          $export($export.P, NAME, proto);

          setSpecies(NAME);

          $export($export.P + $export.F * FORCED_SET, NAME, { set: $set });

          $export($export.P + $export.F * !CORRECT_ITER_NAME, NAME, $iterators);

          $export($export.P + $export.F * (TypedArrayPrototype.toString != arrayToString), NAME, {
            toString: arrayToString,
          });

          $export(
            $export.P +
              $export.F *
                fails(function () {
                  new TypedArray(1).slice();
                }),
            NAME,
            { slice: $slice }
          );

          $export(
            $export.P +
              $export.F *
                (fails(function () {
                  return [1, 2].toLocaleString() != new TypedArray([1, 2]).toLocaleString();
                }) ||
                  !fails(function () {
                    TypedArrayPrototype.toLocaleString.call([1, 2]);
                  })),
            NAME,
            { toLocaleString: $toLocaleString }
          );

          Iterators[NAME] = CORRECT_ITER_NAME ? $nativeIterator : $iterator;
          if (!LIBRARY && !CORRECT_ITER_NAME) hide(TypedArrayPrototype, ITERATOR, $iterator);
        };
      } else
        module.exports = function () {
          /* empty */
        };

      /***/
    },
    /* 48 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';
      /* WEBPACK VAR INJECTION */ (function (process) {
        /**
         * Copyright 2013-present, Facebook, Inc.
         * All rights reserved.
         *
         * This source code is licensed under the BSD-style license found in the
         * LICENSE file in the root directory of this source tree. An additional grant
         * of patent rights can be found in the PATENTS file in the same directory.
         *
         */

        var _assign = __webpack_require__(12);

        var PooledClass = __webpack_require__(68);

        var emptyFunction = __webpack_require__(28);
        var warning = __webpack_require__(3);

        var didWarnForAddedNewProperty = false;
        var isProxySupported = typeof Proxy === 'function';

        var shouldBeReleasedProperties = [
          'dispatchConfig',
          '_targetInst',
          'nativeEvent',
          'isDefaultPrevented',
          'isPropagationStopped',
          '_dispatchListeners',
          '_dispatchInstances',
        ];

        /**
         * @interface Event
         * @see http://www.w3.org/TR/DOM-Level-3-Events/
         */
        var EventInterface = {
          type: null,
          target: null,
          // currentTarget is set when dispatching; no use in copying it here
          currentTarget: emptyFunction.thatReturnsNull,
          eventPhase: null,
          bubbles: null,
          cancelable: null,
          timeStamp: function (event) {
            return event.timeStamp || Date.now();
          },
          defaultPrevented: null,
          isTrusted: null,
        };

        /**
         * Synthetic events are dispatched by event plugins, typically in response to a
         * top-level event delegation handler.
         *
         * These systems should generally use pooling to reduce the frequency of garbage
         * collection. The system should check `isPersistent` to determine whether the
         * event should be released into the pool after being dispatched. Users that
         * need a persisted event should invoke `persist`.
         *
         * Synthetic events (and subclasses) implement the DOM Level 3 Events API by
         * normalizing browser quirks. Subclasses do not necessarily have to implement a
         * DOM interface; custom application-specific events can also subclass this.
         *
         * @param {object} dispatchConfig Configuration used to dispatch this event.
         * @param {*} targetInst Marker identifying the event target.
         * @param {object} nativeEvent Native browser event.
         * @param {DOMEventTarget} nativeEventTarget Target node.
         */
        function SyntheticEvent(dispatchConfig, targetInst, nativeEvent, nativeEventTarget) {
          if (process.env.NODE_ENV !== 'production') {
            // these have a getter/setter for warnings
            delete this.nativeEvent;
            delete this.preventDefault;
            delete this.stopPropagation;
          }

          this.dispatchConfig = dispatchConfig;
          this._targetInst = targetInst;
          this.nativeEvent = nativeEvent;

          var Interface = this.constructor.Interface;
          for (var propName in Interface) {
            if (!Interface.hasOwnProperty(propName)) {
              continue;
            }
            if (process.env.NODE_ENV !== 'production') {
              delete this[propName]; // this has a getter/setter for warnings
            }
            var normalize = Interface[propName];
            if (normalize) {
              this[propName] = normalize(nativeEvent);
            } else {
              if (propName === 'target') {
                this.target = nativeEventTarget;
              } else {
                this[propName] = nativeEvent[propName];
              }
            }
          }

          var defaultPrevented =
            nativeEvent.defaultPrevented != null
              ? nativeEvent.defaultPrevented
              : nativeEvent.returnValue === false;
          if (defaultPrevented) {
            this.isDefaultPrevented = emptyFunction.thatReturnsTrue;
          } else {
            this.isDefaultPrevented = emptyFunction.thatReturnsFalse;
          }
          this.isPropagationStopped = emptyFunction.thatReturnsFalse;
          return this;
        }

        _assign(SyntheticEvent.prototype, {
          preventDefault: function () {
            this.defaultPrevented = true;
            var event = this.nativeEvent;
            if (!event) {
              return;
            }

            if (event.preventDefault) {
              event.preventDefault();
            } else if (typeof event.returnValue !== 'unknown') {
              // eslint-disable-line valid-typeof
              event.returnValue = false;
            }
            this.isDefaultPrevented = emptyFunction.thatReturnsTrue;
          },

          stopPropagation: function () {
            var event = this.nativeEvent;
            if (!event) {
              return;
            }

            if (event.stopPropagation) {
              event.stopPropagation();
            } else if (typeof event.cancelBubble !== 'unknown') {
              // eslint-disable-line valid-typeof
              // The ChangeEventPlugin registers a "propertychange" event for
              // IE. This event does not support bubbling or cancelling, and
              // any references to cancelBubble throw "Member not found".  A
              // typeof check of "unknown" circumvents this issue (and is also
              // IE specific).
              event.cancelBubble = true;
            }

            this.isPropagationStopped = emptyFunction.thatReturnsTrue;
          },

          /**
           * We release all dispatched `SyntheticEvent`s after each event loop, adding
           * them back into the pool. This allows a way to hold onto a reference that
           * won't be added back into the pool.
           */
          persist: function () {
            this.isPersistent = emptyFunction.thatReturnsTrue;
          },

          /**
           * Checks if this event should be released back into the pool.
           *
           * @return {boolean} True if this should not be released, false otherwise.
           */
          isPersistent: emptyFunction.thatReturnsFalse,

          /**
           * `PooledClass` looks for `destructor` on each instance it releases.
           */
          destructor: function () {
            var Interface = this.constructor.Interface;
            for (var propName in Interface) {
              if (process.env.NODE_ENV !== 'production') {
                Object.defineProperty(
                  this,
                  propName,
                  getPooledWarningPropertyDefinition(propName, Interface[propName])
                );
              } else {
                this[propName] = null;
              }
            }
            for (var i = 0; i < shouldBeReleasedProperties.length; i++) {
              this[shouldBeReleasedProperties[i]] = null;
            }
            if (process.env.NODE_ENV !== 'production') {
              Object.defineProperty(
                this,
                'nativeEvent',
                getPooledWarningPropertyDefinition('nativeEvent', null)
              );
              Object.defineProperty(
                this,
                'preventDefault',
                getPooledWarningPropertyDefinition('preventDefault', emptyFunction)
              );
              Object.defineProperty(
                this,
                'stopPropagation',
                getPooledWarningPropertyDefinition('stopPropagation', emptyFunction)
              );
            }
          },
        });

        SyntheticEvent.Interface = EventInterface;

        if (process.env.NODE_ENV !== 'production') {
          if (isProxySupported) {
            /*eslint-disable no-func-assign */
            SyntheticEvent = new Proxy(SyntheticEvent, {
              construct: function (target, args) {
                return this.apply(target, Object.create(target.prototype), args);
              },
              apply: function (constructor, that, args) {
                return new Proxy(constructor.apply(that, args), {
                  set: function (target, prop, value) {
                    if (
                      prop !== 'isPersistent' &&
                      !target.constructor.Interface.hasOwnProperty(prop) &&
                      shouldBeReleasedProperties.indexOf(prop) === -1
                    ) {
                      process.env.NODE_ENV !== 'production'
                        ? warning(
                            didWarnForAddedNewProperty || target.isPersistent(),
                            "This synthetic event is reused for performance reasons. If you're " +
                              "seeing this, you're adding a new property in the synthetic event object. " +
                              'The property is never released. See ' +
                              'https://fb.me/react-event-pooling for more information.'
                          )
                        : void 0;
                      didWarnForAddedNewProperty = true;
                    }
                    target[prop] = value;
                    return true;
                  },
                });
              },
            });
            /*eslint-enable no-func-assign */
          }
        }
        /**
         * Helper to reduce boilerplate when creating subclasses.
         *
         * @param {function} Class
         * @param {?object} Interface
         */
        SyntheticEvent.augmentClass = function (Class, Interface) {
          var Super = this;

          var E = function () {};
          E.prototype = Super.prototype;
          var prototype = new E();

          _assign(prototype, Class.prototype);
          Class.prototype = prototype;
          Class.prototype.constructor = Class;

          Class.Interface = _assign({}, Super.Interface, Interface);
          Class.augmentClass = Super.augmentClass;

          PooledClass.addPoolingTo(Class, PooledClass.fourArgumentPooler);
        };

        PooledClass.addPoolingTo(SyntheticEvent, PooledClass.fourArgumentPooler);

        module.exports = SyntheticEvent;

        /**
         * Helper to nullify syntheticEvent instance properties when destructing
         *
         * @param {object} SyntheticEvent
         * @param {String} propName
         * @return {object} defineProperty object
         */
        function getPooledWarningPropertyDefinition(propName, getVal) {
          var isFunction = typeof getVal === 'function';
          return {
            configurable: true,
            set: set,
            get: get,
          };

          function set(val) {
            var action = isFunction ? 'setting the method' : 'setting the property';
            warn(action, 'This is effectively a no-op');
            return val;
          }

          function get() {
            var action = isFunction ? 'accessing the method' : 'accessing the property';
            var result = isFunction ? 'This is a no-op function' : 'This is set to null';
            warn(action, result);
            return getVal;
          }

          function warn(action, result) {
            var warningCondition = false;
            process.env.NODE_ENV !== 'production'
              ? warning(
                  warningCondition,
                  "This synthetic event is reused for performance reasons. If you're seeing this, " +
                    "you're %s `%s` on a released/nullified synthetic event. %s. " +
                    'If you must keep the original synthetic event around, use event.persist(). ' +
                    'See https://fb.me/react-event-pooling for more information.',
                  action,
                  propName,
                  result
                )
              : void 0;
          }
        }
        /* WEBPACK VAR INJECTION */
      }.call(exports, __webpack_require__(1)));

      /***/
    },
    /* 49 */
    /***/ function (module, exports) {
      // https://github.com/zloirock/core-js/issues/86#issuecomment-115759028
      var global = (module.exports =
        typeof window != 'undefined' && window.Math == Math
          ? window
          : typeof self != 'undefined' && self.Math == Math
          ? self
          : Function('return this')());
      if (typeof __g == 'number') __g = global; // eslint-disable-line no-undef

      /***/
    },
    /* 50 */
    /***/ function (module, exports, __webpack_require__) {
      var META = __webpack_require__(67)('meta'),
        isObject = __webpack_require__(9),
        has = __webpack_require__(21),
        setDesc = __webpack_require__(14).f,
        id = 0;
      var isExtensible =
        Object.isExtensible ||
        function () {
          return true;
        };
      var FREEZE = !__webpack_require__(7)(function () {
        return isExtensible(Object.preventExtensions({}));
      });
      var setMeta = function (it) {
        setDesc(it, META, {
          value: {
            i: 'O' + ++id, // object ID
            w: {}, // weak collections IDs
          },
        });
      };
      var fastKey = function (it, create) {
        // return primitive with prefix
        if (!isObject(it))
          return typeof it == 'symbol' ? it : (typeof it == 'string' ? 'S' : 'P') + it;
        if (!has(it, META)) {
          // can't set metadata to uncaught frozen object
          if (!isExtensible(it)) return 'F';
          // not necessary to add metadata
          if (!create) return 'E';
          // add missing metadata
          setMeta(it);
          // return object ID
        }
        return it[META].i;
      };
      var getWeak = function (it, create) {
        if (!has(it, META)) {
          // can't set metadata to uncaught frozen object
          if (!isExtensible(it)) return true;
          // not necessary to add metadata
          if (!create) return false;
          // add missing metadata
          setMeta(it);
          // return hash weak collections IDs
        }
        return it[META].w;
      };
      // add metadata on freeze-family methods calling
      var onFreeze = function (it) {
        if (FREEZE && meta.NEED && isExtensible(it) && !has(it, META)) setMeta(it);
        return it;
      };
      var meta = (module.exports = {
        KEY: META,
        NEED: false,
        fastKey: fastKey,
        getWeak: getWeak,
        onFreeze: onFreeze,
      });

      /***/
    },
    /* 51 */
    /***/ function (module, exports) {
      module.exports = function (bitmap, value) {
        return {
          enumerable: !(bitmap & 1),
          configurable: !(bitmap & 2),
          writable: !(bitmap & 4),
          value: value,
        };
      };

      /***/
    },
    /* 52 */
    /***/ function (module, exports) {
      // 7.1.4 ToInteger
      var ceil = Math.ceil,
        floor = Math.floor;
      module.exports = function (it) {
        return isNaN((it = +it)) ? 0 : (it > 0 ? floor : ceil)(it);
      };

      /***/
    },
    /* 53 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';
      /* WEBPACK VAR INJECTION */ (function (process) {
        /**
         * Copyright 2013-present, Facebook, Inc.
         * All rights reserved.
         *
         * This source code is licensed under the BSD-style license found in the
         * LICENSE file in the root directory of this source tree. An additional grant
         * of patent rights can be found in the PATENTS file in the same directory.
         *
         */

        var _prodInvariant = __webpack_require__(8);

        var invariant = __webpack_require__(2);

        function checkMask(value, bitmask) {
          return (value & bitmask) === bitmask;
        }

        var DOMPropertyInjection = {
          /**
           * Mapping from normalized, camelcased property names to a configuration that
           * specifies how the associated DOM property should be accessed or rendered.
           */
          MUST_USE_PROPERTY: 0x1,
          HAS_BOOLEAN_VALUE: 0x4,
          HAS_NUMERIC_VALUE: 0x8,
          HAS_POSITIVE_NUMERIC_VALUE: 0x10 | 0x8,
          HAS_OVERLOADED_BOOLEAN_VALUE: 0x20,

          /**
           * Inject some specialized knowledge about the DOM. This takes a config object
           * with the following properties:
           *
           * isCustomAttribute: function that given an attribute name will return true
           * if it can be inserted into the DOM verbatim. Useful for data-* or aria-*
           * attributes where it's impossible to enumerate all of the possible
           * attribute names,
           *
           * Properties: object mapping DOM property name to one of the
           * DOMPropertyInjection constants or null. If your attribute isn't in here,
           * it won't get written to the DOM.
           *
           * DOMAttributeNames: object mapping React attribute name to the DOM
           * attribute name. Attribute names not specified use the **lowercase**
           * normalized name.
           *
           * DOMAttributeNamespaces: object mapping React attribute name to the DOM
           * attribute namespace URL. (Attribute names not specified use no namespace.)
           *
           * DOMPropertyNames: similar to DOMAttributeNames but for DOM properties.
           * Property names not specified use the normalized name.
           *
           * DOMMutationMethods: Properties that require special mutation methods. If
           * `value` is undefined, the mutation method should unset the property.
           *
           * @param {object} domPropertyConfig the config as described above.
           */
          injectDOMPropertyConfig: function (domPropertyConfig) {
            var Injection = DOMPropertyInjection;
            var Properties = domPropertyConfig.Properties || {};
            var DOMAttributeNamespaces = domPropertyConfig.DOMAttributeNamespaces || {};
            var DOMAttributeNames = domPropertyConfig.DOMAttributeNames || {};
            var DOMPropertyNames = domPropertyConfig.DOMPropertyNames || {};
            var DOMMutationMethods = domPropertyConfig.DOMMutationMethods || {};

            if (domPropertyConfig.isCustomAttribute) {
              DOMProperty._isCustomAttributeFunctions.push(domPropertyConfig.isCustomAttribute);
            }

            for (var propName in Properties) {
              !!DOMProperty.properties.hasOwnProperty(propName)
                ? process.env.NODE_ENV !== 'production'
                  ? invariant(
                      false,
                      "injectDOMPropertyConfig(...): You're trying to inject DOM property '%s' which has already been injected. You may be accidentally injecting the same DOM property config twice, or you may be injecting two configs that have conflicting property names.",
                      propName
                    )
                  : _prodInvariant('48', propName)
                : void 0;

              var lowerCased = propName.toLowerCase();
              var propConfig = Properties[propName];

              var propertyInfo = {
                attributeName: lowerCased,
                attributeNamespace: null,
                propertyName: propName,
                mutationMethod: null,

                mustUseProperty: checkMask(propConfig, Injection.MUST_USE_PROPERTY),
                hasBooleanValue: checkMask(propConfig, Injection.HAS_BOOLEAN_VALUE),
                hasNumericValue: checkMask(propConfig, Injection.HAS_NUMERIC_VALUE),
                hasPositiveNumericValue: checkMask(
                  propConfig,
                  Injection.HAS_POSITIVE_NUMERIC_VALUE
                ),
                hasOverloadedBooleanValue: checkMask(
                  propConfig,
                  Injection.HAS_OVERLOADED_BOOLEAN_VALUE
                ),
              };
              !(
                propertyInfo.hasBooleanValue +
                  propertyInfo.hasNumericValue +
                  propertyInfo.hasOverloadedBooleanValue <=
                1
              )
                ? process.env.NODE_ENV !== 'production'
                  ? invariant(
                      false,
                      'DOMProperty: Value can be one of boolean, overloaded boolean, or numeric value, but not a combination: %s',
                      propName
                    )
                  : _prodInvariant('50', propName)
                : void 0;

              if (process.env.NODE_ENV !== 'production') {
                DOMProperty.getPossibleStandardName[lowerCased] = propName;
              }

              if (DOMAttributeNames.hasOwnProperty(propName)) {
                var attributeName = DOMAttributeNames[propName];
                propertyInfo.attributeName = attributeName;
                if (process.env.NODE_ENV !== 'production') {
                  DOMProperty.getPossibleStandardName[attributeName] = propName;
                }
              }

              if (DOMAttributeNamespaces.hasOwnProperty(propName)) {
                propertyInfo.attributeNamespace = DOMAttributeNamespaces[propName];
              }

              if (DOMPropertyNames.hasOwnProperty(propName)) {
                propertyInfo.propertyName = DOMPropertyNames[propName];
              }

              if (DOMMutationMethods.hasOwnProperty(propName)) {
                propertyInfo.mutationMethod = DOMMutationMethods[propName];
              }

              DOMProperty.properties[propName] = propertyInfo;
            }
          },
        };

        /* eslint-disable max-len */
        var ATTRIBUTE_NAME_START_CHAR =
          ':A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD';
        /* eslint-enable max-len */

        /**
         * DOMProperty exports lookup objects that can be used like functions:
         *
         *   > DOMProperty.isValid['id']
         *   true
         *   > DOMProperty.isValid['foobar']
         *   undefined
         *
         * Although this may be confusing, it performs better in general.
         *
         * @see http://jsperf.com/key-exists
         * @see http://jsperf.com/key-missing
         */
        var DOMProperty = {
          ID_ATTRIBUTE_NAME: 'data-reactid',
          ROOT_ATTRIBUTE_NAME: 'data-reactroot',

          ATTRIBUTE_NAME_START_CHAR: ATTRIBUTE_NAME_START_CHAR,
          ATTRIBUTE_NAME_CHAR:
            ATTRIBUTE_NAME_START_CHAR + '\\-.0-9\\u00B7\\u0300-\\u036F\\u203F-\\u2040',

          /**
           * Map from property "standard name" to an object with info about how to set
           * the property in the DOM. Each object contains:
           *
           * attributeName:
           *   Used when rendering markup or with `*Attribute()`.
           * attributeNamespace
           * propertyName:
           *   Used on DOM node instances. (This includes properties that mutate due to
           *   external factors.)
           * mutationMethod:
           *   If non-null, used instead of the property or `setAttribute()` after
           *   initial render.
           * mustUseProperty:
           *   Whether the property must be accessed and mutated as an object property.
           * hasBooleanValue:
           *   Whether the property should be removed when set to a falsey value.
           * hasNumericValue:
           *   Whether the property must be numeric or parse as a numeric and should be
           *   removed when set to a falsey value.
           * hasPositiveNumericValue:
           *   Whether the property must be positive numeric or parse as a positive
           *   numeric and should be removed when set to a falsey value.
           * hasOverloadedBooleanValue:
           *   Whether the property can be used as a flag as well as with a value.
           *   Removed when strictly equal to false; present without a value when
           *   strictly equal to true; present with a value otherwise.
           */
          properties: {},

          /**
           * Mapping from lowercase property names to the properly cased version, used
           * to warn in the case of missing properties. Available only in __DEV__.
           *
           * autofocus is predefined, because adding it to the property whitelist
           * causes unintended side effects.
           *
           * @type {Object}
           */
          getPossibleStandardName:
            process.env.NODE_ENV !== 'production' ? { autofocus: 'autoFocus' } : null,

          /**
           * All of the isCustomAttribute() functions that have been injected.
           */
          _isCustomAttributeFunctions: [],

          /**
           * Checks whether a property name is a custom attribute.
           * @method
           */
          isCustomAttribute: function (attributeName) {
            for (var i = 0; i < DOMProperty._isCustomAttributeFunctions.length; i++) {
              var isCustomAttributeFn = DOMProperty._isCustomAttributeFunctions[i];
              if (isCustomAttributeFn(attributeName)) {
                return true;
              }
            }
            return false;
          },

          injection: DOMPropertyInjection,
        };

        module.exports = DOMProperty;
        /* WEBPACK VAR INJECTION */
      }.call(exports, __webpack_require__(1)));

      /***/
    },
    /* 54 */
    /***/ function (module, exports, __webpack_require__) {
      // Thank's IE8 for his funny defineProperty
      module.exports = !__webpack_require__(73)(function () {
        return (
          Object.defineProperty({}, 'a', {
            get: function () {
              return 7;
            },
          }).a != 7
        );
      });

      /***/
    },
    /* 55 */
    /***/ function (module, exports, __webpack_require__) {
      var global = __webpack_require__(49),
        core = __webpack_require__(33),
        ctx = __webpack_require__(218),
        hide = __webpack_require__(74),
        PROTOTYPE = 'prototype';

      var $export = function (type, name, source) {
        var IS_FORCED = type & $export.F,
          IS_GLOBAL = type & $export.G,
          IS_STATIC = type & $export.S,
          IS_PROTO = type & $export.P,
          IS_BIND = type & $export.B,
          IS_WRAP = type & $export.W,
          exports = IS_GLOBAL ? core : core[name] || (core[name] = {}),
          expProto = exports[PROTOTYPE],
          target = IS_GLOBAL ? global : IS_STATIC ? global[name] : (global[name] || {})[PROTOTYPE],
          key,
          own,
          out;
        if (IS_GLOBAL) source = name;
        for (key in source) {
          // contains in native
          own = !IS_FORCED && target && target[key] !== undefined;
          if (own && key in exports) continue;
          // export native or passed
          out = own ? target[key] : source[key];
          // prevent global pollution for namespaces
          exports[key] =
            IS_GLOBAL && typeof target[key] != 'function'
              ? source[key]
              : // bind timers to global for call from export context
              IS_BIND && own
              ? ctx(out, global)
              : // wrap global constructors for prevent change them in library
              IS_WRAP && target[key] == out
              ? (function (C) {
                  var F = function (a, b, c) {
                    if (this instanceof C) {
                      switch (arguments.length) {
                        case 0:
                          return new C();
                        case 1:
                          return new C(a);
                        case 2:
                          return new C(a, b);
                      }
                      return new C(a, b, c);
                    }
                    return C.apply(this, arguments);
                  };
                  F[PROTOTYPE] = C[PROTOTYPE];
                  return F;
                  // make static versions for prototype methods
                })(out)
              : IS_PROTO && typeof out == 'function'
              ? ctx(Function.call, out)
              : out;
          // export proto methods to core.%CONSTRUCTOR%.methods.%NAME%
          if (IS_PROTO) {
            (exports.virtual || (exports.virtual = {}))[key] = out;
            // export proto methods to core.%CONSTRUCTOR%.prototype.%NAME%
            if (type & $export.R && expProto && !expProto[key]) hide(expProto, key, out);
          }
        }
      };
      // type bitmap
      $export.F = 1; // forced
      $export.G = 2; // global
      $export.S = 4; // static
      $export.P = 8; // proto
      $export.B = 16; // bind
      $export.W = 32; // wrap
      $export.U = 64; // safe
      $export.R = 128; // real proto method for `library`
      module.exports = $export;

      /***/
    },
    /* 56 */
    /***/ function (module, exports) {
      var hasOwnProperty = {}.hasOwnProperty;
      module.exports = function (it, key) {
        return hasOwnProperty.call(it, key);
      };

      /***/
    },
    /* 57 */
    /***/ function (module, exports, __webpack_require__) {
      var anObject = __webpack_require__(86),
        IE8_DOM_DEFINE = __webpack_require__(220),
        toPrimitive = __webpack_require__(142),
        dP = Object.defineProperty;

      exports.f = __webpack_require__(54)
        ? Object.defineProperty
        : function defineProperty(O, P, Attributes) {
            anObject(O);
            P = toPrimitive(P, true);
            anObject(Attributes);
            if (IE8_DOM_DEFINE)
              try {
                return dP(O, P, Attributes);
              } catch (e) {
                /* empty */
              }
            if ('get' in Attributes || 'set' in Attributes)
              throw TypeError('Accessors not supported!');
            if ('value' in Attributes) O[P] = Attributes.value;
            return O;
          };

      /***/
    },
    /* 58 */
    /***/ function (module, exports, __webpack_require__) {
      // to indexed object, toObject with fallback for non-array-like ES3 strings
      var IObject = __webpack_require__(221),
        defined = __webpack_require__(132);
      module.exports = function (it) {
        return IObject(defined(it));
      };

      /***/
    },
    /* 59 */
    /***/ function (module, exports) {
      module.exports = function (it, Constructor, name, forbiddenField) {
        if (
          !(it instanceof Constructor) ||
          (forbiddenField !== undefined && forbiddenField in it)
        ) {
          throw TypeError(name + ': incorrect invocation!');
        }
        return it;
      };

      /***/
    },
    /* 60 */
    /***/ function (module, exports) {
      module.exports = false;

      /***/
    },
    /* 61 */
    /***/ function (module, exports, __webpack_require__) {
      // 19.1.2.2 / 15.2.3.5 Object.create(O [, Properties])
      var anObject = __webpack_require__(5),
        dPs = __webpack_require__(243),
        enumBugKeys = __webpack_require__(148),
        IE_PROTO = __webpack_require__(160)('IE_PROTO'),
        Empty = function () {
          /* empty */
        },
        PROTOTYPE = 'prototype';

      // Create object with fake `null` prototype: use iframe Object with cleared prototype
      var createDict = function () {
        // Thrash, waste and sodomy: IE GC bug
        var iframe = __webpack_require__(147)('iframe'),
          i = enumBugKeys.length,
          lt = '<',
          gt = '>',
          iframeDocument;
        iframe.style.display = 'none';
        __webpack_require__(150).appendChild(iframe);
        iframe.src = 'javascript:'; // eslint-disable-line no-script-url
        // createDict = iframe.contentWindow.Object;
        // html.removeChild(iframe);
        iframeDocument = iframe.contentWindow.document;
        iframeDocument.open();
        iframeDocument.write(lt + 'script' + gt + 'document.F=Object' + lt + '/script' + gt);
        iframeDocument.close();
        createDict = iframeDocument.F;
        while (i--) delete createDict[PROTOTYPE][enumBugKeys[i]];
        return createDict();
      };

      module.exports =
        Object.create ||
        function create(O, Properties) {
          var result;
          if (O !== null) {
            Empty[PROTOTYPE] = anObject(O);
            result = new Empty();
            Empty[PROTOTYPE] = null;
            // add "__proto__" for Object.getPrototypeOf polyfill
            result[IE_PROTO] = O;
          } else result = createDict();
          return Properties === undefined ? result : dPs(result, Properties);
        };

      /***/
    },
    /* 62 */
    /***/ function (module, exports, __webpack_require__) {
      // 19.1.2.7 / 15.2.3.4 Object.getOwnPropertyNames(O)
      var $keys = __webpack_require__(245),
        hiddenKeys = __webpack_require__(148).concat('length', 'prototype');

      exports.f =
        Object.getOwnPropertyNames ||
        function getOwnPropertyNames(O) {
          return $keys(O, hiddenKeys);
        };

      /***/
    },
    /* 63 */
    /***/ function (module, exports, __webpack_require__) {
      // 19.1.2.14 / 15.2.3.14 Object.keys(O)
      var $keys = __webpack_require__(245),
        enumBugKeys = __webpack_require__(148);

      module.exports =
        Object.keys ||
        function keys(O) {
          return $keys(O, enumBugKeys);
        };

      /***/
    },
    /* 64 */
    /***/ function (module, exports, __webpack_require__) {
      var redefine = __webpack_require__(25);
      module.exports = function (target, src, safe) {
        for (var key in src) redefine(target, key, src[key], safe);
        return target;
      };

      /***/
    },
    /* 65 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';

      var global = __webpack_require__(6),
        dP = __webpack_require__(14),
        DESCRIPTORS = __webpack_require__(13),
        SPECIES = __webpack_require__(10)('species');

      module.exports = function (KEY) {
        var C = global[KEY];
        if (DESCRIPTORS && C && !C[SPECIES])
          dP.f(C, SPECIES, {
            configurable: true,
            get: function () {
              return this;
            },
          });
      };

      /***/
    },
    /* 66 */
    /***/ function (module, exports, __webpack_require__) {
      var toInteger = __webpack_require__(52),
        max = Math.max,
        min = Math.min;
      module.exports = function (index, length) {
        index = toInteger(index);
        return index < 0 ? max(index + length, 0) : min(index, length);
      };

      /***/
    },
    /* 67 */
    /***/ function (module, exports) {
      var id = 0,
        px = Math.random();
      module.exports = function (key) {
        return 'Symbol('.concat(key === undefined ? '' : key, ')_', (++id + px).toString(36));
      };

      /***/
    },
    /* 68 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';
      /* WEBPACK VAR INJECTION */ (function (process) {
        /**
         * Copyright 2013-present, Facebook, Inc.
         * All rights reserved.
         *
         * This source code is licensed under the BSD-style license found in the
         * LICENSE file in the root directory of this source tree. An additional grant
         * of patent rights can be found in the PATENTS file in the same directory.
         *
         *
         */

        var _prodInvariant = __webpack_require__(8);

        var invariant = __webpack_require__(2);

        /**
         * Static poolers. Several custom versions for each potential number of
         * arguments. A completely generic pooler is easy to implement, but would
         * require accessing the `arguments` object. In each of these, `this` refers to
         * the Class itself, not an instance. If any others are needed, simply add them
         * here, or in their own files.
         */
        var oneArgumentPooler = function (copyFieldsFrom) {
          var Klass = this;
          if (Klass.instancePool.length) {
            var instance = Klass.instancePool.pop();
            Klass.call(instance, copyFieldsFrom);
            return instance;
          } else {
            return new Klass(copyFieldsFrom);
          }
        };

        var twoArgumentPooler = function (a1, a2) {
          var Klass = this;
          if (Klass.instancePool.length) {
            var instance = Klass.instancePool.pop();
            Klass.call(instance, a1, a2);
            return instance;
          } else {
            return new Klass(a1, a2);
          }
        };

        var threeArgumentPooler = function (a1, a2, a3) {
          var Klass = this;
          if (Klass.instancePool.length) {
            var instance = Klass.instancePool.pop();
            Klass.call(instance, a1, a2, a3);
            return instance;
          } else {
            return new Klass(a1, a2, a3);
          }
        };

        var fourArgumentPooler = function (a1, a2, a3, a4) {
          var Klass = this;
          if (Klass.instancePool.length) {
            var instance = Klass.instancePool.pop();
            Klass.call(instance, a1, a2, a3, a4);
            return instance;
          } else {
            return new Klass(a1, a2, a3, a4);
          }
        };

        var standardReleaser = function (instance) {
          var Klass = this;
          !(instance instanceof Klass)
            ? process.env.NODE_ENV !== 'production'
              ? invariant(false, 'Trying to release an instance into a pool of a different type.')
              : _prodInvariant('25')
            : void 0;
          instance.destructor();
          if (Klass.instancePool.length < Klass.poolSize) {
            Klass.instancePool.push(instance);
          }
        };

        var DEFAULT_POOL_SIZE = 10;
        var DEFAULT_POOLER = oneArgumentPooler;

        /**
         * Augments `CopyConstructor` to be a poolable class, augmenting only the class
         * itself (statically) not adding any prototypical fields. Any CopyConstructor
         * you give this may have a `poolSize` property, and will look for a
         * prototypical `destructor` on instances.
         *
         * @param {Function} CopyConstructor Constructor that can be used to reset.
         * @param {Function} pooler Customizable pooler.
         */
        var addPoolingTo = function (CopyConstructor, pooler) {
          // Casting as any so that flow ignores the actual implementation and trusts
          // it to match the type we declared
          var NewKlass = CopyConstructor;
          NewKlass.instancePool = [];
          NewKlass.getPooled = pooler || DEFAULT_POOLER;
          if (!NewKlass.poolSize) {
            NewKlass.poolSize = DEFAULT_POOL_SIZE;
          }
          NewKlass.release = standardReleaser;
          return NewKlass;
        };

        var PooledClass = {
          addPoolingTo: addPoolingTo,
          oneArgumentPooler: oneArgumentPooler,
          twoArgumentPooler: twoArgumentPooler,
          threeArgumentPooler: threeArgumentPooler,
          fourArgumentPooler: fourArgumentPooler,
        };

        module.exports = PooledClass;
        /* WEBPACK VAR INJECTION */
      }.call(exports, __webpack_require__(1)));

      /***/
    },
    /* 69 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';
      /* WEBPACK VAR INJECTION */ (function (process) {
        /**
         * Copyright 2014-present, Facebook, Inc.
         * All rights reserved.
         *
         * This source code is licensed under the BSD-style license found in the
         * LICENSE file in the root directory of this source tree. An additional grant
         * of patent rights can be found in the PATENTS file in the same directory.
         *
         */

        var _assign = __webpack_require__(12);

        var ReactCurrentOwner = __webpack_require__(42);

        var warning = __webpack_require__(3);
        var canDefineProperty = __webpack_require__(205);
        var hasOwnProperty = Object.prototype.hasOwnProperty;

        var REACT_ELEMENT_TYPE = __webpack_require__(311);

        var RESERVED_PROPS = {
          key: true,
          ref: true,
          __self: true,
          __source: true,
        };

        var specialPropKeyWarningShown, specialPropRefWarningShown;

        function hasValidRef(config) {
          if (process.env.NODE_ENV !== 'production') {
            if (hasOwnProperty.call(config, 'ref')) {
              var getter = Object.getOwnPropertyDescriptor(config, 'ref').get;
              if (getter && getter.isReactWarning) {
                return false;
              }
            }
          }
          return config.ref !== undefined;
        }

        function hasValidKey(config) {
          if (process.env.NODE_ENV !== 'production') {
            if (hasOwnProperty.call(config, 'key')) {
              var getter = Object.getOwnPropertyDescriptor(config, 'key').get;
              if (getter && getter.isReactWarning) {
                return false;
              }
            }
          }
          return config.key !== undefined;
        }

        function defineKeyPropWarningGetter(props, displayName) {
          var warnAboutAccessingKey = function () {
            if (!specialPropKeyWarningShown) {
              specialPropKeyWarningShown = true;
              process.env.NODE_ENV !== 'production'
                ? warning(
                    false,
                    '%s: `key` is not a prop. Trying to access it will result ' +
                      'in `undefined` being returned. If you need to access the same ' +
                      'value within the child component, you should pass it as a different ' +
                      'prop. (https://fb.me/react-special-props)',
                    displayName
                  )
                : void 0;
            }
          };
          warnAboutAccessingKey.isReactWarning = true;
          Object.defineProperty(props, 'key', {
            get: warnAboutAccessingKey,
            configurable: true,
          });
        }

        function defineRefPropWarningGetter(props, displayName) {
          var warnAboutAccessingRef = function () {
            if (!specialPropRefWarningShown) {
              specialPropRefWarningShown = true;
              process.env.NODE_ENV !== 'production'
                ? warning(
                    false,
                    '%s: `ref` is not a prop. Trying to access it will result ' +
                      'in `undefined` being returned. If you need to access the same ' +
                      'value within the child component, you should pass it as a different ' +
                      'prop. (https://fb.me/react-special-props)',
                    displayName
                  )
                : void 0;
            }
          };
          warnAboutAccessingRef.isReactWarning = true;
          Object.defineProperty(props, 'ref', {
            get: warnAboutAccessingRef,
            configurable: true,
          });
        }

        /**
         * Factory method to create a new React element. This no longer adheres to
         * the class pattern, so do not use new to call it. Also, no instanceof check
         * will work. Instead test $$typeof field against Symbol.for('react.element') to check
         * if something is a React Element.
         *
         * @param {*} type
         * @param {*} key
         * @param {string|object} ref
         * @param {*} self A *temporary* helper to detect places where `this` is
         * different from the `owner` when React.createElement is called, so that we
         * can warn. We want to get rid of owner and replace string `ref`s with arrow
         * functions, and as long as `this` and owner are the same, there will be no
         * change in behavior.
         * @param {*} source An annotation object (added by a transpiler or otherwise)
         * indicating filename, line number, and/or other information.
         * @param {*} owner
         * @param {*} props
         * @internal
         */
        var ReactElement = function (type, key, ref, self, source, owner, props) {
          var element = {
            // This tag allow us to uniquely identify this as a React Element
            $$typeof: REACT_ELEMENT_TYPE,

            // Built-in properties that belong on the element
            type: type,
            key: key,
            ref: ref,
            props: props,

            // Record the component responsible for creating this element.
            _owner: owner,
          };

          if (process.env.NODE_ENV !== 'production') {
            // The validation flag is currently mutative. We put it on
            // an external backing store so that we can freeze the whole object.
            // This can be replaced with a WeakMap once they are implemented in
            // commonly used development environments.
            element._store = {};

            // To make comparing ReactElements easier for testing purposes, we make
            // the validation flag non-enumerable (where possible, which should
            // include every environment we run tests in), so the test framework
            // ignores it.
            if (canDefineProperty) {
              Object.defineProperty(element._store, 'validated', {
                configurable: false,
                enumerable: false,
                writable: true,
                value: false,
              });
              // self and source are DEV only properties.
              Object.defineProperty(element, '_self', {
                configurable: false,
                enumerable: false,
                writable: false,
                value: self,
              });
              // Two elements created in two different places should be considered
              // equal for testing purposes and therefore we hide it from enumeration.
              Object.defineProperty(element, '_source', {
                configurable: false,
                enumerable: false,
                writable: false,
                value: source,
              });
            } else {
              element._store.validated = false;
              element._self = self;
              element._source = source;
            }
            if (Object.freeze) {
              Object.freeze(element.props);
              Object.freeze(element);
            }
          }

          return element;
        };

        /**
         * Create and return a new ReactElement of the given type.
         * See https://facebook.github.io/react/docs/top-level-api.html#react.createelement
         */
        ReactElement.createElement = function (type, config, children) {
          var propName;

          // Reserved names are extracted
          var props = {};

          var key = null;
          var ref = null;
          var self = null;
          var source = null;

          if (config != null) {
            if (hasValidRef(config)) {
              ref = config.ref;
            }
            if (hasValidKey(config)) {
              key = '' + config.key;
            }

            self = config.__self === undefined ? null : config.__self;
            source = config.__source === undefined ? null : config.__source;
            // Remaining properties are added to a new props object
            for (propName in config) {
              if (
                hasOwnProperty.call(config, propName) &&
                !RESERVED_PROPS.hasOwnProperty(propName)
              ) {
                props[propName] = config[propName];
              }
            }
          }

          // Children can be more than one argument, and those are transferred onto
          // the newly allocated props object.
          var childrenLength = arguments.length - 2;
          if (childrenLength === 1) {
            props.children = children;
          } else if (childrenLength > 1) {
            var childArray = Array(childrenLength);
            for (var i = 0; i < childrenLength; i++) {
              childArray[i] = arguments[i + 2];
            }
            if (process.env.NODE_ENV !== 'production') {
              if (Object.freeze) {
                Object.freeze(childArray);
              }
            }
            props.children = childArray;
          }

          // Resolve default props
          if (type && type.defaultProps) {
            var defaultProps = type.defaultProps;
            for (propName in defaultProps) {
              if (props[propName] === undefined) {
                props[propName] = defaultProps[propName];
              }
            }
          }
          if (process.env.NODE_ENV !== 'production') {
            if (key || ref) {
              if (typeof props.$$typeof === 'undefined' || props.$$typeof !== REACT_ELEMENT_TYPE) {
                var displayName =
                  typeof type === 'function' ? type.displayName || type.name || 'Unknown' : type;
                if (key) {
                  defineKeyPropWarningGetter(props, displayName);
                }
                if (ref) {
                  defineRefPropWarningGetter(props, displayName);
                }
              }
            }
          }
          return ReactElement(type, key, ref, self, source, ReactCurrentOwner.current, props);
        };

        /**
         * Return a function that produces ReactElements of a given type.
         * See https://facebook.github.io/react/docs/top-level-api.html#react.createfactory
         */
        ReactElement.createFactory = function (type) {
          var factory = ReactElement.createElement.bind(null, type);
          // Expose the type on the factory and the prototype so that it can be
          // easily accessed on elements. E.g. `<Foo />.type === Foo`.
          // This should not be named `constructor` since this may not be the function
          // that created the element, and it may not even be a constructor.
          // Legacy hook TODO: Warn if this is accessed
          factory.type = type;
          return factory;
        };

        ReactElement.cloneAndReplaceKey = function (oldElement, newKey) {
          var newElement = ReactElement(
            oldElement.type,
            newKey,
            oldElement.ref,
            oldElement._self,
            oldElement._source,
            oldElement._owner,
            oldElement.props
          );

          return newElement;
        };

        /**
         * Clone and return a new ReactElement using element as the starting point.
         * See https://facebook.github.io/react/docs/top-level-api.html#react.cloneelement
         */
        ReactElement.cloneElement = function (element, config, children) {
          var propName;

          // Original props are copied
          var props = _assign({}, element.props);

          // Reserved names are extracted
          var key = element.key;
          var ref = element.ref;
          // Self is preserved since the owner is preserved.
          var self = element._self;
          // Source is preserved since cloneElement is unlikely to be targeted by a
          // transpiler, and the original source is probably a better indicator of the
          // true owner.
          var source = element._source;

          // Owner will be preserved, unless ref is overridden
          var owner = element._owner;

          if (config != null) {
            if (hasValidRef(config)) {
              // Silently steal the ref from the parent.
              ref = config.ref;
              owner = ReactCurrentOwner.current;
            }
            if (hasValidKey(config)) {
              key = '' + config.key;
            }

            // Remaining properties override existing props
            var defaultProps;
            if (element.type && element.type.defaultProps) {
              defaultProps = element.type.defaultProps;
            }
            for (propName in config) {
              if (
                hasOwnProperty.call(config, propName) &&
                !RESERVED_PROPS.hasOwnProperty(propName)
              ) {
                if (config[propName] === undefined && defaultProps !== undefined) {
                  // Resolve default props
                  props[propName] = defaultProps[propName];
                } else {
                  props[propName] = config[propName];
                }
              }
            }
          }

          // Children can be more than one argument, and those are transferred onto
          // the newly allocated props object.
          var childrenLength = arguments.length - 2;
          if (childrenLength === 1) {
            props.children = children;
          } else if (childrenLength > 1) {
            var childArray = Array(childrenLength);
            for (var i = 0; i < childrenLength; i++) {
              childArray[i] = arguments[i + 2];
            }
            props.children = childArray;
          }

          return ReactElement(element.type, key, ref, self, source, owner, props);
        };

        /**
         * Verifies the object is a ReactElement.
         * See https://facebook.github.io/react/docs/top-level-api.html#react.isvalidelement
         * @param {?object} object
         * @return {boolean} True if `object` is a valid component.
         * @final
         */
        ReactElement.isValidElement = function (object) {
          return (
            typeof object === 'object' && object !== null && object.$$typeof === REACT_ELEMENT_TYPE
          );
        };

        module.exports = ReactElement;
        /* WEBPACK VAR INJECTION */
      }.call(exports, __webpack_require__(1)));

      /***/
    },
    /* 70 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';
      /**
       * Copyright (c) 2013-present, Facebook, Inc.
       * All rights reserved.
       *
       * This source code is licensed under the BSD-style license found in the
       * LICENSE file in the root directory of this source tree. An additional grant
       * of patent rights can be found in the PATENTS file in the same directory.
       *
       *
       */

      /**
       * WARNING: DO NOT manually require this module.
       * This is a replacement for `invariant(...)` used by the error code system
       * and will _only_ be required by the corresponding babel pass.
       * It always throws.
       */

      function reactProdInvariant(code) {
        var argCount = arguments.length - 1;

        var message =
          'Minified React error #' +
          code +
          '; visit ' +
          'http://facebook.github.io/react/docs/error-decoder.html?invariant=' +
          code;

        for (var argIdx = 0; argIdx < argCount; argIdx++) {
          message += '&args[]=' + encodeURIComponent(arguments[argIdx + 1]);
        }

        message +=
          ' for the full message or use the non-minified dev environment' +
          ' for full errors and additional helpful warnings.';

        var error = new Error(message);
        error.name = 'Invariant Violation';
        error.framesToPop = 1; // we don't care about reactProdInvariant's own frame

        throw error;
      }

      module.exports = reactProdInvariant;

      /***/
    },
    /* 71 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';
      // a duplex stream is just a stream that is both readable and writable.
      // Since JS doesn't have multiple prototypal inheritance, this class
      // prototypally inherits from Readable, and then parasitically from
      // Writable.

      /*<replacement>*/

      var objectKeys =
        Object.keys ||
        function (obj) {
          var keys = [];
          for (var key in obj) {
            keys.push(key);
          }
          return keys;
        };
      /*</replacement>*/

      module.exports = Duplex;

      /*<replacement>*/
      var processNextTick = __webpack_require__(183);
      /*</replacement>*/

      /*<replacement>*/
      var util = __webpack_require__(91);
      util.inherits = __webpack_require__(40);
      /*</replacement>*/

      var Readable = __webpack_require__(315);
      var Writable = __webpack_require__(208);

      util.inherits(Duplex, Readable);

      var keys = objectKeys(Writable.prototype);
      for (var v = 0; v < keys.length; v++) {
        var method = keys[v];
        if (!Duplex.prototype[method]) Duplex.prototype[method] = Writable.prototype[method];
      }

      function Duplex(options) {
        if (!(this instanceof Duplex)) return new Duplex(options);

        Readable.call(this, options);
        Writable.call(this, options);

        if (options && options.readable === false) this.readable = false;

        if (options && options.writable === false) this.writable = false;

        this.allowHalfOpen = true;
        if (options && options.allowHalfOpen === false) this.allowHalfOpen = false;

        this.once('end', onend);
      }

      // the no-half-open enforcer
      function onend() {
        // if we allow half-open state, or if the writable side ended,
        // then we're ok.
        if (this.allowHalfOpen || this._writableState.ended) return;

        // no more data can be written.
        // But allow more writes to happen in this tick.
        processNextTick(onEndNT, this);
      }

      function onEndNT(self) {
        self.end();
      }

      function forEach(xs, f) {
        for (var i = 0, l = xs.length; i < l; i++) {
          f(xs[i], i);
        }
      }

      /***/
    },
    /* 72 */
    /***/ function (module, exports, __webpack_require__) {
      var __WEBPACK_AMD_DEFINE_ARRAY__,
        __WEBPACK_AMD_DEFINE_RESULT__; /*!
  Copyright (c) 2016 Jed Watson.
  Licensed under the MIT License (MIT), see
  http://jedwatson.github.io/classnames
*/
      /* global define */

      (function () {
        'use strict';

        var hasOwn = {}.hasOwnProperty;

        function classNames() {
          var classes = [];

          for (var i = 0; i < arguments.length; i++) {
            var arg = arguments[i];
            if (!arg) continue;

            var argType = typeof arg;

            if (argType === 'string' || argType === 'number') {
              classes.push(arg);
            } else if (Array.isArray(arg)) {
              classes.push(classNames.apply(null, arg));
            } else if (argType === 'object') {
              for (var key in arg) {
                if (hasOwn.call(arg, key) && arg[key]) {
                  classes.push(key);
                }
              }
            }
          }

          return classes.join(' ');
        }

        if (typeof module !== 'undefined' && module.exports) {
          module.exports = classNames;
        } else if (true) {
          // register as 'classnames', consistent with npm package name
          !((__WEBPACK_AMD_DEFINE_ARRAY__ = []),
          (__WEBPACK_AMD_DEFINE_RESULT__ = function () {
            return classNames;
          }.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)),
          __WEBPACK_AMD_DEFINE_RESULT__ !== undefined &&
            (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
        } else {
          window.classNames = classNames;
        }
      })();

      /***/
    },
    /* 73 */
    /***/ function (module, exports) {
      module.exports = function (exec) {
        try {
          return !!exec();
        } catch (e) {
          return true;
        }
      };

      /***/
    },
    /* 74 */
    /***/ function (module, exports, __webpack_require__) {
      var dP = __webpack_require__(57),
        createDesc = __webpack_require__(103);
      module.exports = __webpack_require__(54)
        ? function (object, key, value) {
            return dP.f(object, key, createDesc(1, value));
          }
        : function (object, key, value) {
            object[key] = value;
            return object;
          };

      /***/
    },
    /* 75 */
    /***/ function (module, exports, __webpack_require__) {
      // 19.1.2.14 / 15.2.3.14 Object.keys(O)
      var $keys = __webpack_require__(226),
        enumBugKeys = __webpack_require__(133);

      module.exports =
        Object.keys ||
        function keys(O) {
          return $keys(O, enumBugKeys);
        };

      /***/
    },
    /* 76 */
    /***/ function (module, exports, __webpack_require__) {
      var store = __webpack_require__(140)('wks'),
        uid = __webpack_require__(105),
        Symbol = __webpack_require__(49).Symbol,
        USE_SYMBOL = typeof Symbol == 'function';

      var $exports = (module.exports = function (name) {
        return (
          store[name] ||
          (store[name] =
            (USE_SYMBOL && Symbol[name]) || (USE_SYMBOL ? Symbol : uid)('Symbol.' + name))
        );
      });

      $exports.store = store;

      /***/
    },
    /* 77 */
    /***/ function (module, exports, __webpack_require__) {
      // 22.1.3.31 Array.prototype[@@unscopables]
      var UNSCOPABLES = __webpack_require__(10)('unscopables'),
        ArrayProto = Array.prototype;
      if (ArrayProto[UNSCOPABLES] == undefined)
        __webpack_require__(24)(ArrayProto, UNSCOPABLES, {});
      module.exports = function (key) {
        ArrayProto[UNSCOPABLES][key] = true;
      };

      /***/
    },
    /* 78 */
    /***/ function (module, exports, __webpack_require__) {
      var ctx = __webpack_require__(45),
        call = __webpack_require__(239),
        isArrayIter = __webpack_require__(152),
        anObject = __webpack_require__(5),
        toLength = __webpack_require__(17),
        getIterFn = __webpack_require__(169),
        BREAK = {},
        RETURN = {};
      var exports = (module.exports = function (iterable, entries, fn, that, ITERATOR) {
        var iterFn = ITERATOR
            ? function () {
                return iterable;
              }
            : getIterFn(iterable),
          f = ctx(fn, that, entries ? 2 : 1),
          index = 0,
          length,
          step,
          iterator,
          result;
        if (typeof iterFn != 'function') throw TypeError(iterable + ' is not iterable!');
        // fast case for arrays with default iterator
        if (isArrayIter(iterFn))
          for (length = toLength(iterable.length); length > index; index++) {
            result = entries
              ? f(anObject((step = iterable[index]))[0], step[1])
              : f(iterable[index]);
            if (result === BREAK || result === RETURN) return result;
          }
        else
          for (iterator = iterFn.call(iterable); !(step = iterator.next()).done; ) {
            result = call(iterator, f, step.value, entries);
            if (result === BREAK || result === RETURN) return result;
          }
      });
      exports.BREAK = BREAK;
      exports.RETURN = RETURN;

      /***/
    },
    /* 79 */
    /***/ function (module, exports) {
      module.exports = {};

      /***/
    },
    /* 80 */
    /***/ function (module, exports, __webpack_require__) {
      var def = __webpack_require__(14).f,
        has = __webpack_require__(21),
        TAG = __webpack_require__(10)('toStringTag');

      module.exports = function (it, tag, stat) {
        if (it && !has((it = stat ? it : it.prototype), TAG))
          def(it, TAG, { configurable: true, value: tag });
      };

      /***/
    },
    /* 81 */
    /***/ function (module, exports, __webpack_require__) {
      var $export = __webpack_require__(0),
        defined = __webpack_require__(35),
        fails = __webpack_require__(7),
        spaces = __webpack_require__(165),
        space = '[' + spaces + ']',
        non = '\u200b\u0085',
        ltrim = RegExp('^' + space + space + '*'),
        rtrim = RegExp(space + space + '*$');

      var exporter = function (KEY, exec, ALIAS) {
        var exp = {};
        var FORCE = fails(function () {
          return !!spaces[KEY]() || non[KEY]() != non;
        });
        var fn = (exp[KEY] = FORCE ? exec(trim) : spaces[KEY]);
        if (ALIAS) exp[ALIAS] = fn;
        $export($export.P + $export.F * FORCE, 'String', exp);
      };

      // 1 -> String#trimLeft
      // 2 -> String#trimRight
      // 3 -> String#trim
      var trim = (exporter.trim = function (string, TYPE) {
        string = String(defined(string));
        if (TYPE & 1) string = string.replace(ltrim, '');
        if (TYPE & 2) string = string.replace(rtrim, '');
        return string;
      });

      module.exports = exporter;

      /***/
    },
    /* 82 */
    /***/ function (module, exports, __webpack_require__) {
      /**
       *  Copyright (c) 2014-2015, Facebook, Inc.
       *  All rights reserved.
       *
       *  This source code is licensed under the BSD-style license found in the
       *  LICENSE file in the root directory of this source tree. An additional grant
       *  of patent rights can be found in the PATENTS file in the same directory.
       */

      (function (global, factory) {
        true
          ? (module.exports = factory())
          : typeof define === 'function' && define.amd
          ? define(factory)
          : (global.Immutable = factory());
      })(this, function () {
        'use strict';
        var SLICE$0 = Array.prototype.slice;

        function createClass(ctor, superClass) {
          if (superClass) {
            ctor.prototype = Object.create(superClass.prototype);
          }
          ctor.prototype.constructor = ctor;
        }

        function Iterable(value) {
          return isIterable(value) ? value : Seq(value);
        }

        createClass(KeyedIterable, Iterable);
        function KeyedIterable(value) {
          return isKeyed(value) ? value : KeyedSeq(value);
        }

        createClass(IndexedIterable, Iterable);
        function IndexedIterable(value) {
          return isIndexed(value) ? value : IndexedSeq(value);
        }

        createClass(SetIterable, Iterable);
        function SetIterable(value) {
          return isIterable(value) && !isAssociative(value) ? value : SetSeq(value);
        }

        function isIterable(maybeIterable) {
          return !!(maybeIterable && maybeIterable[IS_ITERABLE_SENTINEL]);
        }

        function isKeyed(maybeKeyed) {
          return !!(maybeKeyed && maybeKeyed[IS_KEYED_SENTINEL]);
        }

        function isIndexed(maybeIndexed) {
          return !!(maybeIndexed && maybeIndexed[IS_INDEXED_SENTINEL]);
        }

        function isAssociative(maybeAssociative) {
          return isKeyed(maybeAssociative) || isIndexed(maybeAssociative);
        }

        function isOrdered(maybeOrdered) {
          return !!(maybeOrdered && maybeOrdered[IS_ORDERED_SENTINEL]);
        }

        Iterable.isIterable = isIterable;
        Iterable.isKeyed = isKeyed;
        Iterable.isIndexed = isIndexed;
        Iterable.isAssociative = isAssociative;
        Iterable.isOrdered = isOrdered;

        Iterable.Keyed = KeyedIterable;
        Iterable.Indexed = IndexedIterable;
        Iterable.Set = SetIterable;

        var IS_ITERABLE_SENTINEL = '@@__IMMUTABLE_ITERABLE__@@';
        var IS_KEYED_SENTINEL = '@@__IMMUTABLE_KEYED__@@';
        var IS_INDEXED_SENTINEL = '@@__IMMUTABLE_INDEXED__@@';
        var IS_ORDERED_SENTINEL = '@@__IMMUTABLE_ORDERED__@@';

        // Used for setting prototype methods that IE8 chokes on.
        var DELETE = 'delete';

        // Constants describing the size of trie nodes.
        var SHIFT = 5; // Resulted in best performance after ______?
        var SIZE = 1 << SHIFT;
        var MASK = SIZE - 1;

        // A consistent shared value representing "not set" which equals nothing other
        // than itself, and nothing that could be provided externally.
        var NOT_SET = {};

        // Boolean references, Rough equivalent of `bool &`.
        var CHANGE_LENGTH = { value: false };
        var DID_ALTER = { value: false };

        function MakeRef(ref) {
          ref.value = false;
          return ref;
        }

        function SetRef(ref) {
          ref && (ref.value = true);
        }

        // A function which returns a value representing an "owner" for transient writes
        // to tries. The return value will only ever equal itself, and will not equal
        // the return of any subsequent call of this function.
        function OwnerID() {}

        // http://jsperf.com/copy-array-inline
        function arrCopy(arr, offset) {
          offset = offset || 0;
          var len = Math.max(0, arr.length - offset);
          var newArr = new Array(len);
          for (var ii = 0; ii < len; ii++) {
            newArr[ii] = arr[ii + offset];
          }
          return newArr;
        }

        function ensureSize(iter) {
          if (iter.size === undefined) {
            iter.size = iter.__iterate(returnTrue);
          }
          return iter.size;
        }

        function wrapIndex(iter, index) {
          // This implements "is array index" which the ECMAString spec defines as:
          //
          //     A String property name P is an array index if and only if
          //     ToString(ToUint32(P)) is equal to P and ToUint32(P) is not equal
          //     to 2^32−1.
          //
          // http://www.ecma-international.org/ecma-262/6.0/#sec-array-exotic-objects
          if (typeof index !== 'number') {
            var uint32Index = index >>> 0; // N >>> 0 is shorthand for ToUint32
            if ('' + uint32Index !== index || uint32Index === 4294967295) {
              return NaN;
            }
            index = uint32Index;
          }
          return index < 0 ? ensureSize(iter) + index : index;
        }

        function returnTrue() {
          return true;
        }

        function wholeSlice(begin, end, size) {
          return (
            (begin === 0 || (size !== undefined && begin <= -size)) &&
            (end === undefined || (size !== undefined && end >= size))
          );
        }

        function resolveBegin(begin, size) {
          return resolveIndex(begin, size, 0);
        }

        function resolveEnd(end, size) {
          return resolveIndex(end, size, size);
        }

        function resolveIndex(index, size, defaultIndex) {
          return index === undefined
            ? defaultIndex
            : index < 0
            ? Math.max(0, size + index)
            : size === undefined
            ? index
            : Math.min(size, index);
        }

        /* global Symbol */

        var ITERATE_KEYS = 0;
        var ITERATE_VALUES = 1;
        var ITERATE_ENTRIES = 2;

        var REAL_ITERATOR_SYMBOL = typeof Symbol === 'function' && Symbol.iterator;
        var FAUX_ITERATOR_SYMBOL = '@@iterator';

        var ITERATOR_SYMBOL = REAL_ITERATOR_SYMBOL || FAUX_ITERATOR_SYMBOL;

        function Iterator(next) {
          this.next = next;
        }

        Iterator.prototype.toString = function () {
          return '[Iterator]';
        };

        Iterator.KEYS = ITERATE_KEYS;
        Iterator.VALUES = ITERATE_VALUES;
        Iterator.ENTRIES = ITERATE_ENTRIES;

        Iterator.prototype.inspect = Iterator.prototype.toSource = function () {
          return this.toString();
        };
        Iterator.prototype[ITERATOR_SYMBOL] = function () {
          return this;
        };

        function iteratorValue(type, k, v, iteratorResult) {
          var value = type === 0 ? k : type === 1 ? v : [k, v];
          iteratorResult
            ? (iteratorResult.value = value)
            : (iteratorResult = {
                value: value,
                done: false,
              });
          return iteratorResult;
        }

        function iteratorDone() {
          return { value: undefined, done: true };
        }

        function hasIterator(maybeIterable) {
          return !!getIteratorFn(maybeIterable);
        }

        function isIterator(maybeIterator) {
          return maybeIterator && typeof maybeIterator.next === 'function';
        }

        function getIterator(iterable) {
          var iteratorFn = getIteratorFn(iterable);
          return iteratorFn && iteratorFn.call(iterable);
        }

        function getIteratorFn(iterable) {
          var iteratorFn =
            iterable &&
            ((REAL_ITERATOR_SYMBOL && iterable[REAL_ITERATOR_SYMBOL]) ||
              iterable[FAUX_ITERATOR_SYMBOL]);
          if (typeof iteratorFn === 'function') {
            return iteratorFn;
          }
        }

        function isArrayLike(value) {
          return value && typeof value.length === 'number';
        }

        createClass(Seq, Iterable);
        function Seq(value) {
          return value === null || value === undefined
            ? emptySequence()
            : isIterable(value)
            ? value.toSeq()
            : seqFromValue(value);
        }

        Seq.of = function (/*...values*/) {
          return Seq(arguments);
        };

        Seq.prototype.toSeq = function () {
          return this;
        };

        Seq.prototype.toString = function () {
          return this.__toString('Seq {', '}');
        };

        Seq.prototype.cacheResult = function () {
          if (!this._cache && this.__iterateUncached) {
            this._cache = this.entrySeq().toArray();
            this.size = this._cache.length;
          }
          return this;
        };

        // abstract __iterateUncached(fn, reverse)

        Seq.prototype.__iterate = function (fn, reverse) {
          return seqIterate(this, fn, reverse, true);
        };

        // abstract __iteratorUncached(type, reverse)

        Seq.prototype.__iterator = function (type, reverse) {
          return seqIterator(this, type, reverse, true);
        };

        createClass(KeyedSeq, Seq);
        function KeyedSeq(value) {
          return value === null || value === undefined
            ? emptySequence().toKeyedSeq()
            : isIterable(value)
            ? isKeyed(value)
              ? value.toSeq()
              : value.fromEntrySeq()
            : keyedSeqFromValue(value);
        }

        KeyedSeq.prototype.toKeyedSeq = function () {
          return this;
        };

        createClass(IndexedSeq, Seq);
        function IndexedSeq(value) {
          return value === null || value === undefined
            ? emptySequence()
            : !isIterable(value)
            ? indexedSeqFromValue(value)
            : isKeyed(value)
            ? value.entrySeq()
            : value.toIndexedSeq();
        }

        IndexedSeq.of = function (/*...values*/) {
          return IndexedSeq(arguments);
        };

        IndexedSeq.prototype.toIndexedSeq = function () {
          return this;
        };

        IndexedSeq.prototype.toString = function () {
          return this.__toString('Seq [', ']');
        };

        IndexedSeq.prototype.__iterate = function (fn, reverse) {
          return seqIterate(this, fn, reverse, false);
        };

        IndexedSeq.prototype.__iterator = function (type, reverse) {
          return seqIterator(this, type, reverse, false);
        };

        createClass(SetSeq, Seq);
        function SetSeq(value) {
          return (value === null || value === undefined
            ? emptySequence()
            : !isIterable(value)
            ? indexedSeqFromValue(value)
            : isKeyed(value)
            ? value.entrySeq()
            : value
          ).toSetSeq();
        }

        SetSeq.of = function (/*...values*/) {
          return SetSeq(arguments);
        };

        SetSeq.prototype.toSetSeq = function () {
          return this;
        };

        Seq.isSeq = isSeq;
        Seq.Keyed = KeyedSeq;
        Seq.Set = SetSeq;
        Seq.Indexed = IndexedSeq;

        var IS_SEQ_SENTINEL = '@@__IMMUTABLE_SEQ__@@';

        Seq.prototype[IS_SEQ_SENTINEL] = true;

        createClass(ArraySeq, IndexedSeq);
        function ArraySeq(array) {
          this._array = array;
          this.size = array.length;
        }

        ArraySeq.prototype.get = function (index, notSetValue) {
          return this.has(index) ? this._array[wrapIndex(this, index)] : notSetValue;
        };

        ArraySeq.prototype.__iterate = function (fn, reverse) {
          var array = this._array;
          var maxIndex = array.length - 1;
          for (var ii = 0; ii <= maxIndex; ii++) {
            if (fn(array[reverse ? maxIndex - ii : ii], ii, this) === false) {
              return ii + 1;
            }
          }
          return ii;
        };

        ArraySeq.prototype.__iterator = function (type, reverse) {
          var array = this._array;
          var maxIndex = array.length - 1;
          var ii = 0;
          return new Iterator(function () {
            return ii > maxIndex
              ? iteratorDone()
              : iteratorValue(type, ii, array[reverse ? maxIndex - ii++ : ii++]);
          });
        };

        createClass(ObjectSeq, KeyedSeq);
        function ObjectSeq(object) {
          var keys = Object.keys(object);
          this._object = object;
          this._keys = keys;
          this.size = keys.length;
        }

        ObjectSeq.prototype.get = function (key, notSetValue) {
          if (notSetValue !== undefined && !this.has(key)) {
            return notSetValue;
          }
          return this._object[key];
        };

        ObjectSeq.prototype.has = function (key) {
          return this._object.hasOwnProperty(key);
        };

        ObjectSeq.prototype.__iterate = function (fn, reverse) {
          var object = this._object;
          var keys = this._keys;
          var maxIndex = keys.length - 1;
          for (var ii = 0; ii <= maxIndex; ii++) {
            var key = keys[reverse ? maxIndex - ii : ii];
            if (fn(object[key], key, this) === false) {
              return ii + 1;
            }
          }
          return ii;
        };

        ObjectSeq.prototype.__iterator = function (type, reverse) {
          var object = this._object;
          var keys = this._keys;
          var maxIndex = keys.length - 1;
          var ii = 0;
          return new Iterator(function () {
            var key = keys[reverse ? maxIndex - ii : ii];
            return ii++ > maxIndex ? iteratorDone() : iteratorValue(type, key, object[key]);
          });
        };

        ObjectSeq.prototype[IS_ORDERED_SENTINEL] = true;

        createClass(IterableSeq, IndexedSeq);
        function IterableSeq(iterable) {
          this._iterable = iterable;
          this.size = iterable.length || iterable.size;
        }

        IterableSeq.prototype.__iterateUncached = function (fn, reverse) {
          if (reverse) {
            return this.cacheResult().__iterate(fn, reverse);
          }
          var iterable = this._iterable;
          var iterator = getIterator(iterable);
          var iterations = 0;
          if (isIterator(iterator)) {
            var step;
            while (!(step = iterator.next()).done) {
              if (fn(step.value, iterations++, this) === false) {
                break;
              }
            }
          }
          return iterations;
        };

        IterableSeq.prototype.__iteratorUncached = function (type, reverse) {
          if (reverse) {
            return this.cacheResult().__iterator(type, reverse);
          }
          var iterable = this._iterable;
          var iterator = getIterator(iterable);
          if (!isIterator(iterator)) {
            return new Iterator(iteratorDone);
          }
          var iterations = 0;
          return new Iterator(function () {
            var step = iterator.next();
            return step.done ? step : iteratorValue(type, iterations++, step.value);
          });
        };

        createClass(IteratorSeq, IndexedSeq);
        function IteratorSeq(iterator) {
          this._iterator = iterator;
          this._iteratorCache = [];
        }

        IteratorSeq.prototype.__iterateUncached = function (fn, reverse) {
          if (reverse) {
            return this.cacheResult().__iterate(fn, reverse);
          }
          var iterator = this._iterator;
          var cache = this._iteratorCache;
          var iterations = 0;
          while (iterations < cache.length) {
            if (fn(cache[iterations], iterations++, this) === false) {
              return iterations;
            }
          }
          var step;
          while (!(step = iterator.next()).done) {
            var val = step.value;
            cache[iterations] = val;
            if (fn(val, iterations++, this) === false) {
              break;
            }
          }
          return iterations;
        };

        IteratorSeq.prototype.__iteratorUncached = function (type, reverse) {
          if (reverse) {
            return this.cacheResult().__iterator(type, reverse);
          }
          var iterator = this._iterator;
          var cache = this._iteratorCache;
          var iterations = 0;
          return new Iterator(function () {
            if (iterations >= cache.length) {
              var step = iterator.next();
              if (step.done) {
                return step;
              }
              cache[iterations] = step.value;
            }
            return iteratorValue(type, iterations, cache[iterations++]);
          });
        };

        // # pragma Helper functions

        function isSeq(maybeSeq) {
          return !!(maybeSeq && maybeSeq[IS_SEQ_SENTINEL]);
        }

        var EMPTY_SEQ;

        function emptySequence() {
          return EMPTY_SEQ || (EMPTY_SEQ = new ArraySeq([]));
        }

        function keyedSeqFromValue(value) {
          var seq = Array.isArray(value)
            ? new ArraySeq(value).fromEntrySeq()
            : isIterator(value)
            ? new IteratorSeq(value).fromEntrySeq()
            : hasIterator(value)
            ? new IterableSeq(value).fromEntrySeq()
            : typeof value === 'object'
            ? new ObjectSeq(value)
            : undefined;
          if (!seq) {
            throw new TypeError(
              'Expected Array or iterable object of [k, v] entries, ' + 'or keyed object: ' + value
            );
          }
          return seq;
        }

        function indexedSeqFromValue(value) {
          var seq = maybeIndexedSeqFromValue(value);
          if (!seq) {
            throw new TypeError('Expected Array or iterable object of values: ' + value);
          }
          return seq;
        }

        function seqFromValue(value) {
          var seq =
            maybeIndexedSeqFromValue(value) || (typeof value === 'object' && new ObjectSeq(value));
          if (!seq) {
            throw new TypeError(
              'Expected Array or iterable object of values, or keyed object: ' + value
            );
          }
          return seq;
        }

        function maybeIndexedSeqFromValue(value) {
          return isArrayLike(value)
            ? new ArraySeq(value)
            : isIterator(value)
            ? new IteratorSeq(value)
            : hasIterator(value)
            ? new IterableSeq(value)
            : undefined;
        }

        function seqIterate(seq, fn, reverse, useKeys) {
          var cache = seq._cache;
          if (cache) {
            var maxIndex = cache.length - 1;
            for (var ii = 0; ii <= maxIndex; ii++) {
              var entry = cache[reverse ? maxIndex - ii : ii];
              if (fn(entry[1], useKeys ? entry[0] : ii, seq) === false) {
                return ii + 1;
              }
            }
            return ii;
          }
          return seq.__iterateUncached(fn, reverse);
        }

        function seqIterator(seq, type, reverse, useKeys) {
          var cache = seq._cache;
          if (cache) {
            var maxIndex = cache.length - 1;
            var ii = 0;
            return new Iterator(function () {
              var entry = cache[reverse ? maxIndex - ii : ii];
              return ii++ > maxIndex
                ? iteratorDone()
                : iteratorValue(type, useKeys ? entry[0] : ii - 1, entry[1]);
            });
          }
          return seq.__iteratorUncached(type, reverse);
        }

        function fromJS(json, converter) {
          return converter ? fromJSWith(converter, json, '', { '': json }) : fromJSDefault(json);
        }

        function fromJSWith(converter, json, key, parentJSON) {
          if (Array.isArray(json)) {
            return converter.call(
              parentJSON,
              key,
              IndexedSeq(json).map(function (v, k) {
                return fromJSWith(converter, v, k, json);
              })
            );
          }
          if (isPlainObj(json)) {
            return converter.call(
              parentJSON,
              key,
              KeyedSeq(json).map(function (v, k) {
                return fromJSWith(converter, v, k, json);
              })
            );
          }
          return json;
        }

        function fromJSDefault(json) {
          if (Array.isArray(json)) {
            return IndexedSeq(json).map(fromJSDefault).toList();
          }
          if (isPlainObj(json)) {
            return KeyedSeq(json).map(fromJSDefault).toMap();
          }
          return json;
        }

        function isPlainObj(value) {
          return value && (value.constructor === Object || value.constructor === undefined);
        }

        /**
         * An extension of the "same-value" algorithm as [described for use by ES6 Map
         * and Set](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map#Key_equality)
         *
         * NaN is considered the same as NaN, however -0 and 0 are considered the same
         * value, which is different from the algorithm described by
         * [`Object.is`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is).
         *
         * This is extended further to allow Objects to describe the values they
         * represent, by way of `valueOf` or `equals` (and `hashCode`).
         *
         * Note: because of this extension, the key equality of Immutable.Map and the
         * value equality of Immutable.Set will differ from ES6 Map and Set.
         *
         * ### Defining custom values
         *
         * The easiest way to describe the value an object represents is by implementing
         * `valueOf`. For example, `Date` represents a value by returning a unix
         * timestamp for `valueOf`:
         *
         *     var date1 = new Date(1234567890000); // Fri Feb 13 2009 ...
         *     var date2 = new Date(1234567890000);
         *     date1.valueOf(); // 1234567890000
         *     assert( date1 !== date2 );
         *     assert( Immutable.is( date1, date2 ) );
         *
         * Note: overriding `valueOf` may have other implications if you use this object
         * where JavaScript expects a primitive, such as implicit string coercion.
         *
         * For more complex types, especially collections, implementing `valueOf` may
         * not be performant. An alternative is to implement `equals` and `hashCode`.
         *
         * `equals` takes another object, presumably of similar type, and returns true
         * if the it is equal. Equality is symmetrical, so the same result should be
         * returned if this and the argument are flipped.
         *
         *     assert( a.equals(b) === b.equals(a) );
         *
         * `hashCode` returns a 32bit integer number representing the object which will
         * be used to determine how to store the value object in a Map or Set. You must
         * provide both or neither methods, one must not exist without the other.
         *
         * Also, an important relationship between these methods must be upheld: if two
         * values are equal, they *must* return the same hashCode. If the values are not
         * equal, they might have the same hashCode; this is called a hash collision,
         * and while undesirable for performance reasons, it is acceptable.
         *
         *     if (a.equals(b)) {
         *       assert( a.hashCode() === b.hashCode() );
         *     }
         *
         * All Immutable collections implement `equals` and `hashCode`.
         *
         */
        function is(valueA, valueB) {
          if (valueA === valueB || (valueA !== valueA && valueB !== valueB)) {
            return true;
          }
          if (!valueA || !valueB) {
            return false;
          }
          if (typeof valueA.valueOf === 'function' && typeof valueB.valueOf === 'function') {
            valueA = valueA.valueOf();
            valueB = valueB.valueOf();
            if (valueA === valueB || (valueA !== valueA && valueB !== valueB)) {
              return true;
            }
            if (!valueA || !valueB) {
              return false;
            }
          }
          if (
            typeof valueA.equals === 'function' &&
            typeof valueB.equals === 'function' &&
            valueA.equals(valueB)
          ) {
            return true;
          }
          return false;
        }

        function deepEqual(a, b) {
          if (a === b) {
            return true;
          }

          if (
            !isIterable(b) ||
            (a.size !== undefined && b.size !== undefined && a.size !== b.size) ||
            (a.__hash !== undefined && b.__hash !== undefined && a.__hash !== b.__hash) ||
            isKeyed(a) !== isKeyed(b) ||
            isIndexed(a) !== isIndexed(b) ||
            isOrdered(a) !== isOrdered(b)
          ) {
            return false;
          }

          if (a.size === 0 && b.size === 0) {
            return true;
          }

          var notAssociative = !isAssociative(a);

          if (isOrdered(a)) {
            var entries = a.entries();
            return (
              b.every(function (v, k) {
                var entry = entries.next().value;
                return entry && is(entry[1], v) && (notAssociative || is(entry[0], k));
              }) && entries.next().done
            );
          }

          var flipped = false;

          if (a.size === undefined) {
            if (b.size === undefined) {
              if (typeof a.cacheResult === 'function') {
                a.cacheResult();
              }
            } else {
              flipped = true;
              var _ = a;
              a = b;
              b = _;
            }
          }

          var allEqual = true;
          var bSize = b.__iterate(function (v, k) {
            if (
              notAssociative
                ? !a.has(v)
                : flipped
                ? !is(v, a.get(k, NOT_SET))
                : !is(a.get(k, NOT_SET), v)
            ) {
              allEqual = false;
              return false;
            }
          });

          return allEqual && a.size === bSize;
        }

        createClass(Repeat, IndexedSeq);

        function Repeat(value, times) {
          if (!(this instanceof Repeat)) {
            return new Repeat(value, times);
          }
          this._value = value;
          this.size = times === undefined ? Infinity : Math.max(0, times);
          if (this.size === 0) {
            if (EMPTY_REPEAT) {
              return EMPTY_REPEAT;
            }
            EMPTY_REPEAT = this;
          }
        }

        Repeat.prototype.toString = function () {
          if (this.size === 0) {
            return 'Repeat []';
          }
          return 'Repeat [ ' + this._value + ' ' + this.size + ' times ]';
        };

        Repeat.prototype.get = function (index, notSetValue) {
          return this.has(index) ? this._value : notSetValue;
        };

        Repeat.prototype.includes = function (searchValue) {
          return is(this._value, searchValue);
        };

        Repeat.prototype.slice = function (begin, end) {
          var size = this.size;
          return wholeSlice(begin, end, size)
            ? this
            : new Repeat(this._value, resolveEnd(end, size) - resolveBegin(begin, size));
        };

        Repeat.prototype.reverse = function () {
          return this;
        };

        Repeat.prototype.indexOf = function (searchValue) {
          if (is(this._value, searchValue)) {
            return 0;
          }
          return -1;
        };

        Repeat.prototype.lastIndexOf = function (searchValue) {
          if (is(this._value, searchValue)) {
            return this.size;
          }
          return -1;
        };

        Repeat.prototype.__iterate = function (fn, reverse) {
          for (var ii = 0; ii < this.size; ii++) {
            if (fn(this._value, ii, this) === false) {
              return ii + 1;
            }
          }
          return ii;
        };

        Repeat.prototype.__iterator = function (type, reverse) {
          var this$0 = this;
          var ii = 0;
          return new Iterator(function () {
            return ii < this$0.size ? iteratorValue(type, ii++, this$0._value) : iteratorDone();
          });
        };

        Repeat.prototype.equals = function (other) {
          return other instanceof Repeat ? is(this._value, other._value) : deepEqual(other);
        };

        var EMPTY_REPEAT;

        function invariant(condition, error) {
          if (!condition) throw new Error(error);
        }

        createClass(Range, IndexedSeq);

        function Range(start, end, step) {
          if (!(this instanceof Range)) {
            return new Range(start, end, step);
          }
          invariant(step !== 0, 'Cannot step a Range by 0');
          start = start || 0;
          if (end === undefined) {
            end = Infinity;
          }
          step = step === undefined ? 1 : Math.abs(step);
          if (end < start) {
            step = -step;
          }
          this._start = start;
          this._end = end;
          this._step = step;
          this.size = Math.max(0, Math.ceil((end - start) / step - 1) + 1);
          if (this.size === 0) {
            if (EMPTY_RANGE) {
              return EMPTY_RANGE;
            }
            EMPTY_RANGE = this;
          }
        }

        Range.prototype.toString = function () {
          if (this.size === 0) {
            return 'Range []';
          }
          return (
            'Range [ ' +
            this._start +
            '...' +
            this._end +
            (this._step !== 1 ? ' by ' + this._step : '') +
            ' ]'
          );
        };

        Range.prototype.get = function (index, notSetValue) {
          return this.has(index) ? this._start + wrapIndex(this, index) * this._step : notSetValue;
        };

        Range.prototype.includes = function (searchValue) {
          var possibleIndex = (searchValue - this._start) / this._step;
          return (
            possibleIndex >= 0 &&
            possibleIndex < this.size &&
            possibleIndex === Math.floor(possibleIndex)
          );
        };

        Range.prototype.slice = function (begin, end) {
          if (wholeSlice(begin, end, this.size)) {
            return this;
          }
          begin = resolveBegin(begin, this.size);
          end = resolveEnd(end, this.size);
          if (end <= begin) {
            return new Range(0, 0);
          }
          return new Range(this.get(begin, this._end), this.get(end, this._end), this._step);
        };

        Range.prototype.indexOf = function (searchValue) {
          var offsetValue = searchValue - this._start;
          if (offsetValue % this._step === 0) {
            var index = offsetValue / this._step;
            if (index >= 0 && index < this.size) {
              return index;
            }
          }
          return -1;
        };

        Range.prototype.lastIndexOf = function (searchValue) {
          return this.indexOf(searchValue);
        };

        Range.prototype.__iterate = function (fn, reverse) {
          var maxIndex = this.size - 1;
          var step = this._step;
          var value = reverse ? this._start + maxIndex * step : this._start;
          for (var ii = 0; ii <= maxIndex; ii++) {
            if (fn(value, ii, this) === false) {
              return ii + 1;
            }
            value += reverse ? -step : step;
          }
          return ii;
        };

        Range.prototype.__iterator = function (type, reverse) {
          var maxIndex = this.size - 1;
          var step = this._step;
          var value = reverse ? this._start + maxIndex * step : this._start;
          var ii = 0;
          return new Iterator(function () {
            var v = value;
            value += reverse ? -step : step;
            return ii > maxIndex ? iteratorDone() : iteratorValue(type, ii++, v);
          });
        };

        Range.prototype.equals = function (other) {
          return other instanceof Range
            ? this._start === other._start && this._end === other._end && this._step === other._step
            : deepEqual(this, other);
        };

        var EMPTY_RANGE;

        createClass(Collection, Iterable);
        function Collection() {
          throw TypeError('Abstract');
        }

        createClass(KeyedCollection, Collection);
        function KeyedCollection() {}

        createClass(IndexedCollection, Collection);
        function IndexedCollection() {}

        createClass(SetCollection, Collection);
        function SetCollection() {}

        Collection.Keyed = KeyedCollection;
        Collection.Indexed = IndexedCollection;
        Collection.Set = SetCollection;

        var imul =
          typeof Math.imul === 'function' && Math.imul(0xffffffff, 2) === -2
            ? Math.imul
            : function imul(a, b) {
                a = a | 0; // int
                b = b | 0; // int
                var c = a & 0xffff;
                var d = b & 0xffff;
                // Shift by 0 fixes the sign on the high part.
                return (c * d + ((((a >>> 16) * d + c * (b >>> 16)) << 16) >>> 0)) | 0; // int
              };

        // v8 has an optimization for storing 31-bit signed numbers.
        // Values which have either 00 or 11 as the high order bits qualify.
        // This function drops the highest order bit in a signed number, maintaining
        // the sign bit.
        function smi(i32) {
          return ((i32 >>> 1) & 0x40000000) | (i32 & 0xbfffffff);
        }

        function hash(o) {
          if (o === false || o === null || o === undefined) {
            return 0;
          }
          if (typeof o.valueOf === 'function') {
            o = o.valueOf();
            if (o === false || o === null || o === undefined) {
              return 0;
            }
          }
          if (o === true) {
            return 1;
          }
          var type = typeof o;
          if (type === 'number') {
            if (o !== o || o === Infinity) {
              return 0;
            }
            var h = o | 0;
            if (h !== o) {
              h ^= o * 0xffffffff;
            }
            while (o > 0xffffffff) {
              o /= 0xffffffff;
              h ^= o;
            }
            return smi(h);
          }
          if (type === 'string') {
            return o.length > STRING_HASH_CACHE_MIN_STRLEN ? cachedHashString(o) : hashString(o);
          }
          if (typeof o.hashCode === 'function') {
            return o.hashCode();
          }
          if (type === 'object') {
            return hashJSObj(o);
          }
          if (typeof o.toString === 'function') {
            return hashString(o.toString());
          }
          throw new Error('Value type ' + type + ' cannot be hashed.');
        }

        function cachedHashString(string) {
          var hash = stringHashCache[string];
          if (hash === undefined) {
            hash = hashString(string);
            if (STRING_HASH_CACHE_SIZE === STRING_HASH_CACHE_MAX_SIZE) {
              STRING_HASH_CACHE_SIZE = 0;
              stringHashCache = {};
            }
            STRING_HASH_CACHE_SIZE++;
            stringHashCache[string] = hash;
          }
          return hash;
        }

        // http://jsperf.com/hashing-strings
        function hashString(string) {
          // This is the hash from JVM
          // The hash code for a string is computed as
          // s[0] * 31 ^ (n - 1) + s[1] * 31 ^ (n - 2) + ... + s[n - 1],
          // where s[i] is the ith character of the string and n is the length of
          // the string. We "mod" the result to make it between 0 (inclusive) and 2^31
          // (exclusive) by dropping high bits.
          var hash = 0;
          for (var ii = 0; ii < string.length; ii++) {
            hash = (31 * hash + string.charCodeAt(ii)) | 0;
          }
          return smi(hash);
        }

        function hashJSObj(obj) {
          var hash;
          if (usingWeakMap) {
            hash = weakMap.get(obj);
            if (hash !== undefined) {
              return hash;
            }
          }

          hash = obj[UID_HASH_KEY];
          if (hash !== undefined) {
            return hash;
          }

          if (!canDefineProperty) {
            hash = obj.propertyIsEnumerable && obj.propertyIsEnumerable[UID_HASH_KEY];
            if (hash !== undefined) {
              return hash;
            }

            hash = getIENodeHash(obj);
            if (hash !== undefined) {
              return hash;
            }
          }

          hash = ++objHashUID;
          if (objHashUID & 0x40000000) {
            objHashUID = 0;
          }

          if (usingWeakMap) {
            weakMap.set(obj, hash);
          } else if (isExtensible !== undefined && isExtensible(obj) === false) {
            throw new Error('Non-extensible objects are not allowed as keys.');
          } else if (canDefineProperty) {
            Object.defineProperty(obj, UID_HASH_KEY, {
              enumerable: false,
              configurable: false,
              writable: false,
              value: hash,
            });
          } else if (
            obj.propertyIsEnumerable !== undefined &&
            obj.propertyIsEnumerable === obj.constructor.prototype.propertyIsEnumerable
          ) {
            // Since we can't define a non-enumerable property on the object
            // we'll hijack one of the less-used non-enumerable properties to
            // save our hash on it. Since this is a function it will not show up in
            // `JSON.stringify` which is what we want.
            obj.propertyIsEnumerable = function () {
              return this.constructor.prototype.propertyIsEnumerable.apply(this, arguments);
            };
            obj.propertyIsEnumerable[UID_HASH_KEY] = hash;
          } else if (obj.nodeType !== undefined) {
            // At this point we couldn't get the IE `uniqueID` to use as a hash
            // and we couldn't use a non-enumerable property to exploit the
            // dontEnum bug so we simply add the `UID_HASH_KEY` on the node
            // itself.
            obj[UID_HASH_KEY] = hash;
          } else {
            throw new Error('Unable to set a non-enumerable property on object.');
          }

          return hash;
        }

        // Get references to ES5 object methods.
        var isExtensible = Object.isExtensible;

        // True if Object.defineProperty works as expected. IE8 fails this test.
        var canDefineProperty = (function () {
          try {
            Object.defineProperty({}, '@', {});
            return true;
          } catch (e) {
            return false;
          }
        })();

        // IE has a `uniqueID` property on DOM nodes. We can construct the hash from it
        // and avoid memory leaks from the IE cloneNode bug.
        function getIENodeHash(node) {
          if (node && node.nodeType > 0) {
            switch (node.nodeType) {
              case 1: // Element
                return node.uniqueID;
              case 9: // Document
                return node.documentElement && node.documentElement.uniqueID;
            }
          }
        }

        // If possible, use a WeakMap.
        var usingWeakMap = typeof WeakMap === 'function';
        var weakMap;
        if (usingWeakMap) {
          weakMap = new WeakMap();
        }

        var objHashUID = 0;

        var UID_HASH_KEY = '__immutablehash__';
        if (typeof Symbol === 'function') {
          UID_HASH_KEY = Symbol(UID_HASH_KEY);
        }

        var STRING_HASH_CACHE_MIN_STRLEN = 16;
        var STRING_HASH_CACHE_MAX_SIZE = 255;
        var STRING_HASH_CACHE_SIZE = 0;
        var stringHashCache = {};

        function assertNotInfinite(size) {
          invariant(size !== Infinity, 'Cannot perform this action with an infinite size.');
        }

        createClass(Map, KeyedCollection);

        // @pragma Construction

        function Map(value) {
          return value === null || value === undefined
            ? emptyMap()
            : isMap(value) && !isOrdered(value)
            ? value
            : emptyMap().withMutations(function (map) {
                var iter = KeyedIterable(value);
                assertNotInfinite(iter.size);
                iter.forEach(function (v, k) {
                  return map.set(k, v);
                });
              });
        }

        Map.of = function () {
          var keyValues = SLICE$0.call(arguments, 0);
          return emptyMap().withMutations(function (map) {
            for (var i = 0; i < keyValues.length; i += 2) {
              if (i + 1 >= keyValues.length) {
                throw new Error('Missing value for key: ' + keyValues[i]);
              }
              map.set(keyValues[i], keyValues[i + 1]);
            }
          });
        };

        Map.prototype.toString = function () {
          return this.__toString('Map {', '}');
        };

        // @pragma Access

        Map.prototype.get = function (k, notSetValue) {
          return this._root ? this._root.get(0, undefined, k, notSetValue) : notSetValue;
        };

        // @pragma Modification

        Map.prototype.set = function (k, v) {
          return updateMap(this, k, v);
        };

        Map.prototype.setIn = function (keyPath, v) {
          return this.updateIn(keyPath, NOT_SET, function () {
            return v;
          });
        };

        Map.prototype.remove = function (k) {
          return updateMap(this, k, NOT_SET);
        };

        Map.prototype.deleteIn = function (keyPath) {
          return this.updateIn(keyPath, function () {
            return NOT_SET;
          });
        };

        Map.prototype.update = function (k, notSetValue, updater) {
          return arguments.length === 1 ? k(this) : this.updateIn([k], notSetValue, updater);
        };

        Map.prototype.updateIn = function (keyPath, notSetValue, updater) {
          if (!updater) {
            updater = notSetValue;
            notSetValue = undefined;
          }
          var updatedValue = updateInDeepMap(this, forceIterator(keyPath), notSetValue, updater);
          return updatedValue === NOT_SET ? undefined : updatedValue;
        };

        Map.prototype.clear = function () {
          if (this.size === 0) {
            return this;
          }
          if (this.__ownerID) {
            this.size = 0;
            this._root = null;
            this.__hash = undefined;
            this.__altered = true;
            return this;
          }
          return emptyMap();
        };

        // @pragma Composition

        Map.prototype.merge = function (/*...iters*/) {
          return mergeIntoMapWith(this, undefined, arguments);
        };

        Map.prototype.mergeWith = function (merger) {
          var iters = SLICE$0.call(arguments, 1);
          return mergeIntoMapWith(this, merger, iters);
        };

        Map.prototype.mergeIn = function (keyPath) {
          var iters = SLICE$0.call(arguments, 1);
          return this.updateIn(keyPath, emptyMap(), function (m) {
            return typeof m.merge === 'function'
              ? m.merge.apply(m, iters)
              : iters[iters.length - 1];
          });
        };

        Map.prototype.mergeDeep = function (/*...iters*/) {
          return mergeIntoMapWith(this, deepMerger, arguments);
        };

        Map.prototype.mergeDeepWith = function (merger) {
          var iters = SLICE$0.call(arguments, 1);
          return mergeIntoMapWith(this, deepMergerWith(merger), iters);
        };

        Map.prototype.mergeDeepIn = function (keyPath) {
          var iters = SLICE$0.call(arguments, 1);
          return this.updateIn(keyPath, emptyMap(), function (m) {
            return typeof m.mergeDeep === 'function'
              ? m.mergeDeep.apply(m, iters)
              : iters[iters.length - 1];
          });
        };

        Map.prototype.sort = function (comparator) {
          // Late binding
          return OrderedMap(sortFactory(this, comparator));
        };

        Map.prototype.sortBy = function (mapper, comparator) {
          // Late binding
          return OrderedMap(sortFactory(this, comparator, mapper));
        };

        // @pragma Mutability

        Map.prototype.withMutations = function (fn) {
          var mutable = this.asMutable();
          fn(mutable);
          return mutable.wasAltered() ? mutable.__ensureOwner(this.__ownerID) : this;
        };

        Map.prototype.asMutable = function () {
          return this.__ownerID ? this : this.__ensureOwner(new OwnerID());
        };

        Map.prototype.asImmutable = function () {
          return this.__ensureOwner();
        };

        Map.prototype.wasAltered = function () {
          return this.__altered;
        };

        Map.prototype.__iterator = function (type, reverse) {
          return new MapIterator(this, type, reverse);
        };

        Map.prototype.__iterate = function (fn, reverse) {
          var this$0 = this;
          var iterations = 0;
          this._root &&
            this._root.iterate(function (entry) {
              iterations++;
              return fn(entry[1], entry[0], this$0);
            }, reverse);
          return iterations;
        };

        Map.prototype.__ensureOwner = function (ownerID) {
          if (ownerID === this.__ownerID) {
            return this;
          }
          if (!ownerID) {
            this.__ownerID = ownerID;
            this.__altered = false;
            return this;
          }
          return makeMap(this.size, this._root, ownerID, this.__hash);
        };

        function isMap(maybeMap) {
          return !!(maybeMap && maybeMap[IS_MAP_SENTINEL]);
        }

        Map.isMap = isMap;

        var IS_MAP_SENTINEL = '@@__IMMUTABLE_MAP__@@';

        var MapPrototype = Map.prototype;
        MapPrototype[IS_MAP_SENTINEL] = true;
        MapPrototype[DELETE] = MapPrototype.remove;
        MapPrototype.removeIn = MapPrototype.deleteIn;

        // #pragma Trie Nodes

        function ArrayMapNode(ownerID, entries) {
          this.ownerID = ownerID;
          this.entries = entries;
        }

        ArrayMapNode.prototype.get = function (shift, keyHash, key, notSetValue) {
          var entries = this.entries;
          for (var ii = 0, len = entries.length; ii < len; ii++) {
            if (is(key, entries[ii][0])) {
              return entries[ii][1];
            }
          }
          return notSetValue;
        };

        ArrayMapNode.prototype.update = function (
          ownerID,
          shift,
          keyHash,
          key,
          value,
          didChangeSize,
          didAlter
        ) {
          var removed = value === NOT_SET;

          var entries = this.entries;
          var idx = 0;
          for (var len = entries.length; idx < len; idx++) {
            if (is(key, entries[idx][0])) {
              break;
            }
          }
          var exists = idx < len;

          if (exists ? entries[idx][1] === value : removed) {
            return this;
          }

          SetRef(didAlter);
          (removed || !exists) && SetRef(didChangeSize);

          if (removed && entries.length === 1) {
            return; // undefined
          }

          if (!exists && !removed && entries.length >= MAX_ARRAY_MAP_SIZE) {
            return createNodes(ownerID, entries, key, value);
          }

          var isEditable = ownerID && ownerID === this.ownerID;
          var newEntries = isEditable ? entries : arrCopy(entries);

          if (exists) {
            if (removed) {
              idx === len - 1 ? newEntries.pop() : (newEntries[idx] = newEntries.pop());
            } else {
              newEntries[idx] = [key, value];
            }
          } else {
            newEntries.push([key, value]);
          }

          if (isEditable) {
            this.entries = newEntries;
            return this;
          }

          return new ArrayMapNode(ownerID, newEntries);
        };

        function BitmapIndexedNode(ownerID, bitmap, nodes) {
          this.ownerID = ownerID;
          this.bitmap = bitmap;
          this.nodes = nodes;
        }

        BitmapIndexedNode.prototype.get = function (shift, keyHash, key, notSetValue) {
          if (keyHash === undefined) {
            keyHash = hash(key);
          }
          var bit = 1 << ((shift === 0 ? keyHash : keyHash >>> shift) & MASK);
          var bitmap = this.bitmap;
          return (bitmap & bit) === 0
            ? notSetValue
            : this.nodes[popCount(bitmap & (bit - 1))].get(
                shift + SHIFT,
                keyHash,
                key,
                notSetValue
              );
        };

        BitmapIndexedNode.prototype.update = function (
          ownerID,
          shift,
          keyHash,
          key,
          value,
          didChangeSize,
          didAlter
        ) {
          if (keyHash === undefined) {
            keyHash = hash(key);
          }
          var keyHashFrag = (shift === 0 ? keyHash : keyHash >>> shift) & MASK;
          var bit = 1 << keyHashFrag;
          var bitmap = this.bitmap;
          var exists = (bitmap & bit) !== 0;

          if (!exists && value === NOT_SET) {
            return this;
          }

          var idx = popCount(bitmap & (bit - 1));
          var nodes = this.nodes;
          var node = exists ? nodes[idx] : undefined;
          var newNode = updateNode(
            node,
            ownerID,
            shift + SHIFT,
            keyHash,
            key,
            value,
            didChangeSize,
            didAlter
          );

          if (newNode === node) {
            return this;
          }

          if (!exists && newNode && nodes.length >= MAX_BITMAP_INDEXED_SIZE) {
            return expandNodes(ownerID, nodes, bitmap, keyHashFrag, newNode);
          }

          if (exists && !newNode && nodes.length === 2 && isLeafNode(nodes[idx ^ 1])) {
            return nodes[idx ^ 1];
          }

          if (exists && newNode && nodes.length === 1 && isLeafNode(newNode)) {
            return newNode;
          }

          var isEditable = ownerID && ownerID === this.ownerID;
          var newBitmap = exists ? (newNode ? bitmap : bitmap ^ bit) : bitmap | bit;
          var newNodes = exists
            ? newNode
              ? setIn(nodes, idx, newNode, isEditable)
              : spliceOut(nodes, idx, isEditable)
            : spliceIn(nodes, idx, newNode, isEditable);

          if (isEditable) {
            this.bitmap = newBitmap;
            this.nodes = newNodes;
            return this;
          }

          return new BitmapIndexedNode(ownerID, newBitmap, newNodes);
        };

        function HashArrayMapNode(ownerID, count, nodes) {
          this.ownerID = ownerID;
          this.count = count;
          this.nodes = nodes;
        }

        HashArrayMapNode.prototype.get = function (shift, keyHash, key, notSetValue) {
          if (keyHash === undefined) {
            keyHash = hash(key);
          }
          var idx = (shift === 0 ? keyHash : keyHash >>> shift) & MASK;
          var node = this.nodes[idx];
          return node ? node.get(shift + SHIFT, keyHash, key, notSetValue) : notSetValue;
        };

        HashArrayMapNode.prototype.update = function (
          ownerID,
          shift,
          keyHash,
          key,
          value,
          didChangeSize,
          didAlter
        ) {
          if (keyHash === undefined) {
            keyHash = hash(key);
          }
          var idx = (shift === 0 ? keyHash : keyHash >>> shift) & MASK;
          var removed = value === NOT_SET;
          var nodes = this.nodes;
          var node = nodes[idx];

          if (removed && !node) {
            return this;
          }

          var newNode = updateNode(
            node,
            ownerID,
            shift + SHIFT,
            keyHash,
            key,
            value,
            didChangeSize,
            didAlter
          );
          if (newNode === node) {
            return this;
          }

          var newCount = this.count;
          if (!node) {
            newCount++;
          } else if (!newNode) {
            newCount--;
            if (newCount < MIN_HASH_ARRAY_MAP_SIZE) {
              return packNodes(ownerID, nodes, newCount, idx);
            }
          }

          var isEditable = ownerID && ownerID === this.ownerID;
          var newNodes = setIn(nodes, idx, newNode, isEditable);

          if (isEditable) {
            this.count = newCount;
            this.nodes = newNodes;
            return this;
          }

          return new HashArrayMapNode(ownerID, newCount, newNodes);
        };

        function HashCollisionNode(ownerID, keyHash, entries) {
          this.ownerID = ownerID;
          this.keyHash = keyHash;
          this.entries = entries;
        }

        HashCollisionNode.prototype.get = function (shift, keyHash, key, notSetValue) {
          var entries = this.entries;
          for (var ii = 0, len = entries.length; ii < len; ii++) {
            if (is(key, entries[ii][0])) {
              return entries[ii][1];
            }
          }
          return notSetValue;
        };

        HashCollisionNode.prototype.update = function (
          ownerID,
          shift,
          keyHash,
          key,
          value,
          didChangeSize,
          didAlter
        ) {
          if (keyHash === undefined) {
            keyHash = hash(key);
          }

          var removed = value === NOT_SET;

          if (keyHash !== this.keyHash) {
            if (removed) {
              return this;
            }
            SetRef(didAlter);
            SetRef(didChangeSize);
            return mergeIntoNode(this, ownerID, shift, keyHash, [key, value]);
          }

          var entries = this.entries;
          var idx = 0;
          for (var len = entries.length; idx < len; idx++) {
            if (is(key, entries[idx][0])) {
              break;
            }
          }
          var exists = idx < len;

          if (exists ? entries[idx][1] === value : removed) {
            return this;
          }

          SetRef(didAlter);
          (removed || !exists) && SetRef(didChangeSize);

          if (removed && len === 2) {
            return new ValueNode(ownerID, this.keyHash, entries[idx ^ 1]);
          }

          var isEditable = ownerID && ownerID === this.ownerID;
          var newEntries = isEditable ? entries : arrCopy(entries);

          if (exists) {
            if (removed) {
              idx === len - 1 ? newEntries.pop() : (newEntries[idx] = newEntries.pop());
            } else {
              newEntries[idx] = [key, value];
            }
          } else {
            newEntries.push([key, value]);
          }

          if (isEditable) {
            this.entries = newEntries;
            return this;
          }

          return new HashCollisionNode(ownerID, this.keyHash, newEntries);
        };

        function ValueNode(ownerID, keyHash, entry) {
          this.ownerID = ownerID;
          this.keyHash = keyHash;
          this.entry = entry;
        }

        ValueNode.prototype.get = function (shift, keyHash, key, notSetValue) {
          return is(key, this.entry[0]) ? this.entry[1] : notSetValue;
        };

        ValueNode.prototype.update = function (
          ownerID,
          shift,
          keyHash,
          key,
          value,
          didChangeSize,
          didAlter
        ) {
          var removed = value === NOT_SET;
          var keyMatch = is(key, this.entry[0]);
          if (keyMatch ? value === this.entry[1] : removed) {
            return this;
          }

          SetRef(didAlter);

          if (removed) {
            SetRef(didChangeSize);
            return; // undefined
          }

          if (keyMatch) {
            if (ownerID && ownerID === this.ownerID) {
              this.entry[1] = value;
              return this;
            }
            return new ValueNode(ownerID, this.keyHash, [key, value]);
          }

          SetRef(didChangeSize);
          return mergeIntoNode(this, ownerID, shift, hash(key), [key, value]);
        };

        // #pragma Iterators

        ArrayMapNode.prototype.iterate = HashCollisionNode.prototype.iterate = function (
          fn,
          reverse
        ) {
          var entries = this.entries;
          for (var ii = 0, maxIndex = entries.length - 1; ii <= maxIndex; ii++) {
            if (fn(entries[reverse ? maxIndex - ii : ii]) === false) {
              return false;
            }
          }
        };

        BitmapIndexedNode.prototype.iterate = HashArrayMapNode.prototype.iterate = function (
          fn,
          reverse
        ) {
          var nodes = this.nodes;
          for (var ii = 0, maxIndex = nodes.length - 1; ii <= maxIndex; ii++) {
            var node = nodes[reverse ? maxIndex - ii : ii];
            if (node && node.iterate(fn, reverse) === false) {
              return false;
            }
          }
        };

        ValueNode.prototype.iterate = function (fn, reverse) {
          return fn(this.entry);
        };

        createClass(MapIterator, Iterator);

        function MapIterator(map, type, reverse) {
          this._type = type;
          this._reverse = reverse;
          this._stack = map._root && mapIteratorFrame(map._root);
        }

        MapIterator.prototype.next = function () {
          var type = this._type;
          var stack = this._stack;
          while (stack) {
            var node = stack.node;
            var index = stack.index++;
            var maxIndex;
            if (node.entry) {
              if (index === 0) {
                return mapIteratorValue(type, node.entry);
              }
            } else if (node.entries) {
              maxIndex = node.entries.length - 1;
              if (index <= maxIndex) {
                return mapIteratorValue(
                  type,
                  node.entries[this._reverse ? maxIndex - index : index]
                );
              }
            } else {
              maxIndex = node.nodes.length - 1;
              if (index <= maxIndex) {
                var subNode = node.nodes[this._reverse ? maxIndex - index : index];
                if (subNode) {
                  if (subNode.entry) {
                    return mapIteratorValue(type, subNode.entry);
                  }
                  stack = this._stack = mapIteratorFrame(subNode, stack);
                }
                continue;
              }
            }
            stack = this._stack = this._stack.__prev;
          }
          return iteratorDone();
        };

        function mapIteratorValue(type, entry) {
          return iteratorValue(type, entry[0], entry[1]);
        }

        function mapIteratorFrame(node, prev) {
          return {
            node: node,
            index: 0,
            __prev: prev,
          };
        }

        function makeMap(size, root, ownerID, hash) {
          var map = Object.create(MapPrototype);
          map.size = size;
          map._root = root;
          map.__ownerID = ownerID;
          map.__hash = hash;
          map.__altered = false;
          return map;
        }

        var EMPTY_MAP;
        function emptyMap() {
          return EMPTY_MAP || (EMPTY_MAP = makeMap(0));
        }

        function updateMap(map, k, v) {
          var newRoot;
          var newSize;
          if (!map._root) {
            if (v === NOT_SET) {
              return map;
            }
            newSize = 1;
            newRoot = new ArrayMapNode(map.__ownerID, [[k, v]]);
          } else {
            var didChangeSize = MakeRef(CHANGE_LENGTH);
            var didAlter = MakeRef(DID_ALTER);
            newRoot = updateNode(
              map._root,
              map.__ownerID,
              0,
              undefined,
              k,
              v,
              didChangeSize,
              didAlter
            );
            if (!didAlter.value) {
              return map;
            }
            newSize = map.size + (didChangeSize.value ? (v === NOT_SET ? -1 : 1) : 0);
          }
          if (map.__ownerID) {
            map.size = newSize;
            map._root = newRoot;
            map.__hash = undefined;
            map.__altered = true;
            return map;
          }
          return newRoot ? makeMap(newSize, newRoot) : emptyMap();
        }

        function updateNode(node, ownerID, shift, keyHash, key, value, didChangeSize, didAlter) {
          if (!node) {
            if (value === NOT_SET) {
              return node;
            }
            SetRef(didAlter);
            SetRef(didChangeSize);
            return new ValueNode(ownerID, keyHash, [key, value]);
          }
          return node.update(ownerID, shift, keyHash, key, value, didChangeSize, didAlter);
        }

        function isLeafNode(node) {
          return node.constructor === ValueNode || node.constructor === HashCollisionNode;
        }

        function mergeIntoNode(node, ownerID, shift, keyHash, entry) {
          if (node.keyHash === keyHash) {
            return new HashCollisionNode(ownerID, keyHash, [node.entry, entry]);
          }

          var idx1 = (shift === 0 ? node.keyHash : node.keyHash >>> shift) & MASK;
          var idx2 = (shift === 0 ? keyHash : keyHash >>> shift) & MASK;

          var newNode;
          var nodes =
            idx1 === idx2
              ? [mergeIntoNode(node, ownerID, shift + SHIFT, keyHash, entry)]
              : ((newNode = new ValueNode(ownerID, keyHash, entry)),
                idx1 < idx2 ? [node, newNode] : [newNode, node]);

          return new BitmapIndexedNode(ownerID, (1 << idx1) | (1 << idx2), nodes);
        }

        function createNodes(ownerID, entries, key, value) {
          if (!ownerID) {
            ownerID = new OwnerID();
          }
          var node = new ValueNode(ownerID, hash(key), [key, value]);
          for (var ii = 0; ii < entries.length; ii++) {
            var entry = entries[ii];
            node = node.update(ownerID, 0, undefined, entry[0], entry[1]);
          }
          return node;
        }

        function packNodes(ownerID, nodes, count, excluding) {
          var bitmap = 0;
          var packedII = 0;
          var packedNodes = new Array(count);
          for (var ii = 0, bit = 1, len = nodes.length; ii < len; ii++, bit <<= 1) {
            var node = nodes[ii];
            if (node !== undefined && ii !== excluding) {
              bitmap |= bit;
              packedNodes[packedII++] = node;
            }
          }
          return new BitmapIndexedNode(ownerID, bitmap, packedNodes);
        }

        function expandNodes(ownerID, nodes, bitmap, including, node) {
          var count = 0;
          var expandedNodes = new Array(SIZE);
          for (var ii = 0; bitmap !== 0; ii++, bitmap >>>= 1) {
            expandedNodes[ii] = bitmap & 1 ? nodes[count++] : undefined;
          }
          expandedNodes[including] = node;
          return new HashArrayMapNode(ownerID, count + 1, expandedNodes);
        }

        function mergeIntoMapWith(map, merger, iterables) {
          var iters = [];
          for (var ii = 0; ii < iterables.length; ii++) {
            var value = iterables[ii];
            var iter = KeyedIterable(value);
            if (!isIterable(value)) {
              iter = iter.map(function (v) {
                return fromJS(v);
              });
            }
            iters.push(iter);
          }
          return mergeIntoCollectionWith(map, merger, iters);
        }

        function deepMerger(existing, value, key) {
          return existing && existing.mergeDeep && isIterable(value)
            ? existing.mergeDeep(value)
            : is(existing, value)
            ? existing
            : value;
        }

        function deepMergerWith(merger) {
          return function (existing, value, key) {
            if (existing && existing.mergeDeepWith && isIterable(value)) {
              return existing.mergeDeepWith(merger, value);
            }
            var nextValue = merger(existing, value, key);
            return is(existing, nextValue) ? existing : nextValue;
          };
        }

        function mergeIntoCollectionWith(collection, merger, iters) {
          iters = iters.filter(function (x) {
            return x.size !== 0;
          });
          if (iters.length === 0) {
            return collection;
          }
          if (collection.size === 0 && !collection.__ownerID && iters.length === 1) {
            return collection.constructor(iters[0]);
          }
          return collection.withMutations(function (collection) {
            var mergeIntoMap = merger
              ? function (value, key) {
                  collection.update(key, NOT_SET, function (existing) {
                    return existing === NOT_SET ? value : merger(existing, value, key);
                  });
                }
              : function (value, key) {
                  collection.set(key, value);
                };
            for (var ii = 0; ii < iters.length; ii++) {
              iters[ii].forEach(mergeIntoMap);
            }
          });
        }

        function updateInDeepMap(existing, keyPathIter, notSetValue, updater) {
          var isNotSet = existing === NOT_SET;
          var step = keyPathIter.next();
          if (step.done) {
            var existingValue = isNotSet ? notSetValue : existing;
            var newValue = updater(existingValue);
            return newValue === existingValue ? existing : newValue;
          }
          invariant(isNotSet || (existing && existing.set), 'invalid keyPath');
          var key = step.value;
          var nextExisting = isNotSet ? NOT_SET : existing.get(key, NOT_SET);
          var nextUpdated = updateInDeepMap(nextExisting, keyPathIter, notSetValue, updater);
          return nextUpdated === nextExisting
            ? existing
            : nextUpdated === NOT_SET
            ? existing.remove(key)
            : (isNotSet ? emptyMap() : existing).set(key, nextUpdated);
        }

        function popCount(x) {
          x = x - ((x >> 1) & 0x55555555);
          x = (x & 0x33333333) + ((x >> 2) & 0x33333333);
          x = (x + (x >> 4)) & 0x0f0f0f0f;
          x = x + (x >> 8);
          x = x + (x >> 16);
          return x & 0x7f;
        }

        function setIn(array, idx, val, canEdit) {
          var newArray = canEdit ? array : arrCopy(array);
          newArray[idx] = val;
          return newArray;
        }

        function spliceIn(array, idx, val, canEdit) {
          var newLen = array.length + 1;
          if (canEdit && idx + 1 === newLen) {
            array[idx] = val;
            return array;
          }
          var newArray = new Array(newLen);
          var after = 0;
          for (var ii = 0; ii < newLen; ii++) {
            if (ii === idx) {
              newArray[ii] = val;
              after = -1;
            } else {
              newArray[ii] = array[ii + after];
            }
          }
          return newArray;
        }

        function spliceOut(array, idx, canEdit) {
          var newLen = array.length - 1;
          if (canEdit && idx === newLen) {
            array.pop();
            return array;
          }
          var newArray = new Array(newLen);
          var after = 0;
          for (var ii = 0; ii < newLen; ii++) {
            if (ii === idx) {
              after = 1;
            }
            newArray[ii] = array[ii + after];
          }
          return newArray;
        }

        var MAX_ARRAY_MAP_SIZE = SIZE / 4;
        var MAX_BITMAP_INDEXED_SIZE = SIZE / 2;
        var MIN_HASH_ARRAY_MAP_SIZE = SIZE / 4;

        createClass(List, IndexedCollection);

        // @pragma Construction

        function List(value) {
          var empty = emptyList();
          if (value === null || value === undefined) {
            return empty;
          }
          if (isList(value)) {
            return value;
          }
          var iter = IndexedIterable(value);
          var size = iter.size;
          if (size === 0) {
            return empty;
          }
          assertNotInfinite(size);
          if (size > 0 && size < SIZE) {
            return makeList(0, size, SHIFT, null, new VNode(iter.toArray()));
          }
          return empty.withMutations(function (list) {
            list.setSize(size);
            iter.forEach(function (v, i) {
              return list.set(i, v);
            });
          });
        }

        List.of = function (/*...values*/) {
          return this(arguments);
        };

        List.prototype.toString = function () {
          return this.__toString('List [', ']');
        };

        // @pragma Access

        List.prototype.get = function (index, notSetValue) {
          index = wrapIndex(this, index);
          if (index >= 0 && index < this.size) {
            index += this._origin;
            var node = listNodeFor(this, index);
            return node && node.array[index & MASK];
          }
          return notSetValue;
        };

        // @pragma Modification

        List.prototype.set = function (index, value) {
          return updateList(this, index, value);
        };

        List.prototype.remove = function (index) {
          return !this.has(index)
            ? this
            : index === 0
            ? this.shift()
            : index === this.size - 1
            ? this.pop()
            : this.splice(index, 1);
        };

        List.prototype.insert = function (index, value) {
          return this.splice(index, 0, value);
        };

        List.prototype.clear = function () {
          if (this.size === 0) {
            return this;
          }
          if (this.__ownerID) {
            this.size = this._origin = this._capacity = 0;
            this._level = SHIFT;
            this._root = this._tail = null;
            this.__hash = undefined;
            this.__altered = true;
            return this;
          }
          return emptyList();
        };

        List.prototype.push = function (/*...values*/) {
          var values = arguments;
          var oldSize = this.size;
          return this.withMutations(function (list) {
            setListBounds(list, 0, oldSize + values.length);
            for (var ii = 0; ii < values.length; ii++) {
              list.set(oldSize + ii, values[ii]);
            }
          });
        };

        List.prototype.pop = function () {
          return setListBounds(this, 0, -1);
        };

        List.prototype.unshift = function (/*...values*/) {
          var values = arguments;
          return this.withMutations(function (list) {
            setListBounds(list, -values.length);
            for (var ii = 0; ii < values.length; ii++) {
              list.set(ii, values[ii]);
            }
          });
        };

        List.prototype.shift = function () {
          return setListBounds(this, 1);
        };

        // @pragma Composition

        List.prototype.merge = function (/*...iters*/) {
          return mergeIntoListWith(this, undefined, arguments);
        };

        List.prototype.mergeWith = function (merger) {
          var iters = SLICE$0.call(arguments, 1);
          return mergeIntoListWith(this, merger, iters);
        };

        List.prototype.mergeDeep = function (/*...iters*/) {
          return mergeIntoListWith(this, deepMerger, arguments);
        };

        List.prototype.mergeDeepWith = function (merger) {
          var iters = SLICE$0.call(arguments, 1);
          return mergeIntoListWith(this, deepMergerWith(merger), iters);
        };

        List.prototype.setSize = function (size) {
          return setListBounds(this, 0, size);
        };

        // @pragma Iteration

        List.prototype.slice = function (begin, end) {
          var size = this.size;
          if (wholeSlice(begin, end, size)) {
            return this;
          }
          return setListBounds(this, resolveBegin(begin, size), resolveEnd(end, size));
        };

        List.prototype.__iterator = function (type, reverse) {
          var index = 0;
          var values = iterateList(this, reverse);
          return new Iterator(function () {
            var value = values();
            return value === DONE ? iteratorDone() : iteratorValue(type, index++, value);
          });
        };

        List.prototype.__iterate = function (fn, reverse) {
          var index = 0;
          var values = iterateList(this, reverse);
          var value;
          while ((value = values()) !== DONE) {
            if (fn(value, index++, this) === false) {
              break;
            }
          }
          return index;
        };

        List.prototype.__ensureOwner = function (ownerID) {
          if (ownerID === this.__ownerID) {
            return this;
          }
          if (!ownerID) {
            this.__ownerID = ownerID;
            return this;
          }
          return makeList(
            this._origin,
            this._capacity,
            this._level,
            this._root,
            this._tail,
            ownerID,
            this.__hash
          );
        };

        function isList(maybeList) {
          return !!(maybeList && maybeList[IS_LIST_SENTINEL]);
        }

        List.isList = isList;

        var IS_LIST_SENTINEL = '@@__IMMUTABLE_LIST__@@';

        var ListPrototype = List.prototype;
        ListPrototype[IS_LIST_SENTINEL] = true;
        ListPrototype[DELETE] = ListPrototype.remove;
        ListPrototype.setIn = MapPrototype.setIn;
        ListPrototype.deleteIn = ListPrototype.removeIn = MapPrototype.removeIn;
        ListPrototype.update = MapPrototype.update;
        ListPrototype.updateIn = MapPrototype.updateIn;
        ListPrototype.mergeIn = MapPrototype.mergeIn;
        ListPrototype.mergeDeepIn = MapPrototype.mergeDeepIn;
        ListPrototype.withMutations = MapPrototype.withMutations;
        ListPrototype.asMutable = MapPrototype.asMutable;
        ListPrototype.asImmutable = MapPrototype.asImmutable;
        ListPrototype.wasAltered = MapPrototype.wasAltered;

        function VNode(array, ownerID) {
          this.array = array;
          this.ownerID = ownerID;
        }

        // TODO: seems like these methods are very similar

        VNode.prototype.removeBefore = function (ownerID, level, index) {
          if (index === level ? 1 << level : 0 || this.array.length === 0) {
            return this;
          }
          var originIndex = (index >>> level) & MASK;
          if (originIndex >= this.array.length) {
            return new VNode([], ownerID);
          }
          var removingFirst = originIndex === 0;
          var newChild;
          if (level > 0) {
            var oldChild = this.array[originIndex];
            newChild = oldChild && oldChild.removeBefore(ownerID, level - SHIFT, index);
            if (newChild === oldChild && removingFirst) {
              return this;
            }
          }
          if (removingFirst && !newChild) {
            return this;
          }
          var editable = editableVNode(this, ownerID);
          if (!removingFirst) {
            for (var ii = 0; ii < originIndex; ii++) {
              editable.array[ii] = undefined;
            }
          }
          if (newChild) {
            editable.array[originIndex] = newChild;
          }
          return editable;
        };

        VNode.prototype.removeAfter = function (ownerID, level, index) {
          if (index === (level ? 1 << level : 0) || this.array.length === 0) {
            return this;
          }
          var sizeIndex = ((index - 1) >>> level) & MASK;
          if (sizeIndex >= this.array.length) {
            return this;
          }

          var newChild;
          if (level > 0) {
            var oldChild = this.array[sizeIndex];
            newChild = oldChild && oldChild.removeAfter(ownerID, level - SHIFT, index);
            if (newChild === oldChild && sizeIndex === this.array.length - 1) {
              return this;
            }
          }

          var editable = editableVNode(this, ownerID);
          editable.array.splice(sizeIndex + 1);
          if (newChild) {
            editable.array[sizeIndex] = newChild;
          }
          return editable;
        };

        var DONE = {};

        function iterateList(list, reverse) {
          var left = list._origin;
          var right = list._capacity;
          var tailPos = getTailOffset(right);
          var tail = list._tail;

          return iterateNodeOrLeaf(list._root, list._level, 0);

          function iterateNodeOrLeaf(node, level, offset) {
            return level === 0 ? iterateLeaf(node, offset) : iterateNode(node, level, offset);
          }

          function iterateLeaf(node, offset) {
            var array = offset === tailPos ? tail && tail.array : node && node.array;
            var from = offset > left ? 0 : left - offset;
            var to = right - offset;
            if (to > SIZE) {
              to = SIZE;
            }
            return function () {
              if (from === to) {
                return DONE;
              }
              var idx = reverse ? --to : from++;
              return array && array[idx];
            };
          }

          function iterateNode(node, level, offset) {
            var values;
            var array = node && node.array;
            var from = offset > left ? 0 : (left - offset) >> level;
            var to = ((right - offset) >> level) + 1;
            if (to > SIZE) {
              to = SIZE;
            }
            return function () {
              do {
                if (values) {
                  var value = values();
                  if (value !== DONE) {
                    return value;
                  }
                  values = null;
                }
                if (from === to) {
                  return DONE;
                }
                var idx = reverse ? --to : from++;
                values = iterateNodeOrLeaf(
                  array && array[idx],
                  level - SHIFT,
                  offset + (idx << level)
                );
              } while (true);
            };
          }
        }

        function makeList(origin, capacity, level, root, tail, ownerID, hash) {
          var list = Object.create(ListPrototype);
          list.size = capacity - origin;
          list._origin = origin;
          list._capacity = capacity;
          list._level = level;
          list._root = root;
          list._tail = tail;
          list.__ownerID = ownerID;
          list.__hash = hash;
          list.__altered = false;
          return list;
        }

        var EMPTY_LIST;
        function emptyList() {
          return EMPTY_LIST || (EMPTY_LIST = makeList(0, 0, SHIFT));
        }

        function updateList(list, index, value) {
          index = wrapIndex(list, index);

          if (index !== index) {
            return list;
          }

          if (index >= list.size || index < 0) {
            return list.withMutations(function (list) {
              index < 0
                ? setListBounds(list, index).set(0, value)
                : setListBounds(list, 0, index + 1).set(index, value);
            });
          }

          index += list._origin;

          var newTail = list._tail;
          var newRoot = list._root;
          var didAlter = MakeRef(DID_ALTER);
          if (index >= getTailOffset(list._capacity)) {
            newTail = updateVNode(newTail, list.__ownerID, 0, index, value, didAlter);
          } else {
            newRoot = updateVNode(newRoot, list.__ownerID, list._level, index, value, didAlter);
          }

          if (!didAlter.value) {
            return list;
          }

          if (list.__ownerID) {
            list._root = newRoot;
            list._tail = newTail;
            list.__hash = undefined;
            list.__altered = true;
            return list;
          }
          return makeList(list._origin, list._capacity, list._level, newRoot, newTail);
        }

        function updateVNode(node, ownerID, level, index, value, didAlter) {
          var idx = (index >>> level) & MASK;
          var nodeHas = node && idx < node.array.length;
          if (!nodeHas && value === undefined) {
            return node;
          }

          var newNode;

          if (level > 0) {
            var lowerNode = node && node.array[idx];
            var newLowerNode = updateVNode(
              lowerNode,
              ownerID,
              level - SHIFT,
              index,
              value,
              didAlter
            );
            if (newLowerNode === lowerNode) {
              return node;
            }
            newNode = editableVNode(node, ownerID);
            newNode.array[idx] = newLowerNode;
            return newNode;
          }

          if (nodeHas && node.array[idx] === value) {
            return node;
          }

          SetRef(didAlter);

          newNode = editableVNode(node, ownerID);
          if (value === undefined && idx === newNode.array.length - 1) {
            newNode.array.pop();
          } else {
            newNode.array[idx] = value;
          }
          return newNode;
        }

        function editableVNode(node, ownerID) {
          if (ownerID && node && ownerID === node.ownerID) {
            return node;
          }
          return new VNode(node ? node.array.slice() : [], ownerID);
        }

        function listNodeFor(list, rawIndex) {
          if (rawIndex >= getTailOffset(list._capacity)) {
            return list._tail;
          }
          if (rawIndex < 1 << (list._level + SHIFT)) {
            var node = list._root;
            var level = list._level;
            while (node && level > 0) {
              node = node.array[(rawIndex >>> level) & MASK];
              level -= SHIFT;
            }
            return node;
          }
        }

        function setListBounds(list, begin, end) {
          // Sanitize begin & end using this shorthand for ToInt32(argument)
          // http://www.ecma-international.org/ecma-262/6.0/#sec-toint32
          if (begin !== undefined) {
            begin = begin | 0;
          }
          if (end !== undefined) {
            end = end | 0;
          }
          var owner = list.__ownerID || new OwnerID();
          var oldOrigin = list._origin;
          var oldCapacity = list._capacity;
          var newOrigin = oldOrigin + begin;
          var newCapacity =
            end === undefined ? oldCapacity : end < 0 ? oldCapacity + end : oldOrigin + end;
          if (newOrigin === oldOrigin && newCapacity === oldCapacity) {
            return list;
          }

          // If it's going to end after it starts, it's empty.
          if (newOrigin >= newCapacity) {
            return list.clear();
          }

          var newLevel = list._level;
          var newRoot = list._root;

          // New origin might need creating a higher root.
          var offsetShift = 0;
          while (newOrigin + offsetShift < 0) {
            newRoot = new VNode(newRoot && newRoot.array.length ? [undefined, newRoot] : [], owner);
            newLevel += SHIFT;
            offsetShift += 1 << newLevel;
          }
          if (offsetShift) {
            newOrigin += offsetShift;
            oldOrigin += offsetShift;
            newCapacity += offsetShift;
            oldCapacity += offsetShift;
          }

          var oldTailOffset = getTailOffset(oldCapacity);
          var newTailOffset = getTailOffset(newCapacity);

          // New size might need creating a higher root.
          while (newTailOffset >= 1 << (newLevel + SHIFT)) {
            newRoot = new VNode(newRoot && newRoot.array.length ? [newRoot] : [], owner);
            newLevel += SHIFT;
          }

          // Locate or create the new tail.
          var oldTail = list._tail;
          var newTail =
            newTailOffset < oldTailOffset
              ? listNodeFor(list, newCapacity - 1)
              : newTailOffset > oldTailOffset
              ? new VNode([], owner)
              : oldTail;

          // Merge Tail into tree.
          if (
            oldTail &&
            newTailOffset > oldTailOffset &&
            newOrigin < oldCapacity &&
            oldTail.array.length
          ) {
            newRoot = editableVNode(newRoot, owner);
            var node = newRoot;
            for (var level = newLevel; level > SHIFT; level -= SHIFT) {
              var idx = (oldTailOffset >>> level) & MASK;
              node = node.array[idx] = editableVNode(node.array[idx], owner);
            }
            node.array[(oldTailOffset >>> SHIFT) & MASK] = oldTail;
          }

          // If the size has been reduced, there's a chance the tail needs to be trimmed.
          if (newCapacity < oldCapacity) {
            newTail = newTail && newTail.removeAfter(owner, 0, newCapacity);
          }

          // If the new origin is within the tail, then we do not need a root.
          if (newOrigin >= newTailOffset) {
            newOrigin -= newTailOffset;
            newCapacity -= newTailOffset;
            newLevel = SHIFT;
            newRoot = null;
            newTail = newTail && newTail.removeBefore(owner, 0, newOrigin);

            // Otherwise, if the root has been trimmed, garbage collect.
          } else if (newOrigin > oldOrigin || newTailOffset < oldTailOffset) {
            offsetShift = 0;

            // Identify the new top root node of the subtree of the old root.
            while (newRoot) {
              var beginIndex = (newOrigin >>> newLevel) & MASK;
              if ((beginIndex !== newTailOffset >>> newLevel) & MASK) {
                break;
              }
              if (beginIndex) {
                offsetShift += (1 << newLevel) * beginIndex;
              }
              newLevel -= SHIFT;
              newRoot = newRoot.array[beginIndex];
            }

            // Trim the new sides of the new root.
            if (newRoot && newOrigin > oldOrigin) {
              newRoot = newRoot.removeBefore(owner, newLevel, newOrigin - offsetShift);
            }
            if (newRoot && newTailOffset < oldTailOffset) {
              newRoot = newRoot.removeAfter(owner, newLevel, newTailOffset - offsetShift);
            }
            if (offsetShift) {
              newOrigin -= offsetShift;
              newCapacity -= offsetShift;
            }
          }

          if (list.__ownerID) {
            list.size = newCapacity - newOrigin;
            list._origin = newOrigin;
            list._capacity = newCapacity;
            list._level = newLevel;
            list._root = newRoot;
            list._tail = newTail;
            list.__hash = undefined;
            list.__altered = true;
            return list;
          }
          return makeList(newOrigin, newCapacity, newLevel, newRoot, newTail);
        }

        function mergeIntoListWith(list, merger, iterables) {
          var iters = [];
          var maxSize = 0;
          for (var ii = 0; ii < iterables.length; ii++) {
            var value = iterables[ii];
            var iter = IndexedIterable(value);
            if (iter.size > maxSize) {
              maxSize = iter.size;
            }
            if (!isIterable(value)) {
              iter = iter.map(function (v) {
                return fromJS(v);
              });
            }
            iters.push(iter);
          }
          if (maxSize > list.size) {
            list = list.setSize(maxSize);
          }
          return mergeIntoCollectionWith(list, merger, iters);
        }

        function getTailOffset(size) {
          return size < SIZE ? 0 : ((size - 1) >>> SHIFT) << SHIFT;
        }

        createClass(OrderedMap, Map);

        // @pragma Construction

        function OrderedMap(value) {
          return value === null || value === undefined
            ? emptyOrderedMap()
            : isOrderedMap(value)
            ? value
            : emptyOrderedMap().withMutations(function (map) {
                var iter = KeyedIterable(value);
                assertNotInfinite(iter.size);
                iter.forEach(function (v, k) {
                  return map.set(k, v);
                });
              });
        }

        OrderedMap.of = function (/*...values*/) {
          return this(arguments);
        };

        OrderedMap.prototype.toString = function () {
          return this.__toString('OrderedMap {', '}');
        };

        // @pragma Access

        OrderedMap.prototype.get = function (k, notSetValue) {
          var index = this._map.get(k);
          return index !== undefined ? this._list.get(index)[1] : notSetValue;
        };

        // @pragma Modification

        OrderedMap.prototype.clear = function () {
          if (this.size === 0) {
            return this;
          }
          if (this.__ownerID) {
            this.size = 0;
            this._map.clear();
            this._list.clear();
            return this;
          }
          return emptyOrderedMap();
        };

        OrderedMap.prototype.set = function (k, v) {
          return updateOrderedMap(this, k, v);
        };

        OrderedMap.prototype.remove = function (k) {
          return updateOrderedMap(this, k, NOT_SET);
        };

        OrderedMap.prototype.wasAltered = function () {
          return this._map.wasAltered() || this._list.wasAltered();
        };

        OrderedMap.prototype.__iterate = function (fn, reverse) {
          var this$0 = this;
          return this._list.__iterate(function (entry) {
            return entry && fn(entry[1], entry[0], this$0);
          }, reverse);
        };

        OrderedMap.prototype.__iterator = function (type, reverse) {
          return this._list.fromEntrySeq().__iterator(type, reverse);
        };

        OrderedMap.prototype.__ensureOwner = function (ownerID) {
          if (ownerID === this.__ownerID) {
            return this;
          }
          var newMap = this._map.__ensureOwner(ownerID);
          var newList = this._list.__ensureOwner(ownerID);
          if (!ownerID) {
            this.__ownerID = ownerID;
            this._map = newMap;
            this._list = newList;
            return this;
          }
          return makeOrderedMap(newMap, newList, ownerID, this.__hash);
        };

        function isOrderedMap(maybeOrderedMap) {
          return isMap(maybeOrderedMap) && isOrdered(maybeOrderedMap);
        }

        OrderedMap.isOrderedMap = isOrderedMap;

        OrderedMap.prototype[IS_ORDERED_SENTINEL] = true;
        OrderedMap.prototype[DELETE] = OrderedMap.prototype.remove;

        function makeOrderedMap(map, list, ownerID, hash) {
          var omap = Object.create(OrderedMap.prototype);
          omap.size = map ? map.size : 0;
          omap._map = map;
          omap._list = list;
          omap.__ownerID = ownerID;
          omap.__hash = hash;
          return omap;
        }

        var EMPTY_ORDERED_MAP;
        function emptyOrderedMap() {
          return EMPTY_ORDERED_MAP || (EMPTY_ORDERED_MAP = makeOrderedMap(emptyMap(), emptyList()));
        }

        function updateOrderedMap(omap, k, v) {
          var map = omap._map;
          var list = omap._list;
          var i = map.get(k);
          var has = i !== undefined;
          var newMap;
          var newList;
          if (v === NOT_SET) {
            // removed
            if (!has) {
              return omap;
            }
            if (list.size >= SIZE && list.size >= map.size * 2) {
              newList = list.filter(function (entry, idx) {
                return entry !== undefined && i !== idx;
              });
              newMap = newList
                .toKeyedSeq()
                .map(function (entry) {
                  return entry[0];
                })
                .flip()
                .toMap();
              if (omap.__ownerID) {
                newMap.__ownerID = newList.__ownerID = omap.__ownerID;
              }
            } else {
              newMap = map.remove(k);
              newList = i === list.size - 1 ? list.pop() : list.set(i, undefined);
            }
          } else {
            if (has) {
              if (v === list.get(i)[1]) {
                return omap;
              }
              newMap = map;
              newList = list.set(i, [k, v]);
            } else {
              newMap = map.set(k, list.size);
              newList = list.set(list.size, [k, v]);
            }
          }
          if (omap.__ownerID) {
            omap.size = newMap.size;
            omap._map = newMap;
            omap._list = newList;
            omap.__hash = undefined;
            return omap;
          }
          return makeOrderedMap(newMap, newList);
        }

        createClass(ToKeyedSequence, KeyedSeq);
        function ToKeyedSequence(indexed, useKeys) {
          this._iter = indexed;
          this._useKeys = useKeys;
          this.size = indexed.size;
        }

        ToKeyedSequence.prototype.get = function (key, notSetValue) {
          return this._iter.get(key, notSetValue);
        };

        ToKeyedSequence.prototype.has = function (key) {
          return this._iter.has(key);
        };

        ToKeyedSequence.prototype.valueSeq = function () {
          return this._iter.valueSeq();
        };

        ToKeyedSequence.prototype.reverse = function () {
          var this$0 = this;
          var reversedSequence = reverseFactory(this, true);
          if (!this._useKeys) {
            reversedSequence.valueSeq = function () {
              return this$0._iter.toSeq().reverse();
            };
          }
          return reversedSequence;
        };

        ToKeyedSequence.prototype.map = function (mapper, context) {
          var this$0 = this;
          var mappedSequence = mapFactory(this, mapper, context);
          if (!this._useKeys) {
            mappedSequence.valueSeq = function () {
              return this$0._iter.toSeq().map(mapper, context);
            };
          }
          return mappedSequence;
        };

        ToKeyedSequence.prototype.__iterate = function (fn, reverse) {
          var this$0 = this;
          var ii;
          return this._iter.__iterate(
            this._useKeys
              ? function (v, k) {
                  return fn(v, k, this$0);
                }
              : ((ii = reverse ? resolveSize(this) : 0),
                function (v) {
                  return fn(v, reverse ? --ii : ii++, this$0);
                }),
            reverse
          );
        };

        ToKeyedSequence.prototype.__iterator = function (type, reverse) {
          if (this._useKeys) {
            return this._iter.__iterator(type, reverse);
          }
          var iterator = this._iter.__iterator(ITERATE_VALUES, reverse);
          var ii = reverse ? resolveSize(this) : 0;
          return new Iterator(function () {
            var step = iterator.next();
            return step.done ? step : iteratorValue(type, reverse ? --ii : ii++, step.value, step);
          });
        };

        ToKeyedSequence.prototype[IS_ORDERED_SENTINEL] = true;

        createClass(ToIndexedSequence, IndexedSeq);
        function ToIndexedSequence(iter) {
          this._iter = iter;
          this.size = iter.size;
        }

        ToIndexedSequence.prototype.includes = function (value) {
          return this._iter.includes(value);
        };

        ToIndexedSequence.prototype.__iterate = function (fn, reverse) {
          var this$0 = this;
          var iterations = 0;
          return this._iter.__iterate(function (v) {
            return fn(v, iterations++, this$0);
          }, reverse);
        };

        ToIndexedSequence.prototype.__iterator = function (type, reverse) {
          var iterator = this._iter.__iterator(ITERATE_VALUES, reverse);
          var iterations = 0;
          return new Iterator(function () {
            var step = iterator.next();
            return step.done ? step : iteratorValue(type, iterations++, step.value, step);
          });
        };

        createClass(ToSetSequence, SetSeq);
        function ToSetSequence(iter) {
          this._iter = iter;
          this.size = iter.size;
        }

        ToSetSequence.prototype.has = function (key) {
          return this._iter.includes(key);
        };

        ToSetSequence.prototype.__iterate = function (fn, reverse) {
          var this$0 = this;
          return this._iter.__iterate(function (v) {
            return fn(v, v, this$0);
          }, reverse);
        };

        ToSetSequence.prototype.__iterator = function (type, reverse) {
          var iterator = this._iter.__iterator(ITERATE_VALUES, reverse);
          return new Iterator(function () {
            var step = iterator.next();
            return step.done ? step : iteratorValue(type, step.value, step.value, step);
          });
        };

        createClass(FromEntriesSequence, KeyedSeq);
        function FromEntriesSequence(entries) {
          this._iter = entries;
          this.size = entries.size;
        }

        FromEntriesSequence.prototype.entrySeq = function () {
          return this._iter.toSeq();
        };

        FromEntriesSequence.prototype.__iterate = function (fn, reverse) {
          var this$0 = this;
          return this._iter.__iterate(function (entry) {
            // Check if entry exists first so array access doesn't throw for holes
            // in the parent iteration.
            if (entry) {
              validateEntry(entry);
              var indexedIterable = isIterable(entry);
              return fn(
                indexedIterable ? entry.get(1) : entry[1],
                indexedIterable ? entry.get(0) : entry[0],
                this$0
              );
            }
          }, reverse);
        };

        FromEntriesSequence.prototype.__iterator = function (type, reverse) {
          var iterator = this._iter.__iterator(ITERATE_VALUES, reverse);
          return new Iterator(function () {
            while (true) {
              var step = iterator.next();
              if (step.done) {
                return step;
              }
              var entry = step.value;
              // Check if entry exists first so array access doesn't throw for holes
              // in the parent iteration.
              if (entry) {
                validateEntry(entry);
                var indexedIterable = isIterable(entry);
                return iteratorValue(
                  type,
                  indexedIterable ? entry.get(0) : entry[0],
                  indexedIterable ? entry.get(1) : entry[1],
                  step
                );
              }
            }
          });
        };

        ToIndexedSequence.prototype.cacheResult = ToKeyedSequence.prototype.cacheResult = ToSetSequence.prototype.cacheResult = FromEntriesSequence.prototype.cacheResult = cacheResultThrough;

        function flipFactory(iterable) {
          var flipSequence = makeSequence(iterable);
          flipSequence._iter = iterable;
          flipSequence.size = iterable.size;
          flipSequence.flip = function () {
            return iterable;
          };
          flipSequence.reverse = function () {
            var reversedSequence = iterable.reverse.apply(this); // super.reverse()
            reversedSequence.flip = function () {
              return iterable.reverse();
            };
            return reversedSequence;
          };
          flipSequence.has = function (key) {
            return iterable.includes(key);
          };
          flipSequence.includes = function (key) {
            return iterable.has(key);
          };
          flipSequence.cacheResult = cacheResultThrough;
          flipSequence.__iterateUncached = function (fn, reverse) {
            var this$0 = this;
            return iterable.__iterate(function (v, k) {
              return fn(k, v, this$0) !== false;
            }, reverse);
          };
          flipSequence.__iteratorUncached = function (type, reverse) {
            if (type === ITERATE_ENTRIES) {
              var iterator = iterable.__iterator(type, reverse);
              return new Iterator(function () {
                var step = iterator.next();
                if (!step.done) {
                  var k = step.value[0];
                  step.value[0] = step.value[1];
                  step.value[1] = k;
                }
                return step;
              });
            }
            return iterable.__iterator(
              type === ITERATE_VALUES ? ITERATE_KEYS : ITERATE_VALUES,
              reverse
            );
          };
          return flipSequence;
        }

        function mapFactory(iterable, mapper, context) {
          var mappedSequence = makeSequence(iterable);
          mappedSequence.size = iterable.size;
          mappedSequence.has = function (key) {
            return iterable.has(key);
          };
          mappedSequence.get = function (key, notSetValue) {
            var v = iterable.get(key, NOT_SET);
            return v === NOT_SET ? notSetValue : mapper.call(context, v, key, iterable);
          };
          mappedSequence.__iterateUncached = function (fn, reverse) {
            var this$0 = this;
            return iterable.__iterate(function (v, k, c) {
              return fn(mapper.call(context, v, k, c), k, this$0) !== false;
            }, reverse);
          };
          mappedSequence.__iteratorUncached = function (type, reverse) {
            var iterator = iterable.__iterator(ITERATE_ENTRIES, reverse);
            return new Iterator(function () {
              var step = iterator.next();
              if (step.done) {
                return step;
              }
              var entry = step.value;
              var key = entry[0];
              return iteratorValue(type, key, mapper.call(context, entry[1], key, iterable), step);
            });
          };
          return mappedSequence;
        }

        function reverseFactory(iterable, useKeys) {
          var reversedSequence = makeSequence(iterable);
          reversedSequence._iter = iterable;
          reversedSequence.size = iterable.size;
          reversedSequence.reverse = function () {
            return iterable;
          };
          if (iterable.flip) {
            reversedSequence.flip = function () {
              var flipSequence = flipFactory(iterable);
              flipSequence.reverse = function () {
                return iterable.flip();
              };
              return flipSequence;
            };
          }
          reversedSequence.get = function (key, notSetValue) {
            return iterable.get(useKeys ? key : -1 - key, notSetValue);
          };
          reversedSequence.has = function (key) {
            return iterable.has(useKeys ? key : -1 - key);
          };
          reversedSequence.includes = function (value) {
            return iterable.includes(value);
          };
          reversedSequence.cacheResult = cacheResultThrough;
          reversedSequence.__iterate = function (fn, reverse) {
            var this$0 = this;
            return iterable.__iterate(function (v, k) {
              return fn(v, k, this$0);
            }, !reverse);
          };
          reversedSequence.__iterator = function (type, reverse) {
            return iterable.__iterator(type, !reverse);
          };
          return reversedSequence;
        }

        function filterFactory(iterable, predicate, context, useKeys) {
          var filterSequence = makeSequence(iterable);
          if (useKeys) {
            filterSequence.has = function (key) {
              var v = iterable.get(key, NOT_SET);
              return v !== NOT_SET && !!predicate.call(context, v, key, iterable);
            };
            filterSequence.get = function (key, notSetValue) {
              var v = iterable.get(key, NOT_SET);
              return v !== NOT_SET && predicate.call(context, v, key, iterable) ? v : notSetValue;
            };
          }
          filterSequence.__iterateUncached = function (fn, reverse) {
            var this$0 = this;
            var iterations = 0;
            iterable.__iterate(function (v, k, c) {
              if (predicate.call(context, v, k, c)) {
                iterations++;
                return fn(v, useKeys ? k : iterations - 1, this$0);
              }
            }, reverse);
            return iterations;
          };
          filterSequence.__iteratorUncached = function (type, reverse) {
            var iterator = iterable.__iterator(ITERATE_ENTRIES, reverse);
            var iterations = 0;
            return new Iterator(function () {
              while (true) {
                var step = iterator.next();
                if (step.done) {
                  return step;
                }
                var entry = step.value;
                var key = entry[0];
                var value = entry[1];
                if (predicate.call(context, value, key, iterable)) {
                  return iteratorValue(type, useKeys ? key : iterations++, value, step);
                }
              }
            });
          };
          return filterSequence;
        }

        function countByFactory(iterable, grouper, context) {
          var groups = Map().asMutable();
          iterable.__iterate(function (v, k) {
            groups.update(grouper.call(context, v, k, iterable), 0, function (a) {
              return a + 1;
            });
          });
          return groups.asImmutable();
        }

        function groupByFactory(iterable, grouper, context) {
          var isKeyedIter = isKeyed(iterable);
          var groups = (isOrdered(iterable) ? OrderedMap() : Map()).asMutable();
          iterable.__iterate(function (v, k) {
            groups.update(grouper.call(context, v, k, iterable), function (a) {
              return (a = a || []), a.push(isKeyedIter ? [k, v] : v), a;
            });
          });
          var coerce = iterableClass(iterable);
          return groups.map(function (arr) {
            return reify(iterable, coerce(arr));
          });
        }

        function sliceFactory(iterable, begin, end, useKeys) {
          var originalSize = iterable.size;

          // Sanitize begin & end using this shorthand for ToInt32(argument)
          // http://www.ecma-international.org/ecma-262/6.0/#sec-toint32
          if (begin !== undefined) {
            begin = begin | 0;
          }
          if (end !== undefined) {
            if (end === Infinity) {
              end = originalSize;
            } else {
              end = end | 0;
            }
          }

          if (wholeSlice(begin, end, originalSize)) {
            return iterable;
          }

          var resolvedBegin = resolveBegin(begin, originalSize);
          var resolvedEnd = resolveEnd(end, originalSize);

          // begin or end will be NaN if they were provided as negative numbers and
          // this iterable's size is unknown. In that case, cache first so there is
          // a known size and these do not resolve to NaN.
          if (resolvedBegin !== resolvedBegin || resolvedEnd !== resolvedEnd) {
            return sliceFactory(iterable.toSeq().cacheResult(), begin, end, useKeys);
          }

          // Note: resolvedEnd is undefined when the original sequence's length is
          // unknown and this slice did not supply an end and should contain all
          // elements after resolvedBegin.
          // In that case, resolvedSize will be NaN and sliceSize will remain undefined.
          var resolvedSize = resolvedEnd - resolvedBegin;
          var sliceSize;
          if (resolvedSize === resolvedSize) {
            sliceSize = resolvedSize < 0 ? 0 : resolvedSize;
          }

          var sliceSeq = makeSequence(iterable);

          // If iterable.size is undefined, the size of the realized sliceSeq is
          // unknown at this point unless the number of items to slice is 0
          sliceSeq.size = sliceSize === 0 ? sliceSize : (iterable.size && sliceSize) || undefined;

          if (!useKeys && isSeq(iterable) && sliceSize >= 0) {
            sliceSeq.get = function (index, notSetValue) {
              index = wrapIndex(this, index);
              return index >= 0 && index < sliceSize
                ? iterable.get(index + resolvedBegin, notSetValue)
                : notSetValue;
            };
          }

          sliceSeq.__iterateUncached = function (fn, reverse) {
            var this$0 = this;
            if (sliceSize === 0) {
              return 0;
            }
            if (reverse) {
              return this.cacheResult().__iterate(fn, reverse);
            }
            var skipped = 0;
            var isSkipping = true;
            var iterations = 0;
            iterable.__iterate(function (v, k) {
              if (!(isSkipping && (isSkipping = skipped++ < resolvedBegin))) {
                iterations++;
                return (
                  fn(v, useKeys ? k : iterations - 1, this$0) !== false && iterations !== sliceSize
                );
              }
            });
            return iterations;
          };

          sliceSeq.__iteratorUncached = function (type, reverse) {
            if (sliceSize !== 0 && reverse) {
              return this.cacheResult().__iterator(type, reverse);
            }
            // Don't bother instantiating parent iterator if taking 0.
            var iterator = sliceSize !== 0 && iterable.__iterator(type, reverse);
            var skipped = 0;
            var iterations = 0;
            return new Iterator(function () {
              while (skipped++ < resolvedBegin) {
                iterator.next();
              }
              if (++iterations > sliceSize) {
                return iteratorDone();
              }
              var step = iterator.next();
              if (useKeys || type === ITERATE_VALUES) {
                return step;
              } else if (type === ITERATE_KEYS) {
                return iteratorValue(type, iterations - 1, undefined, step);
              } else {
                return iteratorValue(type, iterations - 1, step.value[1], step);
              }
            });
          };

          return sliceSeq;
        }

        function takeWhileFactory(iterable, predicate, context) {
          var takeSequence = makeSequence(iterable);
          takeSequence.__iterateUncached = function (fn, reverse) {
            var this$0 = this;
            if (reverse) {
              return this.cacheResult().__iterate(fn, reverse);
            }
            var iterations = 0;
            iterable.__iterate(function (v, k, c) {
              return predicate.call(context, v, k, c) && ++iterations && fn(v, k, this$0);
            });
            return iterations;
          };
          takeSequence.__iteratorUncached = function (type, reverse) {
            var this$0 = this;
            if (reverse) {
              return this.cacheResult().__iterator(type, reverse);
            }
            var iterator = iterable.__iterator(ITERATE_ENTRIES, reverse);
            var iterating = true;
            return new Iterator(function () {
              if (!iterating) {
                return iteratorDone();
              }
              var step = iterator.next();
              if (step.done) {
                return step;
              }
              var entry = step.value;
              var k = entry[0];
              var v = entry[1];
              if (!predicate.call(context, v, k, this$0)) {
                iterating = false;
                return iteratorDone();
              }
              return type === ITERATE_ENTRIES ? step : iteratorValue(type, k, v, step);
            });
          };
          return takeSequence;
        }

        function skipWhileFactory(iterable, predicate, context, useKeys) {
          var skipSequence = makeSequence(iterable);
          skipSequence.__iterateUncached = function (fn, reverse) {
            var this$0 = this;
            if (reverse) {
              return this.cacheResult().__iterate(fn, reverse);
            }
            var isSkipping = true;
            var iterations = 0;
            iterable.__iterate(function (v, k, c) {
              if (!(isSkipping && (isSkipping = predicate.call(context, v, k, c)))) {
                iterations++;
                return fn(v, useKeys ? k : iterations - 1, this$0);
              }
            });
            return iterations;
          };
          skipSequence.__iteratorUncached = function (type, reverse) {
            var this$0 = this;
            if (reverse) {
              return this.cacheResult().__iterator(type, reverse);
            }
            var iterator = iterable.__iterator(ITERATE_ENTRIES, reverse);
            var skipping = true;
            var iterations = 0;
            return new Iterator(function () {
              var step, k, v;
              do {
                step = iterator.next();
                if (step.done) {
                  if (useKeys || type === ITERATE_VALUES) {
                    return step;
                  } else if (type === ITERATE_KEYS) {
                    return iteratorValue(type, iterations++, undefined, step);
                  } else {
                    return iteratorValue(type, iterations++, step.value[1], step);
                  }
                }
                var entry = step.value;
                k = entry[0];
                v = entry[1];
                skipping && (skipping = predicate.call(context, v, k, this$0));
              } while (skipping);
              return type === ITERATE_ENTRIES ? step : iteratorValue(type, k, v, step);
            });
          };
          return skipSequence;
        }

        function concatFactory(iterable, values) {
          var isKeyedIterable = isKeyed(iterable);
          var iters = [iterable]
            .concat(values)
            .map(function (v) {
              if (!isIterable(v)) {
                v = isKeyedIterable
                  ? keyedSeqFromValue(v)
                  : indexedSeqFromValue(Array.isArray(v) ? v : [v]);
              } else if (isKeyedIterable) {
                v = KeyedIterable(v);
              }
              return v;
            })
            .filter(function (v) {
              return v.size !== 0;
            });

          if (iters.length === 0) {
            return iterable;
          }

          if (iters.length === 1) {
            var singleton = iters[0];
            if (
              singleton === iterable ||
              (isKeyedIterable && isKeyed(singleton)) ||
              (isIndexed(iterable) && isIndexed(singleton))
            ) {
              return singleton;
            }
          }

          var concatSeq = new ArraySeq(iters);
          if (isKeyedIterable) {
            concatSeq = concatSeq.toKeyedSeq();
          } else if (!isIndexed(iterable)) {
            concatSeq = concatSeq.toSetSeq();
          }
          concatSeq = concatSeq.flatten(true);
          concatSeq.size = iters.reduce(function (sum, seq) {
            if (sum !== undefined) {
              var size = seq.size;
              if (size !== undefined) {
                return sum + size;
              }
            }
          }, 0);
          return concatSeq;
        }

        function flattenFactory(iterable, depth, useKeys) {
          var flatSequence = makeSequence(iterable);
          flatSequence.__iterateUncached = function (fn, reverse) {
            var iterations = 0;
            var stopped = false;
            function flatDeep(iter, currentDepth) {
              var this$0 = this;
              iter.__iterate(function (v, k) {
                if ((!depth || currentDepth < depth) && isIterable(v)) {
                  flatDeep(v, currentDepth + 1);
                } else if (fn(v, useKeys ? k : iterations++, this$0) === false) {
                  stopped = true;
                }
                return !stopped;
              }, reverse);
            }
            flatDeep(iterable, 0);
            return iterations;
          };
          flatSequence.__iteratorUncached = function (type, reverse) {
            var iterator = iterable.__iterator(type, reverse);
            var stack = [];
            var iterations = 0;
            return new Iterator(function () {
              while (iterator) {
                var step = iterator.next();
                if (step.done !== false) {
                  iterator = stack.pop();
                  continue;
                }
                var v = step.value;
                if (type === ITERATE_ENTRIES) {
                  v = v[1];
                }
                if ((!depth || stack.length < depth) && isIterable(v)) {
                  stack.push(iterator);
                  iterator = v.__iterator(type, reverse);
                } else {
                  return useKeys ? step : iteratorValue(type, iterations++, v, step);
                }
              }
              return iteratorDone();
            });
          };
          return flatSequence;
        }

        function flatMapFactory(iterable, mapper, context) {
          var coerce = iterableClass(iterable);
          return iterable
            .toSeq()
            .map(function (v, k) {
              return coerce(mapper.call(context, v, k, iterable));
            })
            .flatten(true);
        }

        function interposeFactory(iterable, separator) {
          var interposedSequence = makeSequence(iterable);
          interposedSequence.size = iterable.size && iterable.size * 2 - 1;
          interposedSequence.__iterateUncached = function (fn, reverse) {
            var this$0 = this;
            var iterations = 0;
            iterable.__iterate(function (v, k) {
              return (
                (!iterations || fn(separator, iterations++, this$0) !== false) &&
                fn(v, iterations++, this$0) !== false
              );
            }, reverse);
            return iterations;
          };
          interposedSequence.__iteratorUncached = function (type, reverse) {
            var iterator = iterable.__iterator(ITERATE_VALUES, reverse);
            var iterations = 0;
            var step;
            return new Iterator(function () {
              if (!step || iterations % 2) {
                step = iterator.next();
                if (step.done) {
                  return step;
                }
              }
              return iterations % 2
                ? iteratorValue(type, iterations++, separator)
                : iteratorValue(type, iterations++, step.value, step);
            });
          };
          return interposedSequence;
        }

        function sortFactory(iterable, comparator, mapper) {
          if (!comparator) {
            comparator = defaultComparator;
          }
          var isKeyedIterable = isKeyed(iterable);
          var index = 0;
          var entries = iterable
            .toSeq()
            .map(function (v, k) {
              return [k, v, index++, mapper ? mapper(v, k, iterable) : v];
            })
            .toArray();
          entries
            .sort(function (a, b) {
              return comparator(a[3], b[3]) || a[2] - b[2];
            })
            .forEach(
              isKeyedIterable
                ? function (v, i) {
                    entries[i].length = 2;
                  }
                : function (v, i) {
                    entries[i] = v[1];
                  }
            );
          return isKeyedIterable
            ? KeyedSeq(entries)
            : isIndexed(iterable)
            ? IndexedSeq(entries)
            : SetSeq(entries);
        }

        function maxFactory(iterable, comparator, mapper) {
          if (!comparator) {
            comparator = defaultComparator;
          }
          if (mapper) {
            var entry = iterable
              .toSeq()
              .map(function (v, k) {
                return [v, mapper(v, k, iterable)];
              })
              .reduce(function (a, b) {
                return maxCompare(comparator, a[1], b[1]) ? b : a;
              });
            return entry && entry[0];
          } else {
            return iterable.reduce(function (a, b) {
              return maxCompare(comparator, a, b) ? b : a;
            });
          }
        }

        function maxCompare(comparator, a, b) {
          var comp = comparator(b, a);
          // b is considered the new max if the comparator declares them equal, but
          // they are not equal and b is in fact a nullish value.
          return (comp === 0 && b !== a && (b === undefined || b === null || b !== b)) || comp > 0;
        }

        function zipWithFactory(keyIter, zipper, iters) {
          var zipSequence = makeSequence(keyIter);
          zipSequence.size = new ArraySeq(iters)
            .map(function (i) {
              return i.size;
            })
            .min();
          // Note: this a generic base implementation of __iterate in terms of
          // __iterator which may be more generically useful in the future.
          zipSequence.__iterate = function (fn, reverse) {
            /* generic:
      var iterator = this.__iterator(ITERATE_ENTRIES, reverse);
      var step;
      var iterations = 0;
      while (!(step = iterator.next()).done) {
        iterations++;
        if (fn(step.value[1], step.value[0], this) === false) {
          break;
        }
      }
      return iterations;
      */
            // indexed:
            var iterator = this.__iterator(ITERATE_VALUES, reverse);
            var step;
            var iterations = 0;
            while (!(step = iterator.next()).done) {
              if (fn(step.value, iterations++, this) === false) {
                break;
              }
            }
            return iterations;
          };
          zipSequence.__iteratorUncached = function (type, reverse) {
            var iterators = iters.map(function (i) {
              return (i = Iterable(i)), getIterator(reverse ? i.reverse() : i);
            });
            var iterations = 0;
            var isDone = false;
            return new Iterator(function () {
              var steps;
              if (!isDone) {
                steps = iterators.map(function (i) {
                  return i.next();
                });
                isDone = steps.some(function (s) {
                  return s.done;
                });
              }
              if (isDone) {
                return iteratorDone();
              }
              return iteratorValue(
                type,
                iterations++,
                zipper.apply(
                  null,
                  steps.map(function (s) {
                    return s.value;
                  })
                )
              );
            });
          };
          return zipSequence;
        }

        // #pragma Helper Functions

        function reify(iter, seq) {
          return isSeq(iter) ? seq : iter.constructor(seq);
        }

        function validateEntry(entry) {
          if (entry !== Object(entry)) {
            throw new TypeError('Expected [K, V] tuple: ' + entry);
          }
        }

        function resolveSize(iter) {
          assertNotInfinite(iter.size);
          return ensureSize(iter);
        }

        function iterableClass(iterable) {
          return isKeyed(iterable)
            ? KeyedIterable
            : isIndexed(iterable)
            ? IndexedIterable
            : SetIterable;
        }

        function makeSequence(iterable) {
          return Object.create(
            (isKeyed(iterable) ? KeyedSeq : isIndexed(iterable) ? IndexedSeq : SetSeq).prototype
          );
        }

        function cacheResultThrough() {
          if (this._iter.cacheResult) {
            this._iter.cacheResult();
            this.size = this._iter.size;
            return this;
          } else {
            return Seq.prototype.cacheResult.call(this);
          }
        }

        function defaultComparator(a, b) {
          return a > b ? 1 : a < b ? -1 : 0;
        }

        function forceIterator(keyPath) {
          var iter = getIterator(keyPath);
          if (!iter) {
            // Array might not be iterable in this environment, so we need a fallback
            // to our wrapped type.
            if (!isArrayLike(keyPath)) {
              throw new TypeError('Expected iterable or array-like: ' + keyPath);
            }
            iter = getIterator(Iterable(keyPath));
          }
          return iter;
        }

        createClass(Record, KeyedCollection);

        function Record(defaultValues, name) {
          var hasInitialized;

          var RecordType = function Record(values) {
            if (values instanceof RecordType) {
              return values;
            }
            if (!(this instanceof RecordType)) {
              return new RecordType(values);
            }
            if (!hasInitialized) {
              hasInitialized = true;
              var keys = Object.keys(defaultValues);
              setProps(RecordTypePrototype, keys);
              RecordTypePrototype.size = keys.length;
              RecordTypePrototype._name = name;
              RecordTypePrototype._keys = keys;
              RecordTypePrototype._defaultValues = defaultValues;
            }
            this._map = Map(values);
          };

          var RecordTypePrototype = (RecordType.prototype = Object.create(RecordPrototype));
          RecordTypePrototype.constructor = RecordType;

          return RecordType;
        }

        Record.prototype.toString = function () {
          return this.__toString(recordName(this) + ' {', '}');
        };

        // @pragma Access

        Record.prototype.has = function (k) {
          return this._defaultValues.hasOwnProperty(k);
        };

        Record.prototype.get = function (k, notSetValue) {
          if (!this.has(k)) {
            return notSetValue;
          }
          var defaultVal = this._defaultValues[k];
          return this._map ? this._map.get(k, defaultVal) : defaultVal;
        };

        // @pragma Modification

        Record.prototype.clear = function () {
          if (this.__ownerID) {
            this._map && this._map.clear();
            return this;
          }
          var RecordType = this.constructor;
          return RecordType._empty || (RecordType._empty = makeRecord(this, emptyMap()));
        };

        Record.prototype.set = function (k, v) {
          if (!this.has(k)) {
            throw new Error('Cannot set unknown key "' + k + '" on ' + recordName(this));
          }
          if (this._map && !this._map.has(k)) {
            var defaultVal = this._defaultValues[k];
            if (v === defaultVal) {
              return this;
            }
          }
          var newMap = this._map && this._map.set(k, v);
          if (this.__ownerID || newMap === this._map) {
            return this;
          }
          return makeRecord(this, newMap);
        };

        Record.prototype.remove = function (k) {
          if (!this.has(k)) {
            return this;
          }
          var newMap = this._map && this._map.remove(k);
          if (this.__ownerID || newMap === this._map) {
            return this;
          }
          return makeRecord(this, newMap);
        };

        Record.prototype.wasAltered = function () {
          return this._map.wasAltered();
        };

        Record.prototype.__iterator = function (type, reverse) {
          var this$0 = this;
          return KeyedIterable(this._defaultValues)
            .map(function (_, k) {
              return this$0.get(k);
            })
            .__iterator(type, reverse);
        };

        Record.prototype.__iterate = function (fn, reverse) {
          var this$0 = this;
          return KeyedIterable(this._defaultValues)
            .map(function (_, k) {
              return this$0.get(k);
            })
            .__iterate(fn, reverse);
        };

        Record.prototype.__ensureOwner = function (ownerID) {
          if (ownerID === this.__ownerID) {
            return this;
          }
          var newMap = this._map && this._map.__ensureOwner(ownerID);
          if (!ownerID) {
            this.__ownerID = ownerID;
            this._map = newMap;
            return this;
          }
          return makeRecord(this, newMap, ownerID);
        };

        var RecordPrototype = Record.prototype;
        RecordPrototype[DELETE] = RecordPrototype.remove;
        RecordPrototype.deleteIn = RecordPrototype.removeIn = MapPrototype.removeIn;
        RecordPrototype.merge = MapPrototype.merge;
        RecordPrototype.mergeWith = MapPrototype.mergeWith;
        RecordPrototype.mergeIn = MapPrototype.mergeIn;
        RecordPrototype.mergeDeep = MapPrototype.mergeDeep;
        RecordPrototype.mergeDeepWith = MapPrototype.mergeDeepWith;
        RecordPrototype.mergeDeepIn = MapPrototype.mergeDeepIn;
        RecordPrototype.setIn = MapPrototype.setIn;
        RecordPrototype.update = MapPrototype.update;
        RecordPrototype.updateIn = MapPrototype.updateIn;
        RecordPrototype.withMutations = MapPrototype.withMutations;
        RecordPrototype.asMutable = MapPrototype.asMutable;
        RecordPrototype.asImmutable = MapPrototype.asImmutable;

        function makeRecord(likeRecord, map, ownerID) {
          var record = Object.create(Object.getPrototypeOf(likeRecord));
          record._map = map;
          record.__ownerID = ownerID;
          return record;
        }

        function recordName(record) {
          return record._name || record.constructor.name || 'Record';
        }

        function setProps(prototype, names) {
          try {
            names.forEach(setProp.bind(undefined, prototype));
          } catch (error) {
            // Object.defineProperty failed. Probably IE8.
          }
        }

        function setProp(prototype, name) {
          Object.defineProperty(prototype, name, {
            get: function () {
              return this.get(name);
            },
            set: function (value) {
              invariant(this.__ownerID, 'Cannot set on an immutable record.');
              this.set(name, value);
            },
          });
        }

        createClass(Set, SetCollection);

        // @pragma Construction

        function Set(value) {
          return value === null || value === undefined
            ? emptySet()
            : isSet(value) && !isOrdered(value)
            ? value
            : emptySet().withMutations(function (set) {
                var iter = SetIterable(value);
                assertNotInfinite(iter.size);
                iter.forEach(function (v) {
                  return set.add(v);
                });
              });
        }

        Set.of = function (/*...values*/) {
          return this(arguments);
        };

        Set.fromKeys = function (value) {
          return this(KeyedIterable(value).keySeq());
        };

        Set.prototype.toString = function () {
          return this.__toString('Set {', '}');
        };

        // @pragma Access

        Set.prototype.has = function (value) {
          return this._map.has(value);
        };

        // @pragma Modification

        Set.prototype.add = function (value) {
          return updateSet(this, this._map.set(value, true));
        };

        Set.prototype.remove = function (value) {
          return updateSet(this, this._map.remove(value));
        };

        Set.prototype.clear = function () {
          return updateSet(this, this._map.clear());
        };

        // @pragma Composition

        Set.prototype.union = function () {
          var iters = SLICE$0.call(arguments, 0);
          iters = iters.filter(function (x) {
            return x.size !== 0;
          });
          if (iters.length === 0) {
            return this;
          }
          if (this.size === 0 && !this.__ownerID && iters.length === 1) {
            return this.constructor(iters[0]);
          }
          return this.withMutations(function (set) {
            for (var ii = 0; ii < iters.length; ii++) {
              SetIterable(iters[ii]).forEach(function (value) {
                return set.add(value);
              });
            }
          });
        };

        Set.prototype.intersect = function () {
          var iters = SLICE$0.call(arguments, 0);
          if (iters.length === 0) {
            return this;
          }
          iters = iters.map(function (iter) {
            return SetIterable(iter);
          });
          var originalSet = this;
          return this.withMutations(function (set) {
            originalSet.forEach(function (value) {
              if (
                !iters.every(function (iter) {
                  return iter.includes(value);
                })
              ) {
                set.remove(value);
              }
            });
          });
        };

        Set.prototype.subtract = function () {
          var iters = SLICE$0.call(arguments, 0);
          if (iters.length === 0) {
            return this;
          }
          iters = iters.map(function (iter) {
            return SetIterable(iter);
          });
          var originalSet = this;
          return this.withMutations(function (set) {
            originalSet.forEach(function (value) {
              if (
                iters.some(function (iter) {
                  return iter.includes(value);
                })
              ) {
                set.remove(value);
              }
            });
          });
        };

        Set.prototype.merge = function () {
          return this.union.apply(this, arguments);
        };

        Set.prototype.mergeWith = function (merger) {
          var iters = SLICE$0.call(arguments, 1);
          return this.union.apply(this, iters);
        };

        Set.prototype.sort = function (comparator) {
          // Late binding
          return OrderedSet(sortFactory(this, comparator));
        };

        Set.prototype.sortBy = function (mapper, comparator) {
          // Late binding
          return OrderedSet(sortFactory(this, comparator, mapper));
        };

        Set.prototype.wasAltered = function () {
          return this._map.wasAltered();
        };

        Set.prototype.__iterate = function (fn, reverse) {
          var this$0 = this;
          return this._map.__iterate(function (_, k) {
            return fn(k, k, this$0);
          }, reverse);
        };

        Set.prototype.__iterator = function (type, reverse) {
          return this._map
            .map(function (_, k) {
              return k;
            })
            .__iterator(type, reverse);
        };

        Set.prototype.__ensureOwner = function (ownerID) {
          if (ownerID === this.__ownerID) {
            return this;
          }
          var newMap = this._map.__ensureOwner(ownerID);
          if (!ownerID) {
            this.__ownerID = ownerID;
            this._map = newMap;
            return this;
          }
          return this.__make(newMap, ownerID);
        };

        function isSet(maybeSet) {
          return !!(maybeSet && maybeSet[IS_SET_SENTINEL]);
        }

        Set.isSet = isSet;

        var IS_SET_SENTINEL = '@@__IMMUTABLE_SET__@@';

        var SetPrototype = Set.prototype;
        SetPrototype[IS_SET_SENTINEL] = true;
        SetPrototype[DELETE] = SetPrototype.remove;
        SetPrototype.mergeDeep = SetPrototype.merge;
        SetPrototype.mergeDeepWith = SetPrototype.mergeWith;
        SetPrototype.withMutations = MapPrototype.withMutations;
        SetPrototype.asMutable = MapPrototype.asMutable;
        SetPrototype.asImmutable = MapPrototype.asImmutable;

        SetPrototype.__empty = emptySet;
        SetPrototype.__make = makeSet;

        function updateSet(set, newMap) {
          if (set.__ownerID) {
            set.size = newMap.size;
            set._map = newMap;
            return set;
          }
          return newMap === set._map ? set : newMap.size === 0 ? set.__empty() : set.__make(newMap);
        }

        function makeSet(map, ownerID) {
          var set = Object.create(SetPrototype);
          set.size = map ? map.size : 0;
          set._map = map;
          set.__ownerID = ownerID;
          return set;
        }

        var EMPTY_SET;
        function emptySet() {
          return EMPTY_SET || (EMPTY_SET = makeSet(emptyMap()));
        }

        createClass(OrderedSet, Set);

        // @pragma Construction

        function OrderedSet(value) {
          return value === null || value === undefined
            ? emptyOrderedSet()
            : isOrderedSet(value)
            ? value
            : emptyOrderedSet().withMutations(function (set) {
                var iter = SetIterable(value);
                assertNotInfinite(iter.size);
                iter.forEach(function (v) {
                  return set.add(v);
                });
              });
        }

        OrderedSet.of = function (/*...values*/) {
          return this(arguments);
        };

        OrderedSet.fromKeys = function (value) {
          return this(KeyedIterable(value).keySeq());
        };

        OrderedSet.prototype.toString = function () {
          return this.__toString('OrderedSet {', '}');
        };

        function isOrderedSet(maybeOrderedSet) {
          return isSet(maybeOrderedSet) && isOrdered(maybeOrderedSet);
        }

        OrderedSet.isOrderedSet = isOrderedSet;

        var OrderedSetPrototype = OrderedSet.prototype;
        OrderedSetPrototype[IS_ORDERED_SENTINEL] = true;

        OrderedSetPrototype.__empty = emptyOrderedSet;
        OrderedSetPrototype.__make = makeOrderedSet;

        function makeOrderedSet(map, ownerID) {
          var set = Object.create(OrderedSetPrototype);
          set.size = map ? map.size : 0;
          set._map = map;
          set.__ownerID = ownerID;
          return set;
        }

        var EMPTY_ORDERED_SET;
        function emptyOrderedSet() {
          return EMPTY_ORDERED_SET || (EMPTY_ORDERED_SET = makeOrderedSet(emptyOrderedMap()));
        }

        createClass(Stack, IndexedCollection);

        // @pragma Construction

        function Stack(value) {
          return value === null || value === undefined
            ? emptyStack()
            : isStack(value)
            ? value
            : emptyStack().unshiftAll(value);
        }

        Stack.of = function (/*...values*/) {
          return this(arguments);
        };

        Stack.prototype.toString = function () {
          return this.__toString('Stack [', ']');
        };

        // @pragma Access

        Stack.prototype.get = function (index, notSetValue) {
          var head = this._head;
          index = wrapIndex(this, index);
          while (head && index--) {
            head = head.next;
          }
          return head ? head.value : notSetValue;
        };

        Stack.prototype.peek = function () {
          return this._head && this._head.value;
        };

        // @pragma Modification

        Stack.prototype.push = function (/*...values*/) {
          if (arguments.length === 0) {
            return this;
          }
          var newSize = this.size + arguments.length;
          var head = this._head;
          for (var ii = arguments.length - 1; ii >= 0; ii--) {
            head = {
              value: arguments[ii],
              next: head,
            };
          }
          if (this.__ownerID) {
            this.size = newSize;
            this._head = head;
            this.__hash = undefined;
            this.__altered = true;
            return this;
          }
          return makeStack(newSize, head);
        };

        Stack.prototype.pushAll = function (iter) {
          iter = IndexedIterable(iter);
          if (iter.size === 0) {
            return this;
          }
          assertNotInfinite(iter.size);
          var newSize = this.size;
          var head = this._head;
          iter.reverse().forEach(function (value) {
            newSize++;
            head = {
              value: value,
              next: head,
            };
          });
          if (this.__ownerID) {
            this.size = newSize;
            this._head = head;
            this.__hash = undefined;
            this.__altered = true;
            return this;
          }
          return makeStack(newSize, head);
        };

        Stack.prototype.pop = function () {
          return this.slice(1);
        };

        Stack.prototype.unshift = function (/*...values*/) {
          return this.push.apply(this, arguments);
        };

        Stack.prototype.unshiftAll = function (iter) {
          return this.pushAll(iter);
        };

        Stack.prototype.shift = function () {
          return this.pop.apply(this, arguments);
        };

        Stack.prototype.clear = function () {
          if (this.size === 0) {
            return this;
          }
          if (this.__ownerID) {
            this.size = 0;
            this._head = undefined;
            this.__hash = undefined;
            this.__altered = true;
            return this;
          }
          return emptyStack();
        };

        Stack.prototype.slice = function (begin, end) {
          if (wholeSlice(begin, end, this.size)) {
            return this;
          }
          var resolvedBegin = resolveBegin(begin, this.size);
          var resolvedEnd = resolveEnd(end, this.size);
          if (resolvedEnd !== this.size) {
            // super.slice(begin, end);
            return IndexedCollection.prototype.slice.call(this, begin, end);
          }
          var newSize = this.size - resolvedBegin;
          var head = this._head;
          while (resolvedBegin--) {
            head = head.next;
          }
          if (this.__ownerID) {
            this.size = newSize;
            this._head = head;
            this.__hash = undefined;
            this.__altered = true;
            return this;
          }
          return makeStack(newSize, head);
        };

        // @pragma Mutability

        Stack.prototype.__ensureOwner = function (ownerID) {
          if (ownerID === this.__ownerID) {
            return this;
          }
          if (!ownerID) {
            this.__ownerID = ownerID;
            this.__altered = false;
            return this;
          }
          return makeStack(this.size, this._head, ownerID, this.__hash);
        };

        // @pragma Iteration

        Stack.prototype.__iterate = function (fn, reverse) {
          if (reverse) {
            return this.reverse().__iterate(fn);
          }
          var iterations = 0;
          var node = this._head;
          while (node) {
            if (fn(node.value, iterations++, this) === false) {
              break;
            }
            node = node.next;
          }
          return iterations;
        };

        Stack.prototype.__iterator = function (type, reverse) {
          if (reverse) {
            return this.reverse().__iterator(type);
          }
          var iterations = 0;
          var node = this._head;
          return new Iterator(function () {
            if (node) {
              var value = node.value;
              node = node.next;
              return iteratorValue(type, iterations++, value);
            }
            return iteratorDone();
          });
        };

        function isStack(maybeStack) {
          return !!(maybeStack && maybeStack[IS_STACK_SENTINEL]);
        }

        Stack.isStack = isStack;

        var IS_STACK_SENTINEL = '@@__IMMUTABLE_STACK__@@';

        var StackPrototype = Stack.prototype;
        StackPrototype[IS_STACK_SENTINEL] = true;
        StackPrototype.withMutations = MapPrototype.withMutations;
        StackPrototype.asMutable = MapPrototype.asMutable;
        StackPrototype.asImmutable = MapPrototype.asImmutable;
        StackPrototype.wasAltered = MapPrototype.wasAltered;

        function makeStack(size, head, ownerID, hash) {
          var map = Object.create(StackPrototype);
          map.size = size;
          map._head = head;
          map.__ownerID = ownerID;
          map.__hash = hash;
          map.__altered = false;
          return map;
        }

        var EMPTY_STACK;
        function emptyStack() {
          return EMPTY_STACK || (EMPTY_STACK = makeStack(0));
        }

        /**
         * Contributes additional methods to a constructor
         */
        function mixin(ctor, methods) {
          var keyCopier = function (key) {
            ctor.prototype[key] = methods[key];
          };
          Object.keys(methods).forEach(keyCopier);
          Object.getOwnPropertySymbols && Object.getOwnPropertySymbols(methods).forEach(keyCopier);
          return ctor;
        }

        Iterable.Iterator = Iterator;

        mixin(Iterable, {
          // ### Conversion to other types

          toArray: function () {
            assertNotInfinite(this.size);
            var array = new Array(this.size || 0);
            this.valueSeq().__iterate(function (v, i) {
              array[i] = v;
            });
            return array;
          },

          toIndexedSeq: function () {
            return new ToIndexedSequence(this);
          },

          toJS: function () {
            return this.toSeq()
              .map(function (value) {
                return value && typeof value.toJS === 'function' ? value.toJS() : value;
              })
              .__toJS();
          },

          toJSON: function () {
            return this.toSeq()
              .map(function (value) {
                return value && typeof value.toJSON === 'function' ? value.toJSON() : value;
              })
              .__toJS();
          },

          toKeyedSeq: function () {
            return new ToKeyedSequence(this, true);
          },

          toMap: function () {
            // Use Late Binding here to solve the circular dependency.
            return Map(this.toKeyedSeq());
          },

          toObject: function () {
            assertNotInfinite(this.size);
            var object = {};
            this.__iterate(function (v, k) {
              object[k] = v;
            });
            return object;
          },

          toOrderedMap: function () {
            // Use Late Binding here to solve the circular dependency.
            return OrderedMap(this.toKeyedSeq());
          },

          toOrderedSet: function () {
            // Use Late Binding here to solve the circular dependency.
            return OrderedSet(isKeyed(this) ? this.valueSeq() : this);
          },

          toSet: function () {
            // Use Late Binding here to solve the circular dependency.
            return Set(isKeyed(this) ? this.valueSeq() : this);
          },

          toSetSeq: function () {
            return new ToSetSequence(this);
          },

          toSeq: function () {
            return isIndexed(this)
              ? this.toIndexedSeq()
              : isKeyed(this)
              ? this.toKeyedSeq()
              : this.toSetSeq();
          },

          toStack: function () {
            // Use Late Binding here to solve the circular dependency.
            return Stack(isKeyed(this) ? this.valueSeq() : this);
          },

          toList: function () {
            // Use Late Binding here to solve the circular dependency.
            return List(isKeyed(this) ? this.valueSeq() : this);
          },

          // ### Common JavaScript methods and properties

          toString: function () {
            return '[Iterable]';
          },

          __toString: function (head, tail) {
            if (this.size === 0) {
              return head + tail;
            }
            return head + ' ' + this.toSeq().map(this.__toStringMapper).join(', ') + ' ' + tail;
          },

          // ### ES6 Collection methods (ES6 Array and Map)

          concat: function () {
            var values = SLICE$0.call(arguments, 0);
            return reify(this, concatFactory(this, values));
          },

          includes: function (searchValue) {
            return this.some(function (value) {
              return is(value, searchValue);
            });
          },

          entries: function () {
            return this.__iterator(ITERATE_ENTRIES);
          },

          every: function (predicate, context) {
            assertNotInfinite(this.size);
            var returnValue = true;
            this.__iterate(function (v, k, c) {
              if (!predicate.call(context, v, k, c)) {
                returnValue = false;
                return false;
              }
            });
            return returnValue;
          },

          filter: function (predicate, context) {
            return reify(this, filterFactory(this, predicate, context, true));
          },

          find: function (predicate, context, notSetValue) {
            var entry = this.findEntry(predicate, context);
            return entry ? entry[1] : notSetValue;
          },

          forEach: function (sideEffect, context) {
            assertNotInfinite(this.size);
            return this.__iterate(context ? sideEffect.bind(context) : sideEffect);
          },

          join: function (separator) {
            assertNotInfinite(this.size);
            separator = separator !== undefined ? '' + separator : ',';
            var joined = '';
            var isFirst = true;
            this.__iterate(function (v) {
              isFirst ? (isFirst = false) : (joined += separator);
              joined += v !== null && v !== undefined ? v.toString() : '';
            });
            return joined;
          },

          keys: function () {
            return this.__iterator(ITERATE_KEYS);
          },

          map: function (mapper, context) {
            return reify(this, mapFactory(this, mapper, context));
          },

          reduce: function (reducer, initialReduction, context) {
            assertNotInfinite(this.size);
            var reduction;
            var useFirst;
            if (arguments.length < 2) {
              useFirst = true;
            } else {
              reduction = initialReduction;
            }
            this.__iterate(function (v, k, c) {
              if (useFirst) {
                useFirst = false;
                reduction = v;
              } else {
                reduction = reducer.call(context, reduction, v, k, c);
              }
            });
            return reduction;
          },

          reduceRight: function (reducer, initialReduction, context) {
            var reversed = this.toKeyedSeq().reverse();
            return reversed.reduce.apply(reversed, arguments);
          },

          reverse: function () {
            return reify(this, reverseFactory(this, true));
          },

          slice: function (begin, end) {
            return reify(this, sliceFactory(this, begin, end, true));
          },

          some: function (predicate, context) {
            return !this.every(not(predicate), context);
          },

          sort: function (comparator) {
            return reify(this, sortFactory(this, comparator));
          },

          values: function () {
            return this.__iterator(ITERATE_VALUES);
          },

          // ### More sequential methods

          butLast: function () {
            return this.slice(0, -1);
          },

          isEmpty: function () {
            return this.size !== undefined
              ? this.size === 0
              : !this.some(function () {
                  return true;
                });
          },

          count: function (predicate, context) {
            return ensureSize(predicate ? this.toSeq().filter(predicate, context) : this);
          },

          countBy: function (grouper, context) {
            return countByFactory(this, grouper, context);
          },

          equals: function (other) {
            return deepEqual(this, other);
          },

          entrySeq: function () {
            var iterable = this;
            if (iterable._cache) {
              // We cache as an entries array, so we can just return the cache!
              return new ArraySeq(iterable._cache);
            }
            var entriesSequence = iterable.toSeq().map(entryMapper).toIndexedSeq();
            entriesSequence.fromEntrySeq = function () {
              return iterable.toSeq();
            };
            return entriesSequence;
          },

          filterNot: function (predicate, context) {
            return this.filter(not(predicate), context);
          },

          findEntry: function (predicate, context, notSetValue) {
            var found = notSetValue;
            this.__iterate(function (v, k, c) {
              if (predicate.call(context, v, k, c)) {
                found = [k, v];
                return false;
              }
            });
            return found;
          },

          findKey: function (predicate, context) {
            var entry = this.findEntry(predicate, context);
            return entry && entry[0];
          },

          findLast: function (predicate, context, notSetValue) {
            return this.toKeyedSeq().reverse().find(predicate, context, notSetValue);
          },

          findLastEntry: function (predicate, context, notSetValue) {
            return this.toKeyedSeq().reverse().findEntry(predicate, context, notSetValue);
          },

          findLastKey: function (predicate, context) {
            return this.toKeyedSeq().reverse().findKey(predicate, context);
          },

          first: function () {
            return this.find(returnTrue);
          },

          flatMap: function (mapper, context) {
            return reify(this, flatMapFactory(this, mapper, context));
          },

          flatten: function (depth) {
            return reify(this, flattenFactory(this, depth, true));
          },

          fromEntrySeq: function () {
            return new FromEntriesSequence(this);
          },

          get: function (searchKey, notSetValue) {
            return this.find(
              function (_, key) {
                return is(key, searchKey);
              },
              undefined,
              notSetValue
            );
          },

          getIn: function (searchKeyPath, notSetValue) {
            var nested = this;
            // Note: in an ES6 environment, we would prefer:
            // for (var key of searchKeyPath) {
            var iter = forceIterator(searchKeyPath);
            var step;
            while (!(step = iter.next()).done) {
              var key = step.value;
              nested = nested && nested.get ? nested.get(key, NOT_SET) : NOT_SET;
              if (nested === NOT_SET) {
                return notSetValue;
              }
            }
            return nested;
          },

          groupBy: function (grouper, context) {
            return groupByFactory(this, grouper, context);
          },

          has: function (searchKey) {
            return this.get(searchKey, NOT_SET) !== NOT_SET;
          },

          hasIn: function (searchKeyPath) {
            return this.getIn(searchKeyPath, NOT_SET) !== NOT_SET;
          },

          isSubset: function (iter) {
            iter = typeof iter.includes === 'function' ? iter : Iterable(iter);
            return this.every(function (value) {
              return iter.includes(value);
            });
          },

          isSuperset: function (iter) {
            iter = typeof iter.isSubset === 'function' ? iter : Iterable(iter);
            return iter.isSubset(this);
          },

          keyOf: function (searchValue) {
            return this.findKey(function (value) {
              return is(value, searchValue);
            });
          },

          keySeq: function () {
            return this.toSeq().map(keyMapper).toIndexedSeq();
          },

          last: function () {
            return this.toSeq().reverse().first();
          },

          lastKeyOf: function (searchValue) {
            return this.toKeyedSeq().reverse().keyOf(searchValue);
          },

          max: function (comparator) {
            return maxFactory(this, comparator);
          },

          maxBy: function (mapper, comparator) {
            return maxFactory(this, comparator, mapper);
          },

          min: function (comparator) {
            return maxFactory(this, comparator ? neg(comparator) : defaultNegComparator);
          },

          minBy: function (mapper, comparator) {
            return maxFactory(this, comparator ? neg(comparator) : defaultNegComparator, mapper);
          },

          rest: function () {
            return this.slice(1);
          },

          skip: function (amount) {
            return this.slice(Math.max(0, amount));
          },

          skipLast: function (amount) {
            return reify(this, this.toSeq().reverse().skip(amount).reverse());
          },

          skipWhile: function (predicate, context) {
            return reify(this, skipWhileFactory(this, predicate, context, true));
          },

          skipUntil: function (predicate, context) {
            return this.skipWhile(not(predicate), context);
          },

          sortBy: function (mapper, comparator) {
            return reify(this, sortFactory(this, comparator, mapper));
          },

          take: function (amount) {
            return this.slice(0, Math.max(0, amount));
          },

          takeLast: function (amount) {
            return reify(this, this.toSeq().reverse().take(amount).reverse());
          },

          takeWhile: function (predicate, context) {
            return reify(this, takeWhileFactory(this, predicate, context));
          },

          takeUntil: function (predicate, context) {
            return this.takeWhile(not(predicate), context);
          },

          valueSeq: function () {
            return this.toIndexedSeq();
          },

          // ### Hashable Object

          hashCode: function () {
            return this.__hash || (this.__hash = hashIterable(this));
          },

          // ### Internal

          // abstract __iterate(fn, reverse)

          // abstract __iterator(type, reverse)
        });

        // var IS_ITERABLE_SENTINEL = '@@__IMMUTABLE_ITERABLE__@@';
        // var IS_KEYED_SENTINEL = '@@__IMMUTABLE_KEYED__@@';
        // var IS_INDEXED_SENTINEL = '@@__IMMUTABLE_INDEXED__@@';
        // var IS_ORDERED_SENTINEL = '@@__IMMUTABLE_ORDERED__@@';

        var IterablePrototype = Iterable.prototype;
        IterablePrototype[IS_ITERABLE_SENTINEL] = true;
        IterablePrototype[ITERATOR_SYMBOL] = IterablePrototype.values;
        IterablePrototype.__toJS = IterablePrototype.toArray;
        IterablePrototype.__toStringMapper = quoteString;
        IterablePrototype.inspect = IterablePrototype.toSource = function () {
          return this.toString();
        };
        IterablePrototype.chain = IterablePrototype.flatMap;
        IterablePrototype.contains = IterablePrototype.includes;

        mixin(KeyedIterable, {
          // ### More sequential methods

          flip: function () {
            return reify(this, flipFactory(this));
          },

          mapEntries: function (mapper, context) {
            var this$0 = this;
            var iterations = 0;
            return reify(
              this,
              this.toSeq()
                .map(function (v, k) {
                  return mapper.call(context, [k, v], iterations++, this$0);
                })
                .fromEntrySeq()
            );
          },

          mapKeys: function (mapper, context) {
            var this$0 = this;
            return reify(
              this,
              this.toSeq()
                .flip()
                .map(function (k, v) {
                  return mapper.call(context, k, v, this$0);
                })
                .flip()
            );
          },
        });

        var KeyedIterablePrototype = KeyedIterable.prototype;
        KeyedIterablePrototype[IS_KEYED_SENTINEL] = true;
        KeyedIterablePrototype[ITERATOR_SYMBOL] = IterablePrototype.entries;
        KeyedIterablePrototype.__toJS = IterablePrototype.toObject;
        KeyedIterablePrototype.__toStringMapper = function (v, k) {
          return JSON.stringify(k) + ': ' + quoteString(v);
        };

        mixin(IndexedIterable, {
          // ### Conversion to other types

          toKeyedSeq: function () {
            return new ToKeyedSequence(this, false);
          },

          // ### ES6 Collection methods (ES6 Array and Map)

          filter: function (predicate, context) {
            return reify(this, filterFactory(this, predicate, context, false));
          },

          findIndex: function (predicate, context) {
            var entry = this.findEntry(predicate, context);
            return entry ? entry[0] : -1;
          },

          indexOf: function (searchValue) {
            var key = this.keyOf(searchValue);
            return key === undefined ? -1 : key;
          },

          lastIndexOf: function (searchValue) {
            var key = this.lastKeyOf(searchValue);
            return key === undefined ? -1 : key;
          },

          reverse: function () {
            return reify(this, reverseFactory(this, false));
          },

          slice: function (begin, end) {
            return reify(this, sliceFactory(this, begin, end, false));
          },

          splice: function (index, removeNum /*, ...values*/) {
            var numArgs = arguments.length;
            removeNum = Math.max(removeNum | 0, 0);
            if (numArgs === 0 || (numArgs === 2 && !removeNum)) {
              return this;
            }
            // If index is negative, it should resolve relative to the size of the
            // collection. However size may be expensive to compute if not cached, so
            // only call count() if the number is in fact negative.
            index = resolveBegin(index, index < 0 ? this.count() : this.size);
            var spliced = this.slice(0, index);
            return reify(
              this,
              numArgs === 1
                ? spliced
                : spliced.concat(arrCopy(arguments, 2), this.slice(index + removeNum))
            );
          },

          // ### More collection methods

          findLastIndex: function (predicate, context) {
            var entry = this.findLastEntry(predicate, context);
            return entry ? entry[0] : -1;
          },

          first: function () {
            return this.get(0);
          },

          flatten: function (depth) {
            return reify(this, flattenFactory(this, depth, false));
          },

          get: function (index, notSetValue) {
            index = wrapIndex(this, index);
            return index < 0 ||
              this.size === Infinity ||
              (this.size !== undefined && index > this.size)
              ? notSetValue
              : this.find(
                  function (_, key) {
                    return key === index;
                  },
                  undefined,
                  notSetValue
                );
          },

          has: function (index) {
            index = wrapIndex(this, index);
            return (
              index >= 0 &&
              (this.size !== undefined
                ? this.size === Infinity || index < this.size
                : this.indexOf(index) !== -1)
            );
          },

          interpose: function (separator) {
            return reify(this, interposeFactory(this, separator));
          },

          interleave: function (/*...iterables*/) {
            var iterables = [this].concat(arrCopy(arguments));
            var zipped = zipWithFactory(this.toSeq(), IndexedSeq.of, iterables);
            var interleaved = zipped.flatten(true);
            if (zipped.size) {
              interleaved.size = zipped.size * iterables.length;
            }
            return reify(this, interleaved);
          },

          keySeq: function () {
            return Range(0, this.size);
          },

          last: function () {
            return this.get(-1);
          },

          skipWhile: function (predicate, context) {
            return reify(this, skipWhileFactory(this, predicate, context, false));
          },

          zip: function (/*, ...iterables */) {
            var iterables = [this].concat(arrCopy(arguments));
            return reify(this, zipWithFactory(this, defaultZipper, iterables));
          },

          zipWith: function (zipper /*, ...iterables */) {
            var iterables = arrCopy(arguments);
            iterables[0] = this;
            return reify(this, zipWithFactory(this, zipper, iterables));
          },
        });

        IndexedIterable.prototype[IS_INDEXED_SENTINEL] = true;
        IndexedIterable.prototype[IS_ORDERED_SENTINEL] = true;

        mixin(SetIterable, {
          // ### ES6 Collection methods (ES6 Array and Map)

          get: function (value, notSetValue) {
            return this.has(value) ? value : notSetValue;
          },

          includes: function (value) {
            return this.has(value);
          },

          // ### More sequential methods

          keySeq: function () {
            return this.valueSeq();
          },
        });

        SetIterable.prototype.has = IterablePrototype.includes;
        SetIterable.prototype.contains = SetIterable.prototype.includes;

        // Mixin subclasses

        mixin(KeyedSeq, KeyedIterable.prototype);
        mixin(IndexedSeq, IndexedIterable.prototype);
        mixin(SetSeq, SetIterable.prototype);

        mixin(KeyedCollection, KeyedIterable.prototype);
        mixin(IndexedCollection, IndexedIterable.prototype);
        mixin(SetCollection, SetIterable.prototype);

        // #pragma Helper functions

        function keyMapper(v, k) {
          return k;
        }

        function entryMapper(v, k) {
          return [k, v];
        }

        function not(predicate) {
          return function () {
            return !predicate.apply(this, arguments);
          };
        }

        function neg(predicate) {
          return function () {
            return -predicate.apply(this, arguments);
          };
        }

        function quoteString(value) {
          return typeof value === 'string' ? JSON.stringify(value) : String(value);
        }

        function defaultZipper() {
          return arrCopy(arguments);
        }

        function defaultNegComparator(a, b) {
          return a < b ? 1 : a > b ? -1 : 0;
        }

        function hashIterable(iterable) {
          if (iterable.size === Infinity) {
            return 0;
          }
          var ordered = isOrdered(iterable);
          var keyed = isKeyed(iterable);
          var h = ordered ? 1 : 0;
          var size = iterable.__iterate(
            keyed
              ? ordered
                ? function (v, k) {
                    h = (31 * h + hashMerge(hash(v), hash(k))) | 0;
                  }
                : function (v, k) {
                    h = (h + hashMerge(hash(v), hash(k))) | 0;
                  }
              : ordered
              ? function (v) {
                  h = (31 * h + hash(v)) | 0;
                }
              : function (v) {
                  h = (h + hash(v)) | 0;
                }
          );
          return murmurHashOfSize(size, h);
        }

        function murmurHashOfSize(size, h) {
          h = imul(h, 0xcc9e2d51);
          h = imul((h << 15) | (h >>> -15), 0x1b873593);
          h = imul((h << 13) | (h >>> -13), 5);
          h = ((h + 0xe6546b64) | 0) ^ size;
          h = imul(h ^ (h >>> 16), 0x85ebca6b);
          h = imul(h ^ (h >>> 13), 0xc2b2ae35);
          h = smi(h ^ (h >>> 16));
          return h;
        }

        function hashMerge(a, b) {
          return (a ^ (b + 0x9e3779b9 + (a << 6) + (a >> 2))) | 0; // int
        }

        var Immutable = {
          Iterable: Iterable,

          Seq: Seq,
          Collection: Collection,
          Map: Map,
          OrderedMap: OrderedMap,
          List: List,
          Stack: Stack,
          Set: Set,
          OrderedSet: OrderedSet,

          Record: Record,
          Range: Range,
          Repeat: Repeat,

          is: is,
          fromJS: fromJS,
        };

        return Immutable;
      });

      /***/
    },
    /* 83 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';
      /**
       * Copyright 2015-present, Facebook, Inc.
       * All rights reserved.
       *
       * This source code is licensed under the BSD-style license found in the
       * LICENSE file in the root directory of this source tree. An additional grant
       * of patent rights can be found in the PATENTS file in the same directory.
       *
       */

      var DOMNamespaces = __webpack_require__(186);
      var setInnerHTML = __webpack_require__(125);

      var createMicrosoftUnsafeLocalFunction = __webpack_require__(193);
      var setTextContent = __webpack_require__(300);

      var ELEMENT_NODE_TYPE = 1;
      var DOCUMENT_FRAGMENT_NODE_TYPE = 11;

      /**
       * In IE (8-11) and Edge, appending nodes with no children is dramatically
       * faster than appending a full subtree, so we essentially queue up the
       * .appendChild calls here and apply them so each node is added to its parent
       * before any children are added.
       *
       * In other browsers, doing so is slower or neutral compared to the other order
       * (in Firefox, twice as slow) so we only do this inversion in IE.
       *
       * See https://github.com/spicyj/innerhtml-vs-createelement-vs-clonenode.
       */
      var enableLazy =
        (typeof document !== 'undefined' && typeof document.documentMode === 'number') ||
        (typeof navigator !== 'undefined' &&
          typeof navigator.userAgent === 'string' &&
          /\bEdge\/\d/.test(navigator.userAgent));

      function insertTreeChildren(tree) {
        if (!enableLazy) {
          return;
        }
        var node = tree.node;
        var children = tree.children;
        if (children.length) {
          for (var i = 0; i < children.length; i++) {
            insertTreeBefore(node, children[i], null);
          }
        } else if (tree.html != null) {
          setInnerHTML(node, tree.html);
        } else if (tree.text != null) {
          setTextContent(node, tree.text);
        }
      }

      var insertTreeBefore = createMicrosoftUnsafeLocalFunction(function (
        parentNode,
        tree,
        referenceNode
      ) {
        // DocumentFragments aren't actually part of the DOM after insertion so
        // appending children won't update the DOM. We need to ensure the fragment
        // is properly populated first, breaking out of our lazy approach for just
        // this level. Also, some <object> plugins (like Flash Player) will read
        // <param> nodes immediately upon insertion into the DOM, so <object>
        // must also be populated prior to insertion into the DOM.
        if (
          tree.node.nodeType === DOCUMENT_FRAGMENT_NODE_TYPE ||
          (tree.node.nodeType === ELEMENT_NODE_TYPE &&
            tree.node.nodeName.toLowerCase() === 'object' &&
            (tree.node.namespaceURI == null || tree.node.namespaceURI === DOMNamespaces.html))
        ) {
          insertTreeChildren(tree);
          parentNode.insertBefore(tree.node, referenceNode);
        } else {
          parentNode.insertBefore(tree.node, referenceNode);
          insertTreeChildren(tree);
        }
      });

      function replaceChildWithTree(oldNode, newTree) {
        oldNode.parentNode.replaceChild(newTree.node, oldNode);
        insertTreeChildren(newTree);
      }

      function queueChild(parentTree, childTree) {
        if (enableLazy) {
          parentTree.children.push(childTree);
        } else {
          parentTree.node.appendChild(childTree.node);
        }
      }

      function queueHTML(tree, html) {
        if (enableLazy) {
          tree.html = html;
        } else {
          setInnerHTML(tree.node, html);
        }
      }

      function queueText(tree, text) {
        if (enableLazy) {
          tree.text = text;
        } else {
          setTextContent(tree.node, text);
        }
      }

      function toString() {
        return this.node.nodeName;
      }

      function DOMLazyTree(node) {
        return {
          node: node,
          children: [],
          html: null,
          text: null,
          toString: toString,
        };
      }

      DOMLazyTree.insertTreeBefore = insertTreeBefore;
      DOMLazyTree.replaceChildWithTree = replaceChildWithTree;
      DOMLazyTree.queueChild = queueChild;
      DOMLazyTree.queueHTML = queueHTML;
      DOMLazyTree.queueText = queueText;

      module.exports = DOMLazyTree;

      /***/
    },
    /* 84 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';
      /* WEBPACK VAR INJECTION */ (function (process) {
        /**
         * Copyright 2013-present, Facebook, Inc.
         * All rights reserved.
         *
         * This source code is licensed under the BSD-style license found in the
         * LICENSE file in the root directory of this source tree. An additional grant
         * of patent rights can be found in the PATENTS file in the same directory.
         *
         */

        var ReactRef = __webpack_require__(703);
        var ReactInstrumentation = __webpack_require__(32);

        var warning = __webpack_require__(3);

        /**
         * Helper to call ReactRef.attachRefs with this composite component, split out
         * to avoid allocations in the transaction mount-ready queue.
         */
        function attachRefs() {
          ReactRef.attachRefs(this, this._currentElement);
        }

        var ReactReconciler = {
          /**
           * Initializes the component, renders markup, and registers event listeners.
           *
           * @param {ReactComponent} internalInstance
           * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction
           * @param {?object} the containing host component instance
           * @param {?object} info about the host container
           * @return {?string} Rendered markup to be inserted into the DOM.
           * @final
           * @internal
           */
          mountComponent: function (
            internalInstance,
            transaction,
            hostParent,
            hostContainerInfo,
            context,
            parentDebugID // 0 in production and for roots
          ) {
            if (process.env.NODE_ENV !== 'production') {
              if (internalInstance._debugID !== 0) {
                ReactInstrumentation.debugTool.onBeforeMountComponent(
                  internalInstance._debugID,
                  internalInstance._currentElement,
                  parentDebugID
                );
              }
            }
            var markup = internalInstance.mountComponent(
              transaction,
              hostParent,
              hostContainerInfo,
              context,
              parentDebugID
            );
            if (internalInstance._currentElement && internalInstance._currentElement.ref != null) {
              transaction.getReactMountReady().enqueue(attachRefs, internalInstance);
            }
            if (process.env.NODE_ENV !== 'production') {
              if (internalInstance._debugID !== 0) {
                ReactInstrumentation.debugTool.onMountComponent(internalInstance._debugID);
              }
            }
            return markup;
          },

          /**
           * Returns a value that can be passed to
           * ReactComponentEnvironment.replaceNodeWithMarkup.
           */
          getHostNode: function (internalInstance) {
            return internalInstance.getHostNode();
          },

          /**
           * Releases any resources allocated by `mountComponent`.
           *
           * @final
           * @internal
           */
          unmountComponent: function (internalInstance, safely) {
            if (process.env.NODE_ENV !== 'production') {
              if (internalInstance._debugID !== 0) {
                ReactInstrumentation.debugTool.onBeforeUnmountComponent(internalInstance._debugID);
              }
            }
            ReactRef.detachRefs(internalInstance, internalInstance._currentElement);
            internalInstance.unmountComponent(safely);
            if (process.env.NODE_ENV !== 'production') {
              if (internalInstance._debugID !== 0) {
                ReactInstrumentation.debugTool.onUnmountComponent(internalInstance._debugID);
              }
            }
          },

          /**
           * Update a component using a new element.
           *
           * @param {ReactComponent} internalInstance
           * @param {ReactElement} nextElement
           * @param {ReactReconcileTransaction} transaction
           * @param {object} context
           * @internal
           */
          receiveComponent: function (internalInstance, nextElement, transaction, context) {
            var prevElement = internalInstance._currentElement;

            if (nextElement === prevElement && context === internalInstance._context) {
              // Since elements are immutable after the owner is rendered,
              // we can do a cheap identity compare here to determine if this is a
              // superfluous reconcile. It's possible for state to be mutable but such
              // change should trigger an update of the owner which would recreate
              // the element. We explicitly check for the existence of an owner since
              // it's possible for an element created outside a composite to be
              // deeply mutated and reused.

              // TODO: Bailing out early is just a perf optimization right?
              // TODO: Removing the return statement should affect correctness?
              return;
            }

            if (process.env.NODE_ENV !== 'production') {
              if (internalInstance._debugID !== 0) {
                ReactInstrumentation.debugTool.onBeforeUpdateComponent(
                  internalInstance._debugID,
                  nextElement
                );
              }
            }

            var refsChanged = ReactRef.shouldUpdateRefs(prevElement, nextElement);

            if (refsChanged) {
              ReactRef.detachRefs(internalInstance, prevElement);
            }

            internalInstance.receiveComponent(nextElement, transaction, context);

            if (
              refsChanged &&
              internalInstance._currentElement &&
              internalInstance._currentElement.ref != null
            ) {
              transaction.getReactMountReady().enqueue(attachRefs, internalInstance);
            }

            if (process.env.NODE_ENV !== 'production') {
              if (internalInstance._debugID !== 0) {
                ReactInstrumentation.debugTool.onUpdateComponent(internalInstance._debugID);
              }
            }
          },

          /**
           * Flush any dirty changes in a component.
           *
           * @param {ReactComponent} internalInstance
           * @param {ReactReconcileTransaction} transaction
           * @internal
           */
          performUpdateIfNecessary: function (internalInstance, transaction, updateBatchNumber) {
            if (internalInstance._updateBatchNumber !== updateBatchNumber) {
              // The component's enqueued batch number should always be the current
              // batch or the following one.
              process.env.NODE_ENV !== 'production'
                ? warning(
                    internalInstance._updateBatchNumber == null ||
                      internalInstance._updateBatchNumber === updateBatchNumber + 1,
                    'performUpdateIfNecessary: Unexpected batch number (current %s, ' +
                      'pending %s)',
                    updateBatchNumber,
                    internalInstance._updateBatchNumber
                  )
                : void 0;
              return;
            }
            if (process.env.NODE_ENV !== 'production') {
              if (internalInstance._debugID !== 0) {
                ReactInstrumentation.debugTool.onBeforeUpdateComponent(
                  internalInstance._debugID,
                  internalInstance._currentElement
                );
              }
            }
            internalInstance.performUpdateIfNecessary(transaction);
            if (process.env.NODE_ENV !== 'production') {
              if (internalInstance._debugID !== 0) {
                ReactInstrumentation.debugTool.onUpdateComponent(internalInstance._debugID);
              }
            }
          },
        };

        module.exports = ReactReconciler;
        /* WEBPACK VAR INJECTION */
      }.call(exports, __webpack_require__(1)));

      /***/
    },
    /* 85 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';
      /* WEBPACK VAR INJECTION */ (function (process) {
        /**
         * Copyright 2013-present, Facebook, Inc.
         * All rights reserved.
         *
         * This source code is licensed under the BSD-style license found in the
         * LICENSE file in the root directory of this source tree. An additional grant
         * of patent rights can be found in the PATENTS file in the same directory.
         *
         */

        var _assign = __webpack_require__(12);

        var ReactChildren = __webpack_require__(759);
        var ReactComponent = __webpack_require__(202);
        var ReactPureComponent = __webpack_require__(763);
        var ReactClass = __webpack_require__(760);
        var ReactDOMFactories = __webpack_require__(761);
        var ReactElement = __webpack_require__(69);
        var ReactPropTypes = __webpack_require__(762);
        var ReactVersion = __webpack_require__(764);

        var onlyChild = __webpack_require__(766);
        var warning = __webpack_require__(3);

        var createElement = ReactElement.createElement;
        var createFactory = ReactElement.createFactory;
        var cloneElement = ReactElement.cloneElement;

        if (process.env.NODE_ENV !== 'production') {
          var ReactElementValidator = __webpack_require__(312);
          createElement = ReactElementValidator.createElement;
          createFactory = ReactElementValidator.createFactory;
          cloneElement = ReactElementValidator.cloneElement;
        }

        var __spread = _assign;

        if (process.env.NODE_ENV !== 'production') {
          var warned = false;
          __spread = function () {
            process.env.NODE_ENV !== 'production'
              ? warning(
                  warned,
                  'React.__spread is deprecated and should not be used. Use ' +
                    'Object.assign directly or another helper function with similar ' +
                    'semantics. You may be seeing this warning due to your compiler. ' +
                    'See https://fb.me/react-spread-deprecation for more details.'
                )
              : void 0;
            warned = true;
            return _assign.apply(null, arguments);
          };
        }

        var React = {
          // Modern

          Children: {
            map: ReactChildren.map,
            forEach: ReactChildren.forEach,
            count: ReactChildren.count,
            toArray: ReactChildren.toArray,
            only: onlyChild,
          },

          Component: ReactComponent,
          PureComponent: ReactPureComponent,

          createElement: createElement,
          cloneElement: cloneElement,
          isValidElement: ReactElement.isValidElement,

          // Classic

          PropTypes: ReactPropTypes,
          createClass: ReactClass.createClass,
          createFactory: createFactory,
          createMixin: function (mixin) {
            // Currently a noop. Will be used to validate and trace mixins.
            return mixin;
          },

          // This looks DOM specific but these are actually isomorphic helpers
          // since they are just generating DOM strings.
          DOM: ReactDOMFactories,

          version: ReactVersion,

          // Deprecated hook for JSX spread, don't use this for anything.
          __spread: __spread,
        };

        module.exports = React;
        /* WEBPACK VAR INJECTION */
      }.call(exports, __webpack_require__(1)));

      /***/
    },
    /* 86 */
    /***/ function (module, exports, __webpack_require__) {
      var isObject = __webpack_require__(87);
      module.exports = function (it) {
        if (!isObject(it)) throw TypeError(it + ' is not an object!');
        return it;
      };

      /***/
    },
    /* 87 */
    /***/ function (module, exports) {
      module.exports = function (it) {
        return typeof it === 'object' ? it !== null : typeof it === 'function';
      };

      /***/
    },
    /* 88 */
    /***/ function (module, exports, __webpack_require__) {
      // getting tag from 19.1.3.6 Object.prototype.toString()
      var cof = __webpack_require__(34),
        TAG = __webpack_require__(10)('toStringTag'),
        // ES3 wrong here
        ARG =
          cof(
            (function () {
              return arguments;
            })()
          ) == 'Arguments';

      // fallback for IE11 Script Access Denied error
      var tryGet = function (it, key) {
        try {
          return it[key];
        } catch (e) {
          /* empty */
        }
      };

      module.exports = function (it) {
        var O, T, B;
        return it === undefined
          ? 'Undefined'
          : it === null
          ? 'Null'
          : // @@toStringTag case
          typeof (T = tryGet((O = Object(it)), TAG)) == 'string'
          ? T
          : // builtinTag case
          ARG
          ? cof(O)
          : // ES3 arguments fallback
          (B = cof(O)) == 'Object' && typeof O.callee == 'function'
          ? 'Arguments'
          : B;
      };

      /***/
    },
    /* 89 */
    /***/ function (module, exports, __webpack_require__) {
      // fallback for non-array-like ES3 and non-enumerable old V8 strings
      var cof = __webpack_require__(34);
      module.exports = Object('z').propertyIsEnumerable(0)
        ? Object
        : function (it) {
            return cof(it) == 'String' ? it.split('') : Object(it);
          };

      /***/
    },
    /* 90 */
    /***/ function (module, exports) {
      exports.f = {}.propertyIsEnumerable;

      /***/
    },
    /* 91 */
    /***/ function (module, exports, __webpack_require__) {
      /* WEBPACK VAR INJECTION */ (function (Buffer) {
        // Copyright Joyent, Inc. and other Node contributors.
        //
        // Permission is hereby granted, free of charge, to any person obtaining a
        // copy of this software and associated documentation files (the
        // "Software"), to deal in the Software without restriction, including
        // without limitation the rights to use, copy, modify, merge, publish,
        // distribute, sublicense, and/or sell copies of the Software, and to permit
        // persons to whom the Software is furnished to do so, subject to the
        // following conditions:
        //
        // The above copyright notice and this permission notice shall be included
        // in all copies or substantial portions of the Software.
        //
        // THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
        // OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
        // MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
        // NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
        // DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
        // OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
        // USE OR OTHER DEALINGS IN THE SOFTWARE.

        // NOTE: These type checking functions intentionally don't use `instanceof`
        // because it is fragile and can be easily faked with `Object.create()`.

        function isArray(arg) {
          if (Array.isArray) {
            return Array.isArray(arg);
          }
          return objectToString(arg) === '[object Array]';
        }
        exports.isArray = isArray;

        function isBoolean(arg) {
          return typeof arg === 'boolean';
        }
        exports.isBoolean = isBoolean;

        function isNull(arg) {
          return arg === null;
        }
        exports.isNull = isNull;

        function isNullOrUndefined(arg) {
          return arg == null;
        }
        exports.isNullOrUndefined = isNullOrUndefined;

        function isNumber(arg) {
          return typeof arg === 'number';
        }
        exports.isNumber = isNumber;

        function isString(arg) {
          return typeof arg === 'string';
        }
        exports.isString = isString;

        function isSymbol(arg) {
          return typeof arg === 'symbol';
        }
        exports.isSymbol = isSymbol;

        function isUndefined(arg) {
          return arg === void 0;
        }
        exports.isUndefined = isUndefined;

        function isRegExp(re) {
          return objectToString(re) === '[object RegExp]';
        }
        exports.isRegExp = isRegExp;

        function isObject(arg) {
          return typeof arg === 'object' && arg !== null;
        }
        exports.isObject = isObject;

        function isDate(d) {
          return objectToString(d) === '[object Date]';
        }
        exports.isDate = isDate;

        function isError(e) {
          return objectToString(e) === '[object Error]' || e instanceof Error;
        }
        exports.isError = isError;

        function isFunction(arg) {
          return typeof arg === 'function';
        }
        exports.isFunction = isFunction;

        function isPrimitive(arg) {
          return (
            arg === null ||
            typeof arg === 'boolean' ||
            typeof arg === 'number' ||
            typeof arg === 'string' ||
            typeof arg === 'symbol' || // ES6 symbol
            typeof arg === 'undefined'
          );
        }
        exports.isPrimitive = isPrimitive;

        exports.isBuffer = Buffer.isBuffer;

        function objectToString(o) {
          return Object.prototype.toString.call(o);
        }

        /* WEBPACK VAR INJECTION */
      }.call(exports, __webpack_require__(43).Buffer));

      /***/
    },
    /* 92 */
    /***/ function (module, exports) {
      //Types of elements found in the DOM
      module.exports = {
        Text: 'text', //Text
        Directive: 'directive', //<? ... ?>
        Comment: 'comment', //<!-- ... -->
        Script: 'script', //<script> tags
        Style: 'style', //<style> tags
        Tag: 'tag', //Any tag
        CDATA: 'cdata', //<![CDATA[ ... ]]>
        Doctype: 'doctype',

        isTag: function (elem) {
          return elem.type === 'tag' || elem.type === 'script' || elem.type === 'style';
        },
      };

      /***/
    },
    /* 93 */
    /***/ function (module, exports) {
      // Copyright Joyent, Inc. and other Node contributors.
      //
      // Permission is hereby granted, free of charge, to any person obtaining a
      // copy of this software and associated documentation files (the
      // "Software"), to deal in the Software without restriction, including
      // without limitation the rights to use, copy, modify, merge, publish,
      // distribute, sublicense, and/or sell copies of the Software, and to permit
      // persons to whom the Software is furnished to do so, subject to the
      // following conditions:
      //
      // The above copyright notice and this permission notice shall be included
      // in all copies or substantial portions of the Software.
      //
      // THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
      // OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
      // MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
      // NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
      // DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
      // OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
      // USE OR OTHER DEALINGS IN THE SOFTWARE.

      function EventEmitter() {
        this._events = this._events || {};
        this._maxListeners = this._maxListeners || undefined;
      }
      module.exports = EventEmitter;

      // Backwards-compat with node 0.10.x
      EventEmitter.EventEmitter = EventEmitter;

      EventEmitter.prototype._events = undefined;
      EventEmitter.prototype._maxListeners = undefined;

      // By default EventEmitters will print a warning if more than 10 listeners are
      // added to it. This is a useful default which helps finding memory leaks.
      EventEmitter.defaultMaxListeners = 10;

      // Obviously not all Emitters should be limited to 10. This function allows
      // that to be increased. Set to zero for unlimited.
      EventEmitter.prototype.setMaxListeners = function (n) {
        if (!isNumber(n) || n < 0 || isNaN(n)) throw TypeError('n must be a positive number');
        this._maxListeners = n;
        return this;
      };

      EventEmitter.prototype.emit = function (type) {
        var er, handler, len, args, i, listeners;

        if (!this._events) this._events = {};

        // If there is no 'error' event listener then throw.
        if (type === 'error') {
          if (!this._events.error || (isObject(this._events.error) && !this._events.error.length)) {
            er = arguments[1];
            if (er instanceof Error) {
              throw er; // Unhandled 'error' event
            } else {
              // At least give some kind of context to the user
              var err = new Error('Uncaught, unspecified "error" event. (' + er + ')');
              err.context = er;
              throw err;
            }
          }
        }

        handler = this._events[type];

        if (isUndefined(handler)) return false;

        if (isFunction(handler)) {
          switch (arguments.length) {
            // fast cases
            case 1:
              handler.call(this);
              break;
            case 2:
              handler.call(this, arguments[1]);
              break;
            case 3:
              handler.call(this, arguments[1], arguments[2]);
              break;
            // slower
            default:
              args = Array.prototype.slice.call(arguments, 1);
              handler.apply(this, args);
          }
        } else if (isObject(handler)) {
          args = Array.prototype.slice.call(arguments, 1);
          listeners = handler.slice();
          len = listeners.length;
          for (i = 0; i < len; i++) listeners[i].apply(this, args);
        }

        return true;
      };

      EventEmitter.prototype.addListener = function (type, listener) {
        var m;

        if (!isFunction(listener)) throw TypeError('listener must be a function');

        if (!this._events) this._events = {};

        // To avoid recursion in the case that type === "newListener"! Before
        // adding it to the listeners, first emit "newListener".
        if (this._events.newListener)
          this.emit(
            'newListener',
            type,
            isFunction(listener.listener) ? listener.listener : listener
          );

        if (!this._events[type])
          // Optimize the case of one listener. Don't need the extra array object.
          this._events[type] = listener;
        else if (isObject(this._events[type]))
          // If we've already got an array, just append.
          this._events[type].push(listener);
        // Adding the second element, need to change to array.
        else this._events[type] = [this._events[type], listener];

        // Check for listener leak
        if (isObject(this._events[type]) && !this._events[type].warned) {
          if (!isUndefined(this._maxListeners)) {
            m = this._maxListeners;
          } else {
            m = EventEmitter.defaultMaxListeners;
          }

          if (m && m > 0 && this._events[type].length > m) {
            this._events[type].warned = true;
            console.error(
              '(node) warning: possible EventEmitter memory ' +
                'leak detected. %d listeners added. ' +
                'Use emitter.setMaxListeners() to increase limit.',
              this._events[type].length
            );
            if (typeof console.trace === 'function') {
              // not supported in IE 10
              console.trace();
            }
          }
        }

        return this;
      };

      EventEmitter.prototype.on = EventEmitter.prototype.addListener;

      EventEmitter.prototype.once = function (type, listener) {
        if (!isFunction(listener)) throw TypeError('listener must be a function');

        var fired = false;

        function g() {
          this.removeListener(type, g);

          if (!fired) {
            fired = true;
            listener.apply(this, arguments);
          }
        }

        g.listener = listener;
        this.on(type, g);

        return this;
      };

      // emits a 'removeListener' event iff the listener was removed
      EventEmitter.prototype.removeListener = function (type, listener) {
        var list, position, length, i;

        if (!isFunction(listener)) throw TypeError('listener must be a function');

        if (!this._events || !this._events[type]) return this;

        list = this._events[type];
        length = list.length;
        position = -1;

        if (list === listener || (isFunction(list.listener) && list.listener === listener)) {
          delete this._events[type];
          if (this._events.removeListener) this.emit('removeListener', type, listener);
        } else if (isObject(list)) {
          for (i = length; i-- > 0; ) {
            if (list[i] === listener || (list[i].listener && list[i].listener === listener)) {
              position = i;
              break;
            }
          }

          if (position < 0) return this;

          if (list.length === 1) {
            list.length = 0;
            delete this._events[type];
          } else {
            list.splice(position, 1);
          }

          if (this._events.removeListener) this.emit('removeListener', type, listener);
        }

        return this;
      };

      EventEmitter.prototype.removeAllListeners = function (type) {
        var key, listeners;

        if (!this._events) return this;

        // not listening for removeListener, no need to emit
        if (!this._events.removeListener) {
          if (arguments.length === 0) this._events = {};
          else if (this._events[type]) delete this._events[type];
          return this;
        }

        // emit removeListener for all listeners on all events
        if (arguments.length === 0) {
          for (key in this._events) {
            if (key === 'removeListener') continue;
            this.removeAllListeners(key);
          }
          this.removeAllListeners('removeListener');
          this._events = {};
          return this;
        }

        listeners = this._events[type];

        if (isFunction(listeners)) {
          this.removeListener(type, listeners);
        } else if (listeners) {
          // LIFO order
          while (listeners.length) this.removeListener(type, listeners[listeners.length - 1]);
        }
        delete this._events[type];

        return this;
      };

      EventEmitter.prototype.listeners = function (type) {
        var ret;
        if (!this._events || !this._events[type]) ret = [];
        else if (isFunction(this._events[type])) ret = [this._events[type]];
        else ret = this._events[type].slice();
        return ret;
      };

      EventEmitter.prototype.listenerCount = function (type) {
        if (this._events) {
          var evlistener = this._events[type];

          if (isFunction(evlistener)) return 1;
          else if (evlistener) return evlistener.length;
        }
        return 0;
      };

      EventEmitter.listenerCount = function (emitter, type) {
        return emitter.listenerCount(type);
      };

      function isFunction(arg) {
        return typeof arg === 'function';
      }

      function isNumber(arg) {
        return typeof arg === 'number';
      }

      function isObject(arg) {
        return typeof arg === 'object' && arg !== null;
      }

      function isUndefined(arg) {
        return arg === void 0;
      }

      /***/
    },
    /* 94 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';
      /* WEBPACK VAR INJECTION */ (function (process) {
        /**
         * Copyright (c) 2013-present, Facebook, Inc.
         * All rights reserved.
         *
         * This source code is licensed under the BSD-style license found in the
         * LICENSE file in the root directory of this source tree. An additional grant
         * of patent rights can be found in the PATENTS file in the same directory.
         *
         */

        var emptyObject = {};

        if (process.env.NODE_ENV !== 'production') {
          Object.freeze(emptyObject);
        }

        module.exports = emptyObject;
        /* WEBPACK VAR INJECTION */
      }.call(exports, __webpack_require__(1)));

      /***/
    },
    /* 95 */
    /***/ function (module, exports, __webpack_require__) {
      var Parser = __webpack_require__(263),
        DomHandler = __webpack_require__(594);

      function defineProp(name, value) {
        delete module.exports[name];
        module.exports[name] = value;
        return value;
      }

      module.exports = {
        Parser: Parser,
        Tokenizer: __webpack_require__(264),
        ElementType: __webpack_require__(92),
        DomHandler: DomHandler,
        get FeedHandler() {
          return defineProp('FeedHandler', __webpack_require__(623));
        },
        get Stream() {
          return defineProp('Stream', __webpack_require__(625));
        },
        get WritableStream() {
          return defineProp('WritableStream', __webpack_require__(265));
        },
        get ProxyHandler() {
          return defineProp('ProxyHandler', __webpack_require__(624));
        },
        get DomUtils() {
          return defineProp('DomUtils', __webpack_require__(596));
        },
        get CollectingHandler() {
          return defineProp('CollectingHandler', __webpack_require__(622));
        },
        // For legacy support
        DefaultHandler: DomHandler,
        get RssHandler() {
          return defineProp('RssHandler', this.FeedHandler);
        },
        //helper methods
        parseDOM: function (data, options) {
          var handler = new DomHandler(options);
          new Parser(handler, options).end(data);
          return handler.dom;
        },
        parseFeed: function (feed, options) {
          var handler = new module.exports.FeedHandler(options);
          new Parser(handler, options).end(feed);
          return handler.dom;
        },
        createDomStream: function (cb, options, elementCb) {
          var handler = new DomHandler(cb, options, elementCb);
          return new Parser(handler, options);
        },
        // List of all events that the parser emits
        EVENTS: {
          /* Format: eventname: number of arguments */ attribute: 2,
          cdatastart: 0,
          cdataend: 0,
          text: 1,
          processinginstruction: 2,
          comment: 1,
          commentend: 0,
          closetag: 1,
          opentag: 2,
          opentagname: 1,
          error: 1,
          end: 0,
        },
      };

      /***/
    },
    /* 96 */
    /***/ function (module, exports) {
      /* -*- Mode: js; js-indent-level: 2; -*- */
      /*
       * Copyright 2011 Mozilla Foundation and contributors
       * Licensed under the New BSD license. See LICENSE or:
       * http://opensource.org/licenses/BSD-3-Clause
       */

      /**
       * This is a helper function for getting values from parameter/options
       * objects.
       *
       * @param args The object we are extracting values from
       * @param name The name of the property we are getting.
       * @param defaultValue An optional value to return if the property is missing
       * from the object. If this is not specified and the property is missing, an
       * error will be thrown.
       */
      function getArg(aArgs, aName, aDefaultValue) {
        if (aName in aArgs) {
          return aArgs[aName];
        } else if (arguments.length === 3) {
          return aDefaultValue;
        } else {
          throw new Error('"' + aName + '" is a required argument.');
        }
      }
      exports.getArg = getArg;

      var urlRegexp = /^(?:([\w+\-.]+):)?\/\/(?:(\w+:\w+)@)?([\w.-]*)(?::(\d+))?(.*)$/;
      var dataUrlRegexp = /^data:.+\,.+$/;

      function urlParse(aUrl) {
        var match = aUrl.match(urlRegexp);
        if (!match) {
          return null;
        }
        return {
          scheme: match[1],
          auth: match[2],
          host: match[3],
          port: match[4],
          path: match[5],
        };
      }
      exports.urlParse = urlParse;

      function urlGenerate(aParsedUrl) {
        var url = '';
        if (aParsedUrl.scheme) {
          url += aParsedUrl.scheme + ':';
        }
        url += '//';
        if (aParsedUrl.auth) {
          url += aParsedUrl.auth + '@';
        }
        if (aParsedUrl.host) {
          url += aParsedUrl.host;
        }
        if (aParsedUrl.port) {
          url += ':' + aParsedUrl.port;
        }
        if (aParsedUrl.path) {
          url += aParsedUrl.path;
        }
        return url;
      }
      exports.urlGenerate = urlGenerate;

      /**
       * Normalizes a path, or the path portion of a URL:
       *
       * - Replaces consecutive slashes with one slash.
       * - Removes unnecessary '.' parts.
       * - Removes unnecessary '<dir>/..' parts.
       *
       * Based on code in the Node.js 'path' core module.
       *
       * @param aPath The path or url to normalize.
       */
      function normalize(aPath) {
        var path = aPath;
        var url = urlParse(aPath);
        if (url) {
          if (!url.path) {
            return aPath;
          }
          path = url.path;
        }
        var isAbsolute = exports.isAbsolute(path);

        var parts = path.split(/\/+/);
        for (var part, up = 0, i = parts.length - 1; i >= 0; i--) {
          part = parts[i];
          if (part === '.') {
            parts.splice(i, 1);
          } else if (part === '..') {
            up++;
          } else if (up > 0) {
            if (part === '') {
              // The first part is blank if the path is absolute. Trying to go
              // above the root is a no-op. Therefore we can remove all '..' parts
              // directly after the root.
              parts.splice(i + 1, up);
              up = 0;
            } else {
              parts.splice(i, 2);
              up--;
            }
          }
        }
        path = parts.join('/');

        if (path === '') {
          path = isAbsolute ? '/' : '.';
        }

        if (url) {
          url.path = path;
          return urlGenerate(url);
        }
        return path;
      }
      exports.normalize = normalize;

      /**
       * Joins two paths/URLs.
       *
       * @param aRoot The root path or URL.
       * @param aPath The path or URL to be joined with the root.
       *
       * - If aPath is a URL or a data URI, aPath is returned, unless aPath is a
       *   scheme-relative URL: Then the scheme of aRoot, if any, is prepended
       *   first.
       * - Otherwise aPath is a path. If aRoot is a URL, then its path portion
       *   is updated with the result and aRoot is returned. Otherwise the result
       *   is returned.
       *   - If aPath is absolute, the result is aPath.
       *   - Otherwise the two paths are joined with a slash.
       * - Joining for example 'http://' and 'www.example.com' is also supported.
       */
      function join(aRoot, aPath) {
        if (aRoot === '') {
          aRoot = '.';
        }
        if (aPath === '') {
          aPath = '.';
        }
        var aPathUrl = urlParse(aPath);
        var aRootUrl = urlParse(aRoot);
        if (aRootUrl) {
          aRoot = aRootUrl.path || '/';
        }

        // `join(foo, '//www.example.org')`
        if (aPathUrl && !aPathUrl.scheme) {
          if (aRootUrl) {
            aPathUrl.scheme = aRootUrl.scheme;
          }
          return urlGenerate(aPathUrl);
        }

        if (aPathUrl || aPath.match(dataUrlRegexp)) {
          return aPath;
        }

        // `join('http://', 'www.example.com')`
        if (aRootUrl && !aRootUrl.host && !aRootUrl.path) {
          aRootUrl.host = aPath;
          return urlGenerate(aRootUrl);
        }

        var joined =
          aPath.charAt(0) === '/' ? aPath : normalize(aRoot.replace(/\/+$/, '') + '/' + aPath);

        if (aRootUrl) {
          aRootUrl.path = joined;
          return urlGenerate(aRootUrl);
        }
        return joined;
      }
      exports.join = join;

      exports.isAbsolute = function (aPath) {
        return aPath.charAt(0) === '/' || urlRegexp.test(aPath);
      };

      /**
       * Make a path relative to a URL or another path.
       *
       * @param aRoot The root path or URL.
       * @param aPath The path or URL to be made relative to aRoot.
       */
      function relative(aRoot, aPath) {
        if (aRoot === '') {
          aRoot = '.';
        }

        aRoot = aRoot.replace(/\/$/, '');

        // It is possible for the path to be above the root. In this case, simply
        // checking whether the root is a prefix of the path won't work. Instead, we
        // need to remove components from the root one by one, until either we find
        // a prefix that fits, or we run out of components to remove.
        var level = 0;
        while (aPath.indexOf(aRoot + '/') !== 0) {
          var index = aRoot.lastIndexOf('/');
          if (index < 0) {
            return aPath;
          }

          // If the only part of the root that is left is the scheme (i.e. http://,
          // file:///, etc.), one or more slashes (/), or simply nothing at all, we
          // have exhausted all components, so the path is not relative to the root.
          aRoot = aRoot.slice(0, index);
          if (aRoot.match(/^([^\/]+:\/)?\/*$/)) {
            return aPath;
          }

          ++level;
        }

        // Make sure we add a "../" for each component we removed from the root.
        return Array(level + 1).join('../') + aPath.substr(aRoot.length + 1);
      }
      exports.relative = relative;

      var supportsNullProto = (function () {
        var obj = Object.create(null);
        return !('__proto__' in obj);
      })();

      function identity(s) {
        return s;
      }

      /**
       * Because behavior goes wacky when you set `__proto__` on objects, we
       * have to prefix all the strings in our set with an arbitrary character.
       *
       * See https://github.com/mozilla/source-map/pull/31 and
       * https://github.com/mozilla/source-map/issues/30
       *
       * @param String aStr
       */
      function toSetString(aStr) {
        if (isProtoString(aStr)) {
          return '$' + aStr;
        }

        return aStr;
      }
      exports.toSetString = supportsNullProto ? identity : toSetString;

      function fromSetString(aStr) {
        if (isProtoString(aStr)) {
          return aStr.slice(1);
        }

        return aStr;
      }
      exports.fromSetString = supportsNullProto ? identity : fromSetString;

      function isProtoString(s) {
        if (!s) {
          return false;
        }

        var length = s.length;

        if (length < 9 /* "__proto__".length */) {
          return false;
        }

        if (
          s.charCodeAt(length - 1) !== 95 /* '_' */ ||
          s.charCodeAt(length - 2) !== 95 /* '_' */ ||
          s.charCodeAt(length - 3) !== 111 /* 'o' */ ||
          s.charCodeAt(length - 4) !== 116 /* 't' */ ||
          s.charCodeAt(length - 5) !== 111 /* 'o' */ ||
          s.charCodeAt(length - 6) !== 114 /* 'r' */ ||
          s.charCodeAt(length - 7) !== 112 /* 'p' */ ||
          s.charCodeAt(length - 8) !== 95 /* '_' */ ||
          s.charCodeAt(length - 9) !== 95 /* '_' */
        ) {
          return false;
        }

        for (var i = length - 10; i >= 0; i--) {
          if (s.charCodeAt(i) !== 36 /* '$' */) {
            return false;
          }
        }

        return true;
      }

      /**
       * Comparator between two mappings where the original positions are compared.
       *
       * Optionally pass in `true` as `onlyCompareGenerated` to consider two
       * mappings with the same original source/line/column, but different generated
       * line and column the same. Useful when searching for a mapping with a
       * stubbed out mapping.
       */
      function compareByOriginalPositions(mappingA, mappingB, onlyCompareOriginal) {
        var cmp = strcmp(mappingA.source, mappingB.source);
        if (cmp !== 0) {
          return cmp;
        }

        cmp = mappingA.originalLine - mappingB.originalLine;
        if (cmp !== 0) {
          return cmp;
        }

        cmp = mappingA.originalColumn - mappingB.originalColumn;
        if (cmp !== 0 || onlyCompareOriginal) {
          return cmp;
        }

        cmp = mappingA.generatedColumn - mappingB.generatedColumn;
        if (cmp !== 0) {
          return cmp;
        }

        cmp = mappingA.generatedLine - mappingB.generatedLine;
        if (cmp !== 0) {
          return cmp;
        }

        return strcmp(mappingA.name, mappingB.name);
      }
      exports.compareByOriginalPositions = compareByOriginalPositions;

      /**
       * Comparator between two mappings with deflated source and name indices where
       * the generated positions are compared.
       *
       * Optionally pass in `true` as `onlyCompareGenerated` to consider two
       * mappings with the same generated line and column, but different
       * source/name/original line and column the same. Useful when searching for a
       * mapping with a stubbed out mapping.
       */
      function compareByGeneratedPositionsDeflated(mappingA, mappingB, onlyCompareGenerated) {
        var cmp = mappingA.generatedLine - mappingB.generatedLine;
        if (cmp !== 0) {
          return cmp;
        }

        cmp = mappingA.generatedColumn - mappingB.generatedColumn;
        if (cmp !== 0 || onlyCompareGenerated) {
          return cmp;
        }

        cmp = strcmp(mappingA.source, mappingB.source);
        if (cmp !== 0) {
          return cmp;
        }

        cmp = mappingA.originalLine - mappingB.originalLine;
        if (cmp !== 0) {
          return cmp;
        }

        cmp = mappingA.originalColumn - mappingB.originalColumn;
        if (cmp !== 0) {
          return cmp;
        }

        return strcmp(mappingA.name, mappingB.name);
      }
      exports.compareByGeneratedPositionsDeflated = compareByGeneratedPositionsDeflated;

      function strcmp(aStr1, aStr2) {
        if (aStr1 === aStr2) {
          return 0;
        }

        if (aStr1 === null) {
          return 1; // aStr2 !== null
        }

        if (aStr2 === null) {
          return -1; // aStr1 !== null
        }

        if (aStr1 > aStr2) {
          return 1;
        }

        return -1;
      }

      /**
       * Comparator between two mappings with inflated source and name strings where
       * the generated positions are compared.
       */
      function compareByGeneratedPositionsInflated(mappingA, mappingB) {
        var cmp = mappingA.generatedLine - mappingB.generatedLine;
        if (cmp !== 0) {
          return cmp;
        }

        cmp = mappingA.generatedColumn - mappingB.generatedColumn;
        if (cmp !== 0) {
          return cmp;
        }

        cmp = strcmp(mappingA.source, mappingB.source);
        if (cmp !== 0) {
          return cmp;
        }

        cmp = mappingA.originalLine - mappingB.originalLine;
        if (cmp !== 0) {
          return cmp;
        }

        cmp = mappingA.originalColumn - mappingB.originalColumn;
        if (cmp !== 0) {
          return cmp;
        }

        return strcmp(mappingA.name, mappingB.name);
      }
      exports.compareByGeneratedPositionsInflated = compareByGeneratedPositionsInflated;

      /**
       * Strip any JSON XSSI avoidance prefix from the string (as documented
       * in the source maps specification), and then parse the string as
       * JSON.
       */
      function parseSourceMapInput(str) {
        return JSON.parse(str.replace(/^\)]}'[^\n]*\n/, ''));
      }
      exports.parseSourceMapInput = parseSourceMapInput;

      /**
       * Compute the URL of a source given the the source root, the source's
       * URL, and the source map's URL.
       */
      function computeSourceURL(sourceRoot, sourceURL, sourceMapURL) {
        sourceURL = sourceURL || '';

        if (sourceRoot) {
          // This follows what Chrome does.
          if (sourceRoot[sourceRoot.length - 1] !== '/' && sourceURL[0] !== '/') {
            sourceRoot += '/';
          }
          // The spec says:
          //   Line 4: An optional source root, useful for relocating source
          //   files on a server or removing repeated values in the
          //   “sources” entry.  This value is prepended to the individual
          //   entries in the “source” field.
          sourceURL = sourceRoot + sourceURL;
        }

        // Historically, SourceMapConsumer did not take the sourceMapURL as
        // a parameter.  This mode is still somewhat supported, which is why
        // this code block is conditional.  However, it's preferable to pass
        // the source map URL to SourceMapConsumer, so that this function
        // can implement the source URL resolution algorithm as outlined in
        // the spec.  This block is basically the equivalent of:
        //    new URL(sourceURL, sourceMapURL).toString()
        // ... except it avoids using URL, which wasn't available in the
        // older releases of node still supported by this library.
        //
        // The spec says:
        //   If the sources are not absolute URLs after prepending of the
        //   “sourceRoot”, the sources are resolved relative to the
        //   SourceMap (like resolving script src in a html document).
        if (sourceMapURL) {
          var parsed = urlParse(sourceMapURL);
          if (!parsed) {
            throw new Error('sourceMapURL could not be parsed');
          }
          if (parsed.path) {
            // Strip the last path component, but keep the "/".
            var index = parsed.path.lastIndexOf('/');
            if (index >= 0) {
              parsed.path = parsed.path.substring(0, index + 1);
            }
          }
          sourceURL = join(urlGenerate(parsed), sourceURL);
        }

        return normalize(sourceURL);
      }
      exports.computeSourceURL = computeSourceURL;

      /***/
    },
    /* 97 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';
      /* WEBPACK VAR INJECTION */ (function (process) {
        /**
         * Copyright 2013-present, Facebook, Inc.
         * All rights reserved.
         *
         * This source code is licensed under the BSD-style license found in the
         * LICENSE file in the root directory of this source tree. An additional grant
         * of patent rights can be found in the PATENTS file in the same directory.
         *
         */

        var _prodInvariant = __webpack_require__(8);

        var EventPluginRegistry = __webpack_require__(120);
        var EventPluginUtils = __webpack_require__(187);
        var ReactErrorUtils = __webpack_require__(191);

        var accumulateInto = __webpack_require__(294);
        var forEachAccumulated = __webpack_require__(295);
        var invariant = __webpack_require__(2);

        /**
         * Internal store for event listeners
         */
        var listenerBank = {};

        /**
         * Internal queue of events that have accumulated their dispatches and are
         * waiting to have their dispatches executed.
         */
        var eventQueue = null;

        /**
         * Dispatches an event and releases it back into the pool, unless persistent.
         *
         * @param {?object} event Synthetic event to be dispatched.
         * @param {boolean} simulated If the event is simulated (changes exn behavior)
         * @private
         */
        var executeDispatchesAndRelease = function (event, simulated) {
          if (event) {
            EventPluginUtils.executeDispatchesInOrder(event, simulated);

            if (!event.isPersistent()) {
              event.constructor.release(event);
            }
          }
        };
        var executeDispatchesAndReleaseSimulated = function (e) {
          return executeDispatchesAndRelease(e, true);
        };
        var executeDispatchesAndReleaseTopLevel = function (e) {
          return executeDispatchesAndRelease(e, false);
        };

        var getDictionaryKey = function (inst) {
          // Prevents V8 performance issue:
          // https://github.com/facebook/react/pull/7232
          return '.' + inst._rootNodeID;
        };

        function isInteractive(tag) {
          return tag === 'button' || tag === 'input' || tag === 'select' || tag === 'textarea';
        }

        function shouldPreventMouseEvent(name, type, props) {
          switch (name) {
            case 'onClick':
            case 'onClickCapture':
            case 'onDoubleClick':
            case 'onDoubleClickCapture':
            case 'onMouseDown':
            case 'onMouseDownCapture':
            case 'onMouseMove':
            case 'onMouseMoveCapture':
            case 'onMouseUp':
            case 'onMouseUpCapture':
              return !!(props.disabled && isInteractive(type));
            default:
              return false;
          }
        }

        /**
         * This is a unified interface for event plugins to be installed and configured.
         *
         * Event plugins can implement the following properties:
         *
         *   `extractEvents` {function(string, DOMEventTarget, string, object): *}
         *     Required. When a top-level event is fired, this method is expected to
         *     extract synthetic events that will in turn be queued and dispatched.
         *
         *   `eventTypes` {object}
         *     Optional, plugins that fire events must publish a mapping of registration
         *     names that are used to register listeners. Values of this mapping must
         *     be objects that contain `registrationName` or `phasedRegistrationNames`.
         *
         *   `executeDispatch` {function(object, function, string)}
         *     Optional, allows plugins to override how an event gets dispatched. By
         *     default, the listener is simply invoked.
         *
         * Each plugin that is injected into `EventsPluginHub` is immediately operable.
         *
         * @public
         */
        var EventPluginHub = {
          /**
           * Methods for injecting dependencies.
           */
          injection: {
            /**
             * @param {array} InjectedEventPluginOrder
             * @public
             */
            injectEventPluginOrder: EventPluginRegistry.injectEventPluginOrder,

            /**
             * @param {object} injectedNamesToPlugins Map from names to plugin modules.
             */
            injectEventPluginsByName: EventPluginRegistry.injectEventPluginsByName,
          },

          /**
           * Stores `listener` at `listenerBank[registrationName][key]`. Is idempotent.
           *
           * @param {object} inst The instance, which is the source of events.
           * @param {string} registrationName Name of listener (e.g. `onClick`).
           * @param {function} listener The callback to store.
           */
          putListener: function (inst, registrationName, listener) {
            !(typeof listener === 'function')
              ? process.env.NODE_ENV !== 'production'
                ? invariant(
                    false,
                    'Expected %s listener to be a function, instead got type %s',
                    registrationName,
                    typeof listener
                  )
                : _prodInvariant('94', registrationName, typeof listener)
              : void 0;

            var key = getDictionaryKey(inst);
            var bankForRegistrationName =
              listenerBank[registrationName] || (listenerBank[registrationName] = {});
            bankForRegistrationName[key] = listener;

            var PluginModule = EventPluginRegistry.registrationNameModules[registrationName];
            if (PluginModule && PluginModule.didPutListener) {
              PluginModule.didPutListener(inst, registrationName, listener);
            }
          },

          /**
           * @param {object} inst The instance, which is the source of events.
           * @param {string} registrationName Name of listener (e.g. `onClick`).
           * @return {?function} The stored callback.
           */
          getListener: function (inst, registrationName) {
            // TODO: shouldPreventMouseEvent is DOM-specific and definitely should not
            // live here; needs to be moved to a better place soon
            var bankForRegistrationName = listenerBank[registrationName];
            if (
              shouldPreventMouseEvent(
                registrationName,
                inst._currentElement.type,
                inst._currentElement.props
              )
            ) {
              return null;
            }
            var key = getDictionaryKey(inst);
            return bankForRegistrationName && bankForRegistrationName[key];
          },

          /**
           * Deletes a listener from the registration bank.
           *
           * @param {object} inst The instance, which is the source of events.
           * @param {string} registrationName Name of listener (e.g. `onClick`).
           */
          deleteListener: function (inst, registrationName) {
            var PluginModule = EventPluginRegistry.registrationNameModules[registrationName];
            if (PluginModule && PluginModule.willDeleteListener) {
              PluginModule.willDeleteListener(inst, registrationName);
            }

            var bankForRegistrationName = listenerBank[registrationName];
            // TODO: This should never be null -- when is it?
            if (bankForRegistrationName) {
              var key = getDictionaryKey(inst);
              delete bankForRegistrationName[key];
            }
          },

          /**
           * Deletes all listeners for the DOM element with the supplied ID.
           *
           * @param {object} inst The instance, which is the source of events.
           */
          deleteAllListeners: function (inst) {
            var key = getDictionaryKey(inst);
            for (var registrationName in listenerBank) {
              if (!listenerBank.hasOwnProperty(registrationName)) {
                continue;
              }

              if (!listenerBank[registrationName][key]) {
                continue;
              }

              var PluginModule = EventPluginRegistry.registrationNameModules[registrationName];
              if (PluginModule && PluginModule.willDeleteListener) {
                PluginModule.willDeleteListener(inst, registrationName);
              }

              delete listenerBank[registrationName][key];
            }
          },

          /**
           * Allows registered plugins an opportunity to extract events from top-level
           * native browser events.
           *
           * @return {*} An accumulation of synthetic events.
           * @internal
           */
          extractEvents: function (topLevelType, targetInst, nativeEvent, nativeEventTarget) {
            var events;
            var plugins = EventPluginRegistry.plugins;
            for (var i = 0; i < plugins.length; i++) {
              // Not every plugin in the ordering may be loaded at runtime.
              var possiblePlugin = plugins[i];
              if (possiblePlugin) {
                var extractedEvents = possiblePlugin.extractEvents(
                  topLevelType,
                  targetInst,
                  nativeEvent,
                  nativeEventTarget
                );
                if (extractedEvents) {
                  events = accumulateInto(events, extractedEvents);
                }
              }
            }
            return events;
          },

          /**
           * Enqueues a synthetic event that should be dispatched when
           * `processEventQueue` is invoked.
           *
           * @param {*} events An accumulation of synthetic events.
           * @internal
           */
          enqueueEvents: function (events) {
            if (events) {
              eventQueue = accumulateInto(eventQueue, events);
            }
          },

          /**
           * Dispatches all synthetic events on the event queue.
           *
           * @internal
           */
          processEventQueue: function (simulated) {
            // Set `eventQueue` to null before processing it so that we can tell if more
            // events get enqueued while processing.
            var processingEventQueue = eventQueue;
            eventQueue = null;
            if (simulated) {
              forEachAccumulated(processingEventQueue, executeDispatchesAndReleaseSimulated);
            } else {
              forEachAccumulated(processingEventQueue, executeDispatchesAndReleaseTopLevel);
            }
            !!eventQueue
              ? process.env.NODE_ENV !== 'production'
                ? invariant(
                    false,
                    'processEventQueue(): Additional events were enqueued while processing an event queue. Support for this has not yet been implemented.'
                  )
                : _prodInvariant('95')
              : void 0;
            // This would be a good time to rethrow if any of the event handlers threw.
            ReactErrorUtils.rethrowCaughtError();
          },

          /**
           * These are needed for tests only. Do not use!
           */
          __purge: function () {
            listenerBank = {};
          },

          __getListenerBank: function () {
            return listenerBank;
          },
        };

        module.exports = EventPluginHub;
        /* WEBPACK VAR INJECTION */
      }.call(exports, __webpack_require__(1)));

      /***/
    },
    /* 98 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';
      /* WEBPACK VAR INJECTION */ (function (process) {
        /**
         * Copyright 2013-present, Facebook, Inc.
         * All rights reserved.
         *
         * This source code is licensed under the BSD-style license found in the
         * LICENSE file in the root directory of this source tree. An additional grant
         * of patent rights can be found in the PATENTS file in the same directory.
         *
         */

        var EventPluginHub = __webpack_require__(97);
        var EventPluginUtils = __webpack_require__(187);

        var accumulateInto = __webpack_require__(294);
        var forEachAccumulated = __webpack_require__(295);
        var warning = __webpack_require__(3);

        var getListener = EventPluginHub.getListener;

        /**
         * Some event types have a notion of different registration names for different
         * "phases" of propagation. This finds listeners by a given phase.
         */
        function listenerAtPhase(inst, event, propagationPhase) {
          var registrationName = event.dispatchConfig.phasedRegistrationNames[propagationPhase];
          return getListener(inst, registrationName);
        }

        /**
         * Tags a `SyntheticEvent` with dispatched listeners. Creating this function
         * here, allows us to not have to bind or create functions for each event.
         * Mutating the event's members allows us to not have to create a wrapping
         * "dispatch" object that pairs the event with the listener.
         */
        function accumulateDirectionalDispatches(inst, phase, event) {
          if (process.env.NODE_ENV !== 'production') {
            process.env.NODE_ENV !== 'production'
              ? warning(inst, 'Dispatching inst must not be null')
              : void 0;
          }
          var listener = listenerAtPhase(inst, event, phase);
          if (listener) {
            event._dispatchListeners = accumulateInto(event._dispatchListeners, listener);
            event._dispatchInstances = accumulateInto(event._dispatchInstances, inst);
          }
        }

        /**
         * Collect dispatches (must be entirely collected before dispatching - see unit
         * tests). Lazily allocate the array to conserve memory.  We must loop through
         * each event and perform the traversal for each one. We cannot perform a
         * single traversal for the entire collection of events because each event may
         * have a different target.
         */
        function accumulateTwoPhaseDispatchesSingle(event) {
          if (event && event.dispatchConfig.phasedRegistrationNames) {
            EventPluginUtils.traverseTwoPhase(
              event._targetInst,
              accumulateDirectionalDispatches,
              event
            );
          }
        }

        /**
         * Same as `accumulateTwoPhaseDispatchesSingle`, but skips over the targetID.
         */
        function accumulateTwoPhaseDispatchesSingleSkipTarget(event) {
          if (event && event.dispatchConfig.phasedRegistrationNames) {
            var targetInst = event._targetInst;
            var parentInst = targetInst ? EventPluginUtils.getParentInstance(targetInst) : null;
            EventPluginUtils.traverseTwoPhase(parentInst, accumulateDirectionalDispatches, event);
          }
        }

        /**
         * Accumulates without regard to direction, does not look for phased
         * registration names. Same as `accumulateDirectDispatchesSingle` but without
         * requiring that the `dispatchMarker` be the same as the dispatched ID.
         */
        function accumulateDispatches(inst, ignoredDirection, event) {
          if (event && event.dispatchConfig.registrationName) {
            var registrationName = event.dispatchConfig.registrationName;
            var listener = getListener(inst, registrationName);
            if (listener) {
              event._dispatchListeners = accumulateInto(event._dispatchListeners, listener);
              event._dispatchInstances = accumulateInto(event._dispatchInstances, inst);
            }
          }
        }

        /**
         * Accumulates dispatches on an `SyntheticEvent`, but only for the
         * `dispatchMarker`.
         * @param {SyntheticEvent} event
         */
        function accumulateDirectDispatchesSingle(event) {
          if (event && event.dispatchConfig.registrationName) {
            accumulateDispatches(event._targetInst, null, event);
          }
        }

        function accumulateTwoPhaseDispatches(events) {
          forEachAccumulated(events, accumulateTwoPhaseDispatchesSingle);
        }

        function accumulateTwoPhaseDispatchesSkipTarget(events) {
          forEachAccumulated(events, accumulateTwoPhaseDispatchesSingleSkipTarget);
        }

        function accumulateEnterLeaveDispatches(leave, enter, from, to) {
          EventPluginUtils.traverseEnterLeave(from, to, accumulateDispatches, leave, enter);
        }

        function accumulateDirectDispatches(events) {
          forEachAccumulated(events, accumulateDirectDispatchesSingle);
        }

        /**
         * A small set of propagation patterns, each of which will accept a small amount
         * of information, and generate a set of "dispatch ready event objects" - which
         * are sets of events that have already been annotated with a set of dispatched
         * listener functions/ids. The API is designed this way to discourage these
         * propagation strategies from actually executing the dispatches, since we
         * always want to collect the entire set of dispatches before executing event a
         * single one.
         *
         * @constructor EventPropagators
         */
        var EventPropagators = {
          accumulateTwoPhaseDispatches: accumulateTwoPhaseDispatches,
          accumulateTwoPhaseDispatchesSkipTarget: accumulateTwoPhaseDispatchesSkipTarget,
          accumulateDirectDispatches: accumulateDirectDispatches,
          accumulateEnterLeaveDispatches: accumulateEnterLeaveDispatches,
        };

        module.exports = EventPropagators;
        /* WEBPACK VAR INJECTION */
      }.call(exports, __webpack_require__(1)));

      /***/
    },
    /* 99 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';
      /**
       * Copyright 2013-present, Facebook, Inc.
       * All rights reserved.
       *
       * This source code is licensed under the BSD-style license found in the
       * LICENSE file in the root directory of this source tree. An additional grant
       * of patent rights can be found in the PATENTS file in the same directory.
       *
       */

      /**
       * `ReactInstanceMap` maintains a mapping from a public facing stateful
       * instance (key) and the internal representation (value). This allows public
       * methods to accept the user facing instance as an argument and map them back
       * to internal methods.
       */

      // TODO: Replace this with ES6: var ReactInstanceMap = new Map();

      var ReactInstanceMap = {
        /**
         * This API should be called `delete` but we'd have to make sure to always
         * transform these to strings for IE support. When this transform is fully
         * supported we can rename it.
         */
        remove: function (key) {
          key._reactInternalInstance = undefined;
        },

        get: function (key) {
          return key._reactInternalInstance;
        },

        has: function (key) {
          return key._reactInternalInstance !== undefined;
        },

        set: function (key, value) {
          key._reactInternalInstance = value;
        },
      };

      module.exports = ReactInstanceMap;

      /***/
    },
    /* 100 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';
      /**
       * Copyright 2013-present, Facebook, Inc.
       * All rights reserved.
       *
       * This source code is licensed under the BSD-style license found in the
       * LICENSE file in the root directory of this source tree. An additional grant
       * of patent rights can be found in the PATENTS file in the same directory.
       *
       */

      var SyntheticEvent = __webpack_require__(48);

      var getEventTarget = __webpack_require__(196);

      /**
       * @interface UIEvent
       * @see http://www.w3.org/TR/DOM-Level-3-Events/
       */
      var UIEventInterface = {
        view: function (event) {
          if (event.view) {
            return event.view;
          }

          var target = getEventTarget(event);
          if (target.window === target) {
            // target is a window object
            return target;
          }

          var doc = target.ownerDocument;
          // TODO: Figure out why `ownerDocument` is sometimes undefined in IE8.
          if (doc) {
            return doc.defaultView || doc.parentWindow;
          } else {
            return window;
          }
        },
        detail: function (event) {
          return event.detail || 0;
        },
      };

      /**
       * @param {object} dispatchConfig Configuration used to dispatch this event.
       * @param {string} dispatchMarker Marker identifying the event target.
       * @param {object} nativeEvent Native browser event.
       * @extends {SyntheticEvent}
       */
      function SyntheticUIEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
        return SyntheticEvent.call(
          this,
          dispatchConfig,
          dispatchMarker,
          nativeEvent,
          nativeEventTarget
        );
      }

      SyntheticEvent.augmentClass(SyntheticUIEvent, UIEventInterface);

      module.exports = SyntheticUIEvent;

      /***/
    },
    /* 101 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';
      /*!
  Copyright (c) 2016 Jed Watson.
  Licensed under the MIT License (MIT), see
  http://jedwatson.github.io/react-select
*/

      Object.defineProperty(exports, '__esModule', {
        value: true,
      });

      var _extends =
        Object.assign ||
        function (target) {
          for (var i = 1; i < arguments.length; i++) {
            var source = arguments[i];
            for (var key in source) {
              if (Object.prototype.hasOwnProperty.call(source, key)) {
                target[key] = source[key];
              }
            }
          }
          return target;
        };

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      function _objectWithoutProperties(obj, keys) {
        var target = {};
        for (var i in obj) {
          if (keys.indexOf(i) >= 0) continue;
          if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;
          target[i] = obj[i];
        }
        return target;
      }

      function _defineProperty(obj, key, value) {
        if (key in obj) {
          Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true,
          });
        } else {
          obj[key] = value;
        }
        return obj;
      }

      var _react = __webpack_require__(4);

      var _react2 = _interopRequireDefault(_react);

      var _reactDom = __webpack_require__(280);

      var _reactDom2 = _interopRequireDefault(_reactDom);

      var _reactInputAutosize = __webpack_require__(732);

      var _reactInputAutosize2 = _interopRequireDefault(_reactInputAutosize);

      var _classnames = __webpack_require__(72);

      var _classnames2 = _interopRequireDefault(_classnames);

      var _utilsDefaultArrowRenderer = __webpack_require__(748);

      var _utilsDefaultArrowRenderer2 = _interopRequireDefault(_utilsDefaultArrowRenderer);

      var _utilsDefaultFilterOptions = __webpack_require__(307);

      var _utilsDefaultFilterOptions2 = _interopRequireDefault(_utilsDefaultFilterOptions);

      var _utilsDefaultMenuRenderer = __webpack_require__(308);

      var _utilsDefaultMenuRenderer2 = _interopRequireDefault(_utilsDefaultMenuRenderer);

      var _utilsDefaultClearRenderer = __webpack_require__(749);

      var _utilsDefaultClearRenderer2 = _interopRequireDefault(_utilsDefaultClearRenderer);

      var _Async = __webpack_require__(743);

      var _Async2 = _interopRequireDefault(_Async);

      var _AsyncCreatable = __webpack_require__(744);

      var _AsyncCreatable2 = _interopRequireDefault(_AsyncCreatable);

      var _Creatable = __webpack_require__(745);

      var _Creatable2 = _interopRequireDefault(_Creatable);

      var _Option = __webpack_require__(746);

      var _Option2 = _interopRequireDefault(_Option);

      var _Value = __webpack_require__(747);

      var _Value2 = _interopRequireDefault(_Value);

      function stringifyValue(value) {
        var valueType = typeof value;
        if (valueType === 'string') {
          return value;
        } else if (valueType === 'object') {
          return JSON.stringify(value);
        } else if (valueType === 'number' || valueType === 'boolean') {
          return String(value);
        } else {
          return '';
        }
      }

      var stringOrNode = _react2['default'].PropTypes.oneOfType([
        _react2['default'].PropTypes.string,
        _react2['default'].PropTypes.node,
      ]);

      var instanceId = 1;

      var Select = _react2['default'].createClass({
        displayName: 'Select',

        propTypes: {
          addLabelText: _react2['default'].PropTypes.string, // placeholder displayed when you want to add a label on a multi-value input
          'aria-label': _react2['default'].PropTypes.string, // Aria label (for assistive tech)
          'aria-labelledby': _react2['default'].PropTypes.string, // HTML ID of an element that should be used as the label (for assistive tech)
          arrowRenderer: _react2['default'].PropTypes.func, // Create drop-down caret element
          autoBlur: _react2['default'].PropTypes.bool, // automatically blur the component when an option is selected
          autofocus: _react2['default'].PropTypes.bool, // autofocus the component on mount
          autosize: _react2['default'].PropTypes.bool, // whether to enable autosizing or not
          backspaceRemoves: _react2['default'].PropTypes.bool, // whether backspace removes an item if there is no text input
          backspaceToRemoveMessage: _react2['default'].PropTypes.string, // Message to use for screenreaders to press backspace to remove the current item - {label} is replaced with the item label
          className: _react2['default'].PropTypes.string, // className for the outer element
          clearAllText: stringOrNode, // title for the "clear" control when multi: true
          clearRenderer: _react2['default'].PropTypes.func, // create clearable x element
          clearValueText: stringOrNode, // title for the "clear" control
          clearable: _react2['default'].PropTypes.bool, // should it be possible to reset value
          deleteRemoves: _react2['default'].PropTypes.bool, // whether backspace removes an item if there is no text input
          delimiter: _react2['default'].PropTypes.string, // delimiter to use to join multiple values for the hidden field value
          disabled: _react2['default'].PropTypes.bool, // whether the Select is disabled or not
          escapeClearsValue: _react2['default'].PropTypes.bool, // whether escape clears the value when the menu is closed
          filterOption: _react2['default'].PropTypes.func, // method to filter a single option (option, filterString)
          filterOptions: _react2['default'].PropTypes.any, // boolean to enable default filtering or function to filter the options array ([options], filterString, [values])
          ignoreAccents: _react2['default'].PropTypes.bool, // whether to strip diacritics when filtering
          ignoreCase: _react2['default'].PropTypes.bool, // whether to perform case-insensitive filtering
          inputProps: _react2['default'].PropTypes.object, // custom attributes for the Input
          inputRenderer: _react2['default'].PropTypes.func, // returns a custom input component
          instanceId: _react2['default'].PropTypes.string, // set the components instanceId
          isLoading: _react2['default'].PropTypes.bool, // whether the Select is loading externally or not (such as options being loaded)
          joinValues: _react2['default'].PropTypes.bool, // joins multiple values into a single form field with the delimiter (legacy mode)
          labelKey: _react2['default'].PropTypes.string, // path of the label value in option objects
          matchPos: _react2['default'].PropTypes.string, // (any|start) match the start or entire string when filtering
          matchProp: _react2['default'].PropTypes.string, // (any|label|value) which option property to filter on
          menuBuffer: _react2['default'].PropTypes.number, // optional buffer (in px) between the bottom of the viewport and the bottom of the menu
          menuContainerStyle: _react2['default'].PropTypes.object, // optional style to apply to the menu container
          menuRenderer: _react2['default'].PropTypes.func, // renders a custom menu with options
          menuStyle: _react2['default'].PropTypes.object, // optional style to apply to the menu
          multi: _react2['default'].PropTypes.bool, // multi-value input
          name: _react2['default'].PropTypes.string, // generates a hidden <input /> tag with this field name for html forms
          noResultsText: stringOrNode, // placeholder displayed when there are no matching search results
          onBlur: _react2['default'].PropTypes.func, // onBlur handler: function (event) {}
          onBlurResetsInput: _react2['default'].PropTypes.bool, // whether input is cleared on blur
          onChange: _react2['default'].PropTypes.func, // onChange handler: function (newValue) {}
          onClose: _react2['default'].PropTypes.func, // fires when the menu is closed
          onCloseResetsInput: _react2['default'].PropTypes.bool, // whether input is cleared when menu is closed through the arrow
          onFocus: _react2['default'].PropTypes.func, // onFocus handler: function (event) {}
          onInputChange: _react2['default'].PropTypes.func, // onInputChange handler: function (inputValue) {}
          onInputKeyDown: _react2['default'].PropTypes.func, // input keyDown handler: function (event) {}
          onMenuScrollToBottom: _react2['default'].PropTypes.func, // fires when the menu is scrolled to the bottom; can be used to paginate options
          onOpen: _react2['default'].PropTypes.func, // fires when the menu is opened
          onValueClick: _react2['default'].PropTypes.func, // onClick handler for value labels: function (value, event) {}
          openAfterFocus: _react2['default'].PropTypes.bool, // boolean to enable opening dropdown when focused
          openOnFocus: _react2['default'].PropTypes.bool, // always open options menu on focus
          optionClassName: _react2['default'].PropTypes.string, // additional class(es) to apply to the <Option /> elements
          optionComponent: _react2['default'].PropTypes.func, // option component to render in dropdown
          optionRenderer: _react2['default'].PropTypes.func, // optionRenderer: function (option) {}
          options: _react2['default'].PropTypes.array, // array of options
          pageSize: _react2['default'].PropTypes.number, // number of entries to page when using page up/down keys
          placeholder: stringOrNode, // field placeholder, displayed when there's no value
          required: _react2['default'].PropTypes.bool, // applies HTML5 required attribute when needed
          resetValue: _react2['default'].PropTypes.any, // value to use when you clear the control
          scrollMenuIntoView: _react2['default'].PropTypes.bool, // boolean to enable the viewport to shift so that the full menu fully visible when engaged
          searchable: _react2['default'].PropTypes.bool, // whether to enable searching feature or not
          simpleValue: _react2['default'].PropTypes.bool, // pass the value to onChange as a simple value (legacy pre 1.0 mode), defaults to false
          style: _react2['default'].PropTypes.object, // optional style to apply to the control
          tabIndex: _react2['default'].PropTypes.string, // optional tab index of the control
          tabSelectsValue: _react2['default'].PropTypes.bool, // whether to treat tabbing out while focused to be value selection
          value: _react2['default'].PropTypes.any, // initial field value
          valueComponent: _react2['default'].PropTypes.func, // value component to render
          valueKey: _react2['default'].PropTypes.string, // path of the label value in option objects
          valueRenderer: _react2['default'].PropTypes.func, // valueRenderer: function (option) {}
          wrapperStyle: _react2['default'].PropTypes.object,
        },

        // optional style to apply to the component wrapper
        statics: {
          Async: _Async2['default'],
          AsyncCreatable: _AsyncCreatable2['default'],
          Creatable: _Creatable2['default'],
        },

        getDefaultProps: function getDefaultProps() {
          return {
            addLabelText: 'Add "{label}"?',
            arrowRenderer: _utilsDefaultArrowRenderer2['default'],
            autosize: true,
            backspaceRemoves: true,
            backspaceToRemoveMessage: 'Press backspace to remove {label}',
            clearable: true,
            clearAllText: 'Clear all',
            clearRenderer: _utilsDefaultClearRenderer2['default'],
            clearValueText: 'Clear value',
            deleteRemoves: true,
            delimiter: ',',
            disabled: false,
            escapeClearsValue: true,
            filterOptions: _utilsDefaultFilterOptions2['default'],
            ignoreAccents: true,
            ignoreCase: true,
            inputProps: {},
            isLoading: false,
            joinValues: false,
            labelKey: 'label',
            matchPos: 'any',
            matchProp: 'any',
            menuBuffer: 0,
            menuRenderer: _utilsDefaultMenuRenderer2['default'],
            multi: false,
            noResultsText: 'No results found',
            onBlurResetsInput: true,
            onCloseResetsInput: true,
            openAfterFocus: false,
            optionComponent: _Option2['default'],
            pageSize: 5,
            placeholder: 'Select...',
            required: false,
            scrollMenuIntoView: true,
            searchable: true,
            simpleValue: false,
            tabSelectsValue: true,
            valueComponent: _Value2['default'],
            valueKey: 'value',
          };
        },

        getInitialState: function getInitialState() {
          return {
            inputValue: '',
            isFocused: false,
            isOpen: false,
            isPseudoFocused: false,
            required: false,
          };
        },

        componentWillMount: function componentWillMount() {
          this._instancePrefix = 'react-select-' + (this.props.instanceId || ++instanceId) + '-';
          var valueArray = this.getValueArray(this.props.value);

          if (this.props.required) {
            this.setState({
              required: this.handleRequired(valueArray[0], this.props.multi),
            });
          }
        },

        componentDidMount: function componentDidMount() {
          if (this.props.autofocus) {
            this.focus();
          }
        },

        componentWillReceiveProps: function componentWillReceiveProps(nextProps) {
          var valueArray = this.getValueArray(nextProps.value, nextProps);

          if (nextProps.required) {
            this.setState({
              required: this.handleRequired(valueArray[0], nextProps.multi),
            });
          }
        },

        componentWillUpdate: function componentWillUpdate(nextProps, nextState) {
          if (nextState.isOpen !== this.state.isOpen) {
            this.toggleTouchOutsideEvent(nextState.isOpen);
            var handler = nextState.isOpen ? nextProps.onOpen : nextProps.onClose;
            handler && handler();
          }
        },

        componentDidUpdate: function componentDidUpdate(prevProps, prevState) {
          // focus to the selected option
          if (this.menu && this.focused && this.state.isOpen && !this.hasScrolledToOption) {
            var focusedOptionNode = _reactDom2['default'].findDOMNode(this.focused);
            var menuNode = _reactDom2['default'].findDOMNode(this.menu);
            menuNode.scrollTop = focusedOptionNode.offsetTop;
            this.hasScrolledToOption = true;
          } else if (!this.state.isOpen) {
            this.hasScrolledToOption = false;
          }

          if (this._scrollToFocusedOptionOnUpdate && this.focused && this.menu) {
            this._scrollToFocusedOptionOnUpdate = false;
            var focusedDOM = _reactDom2['default'].findDOMNode(this.focused);
            var menuDOM = _reactDom2['default'].findDOMNode(this.menu);
            var focusedRect = focusedDOM.getBoundingClientRect();
            var menuRect = menuDOM.getBoundingClientRect();
            if (focusedRect.bottom > menuRect.bottom || focusedRect.top < menuRect.top) {
              menuDOM.scrollTop =
                focusedDOM.offsetTop + focusedDOM.clientHeight - menuDOM.offsetHeight;
            }
          }
          if (this.props.scrollMenuIntoView && this.menuContainer) {
            var menuContainerRect = this.menuContainer.getBoundingClientRect();
            if (window.innerHeight < menuContainerRect.bottom + this.props.menuBuffer) {
              window.scrollBy(
                0,
                menuContainerRect.bottom + this.props.menuBuffer - window.innerHeight
              );
            }
          }
          if (prevProps.disabled !== this.props.disabled) {
            this.setState({ isFocused: false }); // eslint-disable-line react/no-did-update-set-state
            this.closeMenu();
          }
        },

        componentWillUnmount: function componentWillUnmount() {
          if (!document.removeEventListener && document.detachEvent) {
            document.detachEvent('ontouchstart', this.handleTouchOutside);
          } else {
            document.removeEventListener('touchstart', this.handleTouchOutside);
          }
        },

        toggleTouchOutsideEvent: function toggleTouchOutsideEvent(enabled) {
          if (enabled) {
            if (!document.addEventListener && document.attachEvent) {
              document.attachEvent('ontouchstart', this.handleTouchOutside);
            } else {
              document.addEventListener('touchstart', this.handleTouchOutside);
            }
          } else {
            if (!document.removeEventListener && document.detachEvent) {
              document.detachEvent('ontouchstart', this.handleTouchOutside);
            } else {
              document.removeEventListener('touchstart', this.handleTouchOutside);
            }
          }
        },

        handleTouchOutside: function handleTouchOutside(event) {
          // handle touch outside on ios to dismiss menu
          if (this.wrapper && !this.wrapper.contains(event.target)) {
            this.closeMenu();
          }
        },

        focus: function focus() {
          if (!this.input) return;
          this.input.focus();

          if (this.props.openAfterFocus) {
            this.setState({
              isOpen: true,
            });
          }
        },

        blurInput: function blurInput() {
          if (!this.input) return;
          this.input.blur();
        },

        handleTouchMove: function handleTouchMove(event) {
          // Set a flag that the view is being dragged
          this.dragging = true;
        },

        handleTouchStart: function handleTouchStart(event) {
          // Set a flag that the view is not being dragged
          this.dragging = false;
        },

        handleTouchEnd: function handleTouchEnd(event) {
          // Check if the view is being dragged, In this case
          // we don't want to fire the click event (because the user only wants to scroll)
          if (this.dragging) return;

          // Fire the mouse events
          this.handleMouseDown(event);
        },

        handleTouchEndClearValue: function handleTouchEndClearValue(event) {
          // Check if the view is being dragged, In this case
          // we don't want to fire the click event (because the user only wants to scroll)
          if (this.dragging) return;

          // Clear the value
          this.clearValue(event);
        },

        handleMouseDown: function handleMouseDown(event) {
          // if the event was triggered by a mousedown and not the primary
          // button, or if the component is disabled, ignore it.
          if (this.props.disabled || (event.type === 'mousedown' && event.button !== 0)) {
            return;
          }

          if (event.target.tagName === 'INPUT') {
            return;
          }

          // prevent default event handlers
          event.stopPropagation();
          event.preventDefault();

          // for the non-searchable select, toggle the menu
          if (!this.props.searchable) {
            this.focus();
            return this.setState({
              isOpen: !this.state.isOpen,
            });
          }

          if (this.state.isFocused) {
            // On iOS, we can get into a state where we think the input is focused but it isn't really,
            // since iOS ignores programmatic calls to input.focus() that weren't triggered by a click event.
            // Call focus() again here to be safe.
            this.focus();

            var input = this.input;
            if (typeof input.getInput === 'function') {
              // Get the actual DOM input if the ref is an <AutosizeInput /> component
              input = input.getInput();
            }

            // clears the value so that the cursor will be at the end of input when the component re-renders
            input.value = '';

            // if the input is focused, ensure the menu is open
            this.setState({
              isOpen: true,
              isPseudoFocused: false,
            });
          } else {
            // otherwise, focus the input and open the menu
            this._openAfterFocus = true;
            this.focus();
          }
        },

        handleMouseDownOnArrow: function handleMouseDownOnArrow(event) {
          // if the event was triggered by a mousedown and not the primary
          // button, or if the component is disabled, ignore it.
          if (this.props.disabled || (event.type === 'mousedown' && event.button !== 0)) {
            return;
          }
          // If the menu isn't open, let the event bubble to the main handleMouseDown
          if (!this.state.isOpen) {
            return;
          }
          // prevent default event handlers
          event.stopPropagation();
          event.preventDefault();
          // close the menu
          this.closeMenu();
        },

        handleMouseDownOnMenu: function handleMouseDownOnMenu(event) {
          // if the event was triggered by a mousedown and not the primary
          // button, or if the component is disabled, ignore it.
          if (this.props.disabled || (event.type === 'mousedown' && event.button !== 0)) {
            return;
          }
          event.stopPropagation();
          event.preventDefault();

          this._openAfterFocus = true;
          this.focus();
        },

        closeMenu: function closeMenu() {
          if (this.props.onCloseResetsInput) {
            this.setState({
              isOpen: false,
              isPseudoFocused: this.state.isFocused && !this.props.multi,
              inputValue: '',
            });
          } else {
            this.setState({
              isOpen: false,
              isPseudoFocused: this.state.isFocused && !this.props.multi,
              inputValue: this.state.inputValue,
            });
          }
          this.hasScrolledToOption = false;
        },

        handleInputFocus: function handleInputFocus(event) {
          if (this.props.disabled) return;
          var isOpen = this.state.isOpen || this._openAfterFocus || this.props.openOnFocus;
          if (this.props.onFocus) {
            this.props.onFocus(event);
          }
          this.setState({
            isFocused: true,
            isOpen: isOpen,
          });
          this._openAfterFocus = false;
        },

        handleInputBlur: function handleInputBlur(event) {
          // The check for menu.contains(activeElement) is necessary to prevent IE11's scrollbar from closing the menu in certain contexts.
          if (
            this.menu &&
            (this.menu === document.activeElement || this.menu.contains(document.activeElement))
          ) {
            this.focus();
            return;
          }

          if (this.props.onBlur) {
            this.props.onBlur(event);
          }
          var onBlurredState = {
            isFocused: false,
            isOpen: false,
            isPseudoFocused: false,
          };
          if (this.props.onBlurResetsInput) {
            onBlurredState.inputValue = '';
          }
          this.setState(onBlurredState);
        },

        handleInputChange: function handleInputChange(event) {
          var newInputValue = event.target.value;

          if (this.state.inputValue !== event.target.value && this.props.onInputChange) {
            var nextState = this.props.onInputChange(newInputValue);
            // Note: != used deliberately here to catch undefined and null
            if (nextState != null && typeof nextState !== 'object') {
              newInputValue = '' + nextState;
            }
          }

          this.setState({
            isOpen: true,
            isPseudoFocused: false,
            inputValue: newInputValue,
          });
        },

        handleKeyDown: function handleKeyDown(event) {
          if (this.props.disabled) return;

          if (typeof this.props.onInputKeyDown === 'function') {
            this.props.onInputKeyDown(event);
            if (event.defaultPrevented) {
              return;
            }
          }

          switch (event.keyCode) {
            case 8:
              // backspace
              if (!this.state.inputValue && this.props.backspaceRemoves) {
                event.preventDefault();
                this.popValue();
              }
              return;
            case 9:
              // tab
              if (event.shiftKey || !this.state.isOpen || !this.props.tabSelectsValue) {
                return;
              }
              this.selectFocusedOption();
              return;
            case 13:
              // enter
              if (!this.state.isOpen) return;
              event.stopPropagation();
              this.selectFocusedOption();
              break;
            case 27:
              // escape
              if (this.state.isOpen) {
                this.closeMenu();
                event.stopPropagation();
              } else if (this.props.clearable && this.props.escapeClearsValue) {
                this.clearValue(event);
                event.stopPropagation();
              }
              break;
            case 38:
              // up
              this.focusPreviousOption();
              break;
            case 40:
              // down
              this.focusNextOption();
              break;
            case 33:
              // page up
              this.focusPageUpOption();
              break;
            case 34:
              // page down
              this.focusPageDownOption();
              break;
            case 35:
              // end key
              if (event.shiftKey) {
                return;
              }
              this.focusEndOption();
              break;
            case 36:
              // home key
              if (event.shiftKey) {
                return;
              }
              this.focusStartOption();
              break;
            case 46:
              // backspace
              if (!this.state.inputValue && this.props.deleteRemoves) {
                event.preventDefault();
                this.popValue();
              }
              return;
            default:
              return;
          }
          event.preventDefault();
        },

        handleValueClick: function handleValueClick(option, event) {
          if (!this.props.onValueClick) return;
          this.props.onValueClick(option, event);
        },

        handleMenuScroll: function handleMenuScroll(event) {
          if (!this.props.onMenuScrollToBottom) return;
          var target = event.target;

          if (
            target.scrollHeight > target.offsetHeight &&
            !(target.scrollHeight - target.offsetHeight - target.scrollTop)
          ) {
            this.props.onMenuScrollToBottom();
          }
        },

        handleRequired: function handleRequired(value, multi) {
          if (!value) return true;
          return multi ? value.length === 0 : Object.keys(value).length === 0;
        },

        getOptionLabel: function getOptionLabel(op) {
          return op[this.props.labelKey];
        },

        /**
         * Turns a value into an array from the given options
         * @param	{String|Number|Array}	value		- the value of the select input
         * @param	{Object}		nextProps	- optionally specify the nextProps so the returned array uses the latest configuration
         * @returns	{Array}	the value of the select represented in an array
         */
        getValueArray: function getValueArray(value, nextProps) {
          var _this = this;

          /** support optionally passing in the `nextProps` so `componentWillReceiveProps` updates will function as expected */
          var props = typeof nextProps === 'object' ? nextProps : this.props;
          if (props.multi) {
            if (typeof value === 'string') value = value.split(props.delimiter);
            if (!Array.isArray(value)) {
              if (value === null || value === undefined) return [];
              value = [value];
            }
            return value
              .map(function (value) {
                return _this.expandValue(value, props);
              })
              .filter(function (i) {
                return i;
              });
          }
          var expandedValue = this.expandValue(value, props);
          return expandedValue ? [expandedValue] : [];
        },

        /**
         * Retrieve a value from the given options and valueKey
         * @param	{String|Number|Array}	value	- the selected value(s)
         * @param	{Object}		props	- the Select component's props (or nextProps)
         */
        expandValue: function expandValue(value, props) {
          var valueType = typeof value;
          if (valueType !== 'string' && valueType !== 'number' && valueType !== 'boolean')
            return value;
          var options = props.options;
          var valueKey = props.valueKey;

          if (!options) return;
          for (var i = 0; i < options.length; i++) {
            if (options[i][valueKey] === value) return options[i];
          }
        },

        setValue: function setValue(value) {
          var _this2 = this;

          if (this.props.autoBlur) {
            this.blurInput();
          }
          if (!this.props.onChange) return;
          if (this.props.required) {
            var required = this.handleRequired(value, this.props.multi);
            this.setState({ required: required });
          }
          if (this.props.simpleValue && value) {
            value = this.props.multi
              ? value
                  .map(function (i) {
                    return i[_this2.props.valueKey];
                  })
                  .join(this.props.delimiter)
              : value[this.props.valueKey];
          }
          this.props.onChange(value);
        },

        selectValue: function selectValue(value) {
          var _this3 = this;

          //NOTE: update value in the callback to make sure the input value is empty so that there are no styling issues (Chrome had issue otherwise)
          this.hasScrolledToOption = false;
          if (this.props.multi) {
            this.setState(
              {
                inputValue: '',
                focusedIndex: null,
              },
              function () {
                _this3.addValue(value);
              }
            );
          } else {
            this.setState(
              {
                isOpen: false,
                inputValue: '',
                isPseudoFocused: this.state.isFocused,
              },
              function () {
                _this3.setValue(value);
              }
            );
          }
        },

        addValue: function addValue(value) {
          var valueArray = this.getValueArray(this.props.value);
          var visibleOptions = this._visibleOptions.filter(function (val) {
            return !val.disabled;
          });
          var lastValueIndex = visibleOptions.indexOf(value);
          this.setValue(valueArray.concat(value));
          if (visibleOptions.length - 1 === lastValueIndex) {
            // the last option was selected; focus the second-last one
            this.focusOption(visibleOptions[lastValueIndex - 1]);
          } else if (visibleOptions.length > lastValueIndex) {
            // focus the option below the selected one
            this.focusOption(visibleOptions[lastValueIndex + 1]);
          }
        },

        popValue: function popValue() {
          var valueArray = this.getValueArray(this.props.value);
          if (!valueArray.length) return;
          if (valueArray[valueArray.length - 1].clearableValue === false) return;
          this.setValue(valueArray.slice(0, valueArray.length - 1));
        },

        removeValue: function removeValue(value) {
          var valueArray = this.getValueArray(this.props.value);
          this.setValue(
            valueArray.filter(function (i) {
              return i !== value;
            })
          );
          this.focus();
        },

        clearValue: function clearValue(event) {
          // if the event was triggered by a mousedown and not the primary
          // button, ignore it.
          if (event && event.type === 'mousedown' && event.button !== 0) {
            return;
          }
          event.stopPropagation();
          event.preventDefault();
          this.setValue(this.getResetValue());
          this.setState(
            {
              isOpen: false,
              inputValue: '',
            },
            this.focus
          );
        },

        getResetValue: function getResetValue() {
          if (this.props.resetValue !== undefined) {
            return this.props.resetValue;
          } else if (this.props.multi) {
            return [];
          } else {
            return null;
          }
        },

        focusOption: function focusOption(option) {
          this.setState({
            focusedOption: option,
          });
        },

        focusNextOption: function focusNextOption() {
          this.focusAdjacentOption('next');
        },

        focusPreviousOption: function focusPreviousOption() {
          this.focusAdjacentOption('previous');
        },

        focusPageUpOption: function focusPageUpOption() {
          this.focusAdjacentOption('page_up');
        },

        focusPageDownOption: function focusPageDownOption() {
          this.focusAdjacentOption('page_down');
        },

        focusStartOption: function focusStartOption() {
          this.focusAdjacentOption('start');
        },

        focusEndOption: function focusEndOption() {
          this.focusAdjacentOption('end');
        },

        focusAdjacentOption: function focusAdjacentOption(dir) {
          var options = this._visibleOptions
            .map(function (option, index) {
              return { option: option, index: index };
            })
            .filter(function (option) {
              return !option.option.disabled;
            });
          this._scrollToFocusedOptionOnUpdate = true;
          if (!this.state.isOpen) {
            this.setState({
              isOpen: true,
              inputValue: '',
              focusedOption:
                this._focusedOption ||
                (options.length ? options[dir === 'next' ? 0 : options.length - 1].option : null),
            });
            return;
          }
          if (!options.length) return;
          var focusedIndex = -1;
          for (var i = 0; i < options.length; i++) {
            if (this._focusedOption === options[i].option) {
              focusedIndex = i;
              break;
            }
          }
          if (dir === 'next' && focusedIndex !== -1) {
            focusedIndex = (focusedIndex + 1) % options.length;
          } else if (dir === 'previous') {
            if (focusedIndex > 0) {
              focusedIndex = focusedIndex - 1;
            } else {
              focusedIndex = options.length - 1;
            }
          } else if (dir === 'start') {
            focusedIndex = 0;
          } else if (dir === 'end') {
            focusedIndex = options.length - 1;
          } else if (dir === 'page_up') {
            var potentialIndex = focusedIndex - this.props.pageSize;
            if (potentialIndex < 0) {
              focusedIndex = 0;
            } else {
              focusedIndex = potentialIndex;
            }
          } else if (dir === 'page_down') {
            var potentialIndex = focusedIndex + this.props.pageSize;
            if (potentialIndex > options.length - 1) {
              focusedIndex = options.length - 1;
            } else {
              focusedIndex = potentialIndex;
            }
          }

          if (focusedIndex === -1) {
            focusedIndex = 0;
          }

          this.setState({
            focusedIndex: options[focusedIndex].index,
            focusedOption: options[focusedIndex].option,
          });
        },

        getFocusedOption: function getFocusedOption() {
          return this._focusedOption;
        },

        getInputValue: function getInputValue() {
          return this.state.inputValue;
        },

        selectFocusedOption: function selectFocusedOption() {
          if (this._focusedOption) {
            return this.selectValue(this._focusedOption);
          }
        },

        renderLoading: function renderLoading() {
          if (!this.props.isLoading) return;
          return _react2['default'].createElement(
            'span',
            { className: 'Select-loading-zone', 'aria-hidden': 'true' },
            _react2['default'].createElement('span', { className: 'Select-loading' })
          );
        },

        renderValue: function renderValue(valueArray, isOpen) {
          var _this4 = this;

          var renderLabel = this.props.valueRenderer || this.getOptionLabel;
          var ValueComponent = this.props.valueComponent;
          if (!valueArray.length) {
            return !this.state.inputValue
              ? _react2['default'].createElement(
                  'div',
                  { className: 'Select-placeholder' },
                  this.props.placeholder
                )
              : null;
          }
          var onClick = this.props.onValueClick ? this.handleValueClick : null;
          if (this.props.multi) {
            return valueArray.map(function (value, i) {
              return _react2['default'].createElement(
                ValueComponent,
                {
                  id: _this4._instancePrefix + '-value-' + i,
                  instancePrefix: _this4._instancePrefix,
                  disabled: _this4.props.disabled || value.clearableValue === false,
                  key: 'value-' + i + '-' + value[_this4.props.valueKey],
                  onClick: onClick,
                  onRemove: _this4.removeValue,
                  value: value,
                },
                renderLabel(value, i),
                _react2['default'].createElement('span', { className: 'Select-aria-only' }, ' ')
              );
            });
          } else if (!this.state.inputValue) {
            if (isOpen) onClick = null;
            return _react2['default'].createElement(
              ValueComponent,
              {
                id: this._instancePrefix + '-value-item',
                disabled: this.props.disabled,
                instancePrefix: this._instancePrefix,
                onClick: onClick,
                value: valueArray[0],
              },
              renderLabel(valueArray[0])
            );
          }
        },

        renderInput: function renderInput(valueArray, focusedOptionIndex) {
          var _classNames,
            _this5 = this;

          var className = (0, _classnames2['default'])(
            'Select-input',
            this.props.inputProps.className
          );
          var isOpen = !!this.state.isOpen;

          var ariaOwns = (0, _classnames2['default'])(
            ((_classNames = {}),
            _defineProperty(_classNames, this._instancePrefix + '-list', isOpen),
            _defineProperty(
              _classNames,
              this._instancePrefix + '-backspace-remove-message',
              this.props.multi &&
                !this.props.disabled &&
                this.state.isFocused &&
                !this.state.inputValue
            ),
            _classNames)
          );

          // TODO: Check how this project includes Object.assign()
          var inputProps = _extends({}, this.props.inputProps, {
            role: 'combobox',
            'aria-expanded': '' + isOpen,
            'aria-owns': ariaOwns,
            'aria-haspopup': '' + isOpen,
            'aria-activedescendant': isOpen
              ? this._instancePrefix + '-option-' + focusedOptionIndex
              : this._instancePrefix + '-value',
            'aria-labelledby': this.props['aria-labelledby'],
            'aria-label': this.props['aria-label'],
            className: className,
            tabIndex: this.props.tabIndex,
            onBlur: this.handleInputBlur,
            onChange: this.handleInputChange,
            onFocus: this.handleInputFocus,
            ref: function ref(_ref) {
              return (_this5.input = _ref);
            },
            required: this.state.required,
            value: this.state.inputValue,
          });

          if (this.props.inputRenderer) {
            return this.props.inputRenderer(inputProps);
          }

          if (this.props.disabled || !this.props.searchable) {
            var _props$inputProps = this.props.inputProps;
            var inputClassName = _props$inputProps.inputClassName;

            var divProps = _objectWithoutProperties(_props$inputProps, ['inputClassName']);

            return _react2['default'].createElement(
              'div',
              _extends({}, divProps, {
                role: 'combobox',
                'aria-expanded': isOpen,
                'aria-owns': isOpen
                  ? this._instancePrefix + '-list'
                  : this._instancePrefix + '-value',
                'aria-activedescendant': isOpen
                  ? this._instancePrefix + '-option-' + focusedOptionIndex
                  : this._instancePrefix + '-value',
                className: className,
                tabIndex: this.props.tabIndex || 0,
                onBlur: this.handleInputBlur,
                onFocus: this.handleInputFocus,
                ref: function (ref) {
                  return (_this5.input = ref);
                },
                'aria-readonly': '' + !!this.props.disabled,
                style: { border: 0, width: 1, display: 'inline-block' },
              })
            );
          }

          if (this.props.autosize) {
            return _react2['default'].createElement(
              _reactInputAutosize2['default'],
              _extends({}, inputProps, { minWidth: '5' })
            );
          }
          return _react2['default'].createElement(
            'div',
            { className: className },
            _react2['default'].createElement('input', inputProps)
          );
        },

        renderClear: function renderClear() {
          if (
            !this.props.clearable ||
            !this.props.value ||
            this.props.value === 0 ||
            (this.props.multi && !this.props.value.length) ||
            this.props.disabled ||
            this.props.isLoading
          )
            return;
          var clear = this.props.clearRenderer();

          return _react2['default'].createElement(
            'span',
            {
              className: 'Select-clear-zone',
              title: this.props.multi ? this.props.clearAllText : this.props.clearValueText,
              'aria-label': this.props.multi ? this.props.clearAllText : this.props.clearValueText,
              onMouseDown: this.clearValue,
              onTouchStart: this.handleTouchStart,
              onTouchMove: this.handleTouchMove,
              onTouchEnd: this.handleTouchEndClearValue,
            },
            clear
          );
        },

        renderArrow: function renderArrow() {
          var onMouseDown = this.handleMouseDownOnArrow;
          var isOpen = this.state.isOpen;
          var arrow = this.props.arrowRenderer({ onMouseDown: onMouseDown, isOpen: isOpen });

          return _react2['default'].createElement(
            'span',
            {
              className: 'Select-arrow-zone',
              onMouseDown: onMouseDown,
            },
            arrow
          );
        },

        filterOptions: function filterOptions(excludeOptions) {
          var filterValue = this.state.inputValue;
          var options = this.props.options || [];
          if (this.props.filterOptions) {
            // Maintain backwards compatibility with boolean attribute
            var filterOptions =
              typeof this.props.filterOptions === 'function'
                ? this.props.filterOptions
                : _utilsDefaultFilterOptions2['default'];

            return filterOptions(options, filterValue, excludeOptions, {
              filterOption: this.props.filterOption,
              ignoreAccents: this.props.ignoreAccents,
              ignoreCase: this.props.ignoreCase,
              labelKey: this.props.labelKey,
              matchPos: this.props.matchPos,
              matchProp: this.props.matchProp,
              valueKey: this.props.valueKey,
            });
          } else {
            return options;
          }
        },

        onOptionRef: function onOptionRef(ref, isFocused) {
          if (isFocused) {
            this.focused = ref;
          }
        },

        renderMenu: function renderMenu(options, valueArray, focusedOption) {
          if (options && options.length) {
            return this.props.menuRenderer({
              focusedOption: focusedOption,
              focusOption: this.focusOption,
              instancePrefix: this._instancePrefix,
              labelKey: this.props.labelKey,
              onFocus: this.focusOption,
              onSelect: this.selectValue,
              optionClassName: this.props.optionClassName,
              optionComponent: this.props.optionComponent,
              optionRenderer: this.props.optionRenderer || this.getOptionLabel,
              options: options,
              selectValue: this.selectValue,
              valueArray: valueArray,
              valueKey: this.props.valueKey,
              onOptionRef: this.onOptionRef,
            });
          } else if (this.props.noResultsText) {
            return _react2['default'].createElement(
              'div',
              { className: 'Select-noresults' },
              this.props.noResultsText
            );
          } else {
            return null;
          }
        },

        renderHiddenField: function renderHiddenField(valueArray) {
          var _this6 = this;

          if (!this.props.name) return;
          if (this.props.joinValues) {
            var value = valueArray
              .map(function (i) {
                return stringifyValue(i[_this6.props.valueKey]);
              })
              .join(this.props.delimiter);
            return _react2['default'].createElement('input', {
              type: 'hidden',
              ref: function (ref) {
                return (_this6.value = ref);
              },
              name: this.props.name,
              value: value,
              disabled: this.props.disabled,
            });
          }
          return valueArray.map(function (item, index) {
            return _react2['default'].createElement('input', {
              key: 'hidden.' + index,
              type: 'hidden',
              ref: 'value' + index,
              name: _this6.props.name,
              value: stringifyValue(item[_this6.props.valueKey]),
              disabled: _this6.props.disabled,
            });
          });
        },

        getFocusableOptionIndex: function getFocusableOptionIndex(selectedOption) {
          var options = this._visibleOptions;
          if (!options.length) return null;

          var focusedOption = this.state.focusedOption || selectedOption;
          if (focusedOption && !focusedOption.disabled) {
            var focusedOptionIndex = options.indexOf(focusedOption);
            if (focusedOptionIndex !== -1) {
              return focusedOptionIndex;
            }
          }

          for (var i = 0; i < options.length; i++) {
            if (!options[i].disabled) return i;
          }
          return null;
        },

        renderOuter: function renderOuter(options, valueArray, focusedOption) {
          var _this7 = this;

          var menu = this.renderMenu(options, valueArray, focusedOption);
          if (!menu) {
            return null;
          }

          return _react2['default'].createElement(
            'div',
            {
              ref: function (ref) {
                return (_this7.menuContainer = ref);
              },
              className: 'Select-menu-outer',
              style: this.props.menuContainerStyle,
            },
            _react2['default'].createElement(
              'div',
              {
                ref: function (ref) {
                  return (_this7.menu = ref);
                },
                role: 'listbox',
                className: 'Select-menu',
                id: this._instancePrefix + '-list',
                style: this.props.menuStyle,
                onScroll: this.handleMenuScroll,
                onMouseDown: this.handleMouseDownOnMenu,
              },
              menu
            )
          );
        },

        render: function render() {
          var _this8 = this;

          var valueArray = this.getValueArray(this.props.value);
          var options = (this._visibleOptions = this.filterOptions(
            this.props.multi ? this.getValueArray(this.props.value) : null
          ));
          var isOpen = this.state.isOpen;
          if (this.props.multi && !options.length && valueArray.length && !this.state.inputValue)
            isOpen = false;
          var focusedOptionIndex = this.getFocusableOptionIndex(valueArray[0]);

          var focusedOption = null;
          if (focusedOptionIndex !== null) {
            focusedOption = this._focusedOption = options[focusedOptionIndex];
          } else {
            focusedOption = this._focusedOption = null;
          }
          var className = (0, _classnames2['default'])('Select', this.props.className, {
            'Select--multi': this.props.multi,
            'Select--single': !this.props.multi,
            'is-disabled': this.props.disabled,
            'is-focused': this.state.isFocused,
            'is-loading': this.props.isLoading,
            'is-open': isOpen,
            'is-pseudo-focused': this.state.isPseudoFocused,
            'is-searchable': this.props.searchable,
            'has-value': valueArray.length,
          });

          var removeMessage = null;
          if (
            this.props.multi &&
            !this.props.disabled &&
            valueArray.length &&
            !this.state.inputValue &&
            this.state.isFocused &&
            this.props.backspaceRemoves
          ) {
            removeMessage = _react2['default'].createElement(
              'span',
              {
                id: this._instancePrefix + '-backspace-remove-message',
                className: 'Select-aria-only',
                'aria-live': 'assertive',
              },
              this.props.backspaceToRemoveMessage.replace(
                '{label}',
                valueArray[valueArray.length - 1][this.props.labelKey]
              )
            );
          }

          return _react2['default'].createElement(
            'div',
            {
              ref: function (ref) {
                return (_this8.wrapper = ref);
              },
              className: className,
              style: this.props.wrapperStyle,
            },
            this.renderHiddenField(valueArray),
            _react2['default'].createElement(
              'div',
              {
                ref: function (ref) {
                  return (_this8.control = ref);
                },
                className: 'Select-control',
                style: this.props.style,
                onKeyDown: this.handleKeyDown,
                onMouseDown: this.handleMouseDown,
                onTouchEnd: this.handleTouchEnd,
                onTouchStart: this.handleTouchStart,
                onTouchMove: this.handleTouchMove,
              },
              _react2['default'].createElement(
                'span',
                { className: 'Select-multi-value-wrapper', id: this._instancePrefix + '-value' },
                this.renderValue(valueArray, isOpen),
                this.renderInput(valueArray, focusedOptionIndex)
              ),
              removeMessage,
              this.renderLoading(),
              this.renderClear(),
              this.renderArrow()
            ),
            isOpen
              ? this.renderOuter(options, !this.props.multi ? valueArray : null, focusedOption)
              : null
          );
        },
      });

      exports['default'] = Select;
      module.exports = exports['default'];

      /***/
    },
    /* 102 */
    /***/ function (module, exports) {
      exports.f = {}.propertyIsEnumerable;

      /***/
    },
    /* 103 */
    /***/ function (module, exports) {
      module.exports = function (bitmap, value) {
        return {
          enumerable: !(bitmap & 1),
          configurable: !(bitmap & 2),
          writable: !(bitmap & 4),
          value: value,
        };
      };

      /***/
    },
    /* 104 */
    /***/ function (module, exports, __webpack_require__) {
      // 7.1.13 ToObject(argument)
      var defined = __webpack_require__(132);
      module.exports = function (it) {
        return Object(defined(it));
      };

      /***/
    },
    /* 105 */
    /***/ function (module, exports) {
      var id = 0,
        px = Math.random();
      module.exports = function (key) {
        return 'Symbol('.concat(key === undefined ? '' : key, ')_', (++id + px).toString(36));
      };

      /***/
    },
    /* 106 */
    /***/ function (module, exports, __webpack_require__) {
      // false -> Array#indexOf
      // true  -> Array#includes
      var toIObject = __webpack_require__(27),
        toLength = __webpack_require__(17),
        toIndex = __webpack_require__(66);
      module.exports = function (IS_INCLUDES) {
        return function ($this, el, fromIndex) {
          var O = toIObject($this),
            length = toLength(O.length),
            index = toIndex(fromIndex, length),
            value;
          // Array#includes uses SameValueZero equality algorithm
          if (IS_INCLUDES && el != el)
            while (length > index) {
              value = O[index++];
              if (value != value) return true;
              // Array#toIndex ignores holes, Array#includes - not
            }
          else
            for (; length > index; index++)
              if (IS_INCLUDES || index in O) {
                if (O[index] === el) return IS_INCLUDES || index || 0;
              }
          return !IS_INCLUDES && -1;
        };
      };

      /***/
    },
    /* 107 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';

      var global = __webpack_require__(6),
        $export = __webpack_require__(0),
        redefine = __webpack_require__(25),
        redefineAll = __webpack_require__(64),
        meta = __webpack_require__(50),
        forOf = __webpack_require__(78),
        anInstance = __webpack_require__(59),
        isObject = __webpack_require__(9),
        fails = __webpack_require__(7),
        $iterDetect = __webpack_require__(112),
        setToStringTag = __webpack_require__(80),
        inheritIfRequired = __webpack_require__(151);

      module.exports = function (NAME, wrapper, methods, common, IS_MAP, IS_WEAK) {
        var Base = global[NAME],
          C = Base,
          ADDER = IS_MAP ? 'set' : 'add',
          proto = C && C.prototype,
          O = {};
        var fixMethod = function (KEY) {
          var fn = proto[KEY];
          redefine(
            proto,
            KEY,
            KEY == 'delete'
              ? function (a) {
                  return IS_WEAK && !isObject(a) ? false : fn.call(this, a === 0 ? 0 : a);
                }
              : KEY == 'has'
              ? function has(a) {
                  return IS_WEAK && !isObject(a) ? false : fn.call(this, a === 0 ? 0 : a);
                }
              : KEY == 'get'
              ? function get(a) {
                  return IS_WEAK && !isObject(a) ? undefined : fn.call(this, a === 0 ? 0 : a);
                }
              : KEY == 'add'
              ? function add(a) {
                  fn.call(this, a === 0 ? 0 : a);
                  return this;
                }
              : function set(a, b) {
                  fn.call(this, a === 0 ? 0 : a, b);
                  return this;
                }
          );
        };
        if (
          typeof C != 'function' ||
          !(
            IS_WEAK ||
            (proto.forEach &&
              !fails(function () {
                new C().entries().next();
              }))
          )
        ) {
          // create collection constructor
          C = common.getConstructor(wrapper, NAME, IS_MAP, ADDER);
          redefineAll(C.prototype, methods);
          meta.NEED = true;
        } else {
          var instance = new C(),
            // early implementations not supports chaining
            HASNT_CHAINING = instance[ADDER](IS_WEAK ? {} : -0, 1) != instance,
            // V8 ~  Chromium 40- weak-collections throws on primitives, but should return false
            THROWS_ON_PRIMITIVES = fails(function () {
              instance.has(1);
            }),
            // most early implementations doesn't supports iterables, most modern - not close it correctly
            ACCEPT_ITERABLES = $iterDetect(function (iter) {
              new C(iter);
            }), // eslint-disable-line no-new
            // for early implementations -0 and +0 not the same
            BUGGY_ZERO =
              !IS_WEAK &&
              fails(function () {
                // V8 ~ Chromium 42- fails only with 5+ elements
                var $instance = new C(),
                  index = 5;
                while (index--) $instance[ADDER](index, index);
                return !$instance.has(-0);
              });
          if (!ACCEPT_ITERABLES) {
            C = wrapper(function (target, iterable) {
              anInstance(target, C, NAME);
              var that = inheritIfRequired(new Base(), target, C);
              if (iterable != undefined) forOf(iterable, IS_MAP, that[ADDER], that);
              return that;
            });
            C.prototype = proto;
            proto.constructor = C;
          }
          if (THROWS_ON_PRIMITIVES || BUGGY_ZERO) {
            fixMethod('delete');
            fixMethod('has');
            IS_MAP && fixMethod('get');
          }
          if (BUGGY_ZERO || HASNT_CHAINING) fixMethod(ADDER);
          // weak collections should not contains .clear method
          if (IS_WEAK && proto.clear) delete proto.clear;
        }

        setToStringTag(C, NAME);

        O[NAME] = C;
        $export($export.G + $export.W + $export.F * (C != Base), O);

        if (!IS_WEAK) common.setStrong(C, NAME, IS_MAP);

        return C;
      };

      /***/
    },
    /* 108 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';

      var hide = __webpack_require__(24),
        redefine = __webpack_require__(25),
        fails = __webpack_require__(7),
        defined = __webpack_require__(35),
        wks = __webpack_require__(10);

      module.exports = function (KEY, length, exec) {
        var SYMBOL = wks(KEY),
          fns = exec(defined, SYMBOL, ''[KEY]),
          strfn = fns[0],
          rxfn = fns[1];
        if (
          fails(function () {
            var O = {};
            O[SYMBOL] = function () {
              return 7;
            };
            return ''[KEY](O) != 7;
          })
        ) {
          redefine(String.prototype, KEY, strfn);
          hide(
            RegExp.prototype,
            SYMBOL,
            length == 2
              ? // 21.2.5.8 RegExp.prototype[@@replace](string, replaceValue)
                // 21.2.5.11 RegExp.prototype[@@split](string, limit)
                function (string, arg) {
                  return rxfn.call(string, this, arg);
                }
              : // 21.2.5.6 RegExp.prototype[@@match](string)
                // 21.2.5.9 RegExp.prototype[@@search](string)
                function (string) {
                  return rxfn.call(string, this);
                }
          );
        }
      };

      /***/
    },
    /* 109 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';

      // 21.2.5.3 get RegExp.prototype.flags
      var anObject = __webpack_require__(5);
      module.exports = function () {
        var that = anObject(this),
          result = '';
        if (that.global) result += 'g';
        if (that.ignoreCase) result += 'i';
        if (that.multiline) result += 'm';
        if (that.unicode) result += 'u';
        if (that.sticky) result += 'y';
        return result;
      };

      /***/
    },
    /* 110 */
    /***/ function (module, exports) {
      // fast apply, http://jsperf.lnkit.com/fast-apply/5
      module.exports = function (fn, args, that) {
        var un = that === undefined;
        switch (args.length) {
          case 0:
            return un ? fn() : fn.call(that);
          case 1:
            return un ? fn(args[0]) : fn.call(that, args[0]);
          case 2:
            return un ? fn(args[0], args[1]) : fn.call(that, args[0], args[1]);
          case 3:
            return un ? fn(args[0], args[1], args[2]) : fn.call(that, args[0], args[1], args[2]);
          case 4:
            return un
              ? fn(args[0], args[1], args[2], args[3])
              : fn.call(that, args[0], args[1], args[2], args[3]);
        }
        return fn.apply(that, args);
      };

      /***/
    },
    /* 111 */
    /***/ function (module, exports, __webpack_require__) {
      // 7.2.8 IsRegExp(argument)
      var isObject = __webpack_require__(9),
        cof = __webpack_require__(34),
        MATCH = __webpack_require__(10)('match');
      module.exports = function (it) {
        var isRegExp;
        return (
          isObject(it) && ((isRegExp = it[MATCH]) !== undefined ? !!isRegExp : cof(it) == 'RegExp')
        );
      };

      /***/
    },
    /* 112 */
    /***/ function (module, exports, __webpack_require__) {
      var ITERATOR = __webpack_require__(10)('iterator'),
        SAFE_CLOSING = false;

      try {
        var riter = [7][ITERATOR]();
        riter['return'] = function () {
          SAFE_CLOSING = true;
        };
        Array.from(riter, function () {
          throw 2;
        });
      } catch (e) {
        /* empty */
      }

      module.exports = function (exec, skipClosing) {
        if (!skipClosing && !SAFE_CLOSING) return false;
        var safe = false;
        try {
          var arr = [7],
            iter = arr[ITERATOR]();
          iter.next = function () {
            return { done: (safe = true) };
          };
          arr[ITERATOR] = function () {
            return iter;
          };
          exec(arr);
        } catch (e) {
          /* empty */
        }
        return safe;
      };

      /***/
    },
    /* 113 */
    /***/ function (module, exports, __webpack_require__) {
      // Forced replacement prototype accessors methods
      module.exports =
        __webpack_require__(60) ||
        !__webpack_require__(7)(function () {
          var K = Math.random();
          // In FF throws only define methods
          __defineSetter__.call(null, K, function () {
            /* empty */
          });
          delete __webpack_require__(6)[K];
        });

      /***/
    },
    /* 114 */
    /***/ function (module, exports) {
      exports.f = Object.getOwnPropertySymbols;

      /***/
    },
    /* 115 */
    /***/ function (module, exports, __webpack_require__) {
      var global = __webpack_require__(6),
        SHARED = '__core-js_shared__',
        store = global[SHARED] || (global[SHARED] = {});
      module.exports = function (key) {
        return store[key] || (store[key] = {});
      };

      /***/
    },
    /* 116 */
    /***/ function (module, exports, __webpack_require__) {
      var global = __webpack_require__(6),
        hide = __webpack_require__(24),
        uid = __webpack_require__(67),
        TYPED = uid('typed_array'),
        VIEW = uid('view'),
        ABV = !!(global.ArrayBuffer && global.DataView),
        CONSTR = ABV,
        i = 0,
        l = 9,
        Typed;

      var TypedArrayConstructors = 'Int8Array,Uint8Array,Uint8ClampedArray,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array'.split(
        ','
      );

      while (i < l) {
        if ((Typed = global[TypedArrayConstructors[i++]])) {
          hide(Typed.prototype, TYPED, true);
          hide(Typed.prototype, VIEW, true);
        } else CONSTR = false;
      }

      module.exports = {
        ABV: ABV,
        CONSTR: CONSTR,
        TYPED: TYPED,
        VIEW: VIEW,
      };

      /***/
    },
    /* 117 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';

      exports.__esModule = true;

      var _container = __webpack_require__(177);

      var _container2 = _interopRequireDefault(_container);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
          throw new TypeError('Cannot call a class as a function');
        }
      }

      function _possibleConstructorReturn(self, call) {
        if (!self) {
          throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
        }
        return call && (typeof call === 'object' || typeof call === 'function') ? call : self;
      }

      function _inherits(subClass, superClass) {
        if (typeof superClass !== 'function' && superClass !== null) {
          throw new TypeError(
            'Super expression must either be null or a function, not ' + typeof superClass
          );
        }
        subClass.prototype = Object.create(superClass && superClass.prototype, {
          constructor: { value: subClass, enumerable: false, writable: true, configurable: true },
        });
        if (superClass)
          Object.setPrototypeOf
            ? Object.setPrototypeOf(subClass, superClass)
            : (subClass.__proto__ = superClass);
      }

      /**
       * Represents an at-rule.
       *
       * If it’s followed in the CSS by a {} block, this node will have
       * a nodes property representing its children.
       *
       * @extends Container
       *
       * @example
       * const root = postcss.parse('@charset "UTF-8"; @media print {}');
       *
       * const charset = root.first;
       * charset.type  //=> 'atrule'
       * charset.nodes //=> undefined
       *
       * const media = root.last;
       * media.nodes   //=> []
       */
      var AtRule = (function (_Container) {
        _inherits(AtRule, _Container);

        function AtRule(defaults) {
          _classCallCheck(this, AtRule);

          var _this = _possibleConstructorReturn(this, _Container.call(this, defaults));

          _this.type = 'atrule';
          return _this;
        }

        AtRule.prototype.append = function append() {
          var _Container$prototype$;

          if (!this.nodes) this.nodes = [];

          for (var _len = arguments.length, children = Array(_len), _key = 0; _key < _len; _key++) {
            children[_key] = arguments[_key];
          }

          return (_Container$prototype$ = _Container.prototype.append).call.apply(
            _Container$prototype$,
            [this].concat(children)
          );
        };

        AtRule.prototype.prepend = function prepend() {
          var _Container$prototype$2;

          if (!this.nodes) this.nodes = [];

          for (
            var _len2 = arguments.length, children = Array(_len2), _key2 = 0;
            _key2 < _len2;
            _key2++
          ) {
            children[_key2] = arguments[_key2];
          }

          return (_Container$prototype$2 = _Container.prototype.prepend).call.apply(
            _Container$prototype$2,
            [this].concat(children)
          );
        };

        /**
         * @memberof AtRule#
         * @member {string} name - the at-rule’s name immediately follows the `@`
         *
         * @example
         * const root  = postcss.parse('@media print {}');
         * media.name //=> 'media'
         * const media = root.first;
         */

        /**
         * @memberof AtRule#
         * @member {string} params - the at-rule’s parameters, the values
         *                           that follow the at-rule’s name but precede
         *                           any {} block
         *
         * @example
         * const root  = postcss.parse('@media print, screen {}');
         * const media = root.first;
         * media.params //=> 'print, screen'
         */

        /**
         * @memberof AtRule#
         * @member {object} raws - Information to generate byte-to-byte equal
         *                         node string as it was in the origin input.
         *
         * Every parser saves its own properties,
         * but the default CSS parser uses:
         *
         * * `before`: the space symbols before the node. It also stores `*`
         *   and `_` symbols before the declaration (IE hack).
         * * `after`: the space symbols after the last child of the node
         *   to the end of the node.
         * * `between`: the symbols between the property and value
         *   for declarations, selector and `{` for rules, or last parameter
         *   and `{` for at-rules.
         * * `semicolon`: contains true if the last child has
         *   an (optional) semicolon.
         * * `afterName`: the space between the at-rule name and its parameters.
         *
         * PostCSS cleans at-rule parameters from comments and extra spaces,
         * but it stores origin content in raws properties.
         * As such, if you don’t change a declaration’s value,
         * PostCSS will use the raw value with comments.
         *
         * @example
         * const root = postcss.parse('  @media\nprint {\n}')
         * root.first.first.raws //=> { before: '  ',
         *                       //     between: ' ',
         *                       //     afterName: '\n',
         *                       //     after: '\n' }
         */

        return AtRule;
      })(_container2.default);

      exports.default = AtRule;
      module.exports = exports['default'];
      //# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImF0LXJ1bGUuZXM2Il0sIm5hbWVzIjpbIkF0UnVsZSIsImRlZmF1bHRzIiwidHlwZSIsImFwcGVuZCIsIm5vZGVzIiwiY2hpbGRyZW4iLCJwcmVwZW5kIl0sIm1hcHBpbmdzIjoiOzs7O0FBQUE7Ozs7Ozs7Ozs7OztBQUVBOzs7Ozs7Ozs7Ozs7Ozs7Ozs7SUFrQk1BLE07OztBQUVGLGtCQUFZQyxRQUFaLEVBQXNCO0FBQUE7O0FBQUEsaURBQ2xCLHNCQUFNQSxRQUFOLENBRGtCOztBQUVsQixVQUFLQyxJQUFMLEdBQVksUUFBWjtBQUZrQjtBQUdyQjs7bUJBRURDLE0scUJBQW9CO0FBQUE7O0FBQ2hCLFFBQUssQ0FBQyxLQUFLQyxLQUFYLEVBQW1CLEtBQUtBLEtBQUwsR0FBYSxFQUFiOztBQURILHNDQUFWQyxRQUFVO0FBQVZBLGNBQVU7QUFBQTs7QUFFaEIsV0FBTyw4Q0FBTUYsTUFBTixrREFBZ0JFLFFBQWhCLEVBQVA7QUFDSCxHOzttQkFFREMsTyxzQkFBcUI7QUFBQTs7QUFDakIsUUFBSyxDQUFDLEtBQUtGLEtBQVgsRUFBbUIsS0FBS0EsS0FBTCxHQUFhLEVBQWI7O0FBREYsdUNBQVZDLFFBQVU7QUFBVkEsY0FBVTtBQUFBOztBQUVqQixXQUFPLCtDQUFNQyxPQUFOLG1EQUFpQkQsUUFBakIsRUFBUDtBQUNILEc7O0FBRUQ7Ozs7Ozs7Ozs7QUFVQTs7Ozs7Ozs7Ozs7O0FBWUE7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztrQkFpQ1dMLE0iLCJmaWxlIjoiYXQtcnVsZS5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBDb250YWluZXIgZnJvbSAnLi9jb250YWluZXInO1xuXG4vKipcbiAqIFJlcHJlc2VudHMgYW4gYXQtcnVsZS5cbiAqXG4gKiBJZiBpdOKAmXMgZm9sbG93ZWQgaW4gdGhlIENTUyBieSBhIHt9IGJsb2NrLCB0aGlzIG5vZGUgd2lsbCBoYXZlXG4gKiBhIG5vZGVzIHByb3BlcnR5IHJlcHJlc2VudGluZyBpdHMgY2hpbGRyZW4uXG4gKlxuICogQGV4dGVuZHMgQ29udGFpbmVyXG4gKlxuICogQGV4YW1wbGVcbiAqIGNvbnN0IHJvb3QgPSBwb3N0Y3NzLnBhcnNlKCdAY2hhcnNldCBcIlVURi04XCI7IEBtZWRpYSBwcmludCB7fScpO1xuICpcbiAqIGNvbnN0IGNoYXJzZXQgPSByb290LmZpcnN0O1xuICogY2hhcnNldC50eXBlICAvLz0+ICdhdHJ1bGUnXG4gKiBjaGFyc2V0Lm5vZGVzIC8vPT4gdW5kZWZpbmVkXG4gKlxuICogY29uc3QgbWVkaWEgPSByb290Lmxhc3Q7XG4gKiBtZWRpYS5ub2RlcyAgIC8vPT4gW11cbiAqL1xuY2xhc3MgQXRSdWxlIGV4dGVuZHMgQ29udGFpbmVyIHtcblxuICAgIGNvbnN0cnVjdG9yKGRlZmF1bHRzKSB7XG4gICAgICAgIHN1cGVyKGRlZmF1bHRzKTtcbiAgICAgICAgdGhpcy50eXBlID0gJ2F0cnVsZSc7XG4gICAgfVxuXG4gICAgYXBwZW5kKC4uLmNoaWxkcmVuKSB7XG4gICAgICAgIGlmICggIXRoaXMubm9kZXMgKSB0aGlzLm5vZGVzID0gW107XG4gICAgICAgIHJldHVybiBzdXBlci5hcHBlbmQoLi4uY2hpbGRyZW4pO1xuICAgIH1cblxuICAgIHByZXBlbmQoLi4uY2hpbGRyZW4pIHtcbiAgICAgICAgaWYgKCAhdGhpcy5ub2RlcyApIHRoaXMubm9kZXMgPSBbXTtcbiAgICAgICAgcmV0dXJuIHN1cGVyLnByZXBlbmQoLi4uY2hpbGRyZW4pO1xuICAgIH1cblxuICAgIC8qKlxuICAgICAqIEBtZW1iZXJvZiBBdFJ1bGUjXG4gICAgICogQG1lbWJlciB7c3RyaW5nfSBuYW1lIC0gdGhlIGF0LXJ1bGXigJlzIG5hbWUgaW1tZWRpYXRlbHkgZm9sbG93cyB0aGUgYEBgXG4gICAgICpcbiAgICAgKiBAZXhhbXBsZVxuICAgICAqIGNvbnN0IHJvb3QgID0gcG9zdGNzcy5wYXJzZSgnQG1lZGlhIHByaW50IHt9Jyk7XG4gICAgICogbWVkaWEubmFtZSAvLz0+ICdtZWRpYSdcbiAgICAgKiBjb25zdCBtZWRpYSA9IHJvb3QuZmlyc3Q7XG4gICAgICovXG5cbiAgICAvKipcbiAgICAgKiBAbWVtYmVyb2YgQXRSdWxlI1xuICAgICAqIEBtZW1iZXIge3N0cmluZ30gcGFyYW1zIC0gdGhlIGF0LXJ1bGXigJlzIHBhcmFtZXRlcnMsIHRoZSB2YWx1ZXNcbiAgICAgKiAgICAgICAgICAgICAgICAgICAgICAgICAgIHRoYXQgZm9sbG93IHRoZSBhdC1ydWxl4oCZcyBuYW1lIGJ1dCBwcmVjZWRlXG4gICAgICogICAgICAgICAgICAgICAgICAgICAgICAgICBhbnkge30gYmxvY2tcbiAgICAgKlxuICAgICAqIEBleGFtcGxlXG4gICAgICogY29uc3Qgcm9vdCAgPSBwb3N0Y3NzLnBhcnNlKCdAbWVkaWEgcHJpbnQsIHNjcmVlbiB7fScpO1xuICAgICAqIGNvbnN0IG1lZGlhID0gcm9vdC5maXJzdDtcbiAgICAgKiBtZWRpYS5wYXJhbXMgLy89PiAncHJpbnQsIHNjcmVlbidcbiAgICAgKi9cblxuICAgIC8qKlxuICAgICAqIEBtZW1iZXJvZiBBdFJ1bGUjXG4gICAgICogQG1lbWJlciB7b2JqZWN0fSByYXdzIC0gSW5mb3JtYXRpb24gdG8gZ2VuZXJhdGUgYnl0ZS10by1ieXRlIGVxdWFsXG4gICAgICogICAgICAgICAgICAgICAgICAgICAgICAgbm9kZSBzdHJpbmcgYXMgaXQgd2FzIGluIHRoZSBvcmlnaW4gaW5wdXQuXG4gICAgICpcbiAgICAgKiBFdmVyeSBwYXJzZXIgc2F2ZXMgaXRzIG93biBwcm9wZXJ0aWVzLFxuICAgICAqIGJ1dCB0aGUgZGVmYXVsdCBDU1MgcGFyc2VyIHVzZXM6XG4gICAgICpcbiAgICAgKiAqIGBiZWZvcmVgOiB0aGUgc3BhY2Ugc3ltYm9scyBiZWZvcmUgdGhlIG5vZGUuIEl0IGFsc28gc3RvcmVzIGAqYFxuICAgICAqICAgYW5kIGBfYCBzeW1ib2xzIGJlZm9yZSB0aGUgZGVjbGFyYXRpb24gKElFIGhhY2spLlxuICAgICAqICogYGFmdGVyYDogdGhlIHNwYWNlIHN5bWJvbHMgYWZ0ZXIgdGhlIGxhc3QgY2hpbGQgb2YgdGhlIG5vZGVcbiAgICAgKiAgIHRvIHRoZSBlbmQgb2YgdGhlIG5vZGUuXG4gICAgICogKiBgYmV0d2VlbmA6IHRoZSBzeW1ib2xzIGJldHdlZW4gdGhlIHByb3BlcnR5IGFuZCB2YWx1ZVxuICAgICAqICAgZm9yIGRlY2xhcmF0aW9ucywgc2VsZWN0b3IgYW5kIGB7YCBmb3IgcnVsZXMsIG9yIGxhc3QgcGFyYW1ldGVyXG4gICAgICogICBhbmQgYHtgIGZvciBhdC1ydWxlcy5cbiAgICAgKiAqIGBzZW1pY29sb25gOiBjb250YWlucyB0cnVlIGlmIHRoZSBsYXN0IGNoaWxkIGhhc1xuICAgICAqICAgYW4gKG9wdGlvbmFsKSBzZW1pY29sb24uXG4gICAgICogKiBgYWZ0ZXJOYW1lYDogdGhlIHNwYWNlIGJldHdlZW4gdGhlIGF0LXJ1bGUgbmFtZSBhbmQgaXRzIHBhcmFtZXRlcnMuXG4gICAgICpcbiAgICAgKiBQb3N0Q1NTIGNsZWFucyBhdC1ydWxlIHBhcmFtZXRlcnMgZnJvbSBjb21tZW50cyBhbmQgZXh0cmEgc3BhY2VzLFxuICAgICAqIGJ1dCBpdCBzdG9yZXMgb3JpZ2luIGNvbnRlbnQgaW4gcmF3cyBwcm9wZXJ0aWVzLlxuICAgICAqIEFzIHN1Y2gsIGlmIHlvdSBkb27igJl0IGNoYW5nZSBhIGRlY2xhcmF0aW9u4oCZcyB2YWx1ZSxcbiAgICAgKiBQb3N0Q1NTIHdpbGwgdXNlIHRoZSByYXcgdmFsdWUgd2l0aCBjb21tZW50cy5cbiAgICAgKlxuICAgICAqIEBleGFtcGxlXG4gICAgICogY29uc3Qgcm9vdCA9IHBvc3Rjc3MucGFyc2UoJyAgQG1lZGlhXFxucHJpbnQge1xcbn0nKVxuICAgICAqIHJvb3QuZmlyc3QuZmlyc3QucmF3cyAvLz0+IHsgYmVmb3JlOiAnICAnLFxuICAgICAqICAgICAgICAgICAgICAgICAgICAgICAvLyAgICAgYmV0d2VlbjogJyAnLFxuICAgICAqICAgICAgICAgICAgICAgICAgICAgICAvLyAgICAgYWZ0ZXJOYW1lOiAnXFxuJyxcbiAgICAgKiAgICAgICAgICAgICAgICAgICAgICAgLy8gICAgIGFmdGVyOiAnXFxuJyB9XG4gICAgICovXG59XG5cbmV4cG9ydCBkZWZhdWx0IEF0UnVsZTtcbiJdfQ==

      /***/
    },
    /* 118 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';

      exports.__esModule = true;

      var _createClass = (function () {
        function defineProperties(target, props) {
          for (var i = 0; i < props.length; i++) {
            var descriptor = props[i];
            descriptor.enumerable = descriptor.enumerable || false;
            descriptor.configurable = true;
            if ('value' in descriptor) descriptor.writable = true;
            Object.defineProperty(target, descriptor.key, descriptor);
          }
        }
        return function (Constructor, protoProps, staticProps) {
          if (protoProps) defineProperties(Constructor.prototype, protoProps);
          if (staticProps) defineProperties(Constructor, staticProps);
          return Constructor;
        };
      })();

      var _container = __webpack_require__(177);

      var _container2 = _interopRequireDefault(_container);

      var _list = __webpack_require__(272);

      var _list2 = _interopRequireDefault(_list);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
          throw new TypeError('Cannot call a class as a function');
        }
      }

      function _possibleConstructorReturn(self, call) {
        if (!self) {
          throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
        }
        return call && (typeof call === 'object' || typeof call === 'function') ? call : self;
      }

      function _inherits(subClass, superClass) {
        if (typeof superClass !== 'function' && superClass !== null) {
          throw new TypeError(
            'Super expression must either be null or a function, not ' + typeof superClass
          );
        }
        subClass.prototype = Object.create(superClass && superClass.prototype, {
          constructor: { value: subClass, enumerable: false, writable: true, configurable: true },
        });
        if (superClass)
          Object.setPrototypeOf
            ? Object.setPrototypeOf(subClass, superClass)
            : (subClass.__proto__ = superClass);
      }

      /**
       * Represents a CSS rule: a selector followed by a declaration block.
       *
       * @extends Container
       *
       * @example
       * const root = postcss.parse('a{}');
       * const rule = root.first;
       * rule.type       //=> 'rule'
       * rule.toString() //=> 'a{}'
       */
      var Rule = (function (_Container) {
        _inherits(Rule, _Container);

        function Rule(defaults) {
          _classCallCheck(this, Rule);

          var _this = _possibleConstructorReturn(this, _Container.call(this, defaults));

          _this.type = 'rule';
          if (!_this.nodes) _this.nodes = [];
          return _this;
        }

        /**
         * An array containing the rule’s individual selectors.
         * Groups of selectors are split at commas.
         *
         * @type {string[]}
         *
         * @example
         * const root = postcss.parse('a, b { }');
         * const rule = root.first;
         *
         * rule.selector  //=> 'a, b'
         * rule.selectors //=> ['a', 'b']
         *
         * rule.selectors = ['a', 'strong'];
         * rule.selector //=> 'a, strong'
         */

        _createClass(Rule, [
          {
            key: 'selectors',
            get: function get() {
              return _list2.default.comma(this.selector);
            },
            set: function set(values) {
              var match = this.selector ? this.selector.match(/,\s*/) : null;
              var sep = match ? match[0] : ',' + this.raw('between', 'beforeOpen');
              this.selector = values.join(sep);
            },

            /**
             * @memberof Rule#
             * @member {string} selector - the rule’s full selector represented
             *                             as a string
             *
             * @example
             * const root = postcss.parse('a, b { }');
             * const rule = root.first;
             * rule.selector //=> 'a, b'
             */

            /**
             * @memberof Rule#
             * @member {object} raws - Information to generate byte-to-byte equal
             *                         node string as it was in the origin input.
             *
             * Every parser saves its own properties,
             * but the default CSS parser uses:
             *
             * * `before`: the space symbols before the node. It also stores `*`
             *   and `_` symbols before the declaration (IE hack).
             * * `after`: the space symbols after the last child of the node
             *   to the end of the node.
             * * `between`: the symbols between the property and value
             *   for declarations, selector and `{` for rules, or last parameter
             *   and `{` for at-rules.
             * * `semicolon`: contains `true` if the last child has
             *   an (optional) semicolon.
             * * `ownSemicolon`: contains `true` if there is semicolon after rule.
             *
             * PostCSS cleans selectors from comments and extra spaces,
             * but it stores origin content in raws properties.
             * As such, if you don’t change a declaration’s value,
             * PostCSS will use the raw value with comments.
             *
             * @example
             * const root = postcss.parse('a {\n  color:black\n}')
             * root.first.first.raws //=> { before: '', between: ' ', after: '\n' }
             */
          },
        ]);

        return Rule;
      })(_container2.default);

      exports.default = Rule;
      module.exports = exports['default'];
      //# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInJ1bGUuZXM2Il0sIm5hbWVzIjpbIlJ1bGUiLCJkZWZhdWx0cyIsInR5cGUiLCJub2RlcyIsImNvbW1hIiwic2VsZWN0b3IiLCJ2YWx1ZXMiLCJtYXRjaCIsInNlcCIsInJhdyIsImpvaW4iXSwibWFwcGluZ3MiOiI7Ozs7OztBQUFBOzs7O0FBQ0E7Ozs7Ozs7Ozs7OztBQUVBOzs7Ozs7Ozs7OztJQVdNQSxJOzs7QUFFRixnQkFBWUMsUUFBWixFQUFzQjtBQUFBOztBQUFBLGlEQUNsQixzQkFBTUEsUUFBTixDQURrQjs7QUFFbEIsVUFBS0MsSUFBTCxHQUFZLE1BQVo7QUFDQSxRQUFLLENBQUMsTUFBS0MsS0FBWCxFQUFtQixNQUFLQSxLQUFMLEdBQWEsRUFBYjtBQUhEO0FBSXJCOztBQUVEOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozt3QkFnQmdCO0FBQ1osYUFBTyxlQUFLQyxLQUFMLENBQVcsS0FBS0MsUUFBaEIsQ0FBUDtBQUNILEs7c0JBRWFDLE0sRUFBUTtBQUNsQixVQUFJQyxRQUFRLEtBQUtGLFFBQUwsR0FBZ0IsS0FBS0EsUUFBTCxDQUFjRSxLQUFkLENBQW9CLE1BQXBCLENBQWhCLEdBQThDLElBQTFEO0FBQ0EsVUFBSUMsTUFBUUQsUUFBUUEsTUFBTSxDQUFOLENBQVIsR0FBbUIsTUFBTSxLQUFLRSxHQUFMLENBQVMsU0FBVCxFQUFvQixZQUFwQixDQUFyQztBQUNBLFdBQUtKLFFBQUwsR0FBZ0JDLE9BQU9JLElBQVAsQ0FBWUYsR0FBWixDQUFoQjtBQUNIOztBQUVEOzs7Ozs7Ozs7OztBQVdBOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O2tCQStCV1IsSSIsImZpbGUiOiJydWxlLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IENvbnRhaW5lciBmcm9tICcuL2NvbnRhaW5lcic7XG5pbXBvcnQgbGlzdCAgICAgIGZyb20gJy4vbGlzdCc7XG5cbi8qKlxuICogUmVwcmVzZW50cyBhIENTUyBydWxlOiBhIHNlbGVjdG9yIGZvbGxvd2VkIGJ5IGEgZGVjbGFyYXRpb24gYmxvY2suXG4gKlxuICogQGV4dGVuZHMgQ29udGFpbmVyXG4gKlxuICogQGV4YW1wbGVcbiAqIGNvbnN0IHJvb3QgPSBwb3N0Y3NzLnBhcnNlKCdhe30nKTtcbiAqIGNvbnN0IHJ1bGUgPSByb290LmZpcnN0O1xuICogcnVsZS50eXBlICAgICAgIC8vPT4gJ3J1bGUnXG4gKiBydWxlLnRvU3RyaW5nKCkgLy89PiAnYXt9J1xuICovXG5jbGFzcyBSdWxlIGV4dGVuZHMgQ29udGFpbmVyIHtcblxuICAgIGNvbnN0cnVjdG9yKGRlZmF1bHRzKSB7XG4gICAgICAgIHN1cGVyKGRlZmF1bHRzKTtcbiAgICAgICAgdGhpcy50eXBlID0gJ3J1bGUnO1xuICAgICAgICBpZiAoICF0aGlzLm5vZGVzICkgdGhpcy5ub2RlcyA9IFtdO1xuICAgIH1cblxuICAgIC8qKlxuICAgICAqIEFuIGFycmF5IGNvbnRhaW5pbmcgdGhlIHJ1bGXigJlzIGluZGl2aWR1YWwgc2VsZWN0b3JzLlxuICAgICAqIEdyb3VwcyBvZiBzZWxlY3RvcnMgYXJlIHNwbGl0IGF0IGNvbW1hcy5cbiAgICAgKlxuICAgICAqIEB0eXBlIHtzdHJpbmdbXX1cbiAgICAgKlxuICAgICAqIEBleGFtcGxlXG4gICAgICogY29uc3Qgcm9vdCA9IHBvc3Rjc3MucGFyc2UoJ2EsIGIgeyB9Jyk7XG4gICAgICogY29uc3QgcnVsZSA9IHJvb3QuZmlyc3Q7XG4gICAgICpcbiAgICAgKiBydWxlLnNlbGVjdG9yICAvLz0+ICdhLCBiJ1xuICAgICAqIHJ1bGUuc2VsZWN0b3JzIC8vPT4gWydhJywgJ2InXVxuICAgICAqXG4gICAgICogcnVsZS5zZWxlY3RvcnMgPSBbJ2EnLCAnc3Ryb25nJ107XG4gICAgICogcnVsZS5zZWxlY3RvciAvLz0+ICdhLCBzdHJvbmcnXG4gICAgICovXG4gICAgZ2V0IHNlbGVjdG9ycygpIHtcbiAgICAgICAgcmV0dXJuIGxpc3QuY29tbWEodGhpcy5zZWxlY3Rvcik7XG4gICAgfVxuXG4gICAgc2V0IHNlbGVjdG9ycyh2YWx1ZXMpIHtcbiAgICAgICAgbGV0IG1hdGNoID0gdGhpcy5zZWxlY3RvciA/IHRoaXMuc2VsZWN0b3IubWF0Y2goLyxcXHMqLykgOiBudWxsO1xuICAgICAgICBsZXQgc2VwICAgPSBtYXRjaCA/IG1hdGNoWzBdIDogJywnICsgdGhpcy5yYXcoJ2JldHdlZW4nLCAnYmVmb3JlT3BlbicpO1xuICAgICAgICB0aGlzLnNlbGVjdG9yID0gdmFsdWVzLmpvaW4oc2VwKTtcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiBAbWVtYmVyb2YgUnVsZSNcbiAgICAgKiBAbWVtYmVyIHtzdHJpbmd9IHNlbGVjdG9yIC0gdGhlIHJ1bGXigJlzIGZ1bGwgc2VsZWN0b3IgcmVwcmVzZW50ZWRcbiAgICAgKiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYXMgYSBzdHJpbmdcbiAgICAgKlxuICAgICAqIEBleGFtcGxlXG4gICAgICogY29uc3Qgcm9vdCA9IHBvc3Rjc3MucGFyc2UoJ2EsIGIgeyB9Jyk7XG4gICAgICogY29uc3QgcnVsZSA9IHJvb3QuZmlyc3Q7XG4gICAgICogcnVsZS5zZWxlY3RvciAvLz0+ICdhLCBiJ1xuICAgICAqL1xuXG4gICAgLyoqXG4gICAgICogQG1lbWJlcm9mIFJ1bGUjXG4gICAgICogQG1lbWJlciB7b2JqZWN0fSByYXdzIC0gSW5mb3JtYXRpb24gdG8gZ2VuZXJhdGUgYnl0ZS10by1ieXRlIGVxdWFsXG4gICAgICogICAgICAgICAgICAgICAgICAgICAgICAgbm9kZSBzdHJpbmcgYXMgaXQgd2FzIGluIHRoZSBvcmlnaW4gaW5wdXQuXG4gICAgICpcbiAgICAgKiBFdmVyeSBwYXJzZXIgc2F2ZXMgaXRzIG93biBwcm9wZXJ0aWVzLFxuICAgICAqIGJ1dCB0aGUgZGVmYXVsdCBDU1MgcGFyc2VyIHVzZXM6XG4gICAgICpcbiAgICAgKiAqIGBiZWZvcmVgOiB0aGUgc3BhY2Ugc3ltYm9scyBiZWZvcmUgdGhlIG5vZGUuIEl0IGFsc28gc3RvcmVzIGAqYFxuICAgICAqICAgYW5kIGBfYCBzeW1ib2xzIGJlZm9yZSB0aGUgZGVjbGFyYXRpb24gKElFIGhhY2spLlxuICAgICAqICogYGFmdGVyYDogdGhlIHNwYWNlIHN5bWJvbHMgYWZ0ZXIgdGhlIGxhc3QgY2hpbGQgb2YgdGhlIG5vZGVcbiAgICAgKiAgIHRvIHRoZSBlbmQgb2YgdGhlIG5vZGUuXG4gICAgICogKiBgYmV0d2VlbmA6IHRoZSBzeW1ib2xzIGJldHdlZW4gdGhlIHByb3BlcnR5IGFuZCB2YWx1ZVxuICAgICAqICAgZm9yIGRlY2xhcmF0aW9ucywgc2VsZWN0b3IgYW5kIGB7YCBmb3IgcnVsZXMsIG9yIGxhc3QgcGFyYW1ldGVyXG4gICAgICogICBhbmQgYHtgIGZvciBhdC1ydWxlcy5cbiAgICAgKiAqIGBzZW1pY29sb25gOiBjb250YWlucyBgdHJ1ZWAgaWYgdGhlIGxhc3QgY2hpbGQgaGFzXG4gICAgICogICBhbiAob3B0aW9uYWwpIHNlbWljb2xvbi5cbiAgICAgKiAqIGBvd25TZW1pY29sb25gOiBjb250YWlucyBgdHJ1ZWAgaWYgdGhlcmUgaXMgc2VtaWNvbG9uIGFmdGVyIHJ1bGUuXG4gICAgICpcbiAgICAgKiBQb3N0Q1NTIGNsZWFucyBzZWxlY3RvcnMgZnJvbSBjb21tZW50cyBhbmQgZXh0cmEgc3BhY2VzLFxuICAgICAqIGJ1dCBpdCBzdG9yZXMgb3JpZ2luIGNvbnRlbnQgaW4gcmF3cyBwcm9wZXJ0aWVzLlxuICAgICAqIEFzIHN1Y2gsIGlmIHlvdSBkb27igJl0IGNoYW5nZSBhIGRlY2xhcmF0aW9u4oCZcyB2YWx1ZSxcbiAgICAgKiBQb3N0Q1NTIHdpbGwgdXNlIHRoZSByYXcgdmFsdWUgd2l0aCBjb21tZW50cy5cbiAgICAgKlxuICAgICAqIEBleGFtcGxlXG4gICAgICogY29uc3Qgcm9vdCA9IHBvc3Rjc3MucGFyc2UoJ2Ege1xcbiAgY29sb3I6YmxhY2tcXG59JylcbiAgICAgKiByb290LmZpcnN0LmZpcnN0LnJhd3MgLy89PiB7IGJlZm9yZTogJycsIGJldHdlZW46ICcgJywgYWZ0ZXI6ICdcXG4nIH1cbiAgICAgKi9cblxufVxuXG5leHBvcnQgZGVmYXVsdCBSdWxlO1xuIl19

      /***/
    },
    /* 119 */
    /***/ function (module, exports, __webpack_require__) {
      /* WEBPACK VAR INJECTION */ (function (process) {
        /**
         * Copyright 2013-present, Facebook, Inc.
         * All rights reserved.
         *
         * This source code is licensed under the BSD-style license found in the
         * LICENSE file in the root directory of this source tree. An additional grant
         * of patent rights can be found in the PATENTS file in the same directory.
         */

        if (process.env.NODE_ENV !== 'production') {
          var REACT_ELEMENT_TYPE =
            (typeof Symbol === 'function' && Symbol.for && Symbol.for('react.element')) || 0xeac7;

          var isValidElement = function (object) {
            return (
              typeof object === 'object' &&
              object !== null &&
              object.$$typeof === REACT_ELEMENT_TYPE
            );
          };

          // By explicitly using `prop-types` you are opting into new development behavior.
          // http://fb.me/prop-types-in-prod
          var throwOnDirectAccess = true;
          module.exports = __webpack_require__(659)(isValidElement, throwOnDirectAccess);
        } else {
          // By explicitly using `prop-types` you are opting into new production behavior.
          // http://fb.me/prop-types-in-prod
          module.exports = __webpack_require__(658)();
        }

        /* WEBPACK VAR INJECTION */
      }.call(exports, __webpack_require__(1)));

      /***/
    },
    /* 120 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';
      /* WEBPACK VAR INJECTION */ (function (process) {
        /**
         * Copyright 2013-present, Facebook, Inc.
         * All rights reserved.
         *
         * This source code is licensed under the BSD-style license found in the
         * LICENSE file in the root directory of this source tree. An additional grant
         * of patent rights can be found in the PATENTS file in the same directory.
         *
         *
         */

        var _prodInvariant = __webpack_require__(8);

        var invariant = __webpack_require__(2);

        /**
         * Injectable ordering of event plugins.
         */
        var eventPluginOrder = null;

        /**
         * Injectable mapping from names to event plugin modules.
         */
        var namesToPlugins = {};

        /**
         * Recomputes the plugin list using the injected plugins and plugin ordering.
         *
         * @private
         */
        function recomputePluginOrdering() {
          if (!eventPluginOrder) {
            // Wait until an `eventPluginOrder` is injected.
            return;
          }
          for (var pluginName in namesToPlugins) {
            var pluginModule = namesToPlugins[pluginName];
            var pluginIndex = eventPluginOrder.indexOf(pluginName);
            !(pluginIndex > -1)
              ? process.env.NODE_ENV !== 'production'
                ? invariant(
                    false,
                    'EventPluginRegistry: Cannot inject event plugins that do not exist in the plugin ordering, `%s`.',
                    pluginName
                  )
                : _prodInvariant('96', pluginName)
              : void 0;
            if (EventPluginRegistry.plugins[pluginIndex]) {
              continue;
            }
            !pluginModule.extractEvents
              ? process.env.NODE_ENV !== 'production'
                ? invariant(
                    false,
                    'EventPluginRegistry: Event plugins must implement an `extractEvents` method, but `%s` does not.',
                    pluginName
                  )
                : _prodInvariant('97', pluginName)
              : void 0;
            EventPluginRegistry.plugins[pluginIndex] = pluginModule;
            var publishedEvents = pluginModule.eventTypes;
            for (var eventName in publishedEvents) {
              !publishEventForPlugin(publishedEvents[eventName], pluginModule, eventName)
                ? process.env.NODE_ENV !== 'production'
                  ? invariant(
                      false,
                      'EventPluginRegistry: Failed to publish event `%s` for plugin `%s`.',
                      eventName,
                      pluginName
                    )
                  : _prodInvariant('98', eventName, pluginName)
                : void 0;
            }
          }
        }

        /**
         * Publishes an event so that it can be dispatched by the supplied plugin.
         *
         * @param {object} dispatchConfig Dispatch configuration for the event.
         * @param {object} PluginModule Plugin publishing the event.
         * @return {boolean} True if the event was successfully published.
         * @private
         */
        function publishEventForPlugin(dispatchConfig, pluginModule, eventName) {
          !!EventPluginRegistry.eventNameDispatchConfigs.hasOwnProperty(eventName)
            ? process.env.NODE_ENV !== 'production'
              ? invariant(
                  false,
                  'EventPluginHub: More than one plugin attempted to publish the same event name, `%s`.',
                  eventName
                )
              : _prodInvariant('99', eventName)
            : void 0;
          EventPluginRegistry.eventNameDispatchConfigs[eventName] = dispatchConfig;

          var phasedRegistrationNames = dispatchConfig.phasedRegistrationNames;
          if (phasedRegistrationNames) {
            for (var phaseName in phasedRegistrationNames) {
              if (phasedRegistrationNames.hasOwnProperty(phaseName)) {
                var phasedRegistrationName = phasedRegistrationNames[phaseName];
                publishRegistrationName(phasedRegistrationName, pluginModule, eventName);
              }
            }
            return true;
          } else if (dispatchConfig.registrationName) {
            publishRegistrationName(dispatchConfig.registrationName, pluginModule, eventName);
            return true;
          }
          return false;
        }

        /**
         * Publishes a registration name that is used to identify dispatched events and
         * can be used with `EventPluginHub.putListener` to register listeners.
         *
         * @param {string} registrationName Registration name to add.
         * @param {object} PluginModule Plugin publishing the event.
         * @private
         */
        function publishRegistrationName(registrationName, pluginModule, eventName) {
          !!EventPluginRegistry.registrationNameModules[registrationName]
            ? process.env.NODE_ENV !== 'production'
              ? invariant(
                  false,
                  'EventPluginHub: More than one plugin attempted to publish the same registration name, `%s`.',
                  registrationName
                )
              : _prodInvariant('100', registrationName)
            : void 0;
          EventPluginRegistry.registrationNameModules[registrationName] = pluginModule;
          EventPluginRegistry.registrationNameDependencies[registrationName] =
            pluginModule.eventTypes[eventName].dependencies;

          if (process.env.NODE_ENV !== 'production') {
            var lowerCasedName = registrationName.toLowerCase();
            EventPluginRegistry.possibleRegistrationNames[lowerCasedName] = registrationName;

            if (registrationName === 'onDoubleClick') {
              EventPluginRegistry.possibleRegistrationNames.ondblclick = registrationName;
            }
          }
        }

        /**
         * Registers plugins so that they can extract and dispatch events.
         *
         * @see {EventPluginHub}
         */
        var EventPluginRegistry = {
          /**
           * Ordered list of injected plugins.
           */
          plugins: [],

          /**
           * Mapping from event name to dispatch config
           */
          eventNameDispatchConfigs: {},

          /**
           * Mapping from registration name to plugin module
           */
          registrationNameModules: {},

          /**
           * Mapping from registration name to event name
           */
          registrationNameDependencies: {},

          /**
           * Mapping from lowercase registration names to the properly cased version,
           * used to warn in the case of missing event handlers. Available
           * only in __DEV__.
           * @type {Object}
           */
          possibleRegistrationNames: process.env.NODE_ENV !== 'production' ? {} : null,
          // Trust the developer to only use possibleRegistrationNames in __DEV__

          /**
           * Injects an ordering of plugins (by plugin name). This allows the ordering
           * to be decoupled from injection of the actual plugins so that ordering is
           * always deterministic regardless of packaging, on-the-fly injection, etc.
           *
           * @param {array} InjectedEventPluginOrder
           * @internal
           * @see {EventPluginHub.injection.injectEventPluginOrder}
           */
          injectEventPluginOrder: function (injectedEventPluginOrder) {
            !!eventPluginOrder
              ? process.env.NODE_ENV !== 'production'
                ? invariant(
                    false,
                    'EventPluginRegistry: Cannot inject event plugin ordering more than once. You are likely trying to load more than one copy of React.'
                  )
                : _prodInvariant('101')
              : void 0;
            // Clone the ordering so it cannot be dynamically mutated.
            eventPluginOrder = Array.prototype.slice.call(injectedEventPluginOrder);
            recomputePluginOrdering();
          },

          /**
           * Injects plugins to be used by `EventPluginHub`. The plugin names must be
           * in the ordering injected by `injectEventPluginOrder`.
           *
           * Plugins can be injected as part of page initialization or on-the-fly.
           *
           * @param {object} injectedNamesToPlugins Map from names to plugin modules.
           * @internal
           * @see {EventPluginHub.injection.injectEventPluginsByName}
           */
          injectEventPluginsByName: function (injectedNamesToPlugins) {
            var isOrderingDirty = false;
            for (var pluginName in injectedNamesToPlugins) {
              if (!injectedNamesToPlugins.hasOwnProperty(pluginName)) {
                continue;
              }
              var pluginModule = injectedNamesToPlugins[pluginName];
              if (
                !namesToPlugins.hasOwnProperty(pluginName) ||
                namesToPlugins[pluginName] !== pluginModule
              ) {
                !!namesToPlugins[pluginName]
                  ? process.env.NODE_ENV !== 'production'
                    ? invariant(
                        false,
                        'EventPluginRegistry: Cannot inject two different event plugins using the same name, `%s`.',
                        pluginName
                      )
                    : _prodInvariant('102', pluginName)
                  : void 0;
                namesToPlugins[pluginName] = pluginModule;
                isOrderingDirty = true;
              }
            }
            if (isOrderingDirty) {
              recomputePluginOrdering();
            }
          },

          /**
           * Looks up the plugin for the supplied event.
           *
           * @param {object} event A synthetic event.
           * @return {?object} The plugin that created the supplied event.
           * @internal
           */
          getPluginModuleForEvent: function (event) {
            var dispatchConfig = event.dispatchConfig;
            if (dispatchConfig.registrationName) {
              return (
                EventPluginRegistry.registrationNameModules[dispatchConfig.registrationName] || null
              );
            }
            if (dispatchConfig.phasedRegistrationNames !== undefined) {
              // pulling phasedRegistrationNames out of dispatchConfig helps Flow see
              // that it is not undefined.
              var phasedRegistrationNames = dispatchConfig.phasedRegistrationNames;

              for (var phase in phasedRegistrationNames) {
                if (!phasedRegistrationNames.hasOwnProperty(phase)) {
                  continue;
                }
                var pluginModule =
                  EventPluginRegistry.registrationNameModules[phasedRegistrationNames[phase]];
                if (pluginModule) {
                  return pluginModule;
                }
              }
            }
            return null;
          },

          /**
           * Exposed for unit testing.
           * @private
           */
          _resetEventPlugins: function () {
            eventPluginOrder = null;
            for (var pluginName in namesToPlugins) {
              if (namesToPlugins.hasOwnProperty(pluginName)) {
                delete namesToPlugins[pluginName];
              }
            }
            EventPluginRegistry.plugins.length = 0;

            var eventNameDispatchConfigs = EventPluginRegistry.eventNameDispatchConfigs;
            for (var eventName in eventNameDispatchConfigs) {
              if (eventNameDispatchConfigs.hasOwnProperty(eventName)) {
                delete eventNameDispatchConfigs[eventName];
              }
            }

            var registrationNameModules = EventPluginRegistry.registrationNameModules;
            for (var registrationName in registrationNameModules) {
              if (registrationNameModules.hasOwnProperty(registrationName)) {
                delete registrationNameModules[registrationName];
              }
            }

            if (process.env.NODE_ENV !== 'production') {
              var possibleRegistrationNames = EventPluginRegistry.possibleRegistrationNames;
              for (var lowerCasedName in possibleRegistrationNames) {
                if (possibleRegistrationNames.hasOwnProperty(lowerCasedName)) {
                  delete possibleRegistrationNames[lowerCasedName];
                }
              }
            }
          },
        };

        module.exports = EventPluginRegistry;
        /* WEBPACK VAR INJECTION */
      }.call(exports, __webpack_require__(1)));

      /***/
    },
    /* 121 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';
      /**
       * Copyright 2013-present, Facebook, Inc.
       * All rights reserved.
       *
       * This source code is licensed under the BSD-style license found in the
       * LICENSE file in the root directory of this source tree. An additional grant
       * of patent rights can be found in the PATENTS file in the same directory.
       *
       */

      var _assign = __webpack_require__(12);

      var EventPluginRegistry = __webpack_require__(120);
      var ReactEventEmitterMixin = __webpack_require__(693);
      var ViewportMetrics = __webpack_require__(293);

      var getVendorPrefixedEventName = __webpack_require__(729);
      var isEventSupported = __webpack_require__(197);

      /**
       * Summary of `ReactBrowserEventEmitter` event handling:
       *
       *  - Top-level delegation is used to trap most native browser events. This
       *    may only occur in the main thread and is the responsibility of
       *    ReactEventListener, which is injected and can therefore support pluggable
       *    event sources. This is the only work that occurs in the main thread.
       *
       *  - We normalize and de-duplicate events to account for browser quirks. This
       *    may be done in the worker thread.
       *
       *  - Forward these native events (with the associated top-level type used to
       *    trap it) to `EventPluginHub`, which in turn will ask plugins if they want
       *    to extract any synthetic events.
       *
       *  - The `EventPluginHub` will then process each event by annotating them with
       *    "dispatches", a sequence of listeners and IDs that care about that event.
       *
       *  - The `EventPluginHub` then dispatches the events.
       *
       * Overview of React and the event system:
       *
       * +------------+    .
       * |    DOM     |    .
       * +------------+    .
       *       |           .
       *       v           .
       * +------------+    .
       * | ReactEvent |    .
       * |  Listener  |    .
       * +------------+    .                         +-----------+
       *       |           .               +--------+|SimpleEvent|
       *       |           .               |         |Plugin     |
       * +-----|------+    .               v         +-----------+
       * |     |      |    .    +--------------+                    +------------+
       * |     +-----------.--->|EventPluginHub|                    |    Event   |
       * |            |    .    |              |     +-----------+  | Propagators|
       * | ReactEvent |    .    |              |     |TapEvent   |  |------------|
       * |  Emitter   |    .    |              |<---+|Plugin     |  |other plugin|
       * |            |    .    |              |     +-----------+  |  utilities |
       * |     +-----------.--->|              |                    +------------+
       * |     |      |    .    +--------------+
       * +-----|------+    .                ^        +-----------+
       *       |           .                |        |Enter/Leave|
       *       +           .                +-------+|Plugin     |
       * +-------------+   .                         +-----------+
       * | application |   .
       * |-------------|   .
       * |             |   .
       * |             |   .
       * +-------------+   .
       *                   .
       *    React Core     .  General Purpose Event Plugin System
       */

      var hasEventPageXY;
      var alreadyListeningTo = {};
      var isMonitoringScrollValue = false;
      var reactTopListenersCounter = 0;

      // For events like 'submit' which don't consistently bubble (which we trap at a
      // lower node than `document`), binding at `document` would cause duplicate
      // events so we don't include them here
      var topEventMapping = {
        topAbort: 'abort',
        topAnimationEnd: getVendorPrefixedEventName('animationend') || 'animationend',
        topAnimationIteration:
          getVendorPrefixedEventName('animationiteration') || 'animationiteration',
        topAnimationStart: getVendorPrefixedEventName('animationstart') || 'animationstart',
        topBlur: 'blur',
        topCanPlay: 'canplay',
        topCanPlayThrough: 'canplaythrough',
        topChange: 'change',
        topClick: 'click',
        topCompositionEnd: 'compositionend',
        topCompositionStart: 'compositionstart',
        topCompositionUpdate: 'compositionupdate',
        topContextMenu: 'contextmenu',
        topCopy: 'copy',
        topCut: 'cut',
        topDoubleClick: 'dblclick',
        topDrag: 'drag',
        topDragEnd: 'dragend',
        topDragEnter: 'dragenter',
        topDragExit: 'dragexit',
        topDragLeave: 'dragleave',
        topDragOver: 'dragover',
        topDragStart: 'dragstart',
        topDrop: 'drop',
        topDurationChange: 'durationchange',
        topEmptied: 'emptied',
        topEncrypted: 'encrypted',
        topEnded: 'ended',
        topError: 'error',
        topFocus: 'focus',
        topInput: 'input',
        topKeyDown: 'keydown',
        topKeyPress: 'keypress',
        topKeyUp: 'keyup',
        topLoadedData: 'loadeddata',
        topLoadedMetadata: 'loadedmetadata',
        topLoadStart: 'loadstart',
        topMouseDown: 'mousedown',
        topMouseMove: 'mousemove',
        topMouseOut: 'mouseout',
        topMouseOver: 'mouseover',
        topMouseUp: 'mouseup',
        topPaste: 'paste',
        topPause: 'pause',
        topPlay: 'play',
        topPlaying: 'playing',
        topProgress: 'progress',
        topRateChange: 'ratechange',
        topScroll: 'scroll',
        topSeeked: 'seeked',
        topSeeking: 'seeking',
        topSelectionChange: 'selectionchange',
        topStalled: 'stalled',
        topSuspend: 'suspend',
        topTextInput: 'textInput',
        topTimeUpdate: 'timeupdate',
        topTouchCancel: 'touchcancel',
        topTouchEnd: 'touchend',
        topTouchMove: 'touchmove',
        topTouchStart: 'touchstart',
        topTransitionEnd: getVendorPrefixedEventName('transitionend') || 'transitionend',
        topVolumeChange: 'volumechange',
        topWaiting: 'waiting',
        topWheel: 'wheel',
      };

      /**
       * To ensure no conflicts with other potential React instances on the page
       */
      var topListenersIDKey = '_reactListenersID' + String(Math.random()).slice(2);

      function getListeningForDocument(mountAt) {
        // In IE8, `mountAt` is a host object and doesn't have `hasOwnProperty`
        // directly.
        if (!Object.prototype.hasOwnProperty.call(mountAt, topListenersIDKey)) {
          mountAt[topListenersIDKey] = reactTopListenersCounter++;
          alreadyListeningTo[mountAt[topListenersIDKey]] = {};
        }
        return alreadyListeningTo[mountAt[topListenersIDKey]];
      }

      /**
       * `ReactBrowserEventEmitter` is used to attach top-level event listeners. For
       * example:
       *
       *   EventPluginHub.putListener('myID', 'onClick', myFunction);
       *
       * This would allocate a "registration" of `('onClick', myFunction)` on 'myID'.
       *
       * @internal
       */
      var ReactBrowserEventEmitter = _assign({}, ReactEventEmitterMixin, {
        /**
         * Injectable event backend
         */
        ReactEventListener: null,

        injection: {
          /**
           * @param {object} ReactEventListener
           */
          injectReactEventListener: function (ReactEventListener) {
            ReactEventListener.setHandleTopLevel(ReactBrowserEventEmitter.handleTopLevel);
            ReactBrowserEventEmitter.ReactEventListener = ReactEventListener;
          },
        },

        /**
         * Sets whether or not any created callbacks should be enabled.
         *
         * @param {boolean} enabled True if callbacks should be enabled.
         */
        setEnabled: function (enabled) {
          if (ReactBrowserEventEmitter.ReactEventListener) {
            ReactBrowserEventEmitter.ReactEventListener.setEnabled(enabled);
          }
        },

        /**
         * @return {boolean} True if callbacks are enabled.
         */
        isEnabled: function () {
          return !!(
            ReactBrowserEventEmitter.ReactEventListener &&
            ReactBrowserEventEmitter.ReactEventListener.isEnabled()
          );
        },

        /**
         * We listen for bubbled touch events on the document object.
         *
         * Firefox v8.01 (and possibly others) exhibited strange behavior when
         * mounting `onmousemove` events at some node that was not the document
         * element. The symptoms were that if your mouse is not moving over something
         * contained within that mount point (for example on the background) the
         * top-level listeners for `onmousemove` won't be called. However, if you
         * register the `mousemove` on the document object, then it will of course
         * catch all `mousemove`s. This along with iOS quirks, justifies restricting
         * top-level listeners to the document object only, at least for these
         * movement types of events and possibly all events.
         *
         * @see http://www.quirksmode.org/blog/archives/2010/09/click_event_del.html
         *
         * Also, `keyup`/`keypress`/`keydown` do not bubble to the window on IE, but
         * they bubble to document.
         *
         * @param {string} registrationName Name of listener (e.g. `onClick`).
         * @param {object} contentDocumentHandle Document which owns the container
         */
        listenTo: function (registrationName, contentDocumentHandle) {
          var mountAt = contentDocumentHandle;
          var isListening = getListeningForDocument(mountAt);
          var dependencies = EventPluginRegistry.registrationNameDependencies[registrationName];

          for (var i = 0; i < dependencies.length; i++) {
            var dependency = dependencies[i];
            if (!(isListening.hasOwnProperty(dependency) && isListening[dependency])) {
              if (dependency === 'topWheel') {
                if (isEventSupported('wheel')) {
                  ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(
                    'topWheel',
                    'wheel',
                    mountAt
                  );
                } else if (isEventSupported('mousewheel')) {
                  ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(
                    'topWheel',
                    'mousewheel',
                    mountAt
                  );
                } else {
                  // Firefox needs to capture a different mouse scroll event.
                  // @see http://www.quirksmode.org/dom/events/tests/scroll.html
                  ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(
                    'topWheel',
                    'DOMMouseScroll',
                    mountAt
                  );
                }
              } else if (dependency === 'topScroll') {
                if (isEventSupported('scroll', true)) {
                  ReactBrowserEventEmitter.ReactEventListener.trapCapturedEvent(
                    'topScroll',
                    'scroll',
                    mountAt
                  );
                } else {
                  ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(
                    'topScroll',
                    'scroll',
                    ReactBrowserEventEmitter.ReactEventListener.WINDOW_HANDLE
                  );
                }
              } else if (dependency === 'topFocus' || dependency === 'topBlur') {
                if (isEventSupported('focus', true)) {
                  ReactBrowserEventEmitter.ReactEventListener.trapCapturedEvent(
                    'topFocus',
                    'focus',
                    mountAt
                  );
                  ReactBrowserEventEmitter.ReactEventListener.trapCapturedEvent(
                    'topBlur',
                    'blur',
                    mountAt
                  );
                } else if (isEventSupported('focusin')) {
                  // IE has `focusin` and `focusout` events which bubble.
                  // @see http://www.quirksmode.org/blog/archives/2008/04/delegating_the.html
                  ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(
                    'topFocus',
                    'focusin',
                    mountAt
                  );
                  ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(
                    'topBlur',
                    'focusout',
                    mountAt
                  );
                }

                // to make sure blur and focus event listeners are only attached once
                isListening.topBlur = true;
                isListening.topFocus = true;
              } else if (topEventMapping.hasOwnProperty(dependency)) {
                ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(
                  dependency,
                  topEventMapping[dependency],
                  mountAt
                );
              }

              isListening[dependency] = true;
            }
          }
        },

        trapBubbledEvent: function (topLevelType, handlerBaseName, handle) {
          return ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(
            topLevelType,
            handlerBaseName,
            handle
          );
        },

        trapCapturedEvent: function (topLevelType, handlerBaseName, handle) {
          return ReactBrowserEventEmitter.ReactEventListener.trapCapturedEvent(
            topLevelType,
            handlerBaseName,
            handle
          );
        },

        /**
         * Protect against document.createEvent() returning null
         * Some popup blocker extensions appear to do this:
         * https://github.com/facebook/react/issues/6887
         */
        supportsEventPageXY: function () {
          if (!document.createEvent) {
            return false;
          }
          var ev = document.createEvent('MouseEvent');
          return ev != null && 'pageX' in ev;
        },

        /**
         * Listens to window scroll and resize events. We cache scroll values so that
         * application code can access them without triggering reflows.
         *
         * ViewportMetrics is only used by SyntheticMouse/TouchEvent and only when
         * pageX/pageY isn't supported (legacy browsers).
         *
         * NOTE: Scroll events do not bubble.
         *
         * @see http://www.quirksmode.org/dom/events/scroll.html
         */
        ensureScrollValueMonitoring: function () {
          if (hasEventPageXY === undefined) {
            hasEventPageXY = ReactBrowserEventEmitter.supportsEventPageXY();
          }
          if (!hasEventPageXY && !isMonitoringScrollValue) {
            var refresh = ViewportMetrics.refreshScrollValues;
            ReactBrowserEventEmitter.ReactEventListener.monitorScrollValue(refresh);
            isMonitoringScrollValue = true;
          }
        },
      });

      module.exports = ReactBrowserEventEmitter;

      /***/
    },
    /* 122 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';
      /**
       * Copyright 2013-present, Facebook, Inc.
       * All rights reserved.
       *
       * This source code is licensed under the BSD-style license found in the
       * LICENSE file in the root directory of this source tree. An additional grant
       * of patent rights can be found in the PATENTS file in the same directory.
       *
       */

      var SyntheticUIEvent = __webpack_require__(100);
      var ViewportMetrics = __webpack_require__(293);

      var getEventModifierState = __webpack_require__(195);

      /**
       * @interface MouseEvent
       * @see http://www.w3.org/TR/DOM-Level-3-Events/
       */
      var MouseEventInterface = {
        screenX: null,
        screenY: null,
        clientX: null,
        clientY: null,
        ctrlKey: null,
        shiftKey: null,
        altKey: null,
        metaKey: null,
        getModifierState: getEventModifierState,
        button: function (event) {
          // Webkit, Firefox, IE9+
          // which:  1 2 3
          // button: 0 1 2 (standard)
          var button = event.button;
          if ('which' in event) {
            return button;
          }
          // IE<9
          // which:  undefined
          // button: 0 0 0
          // button: 1 4 2 (onmouseup)
          return button === 2 ? 2 : button === 4 ? 1 : 0;
        },
        buttons: null,
        relatedTarget: function (event) {
          return (
            event.relatedTarget ||
            (event.fromElement === event.srcElement ? event.toElement : event.fromElement)
          );
        },
        // "Proprietary" Interface.
        pageX: function (event) {
          return 'pageX' in event ? event.pageX : event.clientX + ViewportMetrics.currentScrollLeft;
        },
        pageY: function (event) {
          return 'pageY' in event ? event.pageY : event.clientY + ViewportMetrics.currentScrollTop;
        },
      };

      /**
       * @param {object} dispatchConfig Configuration used to dispatch this event.
       * @param {string} dispatchMarker Marker identifying the event target.
       * @param {object} nativeEvent Native browser event.
       * @extends {SyntheticUIEvent}
       */
      function SyntheticMouseEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
        return SyntheticUIEvent.call(
          this,
          dispatchConfig,
          dispatchMarker,
          nativeEvent,
          nativeEventTarget
        );
      }

      SyntheticUIEvent.augmentClass(SyntheticMouseEvent, MouseEventInterface);

      module.exports = SyntheticMouseEvent;

      /***/
    },
    /* 123 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';
      /* WEBPACK VAR INJECTION */ (function (process) {
        /**
         * Copyright 2013-present, Facebook, Inc.
         * All rights reserved.
         *
         * This source code is licensed under the BSD-style license found in the
         * LICENSE file in the root directory of this source tree. An additional grant
         * of patent rights can be found in the PATENTS file in the same directory.
         *
         *
         */

        var _prodInvariant = __webpack_require__(8);

        var invariant = __webpack_require__(2);

        var OBSERVED_ERROR = {};

        /**
         * `Transaction` creates a black box that is able to wrap any method such that
         * certain invariants are maintained before and after the method is invoked
         * (Even if an exception is thrown while invoking the wrapped method). Whoever
         * instantiates a transaction can provide enforcers of the invariants at
         * creation time. The `Transaction` class itself will supply one additional
         * automatic invariant for you - the invariant that any transaction instance
         * should not be run while it is already being run. You would typically create a
         * single instance of a `Transaction` for reuse multiple times, that potentially
         * is used to wrap several different methods. Wrappers are extremely simple -
         * they only require implementing two methods.
         *
         * <pre>
         *                       wrappers (injected at creation time)
         *                                      +        +
         *                                      |        |
         *                    +-----------------|--------|--------------+
         *                    |                 v        |              |
         *                    |      +---------------+   |              |
         *                    |   +--|    wrapper1   |---|----+         |
         *                    |   |  +---------------+   v    |         |
         *                    |   |          +-------------+  |         |
         *                    |   |     +----|   wrapper2  |--------+   |
         *                    |   |     |    +-------------+  |     |   |
         *                    |   |     |                     |     |   |
         *                    |   v     v                     v     v   | wrapper
         *                    | +---+ +---+   +---------+   +---+ +---+ | invariants
         * perform(anyMethod) | |   | |   |   |         |   |   | |   | | maintained
         * +----------------->|-|---|-|---|-->|anyMethod|---|---|-|---|-|-------->
         *                    | |   | |   |   |         |   |   | |   | |
         *                    | |   | |   |   |         |   |   | |   | |
         *                    | |   | |   |   |         |   |   | |   | |
         *                    | +---+ +---+   +---------+   +---+ +---+ |
         *                    |  initialize                    close    |
         *                    +-----------------------------------------+
         * </pre>
         *
         * Use cases:
         * - Preserving the input selection ranges before/after reconciliation.
         *   Restoring selection even in the event of an unexpected error.
         * - Deactivating events while rearranging the DOM, preventing blurs/focuses,
         *   while guaranteeing that afterwards, the event system is reactivated.
         * - Flushing a queue of collected DOM mutations to the main UI thread after a
         *   reconciliation takes place in a worker thread.
         * - Invoking any collected `componentDidUpdate` callbacks after rendering new
         *   content.
         * - (Future use case): Wrapping particular flushes of the `ReactWorker` queue
         *   to preserve the `scrollTop` (an automatic scroll aware DOM).
         * - (Future use case): Layout calculations before and after DOM updates.
         *
         * Transactional plugin API:
         * - A module that has an `initialize` method that returns any precomputation.
         * - and a `close` method that accepts the precomputation. `close` is invoked
         *   when the wrapped process is completed, or has failed.
         *
         * @param {Array<TransactionalWrapper>} transactionWrapper Wrapper modules
         * that implement `initialize` and `close`.
         * @return {Transaction} Single transaction for reuse in thread.
         *
         * @class Transaction
         */
        var TransactionImpl = {
          /**
           * Sets up this instance so that it is prepared for collecting metrics. Does
           * so such that this setup method may be used on an instance that is already
           * initialized, in a way that does not consume additional memory upon reuse.
           * That can be useful if you decide to make your subclass of this mixin a
           * "PooledClass".
           */
          reinitializeTransaction: function () {
            this.transactionWrappers = this.getTransactionWrappers();
            if (this.wrapperInitData) {
              this.wrapperInitData.length = 0;
            } else {
              this.wrapperInitData = [];
            }
            this._isInTransaction = false;
          },

          _isInTransaction: false,

          /**
           * @abstract
           * @return {Array<TransactionWrapper>} Array of transaction wrappers.
           */
          getTransactionWrappers: null,

          isInTransaction: function () {
            return !!this._isInTransaction;
          },

          /**
           * Executes the function within a safety window. Use this for the top level
           * methods that result in large amounts of computation/mutations that would
           * need to be safety checked. The optional arguments helps prevent the need
           * to bind in many cases.
           *
           * @param {function} method Member of scope to call.
           * @param {Object} scope Scope to invoke from.
           * @param {Object?=} a Argument to pass to the method.
           * @param {Object?=} b Argument to pass to the method.
           * @param {Object?=} c Argument to pass to the method.
           * @param {Object?=} d Argument to pass to the method.
           * @param {Object?=} e Argument to pass to the method.
           * @param {Object?=} f Argument to pass to the method.
           *
           * @return {*} Return value from `method`.
           */
          perform: function (method, scope, a, b, c, d, e, f) {
            !!this.isInTransaction()
              ? process.env.NODE_ENV !== 'production'
                ? invariant(
                    false,
                    'Transaction.perform(...): Cannot initialize a transaction when there is already an outstanding transaction.'
                  )
                : _prodInvariant('27')
              : void 0;
            var errorThrown;
            var ret;
            try {
              this._isInTransaction = true;
              // Catching errors makes debugging more difficult, so we start with
              // errorThrown set to true before setting it to false after calling
              // close -- if it's still set to true in the finally block, it means
              // one of these calls threw.
              errorThrown = true;
              this.initializeAll(0);
              ret = method.call(scope, a, b, c, d, e, f);
              errorThrown = false;
            } finally {
              try {
                if (errorThrown) {
                  // If `method` throws, prefer to show that stack trace over any thrown
                  // by invoking `closeAll`.
                  try {
                    this.closeAll(0);
                  } catch (err) {}
                } else {
                  // Since `method` didn't throw, we don't want to silence the exception
                  // here.
                  this.closeAll(0);
                }
              } finally {
                this._isInTransaction = false;
              }
            }
            return ret;
          },

          initializeAll: function (startIndex) {
            var transactionWrappers = this.transactionWrappers;
            for (var i = startIndex; i < transactionWrappers.length; i++) {
              var wrapper = transactionWrappers[i];
              try {
                // Catching errors makes debugging more difficult, so we start with the
                // OBSERVED_ERROR state before overwriting it with the real return value
                // of initialize -- if it's still set to OBSERVED_ERROR in the finally
                // block, it means wrapper.initialize threw.
                this.wrapperInitData[i] = OBSERVED_ERROR;
                this.wrapperInitData[i] = wrapper.initialize ? wrapper.initialize.call(this) : null;
              } finally {
                if (this.wrapperInitData[i] === OBSERVED_ERROR) {
                  // The initializer for wrapper i threw an error; initialize the
                  // remaining wrappers but silence any exceptions from them to ensure
                  // that the first error is the one to bubble up.
                  try {
                    this.initializeAll(i + 1);
                  } catch (err) {}
                }
              }
            }
          },

          /**
           * Invokes each of `this.transactionWrappers.close[i]` functions, passing into
           * them the respective return values of `this.transactionWrappers.init[i]`
           * (`close`rs that correspond to initializers that failed will not be
           * invoked).
           */
          closeAll: function (startIndex) {
            !this.isInTransaction()
              ? process.env.NODE_ENV !== 'production'
                ? invariant(
                    false,
                    'Transaction.closeAll(): Cannot close transaction when none are open.'
                  )
                : _prodInvariant('28')
              : void 0;
            var transactionWrappers = this.transactionWrappers;
            for (var i = startIndex; i < transactionWrappers.length; i++) {
              var wrapper = transactionWrappers[i];
              var initData = this.wrapperInitData[i];
              var errorThrown;
              try {
                // Catching errors makes debugging more difficult, so we start with
                // errorThrown set to true before setting it to false after calling
                // close -- if it's still set to true in the finally block, it means
                // wrapper.close threw.
                errorThrown = true;
                if (initData !== OBSERVED_ERROR && wrapper.close) {
                  wrapper.close.call(this, initData);
                }
                errorThrown = false;
              } finally {
                if (errorThrown) {
                  // The closer for wrapper i threw an error; close the remaining
                  // wrappers but silence any exceptions from them to ensure that the
                  // first error is the one to bubble up.
                  try {
                    this.closeAll(i + 1);
                  } catch (e) {}
                }
              }
            }
            this.wrapperInitData.length = 0;
          },
        };

        module.exports = TransactionImpl;
        /* WEBPACK VAR INJECTION */
      }.call(exports, __webpack_require__(1)));

      /***/
    },
    /* 124 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';
      /**
       * Copyright 2016-present, Facebook, Inc.
       * All rights reserved.
       *
       * This source code is licensed under the BSD-style license found in the
       * LICENSE file in the root directory of this source tree. An additional grant
       * of patent rights can be found in the PATENTS file in the same directory.
       *
       * Based on the escape-html library, which is used under the MIT License below:
       *
       * Copyright (c) 2012-2013 TJ Holowaychuk
       * Copyright (c) 2015 Andreas Lubbe
       * Copyright (c) 2015 Tiancheng "Timothy" Gu
       *
       * Permission is hereby granted, free of charge, to any person obtaining
       * a copy of this software and associated documentation files (the
       * 'Software'), to deal in the Software without restriction, including
       * without limitation the rights to use, copy, modify, merge, publish,
       * distribute, sublicense, and/or sell copies of the Software, and to
       * permit persons to whom the Software is furnished to do so, subject to
       * the following conditions:
       *
       * The above copyright notice and this permission notice shall be
       * included in all copies or substantial portions of the Software.
       *
       * THE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND,
       * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
       * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
       * IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY
       * CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,
       * TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE
       * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
       *
       */

      // code copied and modified from escape-html
      /**
       * Module variables.
       * @private
       */

      var matchHtmlRegExp = /["'&<>]/;

      /**
       * Escape special characters in the given string of html.
       *
       * @param  {string} string The string to escape for inserting into HTML
       * @return {string}
       * @public
       */

      function escapeHtml(string) {
        var str = '' + string;
        var match = matchHtmlRegExp.exec(str);

        if (!match) {
          return str;
        }

        var escape;
        var html = '';
        var index = 0;
        var lastIndex = 0;

        for (index = match.index; index < str.length; index++) {
          switch (str.charCodeAt(index)) {
            case 34:
              // "
              escape = '&quot;';
              break;
            case 38:
              // &
              escape = '&amp;';
              break;
            case 39:
              // '
              escape = '&#x27;'; // modified from escape-html; used to be '&#39'
              break;
            case 60:
              // <
              escape = '&lt;';
              break;
            case 62:
              // >
              escape = '&gt;';
              break;
            default:
              continue;
          }

          if (lastIndex !== index) {
            html += str.substring(lastIndex, index);
          }

          lastIndex = index + 1;
          html += escape;
        }

        return lastIndex !== index ? html + str.substring(lastIndex, index) : html;
      }
      // end code copied and modified from escape-html

      /**
       * Escapes text to prevent scripting attacks.
       *
       * @param {*} text Text value to escape.
       * @return {string} An escaped string.
       */
      function escapeTextContentForBrowser(text) {
        if (typeof text === 'boolean' || typeof text === 'number') {
          // this shortcircuit helps perf for types that we know will never have
          // special characters, especially given that this function is used often
          // for numeric dom ids.
          return '' + text;
        }
        return escapeHtml(text);
      }

      module.exports = escapeTextContentForBrowser;

      /***/
    },
    /* 125 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';
      /**
       * Copyright 2013-present, Facebook, Inc.
       * All rights reserved.
       *
       * This source code is licensed under the BSD-style license found in the
       * LICENSE file in the root directory of this source tree. An additional grant
       * of patent rights can be found in the PATENTS file in the same directory.
       *
       */

      var ExecutionEnvironment = __webpack_require__(18);
      var DOMNamespaces = __webpack_require__(186);

      var WHITESPACE_TEST = /^[ \r\n\t\f]/;
      var NONVISIBLE_TEST = /<(!--|link|noscript|meta|script|style)[ \r\n\t\f\/>]/;

      var createMicrosoftUnsafeLocalFunction = __webpack_require__(193);

      // SVG temp container for IE lacking innerHTML
      var reusableSVGContainer;

      /**
       * Set the innerHTML property of a node, ensuring that whitespace is preserved
       * even in IE8.
       *
       * @param {DOMElement} node
       * @param {string} html
       * @internal
       */
      var setInnerHTML = createMicrosoftUnsafeLocalFunction(function (node, html) {
        // IE does not have innerHTML for SVG nodes, so instead we inject the
        // new markup in a temp node and then move the child nodes across into
        // the target node
        if (node.namespaceURI === DOMNamespaces.svg && !('innerHTML' in node)) {
          reusableSVGContainer = reusableSVGContainer || document.createElement('div');
          reusableSVGContainer.innerHTML = '<svg>' + html + '</svg>';
          var svgNode = reusableSVGContainer.firstChild;
          while (svgNode.firstChild) {
            node.appendChild(svgNode.firstChild);
          }
        } else {
          node.innerHTML = html;
        }
      });

      if (ExecutionEnvironment.canUseDOM) {
        // IE8: When updating a just created node with innerHTML only leading
        // whitespace is removed. When updating an existing node with innerHTML
        // whitespace in root TextNodes is also collapsed.
        // @see quirksmode.org/bugreports/archives/2004/11/innerhtml_and_t.html

        // Feature detection; only IE8 is known to behave improperly like this.
        var testElement = document.createElement('div');
        testElement.innerHTML = ' ';
        if (testElement.innerHTML === '') {
          setInnerHTML = function (node, html) {
            // Magic theory: IE8 supposedly differentiates between added and updated
            // nodes when processing innerHTML, innerHTML on updated nodes suffers
            // from worse whitespace behavior. Re-adding a node like this triggers
            // the initial and more favorable whitespace behavior.
            // TODO: What to do on a detached node?
            if (node.parentNode) {
              node.parentNode.replaceChild(node, node);
            }

            // We also implement a workaround for non-visible tags disappearing into
            // thin air on IE8, this only happens if there is no visible text
            // in-front of the non-visible tags. Piggyback on the whitespace fix
            // and simply check if any non-visible tags appear in the source.
            if (WHITESPACE_TEST.test(html) || (html[0] === '<' && NONVISIBLE_TEST.test(html))) {
              // Recover leading whitespace by temporarily prepending any character.
              // \uFEFF has the potential advantage of being zero-width/invisible.
              // UglifyJS drops U+FEFF chars when parsing, so use String.fromCharCode
              // in hopes that this is preserved even if "\uFEFF" is transformed to
              // the actual Unicode character (by Babel, for example).
              // https://github.com/mishoo/UglifyJS2/blob/v2.4.20/lib/parse.js#L216
              node.innerHTML = String.fromCharCode(0xfeff) + html;

              // deleteData leaves an empty `TextNode` which offsets the index of all
              // children. Definitely want to avoid this.
              var textNode = node.firstChild;
              if (textNode.data.length === 1) {
                node.removeChild(textNode);
              } else {
                textNode.deleteData(0, 1);
              }
            } else {
              node.innerHTML = html;
            }
          };
        }
        testElement = null;
      }

      module.exports = setInnerHTML;

      /***/
    },
    /* 126 */
    /***/ function (module, exports, __webpack_require__) {
      // Copyright Joyent, Inc. and other Node contributors.
      //
      // Permission is hereby granted, free of charge, to any person obtaining a
      // copy of this software and associated documentation files (the
      // "Software"), to deal in the Software without restriction, including
      // without limitation the rights to use, copy, modify, merge, publish,
      // distribute, sublicense, and/or sell copies of the Software, and to permit
      // persons to whom the Software is furnished to do so, subject to the
      // following conditions:
      //
      // The above copyright notice and this permission notice shall be included
      // in all copies or substantial portions of the Software.
      //
      // THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
      // OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
      // MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
      // NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
      // DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
      // OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
      // USE OR OTHER DEALINGS IN THE SOFTWARE.

      module.exports = Stream;

      var EE = __webpack_require__(93).EventEmitter;
      var inherits = __webpack_require__(40);

      inherits(Stream, EE);
      Stream.Readable = __webpack_require__(771);
      Stream.Writable = __webpack_require__(773);
      Stream.Duplex = __webpack_require__(768);
      Stream.Transform = __webpack_require__(772);
      Stream.PassThrough = __webpack_require__(770);

      // Backwards-compat with node 0.4.x
      Stream.Stream = Stream;

      // old-style streams.  Note that the pipe method (the only relevant
      // part of this class) is overridden in the Readable class.

      function Stream() {
        EE.call(this);
      }

      Stream.prototype.pipe = function (dest, options) {
        var source = this;

        function ondata(chunk) {
          if (dest.writable) {
            if (false === dest.write(chunk) && source.pause) {
              source.pause();
            }
          }
        }

        source.on('data', ondata);

        function ondrain() {
          if (source.readable && source.resume) {
            source.resume();
          }
        }

        dest.on('drain', ondrain);

        // If the 'end' option is not supplied, dest.end() will be called when
        // source gets the 'end' or 'close' events.  Only dest.end() once.
        if (!dest._isStdio && (!options || options.end !== false)) {
          source.on('end', onend);
          source.on('close', onclose);
        }

        var didOnEnd = false;
        function onend() {
          if (didOnEnd) return;
          didOnEnd = true;

          dest.end();
        }

        function onclose() {
          if (didOnEnd) return;
          didOnEnd = true;

          if (typeof dest.destroy === 'function') dest.destroy();
        }

        // don't leave dangling pipes when there are errors.
        function onerror(er) {
          cleanup();
          if (EE.listenerCount(this, 'error') === 0) {
            throw er; // Unhandled stream error in pipe.
          }
        }

        source.on('error', onerror);
        dest.on('error', onerror);

        // remove all the event listeners that were added.
        function cleanup() {
          source.removeListener('data', ondata);
          dest.removeListener('drain', ondrain);

          source.removeListener('end', onend);
          source.removeListener('close', onclose);

          source.removeListener('error', onerror);
          dest.removeListener('error', onerror);

          source.removeListener('end', cleanup);
          source.removeListener('close', cleanup);

          dest.removeListener('close', cleanup);
        }

        source.on('end', cleanup);
        source.on('close', cleanup);

        dest.on('close', cleanup);

        dest.emit('pipe', source);

        // Allow for unix-like usage: A.pipe(B).pipe(C)
        return dest;
      };

      /***/
    },
    /* 127 */
    /***/ function (module, exports) {
      module.exports = function (module) {
        if (!module.webpackPolyfill) {
          module.deprecate = function () {};
          module.paths = [];
          // module.parent = undefined by default
          if (!module.children) module.children = [];
          Object.defineProperty(module, 'loaded', {
            enumerable: true,
            get: function () {
              return module.l;
            },
          });
          Object.defineProperty(module, 'id', {
            enumerable: true,
            get: function () {
              return module.i;
            },
          });
          module.webpackPolyfill = 1;
        }
        return module;
      };

      /***/
    },
    /* 128 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true,
      });
      //https://mathiasbynens.be/notes/localstorage-pattern

      var COMPARE_STORAGE_VAR = (exports.COMPARE_STORAGE_VAR = 'builder_compare');
      var COMPARE_STORAGE_VERSION = (exports.COMPARE_STORAGE_VERSION = 2);
      var COMPARE_CURRENT_STRING = (exports.COMPARE_CURRENT_STRING =
        COMPARE_STORAGE_VAR + COMPARE_STORAGE_VERSION);

      var compareStorage = (exports.compareStorage = (function () {
        var uid = new Date();
        var storage;
        var result;
        try {
          (storage = window.localStorage).setItem(uid, uid);
          result = storage.getItem(uid) == uid;
          storage.removeItem(uid);
          return result && storage;
        } catch (exception) {}
      })());

      var loadCompare = (exports.loadCompare = function loadCompare() {
        try {
          var serializedCompare = compareStorage.getItem(COMPARE_CURRENT_STRING);
          if (serializedCompare === null) {
            return [];
          }
          return JSON.parse(serializedCompare);
        } catch (err) {
          return [];
        }
      });

      var saveCompare = (exports.saveCompare = function saveCompare(itemToSave) {
        try {
          var serializedCompare = JSON.stringify(itemToSave);
          compareStorage.setItem(COMPARE_CURRENT_STRING, serializedCompare);
        } catch (err) {
          // Ignore write errors
        }
      });

      var clearCompare = (exports.clearCompare = function clearCompare() {
        try {
          compareStorage.removeItem(COMPARE_CURRENT_STRING);
        } catch (err) {
          // Ignore remove errors
        }
      });

      /***/
    },
    /* 129 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';

      exports.__esModule = true;

      var _assign = __webpack_require__(361);

      var _assign2 = _interopRequireDefault(_assign);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      exports.default =
        _assign2.default ||
        function (target) {
          for (var i = 1; i < arguments.length; i++) {
            var source = arguments[i];

            for (var key in source) {
              if (Object.prototype.hasOwnProperty.call(source, key)) {
                target[key] = source[key];
              }
            }
          }

          return target;
        };

      /***/
    },
    /* 130 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';

      exports.__esModule = true;

      var _iterator = __webpack_require__(366);

      var _iterator2 = _interopRequireDefault(_iterator);

      var _symbol = __webpack_require__(365);

      var _symbol2 = _interopRequireDefault(_symbol);

      var _typeof =
        typeof _symbol2.default === 'function' && typeof _iterator2.default === 'symbol'
          ? function (obj) {
              return typeof obj;
            }
          : function (obj) {
              return obj &&
                typeof _symbol2.default === 'function' &&
                obj.constructor === _symbol2.default &&
                obj !== _symbol2.default.prototype
                ? 'symbol'
                : typeof obj;
            };

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      exports.default =
        typeof _symbol2.default === 'function' && _typeof(_iterator2.default) === 'symbol'
          ? function (obj) {
              return typeof obj === 'undefined' ? 'undefined' : _typeof(obj);
            }
          : function (obj) {
              return obj &&
                typeof _symbol2.default === 'function' &&
                obj.constructor === _symbol2.default &&
                obj !== _symbol2.default.prototype
                ? 'symbol'
                : typeof obj === 'undefined'
                ? 'undefined'
                : _typeof(obj);
            };

      /***/
    },
    /* 131 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';
      /* WEBPACK VAR INJECTION */ (function (global) {
        var buffer = __webpack_require__(43);
        var Buffer = buffer.Buffer;
        var SlowBuffer = buffer.SlowBuffer;
        var MAX_LEN = buffer.kMaxLength || 2147483647;
        exports.alloc = function alloc(size, fill, encoding) {
          if (typeof Buffer.alloc === 'function') {
            return Buffer.alloc(size, fill, encoding);
          }
          if (typeof encoding === 'number') {
            throw new TypeError('encoding must not be number');
          }
          if (typeof size !== 'number') {
            throw new TypeError('size must be a number');
          }
          if (size > MAX_LEN) {
            throw new RangeError('size is too large');
          }
          var enc = encoding;
          var _fill = fill;
          if (_fill === undefined) {
            enc = undefined;
            _fill = 0;
          }
          var buf = new Buffer(size);
          if (typeof _fill === 'string') {
            var fillBuf = new Buffer(_fill, enc);
            var flen = fillBuf.length;
            var i = -1;
            while (++i < size) {
              buf[i] = fillBuf[i % flen];
            }
          } else {
            buf.fill(_fill);
          }
          return buf;
        };
        exports.allocUnsafe = function allocUnsafe(size) {
          if (typeof Buffer.allocUnsafe === 'function') {
            return Buffer.allocUnsafe(size);
          }
          if (typeof size !== 'number') {
            throw new TypeError('size must be a number');
          }
          if (size > MAX_LEN) {
            throw new RangeError('size is too large');
          }
          return new Buffer(size);
        };
        exports.from = function from(value, encodingOrOffset, length) {
          if (
            typeof Buffer.from === 'function' &&
            (!global.Uint8Array || Uint8Array.from !== Buffer.from)
          ) {
            return Buffer.from(value, encodingOrOffset, length);
          }
          if (typeof value === 'number') {
            throw new TypeError('"value" argument must not be a number');
          }
          if (typeof value === 'string') {
            return new Buffer(value, encodingOrOffset);
          }
          if (typeof ArrayBuffer !== 'undefined' && value instanceof ArrayBuffer) {
            var offset = encodingOrOffset;
            if (arguments.length === 1) {
              return new Buffer(value);
            }
            if (typeof offset === 'undefined') {
              offset = 0;
            }
            var len = length;
            if (typeof len === 'undefined') {
              len = value.byteLength - offset;
            }
            if (offset >= value.byteLength) {
              throw new RangeError("'offset' is out of bounds");
            }
            if (len > value.byteLength - offset) {
              throw new RangeError("'length' is out of bounds");
            }
            return new Buffer(value.slice(offset, offset + len));
          }
          if (Buffer.isBuffer(value)) {
            var out = new Buffer(value.length);
            value.copy(out, 0, 0, value.length);
            return out;
          }
          if (value) {
            if (
              Array.isArray(value) ||
              (typeof ArrayBuffer !== 'undefined' && value.buffer instanceof ArrayBuffer) ||
              'length' in value
            ) {
              return new Buffer(value);
            }
            if (value.type === 'Buffer' && Array.isArray(value.data)) {
              return new Buffer(value.data);
            }
          }

          throw new TypeError(
            'First argument must be a string, Buffer, ' +
              'ArrayBuffer, Array, or array-like object.'
          );
        };
        exports.allocUnsafeSlow = function allocUnsafeSlow(size) {
          if (typeof Buffer.allocUnsafeSlow === 'function') {
            return Buffer.allocUnsafeSlow(size);
          }
          if (typeof size !== 'number') {
            throw new TypeError('size must be a number');
          }
          if (size >= MAX_LEN) {
            throw new RangeError('size is too large');
          }
          return new SlowBuffer(size);
        };

        /* WEBPACK VAR INJECTION */
      }.call(exports, __webpack_require__(20)));

      /***/
    },
    /* 132 */
    /***/ function (module, exports) {
      // 7.2.1 RequireObjectCoercible(argument)
      module.exports = function (it) {
        if (it == undefined) throw TypeError("Can't call method on  " + it);
        return it;
      };

      /***/
    },
    /* 133 */
    /***/ function (module, exports) {
      // IE 8- don't enum bug keys
      module.exports = 'constructor,hasOwnProperty,isPrototypeOf,propertyIsEnumerable,toLocaleString,toString,valueOf'.split(
        ','
      );

      /***/
    },
    /* 134 */
    /***/ function (module, exports) {
      module.exports = {};

      /***/
    },
    /* 135 */
    /***/ function (module, exports) {
      module.exports = true;

      /***/
    },
    /* 136 */
    /***/ function (module, exports, __webpack_require__) {
      // 19.1.2.2 / 15.2.3.5 Object.create(O [, Properties])
      var anObject = __webpack_require__(86),
        dPs = __webpack_require__(389),
        enumBugKeys = __webpack_require__(133),
        IE_PROTO = __webpack_require__(139)('IE_PROTO'),
        Empty = function () {
          /* empty */
        },
        PROTOTYPE = 'prototype';

      // Create object with fake `null` prototype: use iframe Object with cleared prototype
      var createDict = function () {
        // Thrash, waste and sodomy: IE GC bug
        var iframe = __webpack_require__(219)('iframe'),
          i = enumBugKeys.length,
          lt = '<',
          gt = '>',
          iframeDocument;
        iframe.style.display = 'none';
        __webpack_require__(382).appendChild(iframe);
        iframe.src = 'javascript:'; // eslint-disable-line no-script-url
        // createDict = iframe.contentWindow.Object;
        // html.removeChild(iframe);
        iframeDocument = iframe.contentWindow.document;
        iframeDocument.open();
        iframeDocument.write(lt + 'script' + gt + 'document.F=Object' + lt + '/script' + gt);
        iframeDocument.close();
        createDict = iframeDocument.F;
        while (i--) delete createDict[PROTOTYPE][enumBugKeys[i]];
        return createDict();
      };

      module.exports =
        Object.create ||
        function create(O, Properties) {
          var result;
          if (O !== null) {
            Empty[PROTOTYPE] = anObject(O);
            result = new Empty();
            Empty[PROTOTYPE] = null;
            // add "__proto__" for Object.getPrototypeOf polyfill
            result[IE_PROTO] = O;
          } else result = createDict();
          return Properties === undefined ? result : dPs(result, Properties);
        };

      /***/
    },
    /* 137 */
    /***/ function (module, exports) {
      exports.f = Object.getOwnPropertySymbols;

      /***/
    },
    /* 138 */
    /***/ function (module, exports, __webpack_require__) {
      var def = __webpack_require__(57).f,
        has = __webpack_require__(56),
        TAG = __webpack_require__(76)('toStringTag');

      module.exports = function (it, tag, stat) {
        if (it && !has((it = stat ? it : it.prototype), TAG))
          def(it, TAG, { configurable: true, value: tag });
      };

      /***/
    },
    /* 139 */
    /***/ function (module, exports, __webpack_require__) {
      var shared = __webpack_require__(140)('keys'),
        uid = __webpack_require__(105);
      module.exports = function (key) {
        return shared[key] || (shared[key] = uid(key));
      };

      /***/
    },
    /* 140 */
    /***/ function (module, exports, __webpack_require__) {
      var global = __webpack_require__(49),
        SHARED = '__core-js_shared__',
        store = global[SHARED] || (global[SHARED] = {});
      module.exports = function (key) {
        return store[key] || (store[key] = {});
      };

      /***/
    },
    /* 141 */
    /***/ function (module, exports) {
      // 7.1.4 ToInteger
      var ceil = Math.ceil,
        floor = Math.floor;
      module.exports = function (it) {
        return isNaN((it = +it)) ? 0 : (it > 0 ? floor : ceil)(it);
      };

      /***/
    },
    /* 142 */
    /***/ function (module, exports, __webpack_require__) {
      // 7.1.1 ToPrimitive(input [, PreferredType])
      var isObject = __webpack_require__(87);
      // instead of the ES6 spec version, we didn't implement @@toPrimitive case
      // and the second argument - flag - preferred type is a string
      module.exports = function (it, S) {
        if (!isObject(it)) return it;
        var fn, val;
        if (S && typeof (fn = it.toString) == 'function' && !isObject((val = fn.call(it))))
          return val;
        if (typeof (fn = it.valueOf) == 'function' && !isObject((val = fn.call(it)))) return val;
        if (!S && typeof (fn = it.toString) == 'function' && !isObject((val = fn.call(it))))
          return val;
        throw TypeError("Can't convert object to primitive value");
      };

      /***/
    },
    /* 143 */
    /***/ function (module, exports, __webpack_require__) {
      var global = __webpack_require__(49),
        core = __webpack_require__(33),
        LIBRARY = __webpack_require__(135),
        wksExt = __webpack_require__(144),
        defineProperty = __webpack_require__(57).f;
      module.exports = function (name) {
        var $Symbol = core.Symbol || (core.Symbol = LIBRARY ? {} : global.Symbol || {});
        if (name.charAt(0) != '_' && !(name in $Symbol))
          defineProperty($Symbol, name, { value: wksExt.f(name) });
      };

      /***/
    },
    /* 144 */
    /***/ function (module, exports, __webpack_require__) {
      exports.f = __webpack_require__(76);

      /***/
    },
    /* 145 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';
      // 22.1.3.6 Array.prototype.fill(value, start = 0, end = this.length)

      var toObject = __webpack_require__(19),
        toIndex = __webpack_require__(66),
        toLength = __webpack_require__(17);
      module.exports = function fill(value /*, start = 0, end = @length */) {
        var O = toObject(this),
          length = toLength(O.length),
          aLen = arguments.length,
          index = toIndex(aLen > 1 ? arguments[1] : undefined, length),
          end = aLen > 2 ? arguments[2] : undefined,
          endPos = end === undefined ? length : toIndex(end, length);
        while (endPos > index) O[index++] = value;
        return O;
      };

      /***/
    },
    /* 146 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';

      var $defineProperty = __webpack_require__(14),
        createDesc = __webpack_require__(51);

      module.exports = function (object, index, value) {
        if (index in object) $defineProperty.f(object, index, createDesc(0, value));
        else object[index] = value;
      };

      /***/
    },
    /* 147 */
    /***/ function (module, exports, __webpack_require__) {
      var isObject = __webpack_require__(9),
        document = __webpack_require__(6).document,
        // in old IE typeof document.createElement is 'object'
        is = isObject(document) && isObject(document.createElement);
      module.exports = function (it) {
        return is ? document.createElement(it) : {};
      };

      /***/
    },
    /* 148 */
    /***/ function (module, exports) {
      // IE 8- don't enum bug keys
      module.exports = 'constructor,hasOwnProperty,isPrototypeOf,propertyIsEnumerable,toLocaleString,toString,valueOf'.split(
        ','
      );

      /***/
    },
    /* 149 */
    /***/ function (module, exports, __webpack_require__) {
      var MATCH = __webpack_require__(10)('match');
      module.exports = function (KEY) {
        var re = /./;
        try {
          '/./'[KEY](re);
        } catch (e) {
          try {
            re[MATCH] = false;
            return !'/./'[KEY](re);
          } catch (f) {
            /* empty */
          }
        }
        return true;
      };

      /***/
    },
    /* 150 */
    /***/ function (module, exports, __webpack_require__) {
      module.exports = __webpack_require__(6).document && document.documentElement;

      /***/
    },
    /* 151 */
    /***/ function (module, exports, __webpack_require__) {
      var isObject = __webpack_require__(9),
        setPrototypeOf = __webpack_require__(159).set;
      module.exports = function (that, target, C) {
        var P,
          S = target.constructor;
        if (
          S !== C &&
          typeof S == 'function' &&
          (P = S.prototype) !== C.prototype &&
          isObject(P) &&
          setPrototypeOf
        ) {
          setPrototypeOf(that, P);
        }
        return that;
      };

      /***/
    },
    /* 152 */
    /***/ function (module, exports, __webpack_require__) {
      // check on default Array iterator
      var Iterators = __webpack_require__(79),
        ITERATOR = __webpack_require__(10)('iterator'),
        ArrayProto = Array.prototype;

      module.exports = function (it) {
        return it !== undefined && (Iterators.Array === it || ArrayProto[ITERATOR] === it);
      };

      /***/
    },
    /* 153 */
    /***/ function (module, exports, __webpack_require__) {
      // 7.2.2 IsArray(argument)
      var cof = __webpack_require__(34);
      module.exports =
        Array.isArray ||
        function isArray(arg) {
          return cof(arg) == 'Array';
        };

      /***/
    },
    /* 154 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';

      var create = __webpack_require__(61),
        descriptor = __webpack_require__(51),
        setToStringTag = __webpack_require__(80),
        IteratorPrototype = {};

      // 25.1.2.1.1 %IteratorPrototype%[@@iterator]()
      __webpack_require__(24)(IteratorPrototype, __webpack_require__(10)('iterator'), function () {
        return this;
      });

      module.exports = function (Constructor, NAME, next) {
        Constructor.prototype = create(IteratorPrototype, { next: descriptor(1, next) });
        setToStringTag(Constructor, NAME + ' Iterator');
      };

      /***/
    },
    /* 155 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';

      var LIBRARY = __webpack_require__(60),
        $export = __webpack_require__(0),
        redefine = __webpack_require__(25),
        hide = __webpack_require__(24),
        has = __webpack_require__(21),
        Iterators = __webpack_require__(79),
        $iterCreate = __webpack_require__(154),
        setToStringTag = __webpack_require__(80),
        getPrototypeOf = __webpack_require__(31),
        ITERATOR = __webpack_require__(10)('iterator'),
        BUGGY = !([].keys && 'next' in [].keys()), // Safari has buggy iterators w/o `next`
        FF_ITERATOR = '@@iterator',
        KEYS = 'keys',
        VALUES = 'values';

      var returnThis = function () {
        return this;
      };

      module.exports = function (Base, NAME, Constructor, next, DEFAULT, IS_SET, FORCED) {
        $iterCreate(Constructor, NAME, next);
        var getMethod = function (kind) {
          if (!BUGGY && kind in proto) return proto[kind];
          switch (kind) {
            case KEYS:
              return function keys() {
                return new Constructor(this, kind);
              };
            case VALUES:
              return function values() {
                return new Constructor(this, kind);
              };
          }
          return function entries() {
            return new Constructor(this, kind);
          };
        };
        var TAG = NAME + ' Iterator',
          DEF_VALUES = DEFAULT == VALUES,
          VALUES_BUG = false,
          proto = Base.prototype,
          $native = proto[ITERATOR] || proto[FF_ITERATOR] || (DEFAULT && proto[DEFAULT]),
          $default = $native || getMethod(DEFAULT),
          $entries = DEFAULT ? (!DEF_VALUES ? $default : getMethod('entries')) : undefined,
          $anyNative = NAME == 'Array' ? proto.entries || $native : $native,
          methods,
          key,
          IteratorPrototype;
        // Fix native
        if ($anyNative) {
          IteratorPrototype = getPrototypeOf($anyNative.call(new Base()));
          if (IteratorPrototype !== Object.prototype) {
            // Set @@toStringTag to native iterators
            setToStringTag(IteratorPrototype, TAG, true);
            // fix for some old engines
            if (!LIBRARY && !has(IteratorPrototype, ITERATOR))
              hide(IteratorPrototype, ITERATOR, returnThis);
          }
        }
        // fix Array#{values, @@iterator}.name in V8 / FF
        if (DEF_VALUES && $native && $native.name !== VALUES) {
          VALUES_BUG = true;
          $default = function values() {
            return $native.call(this);
          };
        }
        // Define iterator
        if ((!LIBRARY || FORCED) && (BUGGY || VALUES_BUG || !proto[ITERATOR])) {
          hide(proto, ITERATOR, $default);
        }
        // Plug for library
        Iterators[NAME] = $default;
        Iterators[TAG] = returnThis;
        if (DEFAULT) {
          methods = {
            values: DEF_VALUES ? $default : getMethod(VALUES),
            keys: IS_SET ? $default : getMethod(KEYS),
            entries: $entries,
          };
          if (FORCED)
            for (key in methods) {
              if (!(key in proto)) redefine(proto, key, methods[key]);
            }
          else $export($export.P + $export.F * (BUGGY || VALUES_BUG), NAME, methods);
        }
        return methods;
      };

      /***/
    },
    /* 156 */
    /***/ function (module, exports) {
      // 20.2.2.14 Math.expm1(x)
      var $expm1 = Math.expm1;
      module.exports =
        !$expm1 ||
        // Old FF bug
        $expm1(10) > 22025.465794806719 ||
        $expm1(10) < 22025.4657948067165168 ||
        // Tor Browser bug
        $expm1(-2e-17) != -2e-17
          ? function expm1(x) {
              return (x = +x) == 0 ? x : x > -1e-6 && x < 1e-6 ? x + (x * x) / 2 : Math.exp(x) - 1;
            }
          : $expm1;

      /***/
    },
    /* 157 */
    /***/ function (module, exports) {
      // 20.2.2.28 Math.sign(x)
      module.exports =
        Math.sign ||
        function sign(x) {
          return (x = +x) == 0 || x != x ? x : x < 0 ? -1 : 1;
        };

      /***/
    },
    /* 158 */
    /***/ function (module, exports, __webpack_require__) {
      var global = __webpack_require__(6),
        macrotask = __webpack_require__(166).set,
        Observer = global.MutationObserver || global.WebKitMutationObserver,
        process = global.process,
        Promise = global.Promise,
        isNode = __webpack_require__(34)(process) == 'process';

      module.exports = function () {
        var head, last, notify;

        var flush = function () {
          var parent, fn;
          if (isNode && (parent = process.domain)) parent.exit();
          while (head) {
            fn = head.fn;
            head = head.next;
            try {
              fn();
            } catch (e) {
              if (head) notify();
              else last = undefined;
              throw e;
            }
          }
          last = undefined;
          if (parent) parent.enter();
        };

        // Node.js
        if (isNode) {
          notify = function () {
            process.nextTick(flush);
          };
          // browsers with MutationObserver
        } else if (Observer) {
          var toggle = true,
            node = document.createTextNode('');
          new Observer(flush).observe(node, { characterData: true }); // eslint-disable-line no-new
          notify = function () {
            node.data = toggle = !toggle;
          };
          // environments with maybe non-completely correct, but existent Promise
        } else if (Promise && Promise.resolve) {
          var promise = Promise.resolve();
          notify = function () {
            promise.then(flush);
          };
          // for other environments - macrotask based on:
          // - setImmediate
          // - MessageChannel
          // - window.postMessag
          // - onreadystatechange
          // - setTimeout
        } else {
          notify = function () {
            // strange IE + webpack dev server bug - use .call(global)
            macrotask.call(global, flush);
          };
        }

        return function (fn) {
          var task = { fn: fn, next: undefined };
          if (last) last.next = task;
          if (!head) {
            head = task;
            notify();
          }
          last = task;
        };
      };

      /***/
    },
    /* 159 */
    /***/ function (module, exports, __webpack_require__) {
      // Works with __proto__ only. Old v8 can't work with null proto objects.
      /* eslint-disable no-proto */
      var isObject = __webpack_require__(9),
        anObject = __webpack_require__(5);
      var check = function (O, proto) {
        anObject(O);
        if (!isObject(proto) && proto !== null)
          throw TypeError(proto + ": can't set as prototype!");
      };
      module.exports = {
        set:
          Object.setPrototypeOf ||
          ('__proto__' in {} // eslint-disable-line
            ? (function (test, buggy, set) {
                try {
                  set = __webpack_require__(45)(
                    Function.call,
                    __webpack_require__(30).f(Object.prototype, '__proto__').set,
                    2
                  );
                  set(test, []);
                  buggy = !(test instanceof Array);
                } catch (e) {
                  buggy = true;
                }
                return function setPrototypeOf(O, proto) {
                  check(O, proto);
                  if (buggy) O.__proto__ = proto;
                  else set(O, proto);
                  return O;
                };
              })({}, false)
            : undefined),
        check: check,
      };

      /***/
    },
    /* 160 */
    /***/ function (module, exports, __webpack_require__) {
      var shared = __webpack_require__(115)('keys'),
        uid = __webpack_require__(67);
      module.exports = function (key) {
        return shared[key] || (shared[key] = uid(key));
      };

      /***/
    },
    /* 161 */
    /***/ function (module, exports, __webpack_require__) {
      // 7.3.20 SpeciesConstructor(O, defaultConstructor)
      var anObject = __webpack_require__(5),
        aFunction = __webpack_require__(23),
        SPECIES = __webpack_require__(10)('species');
      module.exports = function (O, D) {
        var C = anObject(O).constructor,
          S;
        return C === undefined || (S = anObject(C)[SPECIES]) == undefined ? D : aFunction(S);
      };

      /***/
    },
    /* 162 */
    /***/ function (module, exports, __webpack_require__) {
      var toInteger = __webpack_require__(52),
        defined = __webpack_require__(35);
      // true  -> String#at
      // false -> String#codePointAt
      module.exports = function (TO_STRING) {
        return function (that, pos) {
          var s = String(defined(that)),
            i = toInteger(pos),
            l = s.length,
            a,
            b;
          if (i < 0 || i >= l) return TO_STRING ? '' : undefined;
          a = s.charCodeAt(i);
          return a < 0xd800 ||
            a > 0xdbff ||
            i + 1 === l ||
            (b = s.charCodeAt(i + 1)) < 0xdc00 ||
            b > 0xdfff
            ? TO_STRING
              ? s.charAt(i)
              : a
            : TO_STRING
            ? s.slice(i, i + 2)
            : ((a - 0xd800) << 10) + (b - 0xdc00) + 0x10000;
        };
      };

      /***/
    },
    /* 163 */
    /***/ function (module, exports, __webpack_require__) {
      // helper for String#{startsWith, endsWith, includes}
      var isRegExp = __webpack_require__(111),
        defined = __webpack_require__(35);

      module.exports = function (that, searchString, NAME) {
        if (isRegExp(searchString)) throw TypeError('String#' + NAME + " doesn't accept regex!");
        return String(defined(that));
      };

      /***/
    },
    /* 164 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';

      var toInteger = __webpack_require__(52),
        defined = __webpack_require__(35);

      module.exports = function repeat(count) {
        var str = String(defined(this)),
          res = '',
          n = toInteger(count);
        if (n < 0 || n == Infinity) throw RangeError("Count can't be negative");
        for (; n > 0; (n >>>= 1) && (str += str)) if (n & 1) res += str;
        return res;
      };

      /***/
    },
    /* 165 */
    /***/ function (module, exports) {
      module.exports =
        '\x09\x0A\x0B\x0C\x0D\x20\xA0\u1680\u180E\u2000\u2001\u2002\u2003' +
        '\u2004\u2005\u2006\u2007\u2008\u2009\u200A\u202F\u205F\u3000\u2028\u2029\uFEFF';

      /***/
    },
    /* 166 */
    /***/ function (module, exports, __webpack_require__) {
      var ctx = __webpack_require__(45),
        invoke = __webpack_require__(110),
        html = __webpack_require__(150),
        cel = __webpack_require__(147),
        global = __webpack_require__(6),
        process = global.process,
        setTask = global.setImmediate,
        clearTask = global.clearImmediate,
        MessageChannel = global.MessageChannel,
        counter = 0,
        queue = {},
        ONREADYSTATECHANGE = 'onreadystatechange',
        defer,
        channel,
        port;
      var run = function () {
        var id = +this;
        if (queue.hasOwnProperty(id)) {
          var fn = queue[id];
          delete queue[id];
          fn();
        }
      };
      var listener = function (event) {
        run.call(event.data);
      };
      // Node.js 0.9+ & IE10+ has setImmediate, otherwise:
      if (!setTask || !clearTask) {
        setTask = function setImmediate(fn) {
          var args = [],
            i = 1;
          while (arguments.length > i) args.push(arguments[i++]);
          queue[++counter] = function () {
            invoke(typeof fn == 'function' ? fn : Function(fn), args);
          };
          defer(counter);
          return counter;
        };
        clearTask = function clearImmediate(id) {
          delete queue[id];
        };
        // Node.js 0.8-
        if (__webpack_require__(34)(process) == 'process') {
          defer = function (id) {
            process.nextTick(ctx(run, id, 1));
          };
          // Browsers with MessageChannel, includes WebWorkers
        } else if (MessageChannel) {
          channel = new MessageChannel();
          port = channel.port2;
          channel.port1.onmessage = listener;
          defer = ctx(port.postMessage, port, 1);
          // Browsers with postMessage, skip WebWorkers
          // IE8 has postMessage, but it's sync & typeof its postMessage is 'object'
        } else if (
          global.addEventListener &&
          typeof postMessage == 'function' &&
          !global.importScripts
        ) {
          defer = function (id) {
            global.postMessage(id + '', '*');
          };
          global.addEventListener('message', listener, false);
          // IE8-
        } else if (ONREADYSTATECHANGE in cel('script')) {
          defer = function (id) {
            html.appendChild(cel('script'))[ONREADYSTATECHANGE] = function () {
              html.removeChild(this);
              run.call(id);
            };
          };
          // Rest old browsers
        } else {
          defer = function (id) {
            setTimeout(ctx(run, id, 1), 0);
          };
        }
      }
      module.exports = {
        set: setTask,
        clear: clearTask,
      };

      /***/
    },
    /* 167 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';

      var global = __webpack_require__(6),
        DESCRIPTORS = __webpack_require__(13),
        LIBRARY = __webpack_require__(60),
        $typed = __webpack_require__(116),
        hide = __webpack_require__(24),
        redefineAll = __webpack_require__(64),
        fails = __webpack_require__(7),
        anInstance = __webpack_require__(59),
        toInteger = __webpack_require__(52),
        toLength = __webpack_require__(17),
        gOPN = __webpack_require__(62).f,
        dP = __webpack_require__(14).f,
        arrayFill = __webpack_require__(145),
        setToStringTag = __webpack_require__(80),
        ARRAY_BUFFER = 'ArrayBuffer',
        DATA_VIEW = 'DataView',
        PROTOTYPE = 'prototype',
        WRONG_LENGTH = 'Wrong length!',
        WRONG_INDEX = 'Wrong index!',
        $ArrayBuffer = global[ARRAY_BUFFER],
        $DataView = global[DATA_VIEW],
        Math = global.Math,
        RangeError = global.RangeError,
        Infinity = global.Infinity,
        BaseBuffer = $ArrayBuffer,
        abs = Math.abs,
        pow = Math.pow,
        floor = Math.floor,
        log = Math.log,
        LN2 = Math.LN2,
        BUFFER = 'buffer',
        BYTE_LENGTH = 'byteLength',
        BYTE_OFFSET = 'byteOffset',
        $BUFFER = DESCRIPTORS ? '_b' : BUFFER,
        $LENGTH = DESCRIPTORS ? '_l' : BYTE_LENGTH,
        $OFFSET = DESCRIPTORS ? '_o' : BYTE_OFFSET;

      // IEEE754 conversions based on https://github.com/feross/ieee754
      var packIEEE754 = function (value, mLen, nBytes) {
        var buffer = Array(nBytes),
          eLen = nBytes * 8 - mLen - 1,
          eMax = (1 << eLen) - 1,
          eBias = eMax >> 1,
          rt = mLen === 23 ? pow(2, -24) - pow(2, -77) : 0,
          i = 0,
          s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0,
          e,
          m,
          c;
        value = abs(value);
        if (value != value || value === Infinity) {
          m = value != value ? 1 : 0;
          e = eMax;
        } else {
          e = floor(log(value) / LN2);
          if (value * (c = pow(2, -e)) < 1) {
            e--;
            c *= 2;
          }
          if (e + eBias >= 1) {
            value += rt / c;
          } else {
            value += rt * pow(2, 1 - eBias);
          }
          if (value * c >= 2) {
            e++;
            c /= 2;
          }
          if (e + eBias >= eMax) {
            m = 0;
            e = eMax;
          } else if (e + eBias >= 1) {
            m = (value * c - 1) * pow(2, mLen);
            e = e + eBias;
          } else {
            m = value * pow(2, eBias - 1) * pow(2, mLen);
            e = 0;
          }
        }
        for (; mLen >= 8; buffer[i++] = m & 255, m /= 256, mLen -= 8);
        e = (e << mLen) | m;
        eLen += mLen;
        for (; eLen > 0; buffer[i++] = e & 255, e /= 256, eLen -= 8);
        buffer[--i] |= s * 128;
        return buffer;
      };
      var unpackIEEE754 = function (buffer, mLen, nBytes) {
        var eLen = nBytes * 8 - mLen - 1,
          eMax = (1 << eLen) - 1,
          eBias = eMax >> 1,
          nBits = eLen - 7,
          i = nBytes - 1,
          s = buffer[i--],
          e = s & 127,
          m;
        s >>= 7;
        for (; nBits > 0; e = e * 256 + buffer[i], i--, nBits -= 8);
        m = e & ((1 << -nBits) - 1);
        e >>= -nBits;
        nBits += mLen;
        for (; nBits > 0; m = m * 256 + buffer[i], i--, nBits -= 8);
        if (e === 0) {
          e = 1 - eBias;
        } else if (e === eMax) {
          return m ? NaN : s ? -Infinity : Infinity;
        } else {
          m = m + pow(2, mLen);
          e = e - eBias;
        }
        return (s ? -1 : 1) * m * pow(2, e - mLen);
      };

      var unpackI32 = function (bytes) {
        return (bytes[3] << 24) | (bytes[2] << 16) | (bytes[1] << 8) | bytes[0];
      };
      var packI8 = function (it) {
        return [it & 0xff];
      };
      var packI16 = function (it) {
        return [it & 0xff, (it >> 8) & 0xff];
      };
      var packI32 = function (it) {
        return [it & 0xff, (it >> 8) & 0xff, (it >> 16) & 0xff, (it >> 24) & 0xff];
      };
      var packF64 = function (it) {
        return packIEEE754(it, 52, 8);
      };
      var packF32 = function (it) {
        return packIEEE754(it, 23, 4);
      };

      var addGetter = function (C, key, internal) {
        dP(C[PROTOTYPE], key, {
          get: function () {
            return this[internal];
          },
        });
      };

      var get = function (view, bytes, index, isLittleEndian) {
        var numIndex = +index,
          intIndex = toInteger(numIndex);
        if (numIndex != intIndex || intIndex < 0 || intIndex + bytes > view[$LENGTH])
          throw RangeError(WRONG_INDEX);
        var store = view[$BUFFER]._b,
          start = intIndex + view[$OFFSET],
          pack = store.slice(start, start + bytes);
        return isLittleEndian ? pack : pack.reverse();
      };
      var set = function (view, bytes, index, conversion, value, isLittleEndian) {
        var numIndex = +index,
          intIndex = toInteger(numIndex);
        if (numIndex != intIndex || intIndex < 0 || intIndex + bytes > view[$LENGTH])
          throw RangeError(WRONG_INDEX);
        var store = view[$BUFFER]._b,
          start = intIndex + view[$OFFSET],
          pack = conversion(+value);
        for (var i = 0; i < bytes; i++) store[start + i] = pack[isLittleEndian ? i : bytes - i - 1];
      };

      var validateArrayBufferArguments = function (that, length) {
        anInstance(that, $ArrayBuffer, ARRAY_BUFFER);
        var numberLength = +length,
          byteLength = toLength(numberLength);
        if (numberLength != byteLength) throw RangeError(WRONG_LENGTH);
        return byteLength;
      };

      if (!$typed.ABV) {
        $ArrayBuffer = function ArrayBuffer(length) {
          var byteLength = validateArrayBufferArguments(this, length);
          this._b = arrayFill.call(Array(byteLength), 0);
          this[$LENGTH] = byteLength;
        };

        $DataView = function DataView(buffer, byteOffset, byteLength) {
          anInstance(this, $DataView, DATA_VIEW);
          anInstance(buffer, $ArrayBuffer, DATA_VIEW);
          var bufferLength = buffer[$LENGTH],
            offset = toInteger(byteOffset);
          if (offset < 0 || offset > bufferLength) throw RangeError('Wrong offset!');
          byteLength = byteLength === undefined ? bufferLength - offset : toLength(byteLength);
          if (offset + byteLength > bufferLength) throw RangeError(WRONG_LENGTH);
          this[$BUFFER] = buffer;
          this[$OFFSET] = offset;
          this[$LENGTH] = byteLength;
        };

        if (DESCRIPTORS) {
          addGetter($ArrayBuffer, BYTE_LENGTH, '_l');
          addGetter($DataView, BUFFER, '_b');
          addGetter($DataView, BYTE_LENGTH, '_l');
          addGetter($DataView, BYTE_OFFSET, '_o');
        }

        redefineAll($DataView[PROTOTYPE], {
          getInt8: function getInt8(byteOffset) {
            return (get(this, 1, byteOffset)[0] << 24) >> 24;
          },
          getUint8: function getUint8(byteOffset) {
            return get(this, 1, byteOffset)[0];
          },
          getInt16: function getInt16(byteOffset /*, littleEndian */) {
            var bytes = get(this, 2, byteOffset, arguments[1]);
            return (((bytes[1] << 8) | bytes[0]) << 16) >> 16;
          },
          getUint16: function getUint16(byteOffset /*, littleEndian */) {
            var bytes = get(this, 2, byteOffset, arguments[1]);
            return (bytes[1] << 8) | bytes[0];
          },
          getInt32: function getInt32(byteOffset /*, littleEndian */) {
            return unpackI32(get(this, 4, byteOffset, arguments[1]));
          },
          getUint32: function getUint32(byteOffset /*, littleEndian */) {
            return unpackI32(get(this, 4, byteOffset, arguments[1])) >>> 0;
          },
          getFloat32: function getFloat32(byteOffset /*, littleEndian */) {
            return unpackIEEE754(get(this, 4, byteOffset, arguments[1]), 23, 4);
          },
          getFloat64: function getFloat64(byteOffset /*, littleEndian */) {
            return unpackIEEE754(get(this, 8, byteOffset, arguments[1]), 52, 8);
          },
          setInt8: function setInt8(byteOffset, value) {
            set(this, 1, byteOffset, packI8, value);
          },
          setUint8: function setUint8(byteOffset, value) {
            set(this, 1, byteOffset, packI8, value);
          },
          setInt16: function setInt16(byteOffset, value /*, littleEndian */) {
            set(this, 2, byteOffset, packI16, value, arguments[2]);
          },
          setUint16: function setUint16(byteOffset, value /*, littleEndian */) {
            set(this, 2, byteOffset, packI16, value, arguments[2]);
          },
          setInt32: function setInt32(byteOffset, value /*, littleEndian */) {
            set(this, 4, byteOffset, packI32, value, arguments[2]);
          },
          setUint32: function setUint32(byteOffset, value /*, littleEndian */) {
            set(this, 4, byteOffset, packI32, value, arguments[2]);
          },
          setFloat32: function setFloat32(byteOffset, value /*, littleEndian */) {
            set(this, 4, byteOffset, packF32, value, arguments[2]);
          },
          setFloat64: function setFloat64(byteOffset, value /*, littleEndian */) {
            set(this, 8, byteOffset, packF64, value, arguments[2]);
          },
        });
      } else {
        if (
          !fails(function () {
            new $ArrayBuffer(); // eslint-disable-line no-new
          }) ||
          !fails(function () {
            new $ArrayBuffer(0.5); // eslint-disable-line no-new
          })
        ) {
          $ArrayBuffer = function ArrayBuffer(length) {
            return new BaseBuffer(validateArrayBufferArguments(this, length));
          };
          var ArrayBufferProto = ($ArrayBuffer[PROTOTYPE] = BaseBuffer[PROTOTYPE]);
          for (var keys = gOPN(BaseBuffer), j = 0, key; keys.length > j; ) {
            if (!((key = keys[j++]) in $ArrayBuffer)) hide($ArrayBuffer, key, BaseBuffer[key]);
          }
          if (!LIBRARY) ArrayBufferProto.constructor = $ArrayBuffer;
        }
        // iOS Safari 7.x bug
        var view = new $DataView(new $ArrayBuffer(2)),
          $setInt8 = $DataView[PROTOTYPE].setInt8;
        view.setInt8(0, 2147483648);
        view.setInt8(1, 2147483649);
        if (view.getInt8(0) || !view.getInt8(1))
          redefineAll(
            $DataView[PROTOTYPE],
            {
              setInt8: function setInt8(byteOffset, value) {
                $setInt8.call(this, byteOffset, (value << 24) >> 24);
              },
              setUint8: function setUint8(byteOffset, value) {
                $setInt8.call(this, byteOffset, (value << 24) >> 24);
              },
            },
            true
          );
      }
      setToStringTag($ArrayBuffer, ARRAY_BUFFER);
      setToStringTag($DataView, DATA_VIEW);
      hide($DataView[PROTOTYPE], $typed.VIEW, true);
      exports[ARRAY_BUFFER] = $ArrayBuffer;
      exports[DATA_VIEW] = $DataView;

      /***/
    },
    /* 168 */
    /***/ function (module, exports, __webpack_require__) {
      var global = __webpack_require__(6),
        core = __webpack_require__(44),
        LIBRARY = __webpack_require__(60),
        wksExt = __webpack_require__(252),
        defineProperty = __webpack_require__(14).f;
      module.exports = function (name) {
        var $Symbol = core.Symbol || (core.Symbol = LIBRARY ? {} : global.Symbol || {});
        if (name.charAt(0) != '_' && !(name in $Symbol))
          defineProperty($Symbol, name, { value: wksExt.f(name) });
      };

      /***/
    },
    /* 169 */
    /***/ function (module, exports, __webpack_require__) {
      var classof = __webpack_require__(88),
        ITERATOR = __webpack_require__(10)('iterator'),
        Iterators = __webpack_require__(79);
      module.exports = __webpack_require__(44).getIteratorMethod = function (it) {
        if (it != undefined) return it[ITERATOR] || it['@@iterator'] || Iterators[classof(it)];
      };

      /***/
    },
    /* 170 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';

      var addToUnscopables = __webpack_require__(77),
        step = __webpack_require__(240),
        Iterators = __webpack_require__(79),
        toIObject = __webpack_require__(27);

      // 22.1.3.4 Array.prototype.entries()
      // 22.1.3.13 Array.prototype.keys()
      // 22.1.3.29 Array.prototype.values()
      // 22.1.3.30 Array.prototype[@@iterator]()
      module.exports = __webpack_require__(155)(
        Array,
        'Array',
        function (iterated, kind) {
          this._t = toIObject(iterated); // target
          this._i = 0; // next index
          this._k = kind; // kind
          // 22.1.5.2.1 %ArrayIteratorPrototype%.next()
        },
        function () {
          var O = this._t,
            kind = this._k,
            index = this._i++;
          if (!O || index >= O.length) {
            this._t = undefined;
            return step(1);
          }
          if (kind == 'keys') return step(0, index);
          if (kind == 'values') return step(0, O[index]);
          return step(0, [index, O[index]]);
        },
        'values'
      );

      // argumentsList[@@iterator] is %ArrayProto_values% (9.4.4.6, 9.4.4.7)
      Iterators.Arguments = Iterators.Array;

      addToUnscopables('keys');
      addToUnscopables('values');
      addToUnscopables('entries');

      /***/
    },
    /* 171 */
    /***/ function (module, exports) {
      module.exports = {
        Aacute: 'Á',
        aacute: 'á',
        Abreve: 'Ă',
        abreve: 'ă',
        ac: '∾',
        acd: '∿',
        acE: '∾̳',
        Acirc: 'Â',
        acirc: 'â',
        acute: '´',
        Acy: 'А',
        acy: 'а',
        AElig: 'Æ',
        aelig: 'æ',
        af: '⁡',
        Afr: '𝔄',
        afr: '𝔞',
        Agrave: 'À',
        agrave: 'à',
        alefsym: 'ℵ',
        aleph: 'ℵ',
        Alpha: 'Α',
        alpha: 'α',
        Amacr: 'Ā',
        amacr: 'ā',
        amalg: '⨿',
        amp: '&',
        AMP: '&',
        andand: '⩕',
        And: '⩓',
        and: '∧',
        andd: '⩜',
        andslope: '⩘',
        andv: '⩚',
        ang: '∠',
        ange: '⦤',
        angle: '∠',
        angmsdaa: '⦨',
        angmsdab: '⦩',
        angmsdac: '⦪',
        angmsdad: '⦫',
        angmsdae: '⦬',
        angmsdaf: '⦭',
        angmsdag: '⦮',
        angmsdah: '⦯',
        angmsd: '∡',
        angrt: '∟',
        angrtvb: '⊾',
        angrtvbd: '⦝',
        angsph: '∢',
        angst: 'Å',
        angzarr: '⍼',
        Aogon: 'Ą',
        aogon: 'ą',
        Aopf: '𝔸',
        aopf: '𝕒',
        apacir: '⩯',
        ap: '≈',
        apE: '⩰',
        ape: '≊',
        apid: '≋',
        apos: "'",
        ApplyFunction: '⁡',
        approx: '≈',
        approxeq: '≊',
        Aring: 'Å',
        aring: 'å',
        Ascr: '𝒜',
        ascr: '𝒶',
        Assign: '≔',
        ast: '*',
        asymp: '≈',
        asympeq: '≍',
        Atilde: 'Ã',
        atilde: 'ã',
        Auml: 'Ä',
        auml: 'ä',
        awconint: '∳',
        awint: '⨑',
        backcong: '≌',
        backepsilon: '϶',
        backprime: '‵',
        backsim: '∽',
        backsimeq: '⋍',
        Backslash: '∖',
        Barv: '⫧',
        barvee: '⊽',
        barwed: '⌅',
        Barwed: '⌆',
        barwedge: '⌅',
        bbrk: '⎵',
        bbrktbrk: '⎶',
        bcong: '≌',
        Bcy: 'Б',
        bcy: 'б',
        bdquo: '„',
        becaus: '∵',
        because: '∵',
        Because: '∵',
        bemptyv: '⦰',
        bepsi: '϶',
        bernou: 'ℬ',
        Bernoullis: 'ℬ',
        Beta: 'Β',
        beta: 'β',
        beth: 'ℶ',
        between: '≬',
        Bfr: '𝔅',
        bfr: '𝔟',
        bigcap: '⋂',
        bigcirc: '◯',
        bigcup: '⋃',
        bigodot: '⨀',
        bigoplus: '⨁',
        bigotimes: '⨂',
        bigsqcup: '⨆',
        bigstar: '★',
        bigtriangledown: '▽',
        bigtriangleup: '△',
        biguplus: '⨄',
        bigvee: '⋁',
        bigwedge: '⋀',
        bkarow: '⤍',
        blacklozenge: '⧫',
        blacksquare: '▪',
        blacktriangle: '▴',
        blacktriangledown: '▾',
        blacktriangleleft: '◂',
        blacktriangleright: '▸',
        blank: '␣',
        blk12: '▒',
        blk14: '░',
        blk34: '▓',
        block: '█',
        bne: '=⃥',
        bnequiv: '≡⃥',
        bNot: '⫭',
        bnot: '⌐',
        Bopf: '𝔹',
        bopf: '𝕓',
        bot: '⊥',
        bottom: '⊥',
        bowtie: '⋈',
        boxbox: '⧉',
        boxdl: '┐',
        boxdL: '╕',
        boxDl: '╖',
        boxDL: '╗',
        boxdr: '┌',
        boxdR: '╒',
        boxDr: '╓',
        boxDR: '╔',
        boxh: '─',
        boxH: '═',
        boxhd: '┬',
        boxHd: '╤',
        boxhD: '╥',
        boxHD: '╦',
        boxhu: '┴',
        boxHu: '╧',
        boxhU: '╨',
        boxHU: '╩',
        boxminus: '⊟',
        boxplus: '⊞',
        boxtimes: '⊠',
        boxul: '┘',
        boxuL: '╛',
        boxUl: '╜',
        boxUL: '╝',
        boxur: '└',
        boxuR: '╘',
        boxUr: '╙',
        boxUR: '╚',
        boxv: '│',
        boxV: '║',
        boxvh: '┼',
        boxvH: '╪',
        boxVh: '╫',
        boxVH: '╬',
        boxvl: '┤',
        boxvL: '╡',
        boxVl: '╢',
        boxVL: '╣',
        boxvr: '├',
        boxvR: '╞',
        boxVr: '╟',
        boxVR: '╠',
        bprime: '‵',
        breve: '˘',
        Breve: '˘',
        brvbar: '¦',
        bscr: '𝒷',
        Bscr: 'ℬ',
        bsemi: '⁏',
        bsim: '∽',
        bsime: '⋍',
        bsolb: '⧅',
        bsol: '\\',
        bsolhsub: '⟈',
        bull: '•',
        bullet: '•',
        bump: '≎',
        bumpE: '⪮',
        bumpe: '≏',
        Bumpeq: '≎',
        bumpeq: '≏',
        Cacute: 'Ć',
        cacute: 'ć',
        capand: '⩄',
        capbrcup: '⩉',
        capcap: '⩋',
        cap: '∩',
        Cap: '⋒',
        capcup: '⩇',
        capdot: '⩀',
        CapitalDifferentialD: 'ⅅ',
        caps: '∩︀',
        caret: '⁁',
        caron: 'ˇ',
        Cayleys: 'ℭ',
        ccaps: '⩍',
        Ccaron: 'Č',
        ccaron: 'č',
        Ccedil: 'Ç',
        ccedil: 'ç',
        Ccirc: 'Ĉ',
        ccirc: 'ĉ',
        Cconint: '∰',
        ccups: '⩌',
        ccupssm: '⩐',
        Cdot: 'Ċ',
        cdot: 'ċ',
        cedil: '¸',
        Cedilla: '¸',
        cemptyv: '⦲',
        cent: '¢',
        centerdot: '·',
        CenterDot: '·',
        cfr: '𝔠',
        Cfr: 'ℭ',
        CHcy: 'Ч',
        chcy: 'ч',
        check: '✓',
        checkmark: '✓',
        Chi: 'Χ',
        chi: 'χ',
        circ: 'ˆ',
        circeq: '≗',
        circlearrowleft: '↺',
        circlearrowright: '↻',
        circledast: '⊛',
        circledcirc: '⊚',
        circleddash: '⊝',
        CircleDot: '⊙',
        circledR: '®',
        circledS: 'Ⓢ',
        CircleMinus: '⊖',
        CirclePlus: '⊕',
        CircleTimes: '⊗',
        cir: '○',
        cirE: '⧃',
        cire: '≗',
        cirfnint: '⨐',
        cirmid: '⫯',
        cirscir: '⧂',
        ClockwiseContourIntegral: '∲',
        CloseCurlyDoubleQuote: '”',
        CloseCurlyQuote: '’',
        clubs: '♣',
        clubsuit: '♣',
        colon: ':',
        Colon: '∷',
        Colone: '⩴',
        colone: '≔',
        coloneq: '≔',
        comma: ',',
        commat: '@',
        comp: '∁',
        compfn: '∘',
        complement: '∁',
        complexes: 'ℂ',
        cong: '≅',
        congdot: '⩭',
        Congruent: '≡',
        conint: '∮',
        Conint: '∯',
        ContourIntegral: '∮',
        copf: '𝕔',
        Copf: 'ℂ',
        coprod: '∐',
        Coproduct: '∐',
        copy: '©',
        COPY: '©',
        copysr: '℗',
        CounterClockwiseContourIntegral: '∳',
        crarr: '↵',
        cross: '✗',
        Cross: '⨯',
        Cscr: '𝒞',
        cscr: '𝒸',
        csub: '⫏',
        csube: '⫑',
        csup: '⫐',
        csupe: '⫒',
        ctdot: '⋯',
        cudarrl: '⤸',
        cudarrr: '⤵',
        cuepr: '⋞',
        cuesc: '⋟',
        cularr: '↶',
        cularrp: '⤽',
        cupbrcap: '⩈',
        cupcap: '⩆',
        CupCap: '≍',
        cup: '∪',
        Cup: '⋓',
        cupcup: '⩊',
        cupdot: '⊍',
        cupor: '⩅',
        cups: '∪︀',
        curarr: '↷',
        curarrm: '⤼',
        curlyeqprec: '⋞',
        curlyeqsucc: '⋟',
        curlyvee: '⋎',
        curlywedge: '⋏',
        curren: '¤',
        curvearrowleft: '↶',
        curvearrowright: '↷',
        cuvee: '⋎',
        cuwed: '⋏',
        cwconint: '∲',
        cwint: '∱',
        cylcty: '⌭',
        dagger: '†',
        Dagger: '‡',
        daleth: 'ℸ',
        darr: '↓',
        Darr: '↡',
        dArr: '⇓',
        dash: '‐',
        Dashv: '⫤',
        dashv: '⊣',
        dbkarow: '⤏',
        dblac: '˝',
        Dcaron: 'Ď',
        dcaron: 'ď',
        Dcy: 'Д',
        dcy: 'д',
        ddagger: '‡',
        ddarr: '⇊',
        DD: 'ⅅ',
        dd: 'ⅆ',
        DDotrahd: '⤑',
        ddotseq: '⩷',
        deg: '°',
        Del: '∇',
        Delta: 'Δ',
        delta: 'δ',
        demptyv: '⦱',
        dfisht: '⥿',
        Dfr: '𝔇',
        dfr: '𝔡',
        dHar: '⥥',
        dharl: '⇃',
        dharr: '⇂',
        DiacriticalAcute: '´',
        DiacriticalDot: '˙',
        DiacriticalDoubleAcute: '˝',
        DiacriticalGrave: '`',
        DiacriticalTilde: '˜',
        diam: '⋄',
        diamond: '⋄',
        Diamond: '⋄',
        diamondsuit: '♦',
        diams: '♦',
        die: '¨',
        DifferentialD: 'ⅆ',
        digamma: 'ϝ',
        disin: '⋲',
        div: '÷',
        divide: '÷',
        divideontimes: '⋇',
        divonx: '⋇',
        DJcy: 'Ђ',
        djcy: 'ђ',
        dlcorn: '⌞',
        dlcrop: '⌍',
        dollar: '$',
        Dopf: '𝔻',
        dopf: '𝕕',
        Dot: '¨',
        dot: '˙',
        DotDot: '⃜',
        doteq: '≐',
        doteqdot: '≑',
        DotEqual: '≐',
        dotminus: '∸',
        dotplus: '∔',
        dotsquare: '⊡',
        doublebarwedge: '⌆',
        DoubleContourIntegral: '∯',
        DoubleDot: '¨',
        DoubleDownArrow: '⇓',
        DoubleLeftArrow: '⇐',
        DoubleLeftRightArrow: '⇔',
        DoubleLeftTee: '⫤',
        DoubleLongLeftArrow: '⟸',
        DoubleLongLeftRightArrow: '⟺',
        DoubleLongRightArrow: '⟹',
        DoubleRightArrow: '⇒',
        DoubleRightTee: '⊨',
        DoubleUpArrow: '⇑',
        DoubleUpDownArrow: '⇕',
        DoubleVerticalBar: '∥',
        DownArrowBar: '⤓',
        downarrow: '↓',
        DownArrow: '↓',
        Downarrow: '⇓',
        DownArrowUpArrow: '⇵',
        DownBreve: '̑',
        downdownarrows: '⇊',
        downharpoonleft: '⇃',
        downharpoonright: '⇂',
        DownLeftRightVector: '⥐',
        DownLeftTeeVector: '⥞',
        DownLeftVectorBar: '⥖',
        DownLeftVector: '↽',
        DownRightTeeVector: '⥟',
        DownRightVectorBar: '⥗',
        DownRightVector: '⇁',
        DownTeeArrow: '↧',
        DownTee: '⊤',
        drbkarow: '⤐',
        drcorn: '⌟',
        drcrop: '⌌',
        Dscr: '𝒟',
        dscr: '𝒹',
        DScy: 'Ѕ',
        dscy: 'ѕ',
        dsol: '⧶',
        Dstrok: 'Đ',
        dstrok: 'đ',
        dtdot: '⋱',
        dtri: '▿',
        dtrif: '▾',
        duarr: '⇵',
        duhar: '⥯',
        dwangle: '⦦',
        DZcy: 'Џ',
        dzcy: 'џ',
        dzigrarr: '⟿',
        Eacute: 'É',
        eacute: 'é',
        easter: '⩮',
        Ecaron: 'Ě',
        ecaron: 'ě',
        Ecirc: 'Ê',
        ecirc: 'ê',
        ecir: '≖',
        ecolon: '≕',
        Ecy: 'Э',
        ecy: 'э',
        eDDot: '⩷',
        Edot: 'Ė',
        edot: 'ė',
        eDot: '≑',
        ee: 'ⅇ',
        efDot: '≒',
        Efr: '𝔈',
        efr: '𝔢',
        eg: '⪚',
        Egrave: 'È',
        egrave: 'è',
        egs: '⪖',
        egsdot: '⪘',
        el: '⪙',
        Element: '∈',
        elinters: '⏧',
        ell: 'ℓ',
        els: '⪕',
        elsdot: '⪗',
        Emacr: 'Ē',
        emacr: 'ē',
        empty: '∅',
        emptyset: '∅',
        EmptySmallSquare: '◻',
        emptyv: '∅',
        EmptyVerySmallSquare: '▫',
        emsp13: ' ',
        emsp14: ' ',
        emsp: ' ',
        ENG: 'Ŋ',
        eng: 'ŋ',
        ensp: ' ',
        Eogon: 'Ę',
        eogon: 'ę',
        Eopf: '𝔼',
        eopf: '𝕖',
        epar: '⋕',
        eparsl: '⧣',
        eplus: '⩱',
        epsi: 'ε',
        Epsilon: 'Ε',
        epsilon: 'ε',
        epsiv: 'ϵ',
        eqcirc: '≖',
        eqcolon: '≕',
        eqsim: '≂',
        eqslantgtr: '⪖',
        eqslantless: '⪕',
        Equal: '⩵',
        equals: '=',
        EqualTilde: '≂',
        equest: '≟',
        Equilibrium: '⇌',
        equiv: '≡',
        equivDD: '⩸',
        eqvparsl: '⧥',
        erarr: '⥱',
        erDot: '≓',
        escr: 'ℯ',
        Escr: 'ℰ',
        esdot: '≐',
        Esim: '⩳',
        esim: '≂',
        Eta: 'Η',
        eta: 'η',
        ETH: 'Ð',
        eth: 'ð',
        Euml: 'Ë',
        euml: 'ë',
        euro: '€',
        excl: '!',
        exist: '∃',
        Exists: '∃',
        expectation: 'ℰ',
        exponentiale: 'ⅇ',
        ExponentialE: 'ⅇ',
        fallingdotseq: '≒',
        Fcy: 'Ф',
        fcy: 'ф',
        female: '♀',
        ffilig: 'ﬃ',
        fflig: 'ﬀ',
        ffllig: 'ﬄ',
        Ffr: '𝔉',
        ffr: '𝔣',
        filig: 'ﬁ',
        FilledSmallSquare: '◼',
        FilledVerySmallSquare: '▪',
        fjlig: 'fj',
        flat: '♭',
        fllig: 'ﬂ',
        fltns: '▱',
        fnof: 'ƒ',
        Fopf: '𝔽',
        fopf: '𝕗',
        forall: '∀',
        ForAll: '∀',
        fork: '⋔',
        forkv: '⫙',
        Fouriertrf: 'ℱ',
        fpartint: '⨍',
        frac12: '½',
        frac13: '⅓',
        frac14: '¼',
        frac15: '⅕',
        frac16: '⅙',
        frac18: '⅛',
        frac23: '⅔',
        frac25: '⅖',
        frac34: '¾',
        frac35: '⅗',
        frac38: '⅜',
        frac45: '⅘',
        frac56: '⅚',
        frac58: '⅝',
        frac78: '⅞',
        frasl: '⁄',
        frown: '⌢',
        fscr: '𝒻',
        Fscr: 'ℱ',
        gacute: 'ǵ',
        Gamma: 'Γ',
        gamma: 'γ',
        Gammad: 'Ϝ',
        gammad: 'ϝ',
        gap: '⪆',
        Gbreve: 'Ğ',
        gbreve: 'ğ',
        Gcedil: 'Ģ',
        Gcirc: 'Ĝ',
        gcirc: 'ĝ',
        Gcy: 'Г',
        gcy: 'г',
        Gdot: 'Ġ',
        gdot: 'ġ',
        ge: '≥',
        gE: '≧',
        gEl: '⪌',
        gel: '⋛',
        geq: '≥',
        geqq: '≧',
        geqslant: '⩾',
        gescc: '⪩',
        ges: '⩾',
        gesdot: '⪀',
        gesdoto: '⪂',
        gesdotol: '⪄',
        gesl: '⋛︀',
        gesles: '⪔',
        Gfr: '𝔊',
        gfr: '𝔤',
        gg: '≫',
        Gg: '⋙',
        ggg: '⋙',
        gimel: 'ℷ',
        GJcy: 'Ѓ',
        gjcy: 'ѓ',
        gla: '⪥',
        gl: '≷',
        glE: '⪒',
        glj: '⪤',
        gnap: '⪊',
        gnapprox: '⪊',
        gne: '⪈',
        gnE: '≩',
        gneq: '⪈',
        gneqq: '≩',
        gnsim: '⋧',
        Gopf: '𝔾',
        gopf: '𝕘',
        grave: '`',
        GreaterEqual: '≥',
        GreaterEqualLess: '⋛',
        GreaterFullEqual: '≧',
        GreaterGreater: '⪢',
        GreaterLess: '≷',
        GreaterSlantEqual: '⩾',
        GreaterTilde: '≳',
        Gscr: '𝒢',
        gscr: 'ℊ',
        gsim: '≳',
        gsime: '⪎',
        gsiml: '⪐',
        gtcc: '⪧',
        gtcir: '⩺',
        gt: '>',
        GT: '>',
        Gt: '≫',
        gtdot: '⋗',
        gtlPar: '⦕',
        gtquest: '⩼',
        gtrapprox: '⪆',
        gtrarr: '⥸',
        gtrdot: '⋗',
        gtreqless: '⋛',
        gtreqqless: '⪌',
        gtrless: '≷',
        gtrsim: '≳',
        gvertneqq: '≩︀',
        gvnE: '≩︀',
        Hacek: 'ˇ',
        hairsp: ' ',
        half: '½',
        hamilt: 'ℋ',
        HARDcy: 'Ъ',
        hardcy: 'ъ',
        harrcir: '⥈',
        harr: '↔',
        hArr: '⇔',
        harrw: '↭',
        Hat: '^',
        hbar: 'ℏ',
        Hcirc: 'Ĥ',
        hcirc: 'ĥ',
        hearts: '♥',
        heartsuit: '♥',
        hellip: '…',
        hercon: '⊹',
        hfr: '𝔥',
        Hfr: 'ℌ',
        HilbertSpace: 'ℋ',
        hksearow: '⤥',
        hkswarow: '⤦',
        hoarr: '⇿',
        homtht: '∻',
        hookleftarrow: '↩',
        hookrightarrow: '↪',
        hopf: '𝕙',
        Hopf: 'ℍ',
        horbar: '―',
        HorizontalLine: '─',
        hscr: '𝒽',
        Hscr: 'ℋ',
        hslash: 'ℏ',
        Hstrok: 'Ħ',
        hstrok: 'ħ',
        HumpDownHump: '≎',
        HumpEqual: '≏',
        hybull: '⁃',
        hyphen: '‐',
        Iacute: 'Í',
        iacute: 'í',
        ic: '⁣',
        Icirc: 'Î',
        icirc: 'î',
        Icy: 'И',
        icy: 'и',
        Idot: 'İ',
        IEcy: 'Е',
        iecy: 'е',
        iexcl: '¡',
        iff: '⇔',
        ifr: '𝔦',
        Ifr: 'ℑ',
        Igrave: 'Ì',
        igrave: 'ì',
        ii: 'ⅈ',
        iiiint: '⨌',
        iiint: '∭',
        iinfin: '⧜',
        iiota: '℩',
        IJlig: 'Ĳ',
        ijlig: 'ĳ',
        Imacr: 'Ī',
        imacr: 'ī',
        image: 'ℑ',
        ImaginaryI: 'ⅈ',
        imagline: 'ℐ',
        imagpart: 'ℑ',
        imath: 'ı',
        Im: 'ℑ',
        imof: '⊷',
        imped: 'Ƶ',
        Implies: '⇒',
        incare: '℅',
        in: '∈',
        infin: '∞',
        infintie: '⧝',
        inodot: 'ı',
        intcal: '⊺',
        int: '∫',
        Int: '∬',
        integers: 'ℤ',
        Integral: '∫',
        intercal: '⊺',
        Intersection: '⋂',
        intlarhk: '⨗',
        intprod: '⨼',
        InvisibleComma: '⁣',
        InvisibleTimes: '⁢',
        IOcy: 'Ё',
        iocy: 'ё',
        Iogon: 'Į',
        iogon: 'į',
        Iopf: '𝕀',
        iopf: '𝕚',
        Iota: 'Ι',
        iota: 'ι',
        iprod: '⨼',
        iquest: '¿',
        iscr: '𝒾',
        Iscr: 'ℐ',
        isin: '∈',
        isindot: '⋵',
        isinE: '⋹',
        isins: '⋴',
        isinsv: '⋳',
        isinv: '∈',
        it: '⁢',
        Itilde: 'Ĩ',
        itilde: 'ĩ',
        Iukcy: 'І',
        iukcy: 'і',
        Iuml: 'Ï',
        iuml: 'ï',
        Jcirc: 'Ĵ',
        jcirc: 'ĵ',
        Jcy: 'Й',
        jcy: 'й',
        Jfr: '𝔍',
        jfr: '𝔧',
        jmath: 'ȷ',
        Jopf: '𝕁',
        jopf: '𝕛',
        Jscr: '𝒥',
        jscr: '𝒿',
        Jsercy: 'Ј',
        jsercy: 'ј',
        Jukcy: 'Є',
        jukcy: 'є',
        Kappa: 'Κ',
        kappa: 'κ',
        kappav: 'ϰ',
        Kcedil: 'Ķ',
        kcedil: 'ķ',
        Kcy: 'К',
        kcy: 'к',
        Kfr: '𝔎',
        kfr: '𝔨',
        kgreen: 'ĸ',
        KHcy: 'Х',
        khcy: 'х',
        KJcy: 'Ќ',
        kjcy: 'ќ',
        Kopf: '𝕂',
        kopf: '𝕜',
        Kscr: '𝒦',
        kscr: '𝓀',
        lAarr: '⇚',
        Lacute: 'Ĺ',
        lacute: 'ĺ',
        laemptyv: '⦴',
        lagran: 'ℒ',
        Lambda: 'Λ',
        lambda: 'λ',
        lang: '⟨',
        Lang: '⟪',
        langd: '⦑',
        langle: '⟨',
        lap: '⪅',
        Laplacetrf: 'ℒ',
        laquo: '«',
        larrb: '⇤',
        larrbfs: '⤟',
        larr: '←',
        Larr: '↞',
        lArr: '⇐',
        larrfs: '⤝',
        larrhk: '↩',
        larrlp: '↫',
        larrpl: '⤹',
        larrsim: '⥳',
        larrtl: '↢',
        latail: '⤙',
        lAtail: '⤛',
        lat: '⪫',
        late: '⪭',
        lates: '⪭︀',
        lbarr: '⤌',
        lBarr: '⤎',
        lbbrk: '❲',
        lbrace: '{',
        lbrack: '[',
        lbrke: '⦋',
        lbrksld: '⦏',
        lbrkslu: '⦍',
        Lcaron: 'Ľ',
        lcaron: 'ľ',
        Lcedil: 'Ļ',
        lcedil: 'ļ',
        lceil: '⌈',
        lcub: '{',
        Lcy: 'Л',
        lcy: 'л',
        ldca: '⤶',
        ldquo: '“',
        ldquor: '„',
        ldrdhar: '⥧',
        ldrushar: '⥋',
        ldsh: '↲',
        le: '≤',
        lE: '≦',
        LeftAngleBracket: '⟨',
        LeftArrowBar: '⇤',
        leftarrow: '←',
        LeftArrow: '←',
        Leftarrow: '⇐',
        LeftArrowRightArrow: '⇆',
        leftarrowtail: '↢',
        LeftCeiling: '⌈',
        LeftDoubleBracket: '⟦',
        LeftDownTeeVector: '⥡',
        LeftDownVectorBar: '⥙',
        LeftDownVector: '⇃',
        LeftFloor: '⌊',
        leftharpoondown: '↽',
        leftharpoonup: '↼',
        leftleftarrows: '⇇',
        leftrightarrow: '↔',
        LeftRightArrow: '↔',
        Leftrightarrow: '⇔',
        leftrightarrows: '⇆',
        leftrightharpoons: '⇋',
        leftrightsquigarrow: '↭',
        LeftRightVector: '⥎',
        LeftTeeArrow: '↤',
        LeftTee: '⊣',
        LeftTeeVector: '⥚',
        leftthreetimes: '⋋',
        LeftTriangleBar: '⧏',
        LeftTriangle: '⊲',
        LeftTriangleEqual: '⊴',
        LeftUpDownVector: '⥑',
        LeftUpTeeVector: '⥠',
        LeftUpVectorBar: '⥘',
        LeftUpVector: '↿',
        LeftVectorBar: '⥒',
        LeftVector: '↼',
        lEg: '⪋',
        leg: '⋚',
        leq: '≤',
        leqq: '≦',
        leqslant: '⩽',
        lescc: '⪨',
        les: '⩽',
        lesdot: '⩿',
        lesdoto: '⪁',
        lesdotor: '⪃',
        lesg: '⋚︀',
        lesges: '⪓',
        lessapprox: '⪅',
        lessdot: '⋖',
        lesseqgtr: '⋚',
        lesseqqgtr: '⪋',
        LessEqualGreater: '⋚',
        LessFullEqual: '≦',
        LessGreater: '≶',
        lessgtr: '≶',
        LessLess: '⪡',
        lesssim: '≲',
        LessSlantEqual: '⩽',
        LessTilde: '≲',
        lfisht: '⥼',
        lfloor: '⌊',
        Lfr: '𝔏',
        lfr: '𝔩',
        lg: '≶',
        lgE: '⪑',
        lHar: '⥢',
        lhard: '↽',
        lharu: '↼',
        lharul: '⥪',
        lhblk: '▄',
        LJcy: 'Љ',
        ljcy: 'љ',
        llarr: '⇇',
        ll: '≪',
        Ll: '⋘',
        llcorner: '⌞',
        Lleftarrow: '⇚',
        llhard: '⥫',
        lltri: '◺',
        Lmidot: 'Ŀ',
        lmidot: 'ŀ',
        lmoustache: '⎰',
        lmoust: '⎰',
        lnap: '⪉',
        lnapprox: '⪉',
        lne: '⪇',
        lnE: '≨',
        lneq: '⪇',
        lneqq: '≨',
        lnsim: '⋦',
        loang: '⟬',
        loarr: '⇽',
        lobrk: '⟦',
        longleftarrow: '⟵',
        LongLeftArrow: '⟵',
        Longleftarrow: '⟸',
        longleftrightarrow: '⟷',
        LongLeftRightArrow: '⟷',
        Longleftrightarrow: '⟺',
        longmapsto: '⟼',
        longrightarrow: '⟶',
        LongRightArrow: '⟶',
        Longrightarrow: '⟹',
        looparrowleft: '↫',
        looparrowright: '↬',
        lopar: '⦅',
        Lopf: '𝕃',
        lopf: '𝕝',
        loplus: '⨭',
        lotimes: '⨴',
        lowast: '∗',
        lowbar: '_',
        LowerLeftArrow: '↙',
        LowerRightArrow: '↘',
        loz: '◊',
        lozenge: '◊',
        lozf: '⧫',
        lpar: '(',
        lparlt: '⦓',
        lrarr: '⇆',
        lrcorner: '⌟',
        lrhar: '⇋',
        lrhard: '⥭',
        lrm: '‎',
        lrtri: '⊿',
        lsaquo: '‹',
        lscr: '𝓁',
        Lscr: 'ℒ',
        lsh: '↰',
        Lsh: '↰',
        lsim: '≲',
        lsime: '⪍',
        lsimg: '⪏',
        lsqb: '[',
        lsquo: '‘',
        lsquor: '‚',
        Lstrok: 'Ł',
        lstrok: 'ł',
        ltcc: '⪦',
        ltcir: '⩹',
        lt: '<',
        LT: '<',
        Lt: '≪',
        ltdot: '⋖',
        lthree: '⋋',
        ltimes: '⋉',
        ltlarr: '⥶',
        ltquest: '⩻',
        ltri: '◃',
        ltrie: '⊴',
        ltrif: '◂',
        ltrPar: '⦖',
        lurdshar: '⥊',
        luruhar: '⥦',
        lvertneqq: '≨︀',
        lvnE: '≨︀',
        macr: '¯',
        male: '♂',
        malt: '✠',
        maltese: '✠',
        Map: '⤅',
        map: '↦',
        mapsto: '↦',
        mapstodown: '↧',
        mapstoleft: '↤',
        mapstoup: '↥',
        marker: '▮',
        mcomma: '⨩',
        Mcy: 'М',
        mcy: 'м',
        mdash: '—',
        mDDot: '∺',
        measuredangle: '∡',
        MediumSpace: ' ',
        Mellintrf: 'ℳ',
        Mfr: '𝔐',
        mfr: '𝔪',
        mho: '℧',
        micro: 'µ',
        midast: '*',
        midcir: '⫰',
        mid: '∣',
        middot: '·',
        minusb: '⊟',
        minus: '−',
        minusd: '∸',
        minusdu: '⨪',
        MinusPlus: '∓',
        mlcp: '⫛',
        mldr: '…',
        mnplus: '∓',
        models: '⊧',
        Mopf: '𝕄',
        mopf: '𝕞',
        mp: '∓',
        mscr: '𝓂',
        Mscr: 'ℳ',
        mstpos: '∾',
        Mu: 'Μ',
        mu: 'μ',
        multimap: '⊸',
        mumap: '⊸',
        nabla: '∇',
        Nacute: 'Ń',
        nacute: 'ń',
        nang: '∠⃒',
        nap: '≉',
        napE: '⩰̸',
        napid: '≋̸',
        napos: 'ŉ',
        napprox: '≉',
        natural: '♮',
        naturals: 'ℕ',
        natur: '♮',
        nbsp: ' ',
        nbump: '≎̸',
        nbumpe: '≏̸',
        ncap: '⩃',
        Ncaron: 'Ň',
        ncaron: 'ň',
        Ncedil: 'Ņ',
        ncedil: 'ņ',
        ncong: '≇',
        ncongdot: '⩭̸',
        ncup: '⩂',
        Ncy: 'Н',
        ncy: 'н',
        ndash: '–',
        nearhk: '⤤',
        nearr: '↗',
        neArr: '⇗',
        nearrow: '↗',
        ne: '≠',
        nedot: '≐̸',
        NegativeMediumSpace: '​',
        NegativeThickSpace: '​',
        NegativeThinSpace: '​',
        NegativeVeryThinSpace: '​',
        nequiv: '≢',
        nesear: '⤨',
        nesim: '≂̸',
        NestedGreaterGreater: '≫',
        NestedLessLess: '≪',
        NewLine: '\n',
        nexist: '∄',
        nexists: '∄',
        Nfr: '𝔑',
        nfr: '𝔫',
        ngE: '≧̸',
        nge: '≱',
        ngeq: '≱',
        ngeqq: '≧̸',
        ngeqslant: '⩾̸',
        nges: '⩾̸',
        nGg: '⋙̸',
        ngsim: '≵',
        nGt: '≫⃒',
        ngt: '≯',
        ngtr: '≯',
        nGtv: '≫̸',
        nharr: '↮',
        nhArr: '⇎',
        nhpar: '⫲',
        ni: '∋',
        nis: '⋼',
        nisd: '⋺',
        niv: '∋',
        NJcy: 'Њ',
        njcy: 'њ',
        nlarr: '↚',
        nlArr: '⇍',
        nldr: '‥',
        nlE: '≦̸',
        nle: '≰',
        nleftarrow: '↚',
        nLeftarrow: '⇍',
        nleftrightarrow: '↮',
        nLeftrightarrow: '⇎',
        nleq: '≰',
        nleqq: '≦̸',
        nleqslant: '⩽̸',
        nles: '⩽̸',
        nless: '≮',
        nLl: '⋘̸',
        nlsim: '≴',
        nLt: '≪⃒',
        nlt: '≮',
        nltri: '⋪',
        nltrie: '⋬',
        nLtv: '≪̸',
        nmid: '∤',
        NoBreak: '⁠',
        NonBreakingSpace: ' ',
        nopf: '𝕟',
        Nopf: 'ℕ',
        Not: '⫬',
        not: '¬',
        NotCongruent: '≢',
        NotCupCap: '≭',
        NotDoubleVerticalBar: '∦',
        NotElement: '∉',
        NotEqual: '≠',
        NotEqualTilde: '≂̸',
        NotExists: '∄',
        NotGreater: '≯',
        NotGreaterEqual: '≱',
        NotGreaterFullEqual: '≧̸',
        NotGreaterGreater: '≫̸',
        NotGreaterLess: '≹',
        NotGreaterSlantEqual: '⩾̸',
        NotGreaterTilde: '≵',
        NotHumpDownHump: '≎̸',
        NotHumpEqual: '≏̸',
        notin: '∉',
        notindot: '⋵̸',
        notinE: '⋹̸',
        notinva: '∉',
        notinvb: '⋷',
        notinvc: '⋶',
        NotLeftTriangleBar: '⧏̸',
        NotLeftTriangle: '⋪',
        NotLeftTriangleEqual: '⋬',
        NotLess: '≮',
        NotLessEqual: '≰',
        NotLessGreater: '≸',
        NotLessLess: '≪̸',
        NotLessSlantEqual: '⩽̸',
        NotLessTilde: '≴',
        NotNestedGreaterGreater: '⪢̸',
        NotNestedLessLess: '⪡̸',
        notni: '∌',
        notniva: '∌',
        notnivb: '⋾',
        notnivc: '⋽',
        NotPrecedes: '⊀',
        NotPrecedesEqual: '⪯̸',
        NotPrecedesSlantEqual: '⋠',
        NotReverseElement: '∌',
        NotRightTriangleBar: '⧐̸',
        NotRightTriangle: '⋫',
        NotRightTriangleEqual: '⋭',
        NotSquareSubset: '⊏̸',
        NotSquareSubsetEqual: '⋢',
        NotSquareSuperset: '⊐̸',
        NotSquareSupersetEqual: '⋣',
        NotSubset: '⊂⃒',
        NotSubsetEqual: '⊈',
        NotSucceeds: '⊁',
        NotSucceedsEqual: '⪰̸',
        NotSucceedsSlantEqual: '⋡',
        NotSucceedsTilde: '≿̸',
        NotSuperset: '⊃⃒',
        NotSupersetEqual: '⊉',
        NotTilde: '≁',
        NotTildeEqual: '≄',
        NotTildeFullEqual: '≇',
        NotTildeTilde: '≉',
        NotVerticalBar: '∤',
        nparallel: '∦',
        npar: '∦',
        nparsl: '⫽⃥',
        npart: '∂̸',
        npolint: '⨔',
        npr: '⊀',
        nprcue: '⋠',
        nprec: '⊀',
        npreceq: '⪯̸',
        npre: '⪯̸',
        nrarrc: '⤳̸',
        nrarr: '↛',
        nrArr: '⇏',
        nrarrw: '↝̸',
        nrightarrow: '↛',
        nRightarrow: '⇏',
        nrtri: '⋫',
        nrtrie: '⋭',
        nsc: '⊁',
        nsccue: '⋡',
        nsce: '⪰̸',
        Nscr: '𝒩',
        nscr: '𝓃',
        nshortmid: '∤',
        nshortparallel: '∦',
        nsim: '≁',
        nsime: '≄',
        nsimeq: '≄',
        nsmid: '∤',
        nspar: '∦',
        nsqsube: '⋢',
        nsqsupe: '⋣',
        nsub: '⊄',
        nsubE: '⫅̸',
        nsube: '⊈',
        nsubset: '⊂⃒',
        nsubseteq: '⊈',
        nsubseteqq: '⫅̸',
        nsucc: '⊁',
        nsucceq: '⪰̸',
        nsup: '⊅',
        nsupE: '⫆̸',
        nsupe: '⊉',
        nsupset: '⊃⃒',
        nsupseteq: '⊉',
        nsupseteqq: '⫆̸',
        ntgl: '≹',
        Ntilde: 'Ñ',
        ntilde: 'ñ',
        ntlg: '≸',
        ntriangleleft: '⋪',
        ntrianglelefteq: '⋬',
        ntriangleright: '⋫',
        ntrianglerighteq: '⋭',
        Nu: 'Ν',
        nu: 'ν',
        num: '#',
        numero: '№',
        numsp: ' ',
        nvap: '≍⃒',
        nvdash: '⊬',
        nvDash: '⊭',
        nVdash: '⊮',
        nVDash: '⊯',
        nvge: '≥⃒',
        nvgt: '>⃒',
        nvHarr: '⤄',
        nvinfin: '⧞',
        nvlArr: '⤂',
        nvle: '≤⃒',
        nvlt: '<⃒',
        nvltrie: '⊴⃒',
        nvrArr: '⤃',
        nvrtrie: '⊵⃒',
        nvsim: '∼⃒',
        nwarhk: '⤣',
        nwarr: '↖',
        nwArr: '⇖',
        nwarrow: '↖',
        nwnear: '⤧',
        Oacute: 'Ó',
        oacute: 'ó',
        oast: '⊛',
        Ocirc: 'Ô',
        ocirc: 'ô',
        ocir: '⊚',
        Ocy: 'О',
        ocy: 'о',
        odash: '⊝',
        Odblac: 'Ő',
        odblac: 'ő',
        odiv: '⨸',
        odot: '⊙',
        odsold: '⦼',
        OElig: 'Œ',
        oelig: 'œ',
        ofcir: '⦿',
        Ofr: '𝔒',
        ofr: '𝔬',
        ogon: '˛',
        Ograve: 'Ò',
        ograve: 'ò',
        ogt: '⧁',
        ohbar: '⦵',
        ohm: 'Ω',
        oint: '∮',
        olarr: '↺',
        olcir: '⦾',
        olcross: '⦻',
        oline: '‾',
        olt: '⧀',
        Omacr: 'Ō',
        omacr: 'ō',
        Omega: 'Ω',
        omega: 'ω',
        Omicron: 'Ο',
        omicron: 'ο',
        omid: '⦶',
        ominus: '⊖',
        Oopf: '𝕆',
        oopf: '𝕠',
        opar: '⦷',
        OpenCurlyDoubleQuote: '“',
        OpenCurlyQuote: '‘',
        operp: '⦹',
        oplus: '⊕',
        orarr: '↻',
        Or: '⩔',
        or: '∨',
        ord: '⩝',
        order: 'ℴ',
        orderof: 'ℴ',
        ordf: 'ª',
        ordm: 'º',
        origof: '⊶',
        oror: '⩖',
        orslope: '⩗',
        orv: '⩛',
        oS: 'Ⓢ',
        Oscr: '𝒪',
        oscr: 'ℴ',
        Oslash: 'Ø',
        oslash: 'ø',
        osol: '⊘',
        Otilde: 'Õ',
        otilde: 'õ',
        otimesas: '⨶',
        Otimes: '⨷',
        otimes: '⊗',
        Ouml: 'Ö',
        ouml: 'ö',
        ovbar: '⌽',
        OverBar: '‾',
        OverBrace: '⏞',
        OverBracket: '⎴',
        OverParenthesis: '⏜',
        para: '¶',
        parallel: '∥',
        par: '∥',
        parsim: '⫳',
        parsl: '⫽',
        part: '∂',
        PartialD: '∂',
        Pcy: 'П',
        pcy: 'п',
        percnt: '%',
        period: '.',
        permil: '‰',
        perp: '⊥',
        pertenk: '‱',
        Pfr: '𝔓',
        pfr: '𝔭',
        Phi: 'Φ',
        phi: 'φ',
        phiv: 'ϕ',
        phmmat: 'ℳ',
        phone: '☎',
        Pi: 'Π',
        pi: 'π',
        pitchfork: '⋔',
        piv: 'ϖ',
        planck: 'ℏ',
        planckh: 'ℎ',
        plankv: 'ℏ',
        plusacir: '⨣',
        plusb: '⊞',
        pluscir: '⨢',
        plus: '+',
        plusdo: '∔',
        plusdu: '⨥',
        pluse: '⩲',
        PlusMinus: '±',
        plusmn: '±',
        plussim: '⨦',
        plustwo: '⨧',
        pm: '±',
        Poincareplane: 'ℌ',
        pointint: '⨕',
        popf: '𝕡',
        Popf: 'ℙ',
        pound: '£',
        prap: '⪷',
        Pr: '⪻',
        pr: '≺',
        prcue: '≼',
        precapprox: '⪷',
        prec: '≺',
        preccurlyeq: '≼',
        Precedes: '≺',
        PrecedesEqual: '⪯',
        PrecedesSlantEqual: '≼',
        PrecedesTilde: '≾',
        preceq: '⪯',
        precnapprox: '⪹',
        precneqq: '⪵',
        precnsim: '⋨',
        pre: '⪯',
        prE: '⪳',
        precsim: '≾',
        prime: '′',
        Prime: '″',
        primes: 'ℙ',
        prnap: '⪹',
        prnE: '⪵',
        prnsim: '⋨',
        prod: '∏',
        Product: '∏',
        profalar: '⌮',
        profline: '⌒',
        profsurf: '⌓',
        prop: '∝',
        Proportional: '∝',
        Proportion: '∷',
        propto: '∝',
        prsim: '≾',
        prurel: '⊰',
        Pscr: '𝒫',
        pscr: '𝓅',
        Psi: 'Ψ',
        psi: 'ψ',
        puncsp: ' ',
        Qfr: '𝔔',
        qfr: '𝔮',
        qint: '⨌',
        qopf: '𝕢',
        Qopf: 'ℚ',
        qprime: '⁗',
        Qscr: '𝒬',
        qscr: '𝓆',
        quaternions: 'ℍ',
        quatint: '⨖',
        quest: '?',
        questeq: '≟',
        quot: '"',
        QUOT: '"',
        rAarr: '⇛',
        race: '∽̱',
        Racute: 'Ŕ',
        racute: 'ŕ',
        radic: '√',
        raemptyv: '⦳',
        rang: '⟩',
        Rang: '⟫',
        rangd: '⦒',
        range: '⦥',
        rangle: '⟩',
        raquo: '»',
        rarrap: '⥵',
        rarrb: '⇥',
        rarrbfs: '⤠',
        rarrc: '⤳',
        rarr: '→',
        Rarr: '↠',
        rArr: '⇒',
        rarrfs: '⤞',
        rarrhk: '↪',
        rarrlp: '↬',
        rarrpl: '⥅',
        rarrsim: '⥴',
        Rarrtl: '⤖',
        rarrtl: '↣',
        rarrw: '↝',
        ratail: '⤚',
        rAtail: '⤜',
        ratio: '∶',
        rationals: 'ℚ',
        rbarr: '⤍',
        rBarr: '⤏',
        RBarr: '⤐',
        rbbrk: '❳',
        rbrace: '}',
        rbrack: ']',
        rbrke: '⦌',
        rbrksld: '⦎',
        rbrkslu: '⦐',
        Rcaron: 'Ř',
        rcaron: 'ř',
        Rcedil: 'Ŗ',
        rcedil: 'ŗ',
        rceil: '⌉',
        rcub: '}',
        Rcy: 'Р',
        rcy: 'р',
        rdca: '⤷',
        rdldhar: '⥩',
        rdquo: '”',
        rdquor: '”',
        rdsh: '↳',
        real: 'ℜ',
        realine: 'ℛ',
        realpart: 'ℜ',
        reals: 'ℝ',
        Re: 'ℜ',
        rect: '▭',
        reg: '®',
        REG: '®',
        ReverseElement: '∋',
        ReverseEquilibrium: '⇋',
        ReverseUpEquilibrium: '⥯',
        rfisht: '⥽',
        rfloor: '⌋',
        rfr: '𝔯',
        Rfr: 'ℜ',
        rHar: '⥤',
        rhard: '⇁',
        rharu: '⇀',
        rharul: '⥬',
        Rho: 'Ρ',
        rho: 'ρ',
        rhov: 'ϱ',
        RightAngleBracket: '⟩',
        RightArrowBar: '⇥',
        rightarrow: '→',
        RightArrow: '→',
        Rightarrow: '⇒',
        RightArrowLeftArrow: '⇄',
        rightarrowtail: '↣',
        RightCeiling: '⌉',
        RightDoubleBracket: '⟧',
        RightDownTeeVector: '⥝',
        RightDownVectorBar: '⥕',
        RightDownVector: '⇂',
        RightFloor: '⌋',
        rightharpoondown: '⇁',
        rightharpoonup: '⇀',
        rightleftarrows: '⇄',
        rightleftharpoons: '⇌',
        rightrightarrows: '⇉',
        rightsquigarrow: '↝',
        RightTeeArrow: '↦',
        RightTee: '⊢',
        RightTeeVector: '⥛',
        rightthreetimes: '⋌',
        RightTriangleBar: '⧐',
        RightTriangle: '⊳',
        RightTriangleEqual: '⊵',
        RightUpDownVector: '⥏',
        RightUpTeeVector: '⥜',
        RightUpVectorBar: '⥔',
        RightUpVector: '↾',
        RightVectorBar: '⥓',
        RightVector: '⇀',
        ring: '˚',
        risingdotseq: '≓',
        rlarr: '⇄',
        rlhar: '⇌',
        rlm: '‏',
        rmoustache: '⎱',
        rmoust: '⎱',
        rnmid: '⫮',
        roang: '⟭',
        roarr: '⇾',
        robrk: '⟧',
        ropar: '⦆',
        ropf: '𝕣',
        Ropf: 'ℝ',
        roplus: '⨮',
        rotimes: '⨵',
        RoundImplies: '⥰',
        rpar: ')',
        rpargt: '⦔',
        rppolint: '⨒',
        rrarr: '⇉',
        Rrightarrow: '⇛',
        rsaquo: '›',
        rscr: '𝓇',
        Rscr: 'ℛ',
        rsh: '↱',
        Rsh: '↱',
        rsqb: ']',
        rsquo: '’',
        rsquor: '’',
        rthree: '⋌',
        rtimes: '⋊',
        rtri: '▹',
        rtrie: '⊵',
        rtrif: '▸',
        rtriltri: '⧎',
        RuleDelayed: '⧴',
        ruluhar: '⥨',
        rx: '℞',
        Sacute: 'Ś',
        sacute: 'ś',
        sbquo: '‚',
        scap: '⪸',
        Scaron: 'Š',
        scaron: 'š',
        Sc: '⪼',
        sc: '≻',
        sccue: '≽',
        sce: '⪰',
        scE: '⪴',
        Scedil: 'Ş',
        scedil: 'ş',
        Scirc: 'Ŝ',
        scirc: 'ŝ',
        scnap: '⪺',
        scnE: '⪶',
        scnsim: '⋩',
        scpolint: '⨓',
        scsim: '≿',
        Scy: 'С',
        scy: 'с',
        sdotb: '⊡',
        sdot: '⋅',
        sdote: '⩦',
        searhk: '⤥',
        searr: '↘',
        seArr: '⇘',
        searrow: '↘',
        sect: '§',
        semi: ';',
        seswar: '⤩',
        setminus: '∖',
        setmn: '∖',
        sext: '✶',
        Sfr: '𝔖',
        sfr: '𝔰',
        sfrown: '⌢',
        sharp: '♯',
        SHCHcy: 'Щ',
        shchcy: 'щ',
        SHcy: 'Ш',
        shcy: 'ш',
        ShortDownArrow: '↓',
        ShortLeftArrow: '←',
        shortmid: '∣',
        shortparallel: '∥',
        ShortRightArrow: '→',
        ShortUpArrow: '↑',
        shy: '­',
        Sigma: 'Σ',
        sigma: 'σ',
        sigmaf: 'ς',
        sigmav: 'ς',
        sim: '∼',
        simdot: '⩪',
        sime: '≃',
        simeq: '≃',
        simg: '⪞',
        simgE: '⪠',
        siml: '⪝',
        simlE: '⪟',
        simne: '≆',
        simplus: '⨤',
        simrarr: '⥲',
        slarr: '←',
        SmallCircle: '∘',
        smallsetminus: '∖',
        smashp: '⨳',
        smeparsl: '⧤',
        smid: '∣',
        smile: '⌣',
        smt: '⪪',
        smte: '⪬',
        smtes: '⪬︀',
        SOFTcy: 'Ь',
        softcy: 'ь',
        solbar: '⌿',
        solb: '⧄',
        sol: '/',
        Sopf: '𝕊',
        sopf: '𝕤',
        spades: '♠',
        spadesuit: '♠',
        spar: '∥',
        sqcap: '⊓',
        sqcaps: '⊓︀',
        sqcup: '⊔',
        sqcups: '⊔︀',
        Sqrt: '√',
        sqsub: '⊏',
        sqsube: '⊑',
        sqsubset: '⊏',
        sqsubseteq: '⊑',
        sqsup: '⊐',
        sqsupe: '⊒',
        sqsupset: '⊐',
        sqsupseteq: '⊒',
        square: '□',
        Square: '□',
        SquareIntersection: '⊓',
        SquareSubset: '⊏',
        SquareSubsetEqual: '⊑',
        SquareSuperset: '⊐',
        SquareSupersetEqual: '⊒',
        SquareUnion: '⊔',
        squarf: '▪',
        squ: '□',
        squf: '▪',
        srarr: '→',
        Sscr: '𝒮',
        sscr: '𝓈',
        ssetmn: '∖',
        ssmile: '⌣',
        sstarf: '⋆',
        Star: '⋆',
        star: '☆',
        starf: '★',
        straightepsilon: 'ϵ',
        straightphi: 'ϕ',
        strns: '¯',
        sub: '⊂',
        Sub: '⋐',
        subdot: '⪽',
        subE: '⫅',
        sube: '⊆',
        subedot: '⫃',
        submult: '⫁',
        subnE: '⫋',
        subne: '⊊',
        subplus: '⪿',
        subrarr: '⥹',
        subset: '⊂',
        Subset: '⋐',
        subseteq: '⊆',
        subseteqq: '⫅',
        SubsetEqual: '⊆',
        subsetneq: '⊊',
        subsetneqq: '⫋',
        subsim: '⫇',
        subsub: '⫕',
        subsup: '⫓',
        succapprox: '⪸',
        succ: '≻',
        succcurlyeq: '≽',
        Succeeds: '≻',
        SucceedsEqual: '⪰',
        SucceedsSlantEqual: '≽',
        SucceedsTilde: '≿',
        succeq: '⪰',
        succnapprox: '⪺',
        succneqq: '⪶',
        succnsim: '⋩',
        succsim: '≿',
        SuchThat: '∋',
        sum: '∑',
        Sum: '∑',
        sung: '♪',
        sup1: '¹',
        sup2: '²',
        sup3: '³',
        sup: '⊃',
        Sup: '⋑',
        supdot: '⪾',
        supdsub: '⫘',
        supE: '⫆',
        supe: '⊇',
        supedot: '⫄',
        Superset: '⊃',
        SupersetEqual: '⊇',
        suphsol: '⟉',
        suphsub: '⫗',
        suplarr: '⥻',
        supmult: '⫂',
        supnE: '⫌',
        supne: '⊋',
        supplus: '⫀',
        supset: '⊃',
        Supset: '⋑',
        supseteq: '⊇',
        supseteqq: '⫆',
        supsetneq: '⊋',
        supsetneqq: '⫌',
        supsim: '⫈',
        supsub: '⫔',
        supsup: '⫖',
        swarhk: '⤦',
        swarr: '↙',
        swArr: '⇙',
        swarrow: '↙',
        swnwar: '⤪',
        szlig: 'ß',
        Tab: '\t',
        target: '⌖',
        Tau: 'Τ',
        tau: 'τ',
        tbrk: '⎴',
        Tcaron: 'Ť',
        tcaron: 'ť',
        Tcedil: 'Ţ',
        tcedil: 'ţ',
        Tcy: 'Т',
        tcy: 'т',
        tdot: '⃛',
        telrec: '⌕',
        Tfr: '𝔗',
        tfr: '𝔱',
        there4: '∴',
        therefore: '∴',
        Therefore: '∴',
        Theta: 'Θ',
        theta: 'θ',
        thetasym: 'ϑ',
        thetav: 'ϑ',
        thickapprox: '≈',
        thicksim: '∼',
        ThickSpace: '  ',
        ThinSpace: ' ',
        thinsp: ' ',
        thkap: '≈',
        thksim: '∼',
        THORN: 'Þ',
        thorn: 'þ',
        tilde: '˜',
        Tilde: '∼',
        TildeEqual: '≃',
        TildeFullEqual: '≅',
        TildeTilde: '≈',
        timesbar: '⨱',
        timesb: '⊠',
        times: '×',
        timesd: '⨰',
        tint: '∭',
        toea: '⤨',
        topbot: '⌶',
        topcir: '⫱',
        top: '⊤',
        Topf: '𝕋',
        topf: '𝕥',
        topfork: '⫚',
        tosa: '⤩',
        tprime: '‴',
        trade: '™',
        TRADE: '™',
        triangle: '▵',
        triangledown: '▿',
        triangleleft: '◃',
        trianglelefteq: '⊴',
        triangleq: '≜',
        triangleright: '▹',
        trianglerighteq: '⊵',
        tridot: '◬',
        trie: '≜',
        triminus: '⨺',
        TripleDot: '⃛',
        triplus: '⨹',
        trisb: '⧍',
        tritime: '⨻',
        trpezium: '⏢',
        Tscr: '𝒯',
        tscr: '𝓉',
        TScy: 'Ц',
        tscy: 'ц',
        TSHcy: 'Ћ',
        tshcy: 'ћ',
        Tstrok: 'Ŧ',
        tstrok: 'ŧ',
        twixt: '≬',
        twoheadleftarrow: '↞',
        twoheadrightarrow: '↠',
        Uacute: 'Ú',
        uacute: 'ú',
        uarr: '↑',
        Uarr: '↟',
        uArr: '⇑',
        Uarrocir: '⥉',
        Ubrcy: 'Ў',
        ubrcy: 'ў',
        Ubreve: 'Ŭ',
        ubreve: 'ŭ',
        Ucirc: 'Û',
        ucirc: 'û',
        Ucy: 'У',
        ucy: 'у',
        udarr: '⇅',
        Udblac: 'Ű',
        udblac: 'ű',
        udhar: '⥮',
        ufisht: '⥾',
        Ufr: '𝔘',
        ufr: '𝔲',
        Ugrave: 'Ù',
        ugrave: 'ù',
        uHar: '⥣',
        uharl: '↿',
        uharr: '↾',
        uhblk: '▀',
        ulcorn: '⌜',
        ulcorner: '⌜',
        ulcrop: '⌏',
        ultri: '◸',
        Umacr: 'Ū',
        umacr: 'ū',
        uml: '¨',
        UnderBar: '_',
        UnderBrace: '⏟',
        UnderBracket: '⎵',
        UnderParenthesis: '⏝',
        Union: '⋃',
        UnionPlus: '⊎',
        Uogon: 'Ų',
        uogon: 'ų',
        Uopf: '𝕌',
        uopf: '𝕦',
        UpArrowBar: '⤒',
        uparrow: '↑',
        UpArrow: '↑',
        Uparrow: '⇑',
        UpArrowDownArrow: '⇅',
        updownarrow: '↕',
        UpDownArrow: '↕',
        Updownarrow: '⇕',
        UpEquilibrium: '⥮',
        upharpoonleft: '↿',
        upharpoonright: '↾',
        uplus: '⊎',
        UpperLeftArrow: '↖',
        UpperRightArrow: '↗',
        upsi: 'υ',
        Upsi: 'ϒ',
        upsih: 'ϒ',
        Upsilon: 'Υ',
        upsilon: 'υ',
        UpTeeArrow: '↥',
        UpTee: '⊥',
        upuparrows: '⇈',
        urcorn: '⌝',
        urcorner: '⌝',
        urcrop: '⌎',
        Uring: 'Ů',
        uring: 'ů',
        urtri: '◹',
        Uscr: '𝒰',
        uscr: '𝓊',
        utdot: '⋰',
        Utilde: 'Ũ',
        utilde: 'ũ',
        utri: '▵',
        utrif: '▴',
        uuarr: '⇈',
        Uuml: 'Ü',
        uuml: 'ü',
        uwangle: '⦧',
        vangrt: '⦜',
        varepsilon: 'ϵ',
        varkappa: 'ϰ',
        varnothing: '∅',
        varphi: 'ϕ',
        varpi: 'ϖ',
        varpropto: '∝',
        varr: '↕',
        vArr: '⇕',
        varrho: 'ϱ',
        varsigma: 'ς',
        varsubsetneq: '⊊︀',
        varsubsetneqq: '⫋︀',
        varsupsetneq: '⊋︀',
        varsupsetneqq: '⫌︀',
        vartheta: 'ϑ',
        vartriangleleft: '⊲',
        vartriangleright: '⊳',
        vBar: '⫨',
        Vbar: '⫫',
        vBarv: '⫩',
        Vcy: 'В',
        vcy: 'в',
        vdash: '⊢',
        vDash: '⊨',
        Vdash: '⊩',
        VDash: '⊫',
        Vdashl: '⫦',
        veebar: '⊻',
        vee: '∨',
        Vee: '⋁',
        veeeq: '≚',
        vellip: '⋮',
        verbar: '|',
        Verbar: '‖',
        vert: '|',
        Vert: '‖',
        VerticalBar: '∣',
        VerticalLine: '|',
        VerticalSeparator: '❘',
        VerticalTilde: '≀',
        VeryThinSpace: ' ',
        Vfr: '𝔙',
        vfr: '𝔳',
        vltri: '⊲',
        vnsub: '⊂⃒',
        vnsup: '⊃⃒',
        Vopf: '𝕍',
        vopf: '𝕧',
        vprop: '∝',
        vrtri: '⊳',
        Vscr: '𝒱',
        vscr: '𝓋',
        vsubnE: '⫋︀',
        vsubne: '⊊︀',
        vsupnE: '⫌︀',
        vsupne: '⊋︀',
        Vvdash: '⊪',
        vzigzag: '⦚',
        Wcirc: 'Ŵ',
        wcirc: 'ŵ',
        wedbar: '⩟',
        wedge: '∧',
        Wedge: '⋀',
        wedgeq: '≙',
        weierp: '℘',
        Wfr: '𝔚',
        wfr: '𝔴',
        Wopf: '𝕎',
        wopf: '𝕨',
        wp: '℘',
        wr: '≀',
        wreath: '≀',
        Wscr: '𝒲',
        wscr: '𝓌',
        xcap: '⋂',
        xcirc: '◯',
        xcup: '⋃',
        xdtri: '▽',
        Xfr: '𝔛',
        xfr: '𝔵',
        xharr: '⟷',
        xhArr: '⟺',
        Xi: 'Ξ',
        xi: 'ξ',
        xlarr: '⟵',
        xlArr: '⟸',
        xmap: '⟼',
        xnis: '⋻',
        xodot: '⨀',
        Xopf: '𝕏',
        xopf: '𝕩',
        xoplus: '⨁',
        xotime: '⨂',
        xrarr: '⟶',
        xrArr: '⟹',
        Xscr: '𝒳',
        xscr: '𝓍',
        xsqcup: '⨆',
        xuplus: '⨄',
        xutri: '△',
        xvee: '⋁',
        xwedge: '⋀',
        Yacute: 'Ý',
        yacute: 'ý',
        YAcy: 'Я',
        yacy: 'я',
        Ycirc: 'Ŷ',
        ycirc: 'ŷ',
        Ycy: 'Ы',
        ycy: 'ы',
        yen: '¥',
        Yfr: '𝔜',
        yfr: '𝔶',
        YIcy: 'Ї',
        yicy: 'ї',
        Yopf: '𝕐',
        yopf: '𝕪',
        Yscr: '𝒴',
        yscr: '𝓎',
        YUcy: 'Ю',
        yucy: 'ю',
        yuml: 'ÿ',
        Yuml: 'Ÿ',
        Zacute: 'Ź',
        zacute: 'ź',
        Zcaron: 'Ž',
        zcaron: 'ž',
        Zcy: 'З',
        zcy: 'з',
        Zdot: 'Ż',
        zdot: 'ż',
        zeetrf: 'ℨ',
        ZeroWidthSpace: '​',
        Zeta: 'Ζ',
        zeta: 'ζ',
        zfr: '𝔷',
        Zfr: 'ℨ',
        ZHcy: 'Ж',
        zhcy: 'ж',
        zigrarr: '⇝',
        zopf: '𝕫',
        Zopf: 'ℤ',
        Zscr: '𝒵',
        zscr: '𝓏',
        zwj: '‍',
        zwnj: '‌',
      };

      /***/
    },
    /* 172 */
    /***/ function (module, exports) {
      module.exports = {
        amp: '&',
        apos: "'",
        gt: '>',
        lt: '<',
        quot: '"',
      };

      /***/
    },
    /* 173 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';
      /**
       * Copyright (c) 2013-present, Facebook, Inc.
       * All rights reserved.
       *
       * This source code is licensed under the BSD-style license found in the
       * LICENSE file in the root directory of this source tree. An additional grant
       * of patent rights can be found in the PATENTS file in the same directory.
       *
       * @typechecks
       *
       */

      /*eslint-disable no-self-compare */

      var hasOwnProperty = Object.prototype.hasOwnProperty;

      /**
       * inlined Object.is polyfill to avoid requiring consumers ship their own
       * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is
       */
      function is(x, y) {
        // SameValue algorithm
        if (x === y) {
          // Steps 1-5, 7-10
          // Steps 6.b-6.e: +0 != -0
          // Added the nonzero y check to make Flow happy, but it is redundant
          return x !== 0 || y !== 0 || 1 / x === 1 / y;
        } else {
          // Step 6.a: NaN == NaN
          return x !== x && y !== y;
        }
      }

      /**
       * Performs equality by iterating through keys on an object and returning false
       * when any key has values which are not strictly equal between the arguments.
       * Returns true when the values of all keys are strictly equal.
       */
      function shallowEqual(objA, objB) {
        if (is(objA, objB)) {
          return true;
        }

        if (
          typeof objA !== 'object' ||
          objA === null ||
          typeof objB !== 'object' ||
          objB === null
        ) {
          return false;
        }

        var keysA = Object.keys(objA);
        var keysB = Object.keys(objB);

        if (keysA.length !== keysB.length) {
          return false;
        }

        // Test for A's keys different from B.
        for (var i = 0; i < keysA.length; i++) {
          if (!hasOwnProperty.call(objB, keysA[i]) || !is(objA[keysA[i]], objB[keysA[i]])) {
            return false;
          }
        }

        return true;
      }

      module.exports = shallowEqual;

      /***/
    },
    /* 174 */
    /***/ function (module, __webpack_exports__, __webpack_require__) {
      'use strict';
      /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__baseGetTag_js__ = __webpack_require__(
        629
      );
      /* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__getPrototype_js__ = __webpack_require__(
        631
      );
      /* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__isObjectLike_js__ = __webpack_require__(
        636
      );

      /** `Object#toString` result references. */
      var objectTag = '[object Object]';

      /** Used for built-in method references. */
      var funcProto = Function.prototype,
        objectProto = Object.prototype;

      /** Used to resolve the decompiled source of functions. */
      var funcToString = funcProto.toString;

      /** Used to check objects for own properties. */
      var hasOwnProperty = objectProto.hasOwnProperty;

      /** Used to infer the `Object` constructor. */
      var objectCtorString = funcToString.call(Object);

      /**
       * Checks if `value` is a plain object, that is, an object created by the
       * `Object` constructor or one with a `[[Prototype]]` of `null`.
       *
       * @static
       * @memberOf _
       * @since 0.8.0
       * @category Lang
       * @param {*} value The value to check.
       * @returns {boolean} Returns `true` if `value` is a plain object, else `false`.
       * @example
       *
       * function Foo() {
       *   this.a = 1;
       * }
       *
       * _.isPlainObject(new Foo);
       * // => false
       *
       * _.isPlainObject([1, 2, 3]);
       * // => false
       *
       * _.isPlainObject({ 'x': 0, 'y': 0 });
       * // => true
       *
       * _.isPlainObject(Object.create(null));
       * // => true
       */
      function isPlainObject(value) {
        if (
          !__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_2__isObjectLike_js__['a' /* default */])(
            value
          ) ||
          __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__baseGetTag_js__['a' /* default */])(
            value
          ) != objectTag
        ) {
          return false;
        }
        var proto = __webpack_require__.i(
          __WEBPACK_IMPORTED_MODULE_1__getPrototype_js__['a' /* default */]
        )(value);
        if (proto === null) {
          return true;
        }
        var Ctor = hasOwnProperty.call(proto, 'constructor') && proto.constructor;
        return (
          typeof Ctor == 'function' &&
          Ctor instanceof Ctor &&
          funcToString.call(Ctor) == objectCtorString
        );
      }

      /* harmony default export */ __webpack_exports__['a'] = isPlainObject;

      /***/
    },
    /* 175 */
    /***/ function (module, exports, __webpack_require__) {
      /* WEBPACK VAR INJECTION */ (function (process) {
        // Copyright Joyent, Inc. and other Node contributors.
        //
        // Permission is hereby granted, free of charge, to any person obtaining a
        // copy of this software and associated documentation files (the
        // "Software"), to deal in the Software without restriction, including
        // without limitation the rights to use, copy, modify, merge, publish,
        // distribute, sublicense, and/or sell copies of the Software, and to permit
        // persons to whom the Software is furnished to do so, subject to the
        // following conditions:
        //
        // The above copyright notice and this permission notice shall be included
        // in all copies or substantial portions of the Software.
        //
        // THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
        // OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
        // MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
        // NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
        // DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
        // OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
        // USE OR OTHER DEALINGS IN THE SOFTWARE.

        // resolves . and .. elements in a path array with directory names there
        // must be no slashes, empty elements, or device names (c:\) in the array
        // (so also no leading and trailing slashes - it does not distinguish
        // relative and absolute paths)
        function normalizeArray(parts, allowAboveRoot) {
          // if the path tries to go above the root, `up` ends up > 0
          var up = 0;
          for (var i = parts.length - 1; i >= 0; i--) {
            var last = parts[i];
            if (last === '.') {
              parts.splice(i, 1);
            } else if (last === '..') {
              parts.splice(i, 1);
              up++;
            } else if (up) {
              parts.splice(i, 1);
              up--;
            }
          }

          // if the path is allowed to go above the root, restore leading ..s
          if (allowAboveRoot) {
            for (; up--; up) {
              parts.unshift('..');
            }
          }

          return parts;
        }

        // Split a filename into [root, dir, basename, ext], unix version
        // 'root' is just a slash, or nothing.
        var splitPathRe = /^(\/?|)([\s\S]*?)((?:\.{1,2}|[^\/]+?|)(\.[^.\/]*|))(?:[\/]*)$/;
        var splitPath = function (filename) {
          return splitPathRe.exec(filename).slice(1);
        };

        // path.resolve([from ...], to)
        // posix version
        exports.resolve = function () {
          var resolvedPath = '',
            resolvedAbsolute = false;

          for (var i = arguments.length - 1; i >= -1 && !resolvedAbsolute; i--) {
            var path = i >= 0 ? arguments[i] : process.cwd();

            // Skip empty and invalid entries
            if (typeof path !== 'string') {
              throw new TypeError('Arguments to path.resolve must be strings');
            } else if (!path) {
              continue;
            }

            resolvedPath = path + '/' + resolvedPath;
            resolvedAbsolute = path.charAt(0) === '/';
          }

          // At this point the path should be resolved to a full absolute path, but
          // handle relative paths to be safe (might happen when process.cwd() fails)

          // Normalize the path
          resolvedPath = normalizeArray(
            filter(resolvedPath.split('/'), function (p) {
              return !!p;
            }),
            !resolvedAbsolute
          ).join('/');

          return (resolvedAbsolute ? '/' : '') + resolvedPath || '.';
        };

        // path.normalize(path)
        // posix version
        exports.normalize = function (path) {
          var isAbsolute = exports.isAbsolute(path),
            trailingSlash = substr(path, -1) === '/';

          // Normalize the path
          path = normalizeArray(
            filter(path.split('/'), function (p) {
              return !!p;
            }),
            !isAbsolute
          ).join('/');

          if (!path && !isAbsolute) {
            path = '.';
          }
          if (path && trailingSlash) {
            path += '/';
          }

          return (isAbsolute ? '/' : '') + path;
        };

        // posix version
        exports.isAbsolute = function (path) {
          return path.charAt(0) === '/';
        };

        // posix version
        exports.join = function () {
          var paths = Array.prototype.slice.call(arguments, 0);
          return exports.normalize(
            filter(paths, function (p, index) {
              if (typeof p !== 'string') {
                throw new TypeError('Arguments to path.join must be strings');
              }
              return p;
            }).join('/')
          );
        };

        // path.relative(from, to)
        // posix version
        exports.relative = function (from, to) {
          from = exports.resolve(from).substr(1);
          to = exports.resolve(to).substr(1);

          function trim(arr) {
            var start = 0;
            for (; start < arr.length; start++) {
              if (arr[start] !== '') break;
            }

            var end = arr.length - 1;
            for (; end >= 0; end--) {
              if (arr[end] !== '') break;
            }

            if (start > end) return [];
            return arr.slice(start, end - start + 1);
          }

          var fromParts = trim(from.split('/'));
          var toParts = trim(to.split('/'));

          var length = Math.min(fromParts.length, toParts.length);
          var samePartsLength = length;
          for (var i = 0; i < length; i++) {
            if (fromParts[i] !== toParts[i]) {
              samePartsLength = i;
              break;
            }
          }

          var outputParts = [];
          for (var i = samePartsLength; i < fromParts.length; i++) {
            outputParts.push('..');
          }

          outputParts = outputParts.concat(toParts.slice(samePartsLength));

          return outputParts.join('/');
        };

        exports.sep = '/';
        exports.delimiter = ':';

        exports.dirname = function (path) {
          var result = splitPath(path),
            root = result[0],
            dir = result[1];

          if (!root && !dir) {
            // No dirname whatsoever
            return '.';
          }

          if (dir) {
            // It has a dirname, strip trailing slash
            dir = dir.substr(0, dir.length - 1);
          }

          return root + dir;
        };

        exports.basename = function (path, ext) {
          var f = splitPath(path)[2];
          // TODO: make this comparison case-insensitive on windows?
          if (ext && f.substr(-1 * ext.length) === ext) {
            f = f.substr(0, f.length - ext.length);
          }
          return f;
        };

        exports.extname = function (path) {
          return splitPath(path)[3];
        };

        function filter(xs, f) {
          if (xs.filter) return xs.filter(f);
          var res = [];
          for (var i = 0; i < xs.length; i++) {
            if (f(xs[i], i, xs)) res.push(xs[i]);
          }
          return res;
        }

        // String.prototype.substr - negative index don't work in IE8
        var substr =
          'ab'.substr(-1) === 'b'
            ? function (str, start, len) {
                return str.substr(start, len);
              }
            : function (str, start, len) {
                if (start < 0) start = str.length + start;
                return str.substr(start, len);
              };

        /* WEBPACK VAR INJECTION */
      }.call(exports, __webpack_require__(1)));

      /***/
    },
    /* 176 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';

      exports.__esModule = true;

      var _node = __webpack_require__(179);

      var _node2 = _interopRequireDefault(_node);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
          throw new TypeError('Cannot call a class as a function');
        }
      }

      function _possibleConstructorReturn(self, call) {
        if (!self) {
          throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
        }
        return call && (typeof call === 'object' || typeof call === 'function') ? call : self;
      }

      function _inherits(subClass, superClass) {
        if (typeof superClass !== 'function' && superClass !== null) {
          throw new TypeError(
            'Super expression must either be null or a function, not ' + typeof superClass
          );
        }
        subClass.prototype = Object.create(superClass && superClass.prototype, {
          constructor: { value: subClass, enumerable: false, writable: true, configurable: true },
        });
        if (superClass)
          Object.setPrototypeOf
            ? Object.setPrototypeOf(subClass, superClass)
            : (subClass.__proto__ = superClass);
      }

      /**
       * Represents a comment between declarations or statements (rule and at-rules).
       *
       * Comments inside selectors, at-rule parameters, or declaration values
       * will be stored in the `raws` properties explained above.
       *
       * @extends Node
       */
      var Comment = (function (_Node) {
        _inherits(Comment, _Node);

        function Comment(defaults) {
          _classCallCheck(this, Comment);

          var _this = _possibleConstructorReturn(this, _Node.call(this, defaults));

          _this.type = 'comment';
          return _this;
        }

        /**
         * @memberof Comment#
         * @member {string} text - the comment’s text
         */

        /**
         * @memberof Comment#
         * @member {object} raws - Information to generate byte-to-byte equal
         *                         node string as it was in the origin input.
         *
         * Every parser saves its own properties,
         * but the default CSS parser uses:
         *
         * * `before`: the space symbols before the node.
         * * `left`: the space symbols between `/*` and the comment’s text.
         * * `right`: the space symbols between the comment’s text.
         */

        return Comment;
      })(_node2.default);

      exports.default = Comment;
      module.exports = exports['default'];
      //# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNvbW1lbnQuZXM2Il0sIm5hbWVzIjpbIkNvbW1lbnQiLCJkZWZhdWx0cyIsInR5cGUiXSwibWFwcGluZ3MiOiI7Ozs7QUFBQTs7Ozs7Ozs7Ozs7O0FBRUE7Ozs7Ozs7O0lBUU1BLE87OztBQUVGLG1CQUFZQyxRQUFaLEVBQXNCO0FBQUE7O0FBQUEsaURBQ2xCLGlCQUFNQSxRQUFOLENBRGtCOztBQUVsQixVQUFLQyxJQUFMLEdBQVksU0FBWjtBQUZrQjtBQUdyQjs7QUFFRDs7Ozs7QUFLQTs7Ozs7Ozs7Ozs7Ozs7Ozs7a0JBY1dGLE8iLCJmaWxlIjoiY29tbWVudC5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBOb2RlIGZyb20gJy4vbm9kZSc7XG5cbi8qKlxuICogUmVwcmVzZW50cyBhIGNvbW1lbnQgYmV0d2VlbiBkZWNsYXJhdGlvbnMgb3Igc3RhdGVtZW50cyAocnVsZSBhbmQgYXQtcnVsZXMpLlxuICpcbiAqIENvbW1lbnRzIGluc2lkZSBzZWxlY3RvcnMsIGF0LXJ1bGUgcGFyYW1ldGVycywgb3IgZGVjbGFyYXRpb24gdmFsdWVzXG4gKiB3aWxsIGJlIHN0b3JlZCBpbiB0aGUgYHJhd3NgIHByb3BlcnRpZXMgZXhwbGFpbmVkIGFib3ZlLlxuICpcbiAqIEBleHRlbmRzIE5vZGVcbiAqL1xuY2xhc3MgQ29tbWVudCBleHRlbmRzIE5vZGUge1xuXG4gICAgY29uc3RydWN0b3IoZGVmYXVsdHMpIHtcbiAgICAgICAgc3VwZXIoZGVmYXVsdHMpO1xuICAgICAgICB0aGlzLnR5cGUgPSAnY29tbWVudCc7XG4gICAgfVxuXG4gICAgLyoqXG4gICAgICogQG1lbWJlcm9mIENvbW1lbnQjXG4gICAgICogQG1lbWJlciB7c3RyaW5nfSB0ZXh0IC0gdGhlIGNvbW1lbnTigJlzIHRleHRcbiAgICAgKi9cblxuICAgIC8qKlxuICAgICAqIEBtZW1iZXJvZiBDb21tZW50I1xuICAgICAqIEBtZW1iZXIge29iamVjdH0gcmF3cyAtIEluZm9ybWF0aW9uIHRvIGdlbmVyYXRlIGJ5dGUtdG8tYnl0ZSBlcXVhbFxuICAgICAqICAgICAgICAgICAgICAgICAgICAgICAgIG5vZGUgc3RyaW5nIGFzIGl0IHdhcyBpbiB0aGUgb3JpZ2luIGlucHV0LlxuICAgICAqXG4gICAgICogRXZlcnkgcGFyc2VyIHNhdmVzIGl0cyBvd24gcHJvcGVydGllcyxcbiAgICAgKiBidXQgdGhlIGRlZmF1bHQgQ1NTIHBhcnNlciB1c2VzOlxuICAgICAqXG4gICAgICogKiBgYmVmb3JlYDogdGhlIHNwYWNlIHN5bWJvbHMgYmVmb3JlIHRoZSBub2RlLlxuICAgICAqICogYGxlZnRgOiB0aGUgc3BhY2Ugc3ltYm9scyBiZXR3ZWVuIGAvKmAgYW5kIHRoZSBjb21tZW504oCZcyB0ZXh0LlxuICAgICAqICogYHJpZ2h0YDogdGhlIHNwYWNlIHN5bWJvbHMgYmV0d2VlbiB0aGUgY29tbWVudOKAmXMgdGV4dC5cbiAgICAgKi9cbn1cblxuZXhwb3J0IGRlZmF1bHQgQ29tbWVudDtcbiJdfQ==

      /***/
    },
    /* 177 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';

      exports.__esModule = true;

      var _createClass = (function () {
        function defineProperties(target, props) {
          for (var i = 0; i < props.length; i++) {
            var descriptor = props[i];
            descriptor.enumerable = descriptor.enumerable || false;
            descriptor.configurable = true;
            if ('value' in descriptor) descriptor.writable = true;
            Object.defineProperty(target, descriptor.key, descriptor);
          }
        }
        return function (Constructor, protoProps, staticProps) {
          if (protoProps) defineProperties(Constructor.prototype, protoProps);
          if (staticProps) defineProperties(Constructor, staticProps);
          return Constructor;
        };
      })();

      var _declaration = __webpack_require__(178);

      var _declaration2 = _interopRequireDefault(_declaration);

      var _comment = __webpack_require__(176);

      var _comment2 = _interopRequireDefault(_comment);

      var _node = __webpack_require__(179);

      var _node2 = _interopRequireDefault(_node);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
          throw new TypeError('Cannot call a class as a function');
        }
      }

      function _possibleConstructorReturn(self, call) {
        if (!self) {
          throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
        }
        return call && (typeof call === 'object' || typeof call === 'function') ? call : self;
      }

      function _inherits(subClass, superClass) {
        if (typeof superClass !== 'function' && superClass !== null) {
          throw new TypeError(
            'Super expression must either be null or a function, not ' + typeof superClass
          );
        }
        subClass.prototype = Object.create(superClass && superClass.prototype, {
          constructor: { value: subClass, enumerable: false, writable: true, configurable: true },
        });
        if (superClass)
          Object.setPrototypeOf
            ? Object.setPrototypeOf(subClass, superClass)
            : (subClass.__proto__ = superClass);
      }

      function cleanSource(nodes) {
        return nodes.map(function (i) {
          if (i.nodes) i.nodes = cleanSource(i.nodes);
          delete i.source;
          return i;
        });
      }

      /**
       * The {@link Root}, {@link AtRule}, and {@link Rule} container nodes
       * inherit some common methods to help work with their children.
       *
       * Note that all containers can store any content. If you write a rule inside
       * a rule, PostCSS will parse it.
       *
       * @extends Node
       * @abstract
       */

      var Container = (function (_Node) {
        _inherits(Container, _Node);

        function Container() {
          _classCallCheck(this, Container);

          return _possibleConstructorReturn(this, _Node.apply(this, arguments));
        }

        Container.prototype.push = function push(child) {
          child.parent = this;
          this.nodes.push(child);
          return this;
        };

        /**
         * Iterates through the container’s immediate children,
         * calling `callback` for each child.
         *
         * Returning `false` in the callback will break iteration.
         *
         * This method only iterates through the container’s immediate children.
         * If you need to recursively iterate through all the container’s descendant
         * nodes, use {@link Container#walk}.
         *
         * Unlike the for `{}`-cycle or `Array#forEach` this iterator is safe
         * if you are mutating the array of child nodes during iteration.
         * PostCSS will adjust the current index to match the mutations.
         *
         * @param {childIterator} callback - iterator receives each node and index
         *
         * @return {false|undefined} returns `false` if iteration was broke
         *
         * @example
         * const root = postcss.parse('a { color: black; z-index: 1 }');
         * const rule = root.first;
         *
         * for ( let decl of rule.nodes ) {
         *     decl.cloneBefore({ prop: '-webkit-' + decl.prop });
         *     // Cycle will be infinite, because cloneBefore moves the current node
         *     // to the next index
         * }
         *
         * rule.each(decl => {
         *     decl.cloneBefore({ prop: '-webkit-' + decl.prop });
         *     // Will be executed only for color and z-index
         * });
         */

        Container.prototype.each = function each(callback) {
          if (!this.lastEach) this.lastEach = 0;
          if (!this.indexes) this.indexes = {};

          this.lastEach += 1;
          var id = this.lastEach;
          this.indexes[id] = 0;

          if (!this.nodes) return undefined;

          var index = void 0,
            result = void 0;
          while (this.indexes[id] < this.nodes.length) {
            index = this.indexes[id];
            result = callback(this.nodes[index], index);
            if (result === false) break;

            this.indexes[id] += 1;
          }

          delete this.indexes[id];

          return result;
        };

        /**
         * Traverses the container’s descendant nodes, calling callback
         * for each node.
         *
         * Like container.each(), this method is safe to use
         * if you are mutating arrays during iteration.
         *
         * If you only need to iterate through the container’s immediate children,
         * use {@link Container#each}.
         *
         * @param {childIterator} callback - iterator receives each node and index
         *
         * @return {false|undefined} returns `false` if iteration was broke
         *
         * @example
         * root.walk(node => {
         *   // Traverses all descendant nodes.
         * });
         */

        Container.prototype.walk = function walk(callback) {
          return this.each(function (child, i) {
            var result = callback(child, i);
            if (result !== false && child.walk) {
              result = child.walk(callback);
            }
            return result;
          });
        };

        /**
         * Traverses the container’s descendant nodes, calling callback
         * for each declaration node.
         *
         * If you pass a filter, iteration will only happen over declarations
         * with matching properties.
         *
         * Like {@link Container#each}, this method is safe
         * to use if you are mutating arrays during iteration.
         *
         * @param {string|RegExp} [prop]   - string or regular expression
         *                                   to filter declarations by property name
         * @param {childIterator} callback - iterator receives each node and index
         *
         * @return {false|undefined} returns `false` if iteration was broke
         *
         * @example
         * root.walkDecls(decl => {
         *   checkPropertySupport(decl.prop);
         * });
         *
         * root.walkDecls('border-radius', decl => {
         *   decl.remove();
         * });
         *
         * root.walkDecls(/^background/, decl => {
         *   decl.value = takeFirstColorFromGradient(decl.value);
         * });
         */

        Container.prototype.walkDecls = function walkDecls(prop, callback) {
          if (!callback) {
            callback = prop;
            return this.walk(function (child, i) {
              if (child.type === 'decl') {
                return callback(child, i);
              }
            });
          } else if (prop instanceof RegExp) {
            return this.walk(function (child, i) {
              if (child.type === 'decl' && prop.test(child.prop)) {
                return callback(child, i);
              }
            });
          } else {
            return this.walk(function (child, i) {
              if (child.type === 'decl' && child.prop === prop) {
                return callback(child, i);
              }
            });
          }
        };

        /**
         * Traverses the container’s descendant nodes, calling callback
         * for each rule node.
         *
         * If you pass a filter, iteration will only happen over rules
         * with matching selectors.
         *
         * Like {@link Container#each}, this method is safe
         * to use if you are mutating arrays during iteration.
         *
         * @param {string|RegExp} [selector] - string or regular expression
         *                                     to filter rules by selector
         * @param {childIterator} callback   - iterator receives each node and index
         *
         * @return {false|undefined} returns `false` if iteration was broke
         *
         * @example
         * const selectors = [];
         * root.walkRules(rule => {
         *   selectors.push(rule.selector);
         * });
         * console.log(`Your CSS uses ${selectors.length} selectors`);
         */

        Container.prototype.walkRules = function walkRules(selector, callback) {
          if (!callback) {
            callback = selector;

            return this.walk(function (child, i) {
              if (child.type === 'rule') {
                return callback(child, i);
              }
            });
          } else if (selector instanceof RegExp) {
            return this.walk(function (child, i) {
              if (child.type === 'rule' && selector.test(child.selector)) {
                return callback(child, i);
              }
            });
          } else {
            return this.walk(function (child, i) {
              if (child.type === 'rule' && child.selector === selector) {
                return callback(child, i);
              }
            });
          }
        };

        /**
         * Traverses the container’s descendant nodes, calling callback
         * for each at-rule node.
         *
         * If you pass a filter, iteration will only happen over at-rules
         * that have matching names.
         *
         * Like {@link Container#each}, this method is safe
         * to use if you are mutating arrays during iteration.
         *
         * @param {string|RegExp} [name]   - string or regular expression
         *                                   to filter at-rules by name
         * @param {childIterator} callback - iterator receives each node and index
         *
         * @return {false|undefined} returns `false` if iteration was broke
         *
         * @example
         * root.walkAtRules(rule => {
         *   if ( isOld(rule.name) ) rule.remove();
         * });
         *
         * let first = false;
         * root.walkAtRules('charset', rule => {
         *   if ( !first ) {
         *     first = true;
         *   } else {
         *     rule.remove();
         *   }
         * });
         */

        Container.prototype.walkAtRules = function walkAtRules(name, callback) {
          if (!callback) {
            callback = name;
            return this.walk(function (child, i) {
              if (child.type === 'atrule') {
                return callback(child, i);
              }
            });
          } else if (name instanceof RegExp) {
            return this.walk(function (child, i) {
              if (child.type === 'atrule' && name.test(child.name)) {
                return callback(child, i);
              }
            });
          } else {
            return this.walk(function (child, i) {
              if (child.type === 'atrule' && child.name === name) {
                return callback(child, i);
              }
            });
          }
        };

        /**
         * Traverses the container’s descendant nodes, calling callback
         * for each comment node.
         *
         * Like {@link Container#each}, this method is safe
         * to use if you are mutating arrays during iteration.
         *
         * @param {childIterator} callback - iterator receives each node and index
         *
         * @return {false|undefined} returns `false` if iteration was broke
         *
         * @example
         * root.walkComments(comment => {
         *   comment.remove();
         * });
         */

        Container.prototype.walkComments = function walkComments(callback) {
          return this.walk(function (child, i) {
            if (child.type === 'comment') {
              return callback(child, i);
            }
          });
        };

        /**
         * Inserts new nodes to the end of the container.
         *
         * @param {...(Node|object|string|Node[])} children - new nodes
         *
         * @return {Node} this node for methods chain
         *
         * @example
         * const decl1 = postcss.decl({ prop: 'color', value: 'black' });
         * const decl2 = postcss.decl({ prop: 'background-color', value: 'white' });
         * rule.append(decl1, decl2);
         *
         * root.append({ name: 'charset', params: '"UTF-8"' });  // at-rule
         * root.append({ selector: 'a' });                       // rule
         * rule.append({ prop: 'color', value: 'black' });       // declaration
         * rule.append({ text: 'Comment' })                      // comment
         *
         * root.append('a {}');
         * root.first.append('color: black; z-index: 1');
         */

        Container.prototype.append = function append() {
          for (var _len = arguments.length, children = Array(_len), _key = 0; _key < _len; _key++) {
            children[_key] = arguments[_key];
          }

          for (
            var _iterator = children,
              _isArray = Array.isArray(_iterator),
              _i = 0,
              _iterator = _isArray ? _iterator : _iterator[Symbol.iterator]();
            ;

          ) {
            var _ref;

            if (_isArray) {
              if (_i >= _iterator.length) break;
              _ref = _iterator[_i++];
            } else {
              _i = _iterator.next();
              if (_i.done) break;
              _ref = _i.value;
            }

            var child = _ref;

            var nodes = this.normalize(child, this.last);
            for (
              var _iterator2 = nodes,
                _isArray2 = Array.isArray(_iterator2),
                _i2 = 0,
                _iterator2 = _isArray2 ? _iterator2 : _iterator2[Symbol.iterator]();
              ;

            ) {
              var _ref2;

              if (_isArray2) {
                if (_i2 >= _iterator2.length) break;
                _ref2 = _iterator2[_i2++];
              } else {
                _i2 = _iterator2.next();
                if (_i2.done) break;
                _ref2 = _i2.value;
              }

              var node = _ref2;
              this.nodes.push(node);
            }
          }
          return this;
        };

        /**
         * Inserts new nodes to the start of the container.
         *
         * @param {...(Node|object|string|Node[])} children - new nodes
         *
         * @return {Node} this node for methods chain
         *
         * @example
         * const decl1 = postcss.decl({ prop: 'color', value: 'black' });
         * const decl2 = postcss.decl({ prop: 'background-color', value: 'white' });
         * rule.prepend(decl1, decl2);
         *
         * root.append({ name: 'charset', params: '"UTF-8"' });  // at-rule
         * root.append({ selector: 'a' });                       // rule
         * rule.append({ prop: 'color', value: 'black' });       // declaration
         * rule.append({ text: 'Comment' })                      // comment
         *
         * root.append('a {}');
         * root.first.append('color: black; z-index: 1');
         */

        Container.prototype.prepend = function prepend() {
          for (
            var _len2 = arguments.length, children = Array(_len2), _key2 = 0;
            _key2 < _len2;
            _key2++
          ) {
            children[_key2] = arguments[_key2];
          }

          children = children.reverse();
          for (
            var _iterator3 = children,
              _isArray3 = Array.isArray(_iterator3),
              _i3 = 0,
              _iterator3 = _isArray3 ? _iterator3 : _iterator3[Symbol.iterator]();
            ;

          ) {
            var _ref3;

            if (_isArray3) {
              if (_i3 >= _iterator3.length) break;
              _ref3 = _iterator3[_i3++];
            } else {
              _i3 = _iterator3.next();
              if (_i3.done) break;
              _ref3 = _i3.value;
            }

            var child = _ref3;

            var nodes = this.normalize(child, this.first, 'prepend').reverse();
            for (
              var _iterator4 = nodes,
                _isArray4 = Array.isArray(_iterator4),
                _i4 = 0,
                _iterator4 = _isArray4 ? _iterator4 : _iterator4[Symbol.iterator]();
              ;

            ) {
              var _ref4;

              if (_isArray4) {
                if (_i4 >= _iterator4.length) break;
                _ref4 = _iterator4[_i4++];
              } else {
                _i4 = _iterator4.next();
                if (_i4.done) break;
                _ref4 = _i4.value;
              }

              var node = _ref4;
              this.nodes.unshift(node);
            }
            for (var id in this.indexes) {
              this.indexes[id] = this.indexes[id] + nodes.length;
            }
          }
          return this;
        };

        Container.prototype.cleanRaws = function cleanRaws(keepBetween) {
          _Node.prototype.cleanRaws.call(this, keepBetween);
          if (this.nodes) {
            for (
              var _iterator5 = this.nodes,
                _isArray5 = Array.isArray(_iterator5),
                _i5 = 0,
                _iterator5 = _isArray5 ? _iterator5 : _iterator5[Symbol.iterator]();
              ;

            ) {
              var _ref5;

              if (_isArray5) {
                if (_i5 >= _iterator5.length) break;
                _ref5 = _iterator5[_i5++];
              } else {
                _i5 = _iterator5.next();
                if (_i5.done) break;
                _ref5 = _i5.value;
              }

              var node = _ref5;
              node.cleanRaws(keepBetween);
            }
          }
        };

        /**
         * Insert new node before old node within the container.
         *
         * @param {Node|number} exist             - child or child’s index.
         * @param {Node|object|string|Node[]} add - new node
         *
         * @return {Node} this node for methods chain
         *
         * @example
         * rule.insertBefore(decl, decl.clone({ prop: '-webkit-' + decl.prop }));
         */

        Container.prototype.insertBefore = function insertBefore(exist, add) {
          exist = this.index(exist);

          var type = exist === 0 ? 'prepend' : false;
          var nodes = this.normalize(add, this.nodes[exist], type).reverse();
          for (
            var _iterator6 = nodes,
              _isArray6 = Array.isArray(_iterator6),
              _i6 = 0,
              _iterator6 = _isArray6 ? _iterator6 : _iterator6[Symbol.iterator]();
            ;

          ) {
            var _ref6;

            if (_isArray6) {
              if (_i6 >= _iterator6.length) break;
              _ref6 = _iterator6[_i6++];
            } else {
              _i6 = _iterator6.next();
              if (_i6.done) break;
              _ref6 = _i6.value;
            }

            var node = _ref6;
            this.nodes.splice(exist, 0, node);
          }
          var index = void 0;
          for (var id in this.indexes) {
            index = this.indexes[id];
            if (exist <= index) {
              this.indexes[id] = index + nodes.length;
            }
          }

          return this;
        };

        /**
         * Insert new node after old node within the container.
         *
         * @param {Node|number} exist             - child or child’s index
         * @param {Node|object|string|Node[]} add - new node
         *
         * @return {Node} this node for methods chain
         */

        Container.prototype.insertAfter = function insertAfter(exist, add) {
          exist = this.index(exist);

          var nodes = this.normalize(add, this.nodes[exist]).reverse();
          for (
            var _iterator7 = nodes,
              _isArray7 = Array.isArray(_iterator7),
              _i7 = 0,
              _iterator7 = _isArray7 ? _iterator7 : _iterator7[Symbol.iterator]();
            ;

          ) {
            var _ref7;

            if (_isArray7) {
              if (_i7 >= _iterator7.length) break;
              _ref7 = _iterator7[_i7++];
            } else {
              _i7 = _iterator7.next();
              if (_i7.done) break;
              _ref7 = _i7.value;
            }

            var node = _ref7;
            this.nodes.splice(exist + 1, 0, node);
          }
          var index = void 0;
          for (var id in this.indexes) {
            index = this.indexes[id];
            if (exist < index) {
              this.indexes[id] = index + nodes.length;
            }
          }

          return this;
        };

        /**
         * Removes node from the container and cleans the parent properties
         * from the node and its children.
         *
         * @param {Node|number} child - child or child’s index
         *
         * @return {Node} this node for methods chain
         *
         * @example
         * rule.nodes.length  //=> 5
         * rule.removeChild(decl);
         * rule.nodes.length  //=> 4
         * decl.parent        //=> undefined
         */

        Container.prototype.removeChild = function removeChild(child) {
          child = this.index(child);
          this.nodes[child].parent = undefined;
          this.nodes.splice(child, 1);

          var index = void 0;
          for (var id in this.indexes) {
            index = this.indexes[id];
            if (index >= child) {
              this.indexes[id] = index - 1;
            }
          }

          return this;
        };

        /**
         * Removes all children from the container
         * and cleans their parent properties.
         *
         * @return {Node} this node for methods chain
         *
         * @example
         * rule.removeAll();
         * rule.nodes.length //=> 0
         */

        Container.prototype.removeAll = function removeAll() {
          for (
            var _iterator8 = this.nodes,
              _isArray8 = Array.isArray(_iterator8),
              _i8 = 0,
              _iterator8 = _isArray8 ? _iterator8 : _iterator8[Symbol.iterator]();
            ;

          ) {
            var _ref8;

            if (_isArray8) {
              if (_i8 >= _iterator8.length) break;
              _ref8 = _iterator8[_i8++];
            } else {
              _i8 = _iterator8.next();
              if (_i8.done) break;
              _ref8 = _i8.value;
            }

            var node = _ref8;
            node.parent = undefined;
          }
          this.nodes = [];
          return this;
        };

        /**
     * Passes all declaration values within the container that match pattern
     * through callback, replacing those values with the returned result
     * of callback.
     *
     * This method is useful if you are using a custom unit or function
     * and need to iterate through all values.
     *
     * @param {string|RegExp} pattern      - replace pattern
     * @param {object} opts                - options to speed up the search
     * @param {string|string[]} opts.props - an array of property names
     * @param {string} opts.fast           - string that’s used
     *                                       to narrow down values and speed up
                                             the regexp search
     * @param {function|string} callback   - string to replace pattern
     *                                       or callback that returns a new
     *                                       value.
     *                                       The callback will receive
     *                                       the same arguments as those
     *                                       passed to a function parameter
     *                                       of `String#replace`.
     *
     * @return {Node} this node for methods chain
     *
     * @example
     * root.replaceValues(/\d+rem/, { fast: 'rem' }, string => {
     *   return 15 * parseInt(string) + 'px';
     * });
     */

        Container.prototype.replaceValues = function replaceValues(pattern, opts, callback) {
          if (!callback) {
            callback = opts;
            opts = {};
          }

          this.walkDecls(function (decl) {
            if (opts.props && opts.props.indexOf(decl.prop) === -1) return;
            if (opts.fast && decl.value.indexOf(opts.fast) === -1) return;

            decl.value = decl.value.replace(pattern, callback);
          });

          return this;
        };

        /**
         * Returns `true` if callback returns `true`
         * for all of the container’s children.
         *
         * @param {childCondition} condition - iterator returns true or false.
         *
         * @return {boolean} is every child pass condition
         *
         * @example
         * const noPrefixes = rule.every(i => i.prop[0] !== '-');
         */

        Container.prototype.every = function every(condition) {
          return this.nodes.every(condition);
        };

        /**
         * Returns `true` if callback returns `true` for (at least) one
         * of the container’s children.
         *
         * @param {childCondition} condition - iterator returns true or false.
         *
         * @return {boolean} is some child pass condition
         *
         * @example
         * const hasPrefix = rule.some(i => i.prop[0] === '-');
         */

        Container.prototype.some = function some(condition) {
          return this.nodes.some(condition);
        };

        /**
         * Returns a `child`’s index within the {@link Container#nodes} array.
         *
         * @param {Node} child - child of the current container.
         *
         * @return {number} child index
         *
         * @example
         * rule.index( rule.nodes[2] ) //=> 2
         */

        Container.prototype.index = function index(child) {
          if (typeof child === 'number') {
            return child;
          } else {
            return this.nodes.indexOf(child);
          }
        };

        /**
         * The container’s first child.
         *
         * @type {Node}
         *
         * @example
         * rule.first == rules.nodes[0];
         */

        Container.prototype.normalize = function normalize(nodes, sample) {
          var _this2 = this;

          if (typeof nodes === 'string') {
            var parse = __webpack_require__(180);
            nodes = cleanSource(parse(nodes).nodes);
          } else if (Array.isArray(nodes)) {
            nodes = nodes.slice(0);
            for (
              var _iterator9 = nodes,
                _isArray9 = Array.isArray(_iterator9),
                _i9 = 0,
                _iterator9 = _isArray9 ? _iterator9 : _iterator9[Symbol.iterator]();
              ;

            ) {
              var _ref9;

              if (_isArray9) {
                if (_i9 >= _iterator9.length) break;
                _ref9 = _iterator9[_i9++];
              } else {
                _i9 = _iterator9.next();
                if (_i9.done) break;
                _ref9 = _i9.value;
              }

              var i = _ref9;

              if (i.parent) i.parent.removeChild(i, 'ignore');
            }
          } else if (nodes.type === 'root') {
            nodes = nodes.nodes.slice(0);
            for (
              var _iterator10 = nodes,
                _isArray10 = Array.isArray(_iterator10),
                _i11 = 0,
                _iterator10 = _isArray10 ? _iterator10 : _iterator10[Symbol.iterator]();
              ;

            ) {
              var _ref10;

              if (_isArray10) {
                if (_i11 >= _iterator10.length) break;
                _ref10 = _iterator10[_i11++];
              } else {
                _i11 = _iterator10.next();
                if (_i11.done) break;
                _ref10 = _i11.value;
              }

              var _i10 = _ref10;

              if (_i10.parent) _i10.parent.removeChild(_i10, 'ignore');
            }
          } else if (nodes.type) {
            nodes = [nodes];
          } else if (nodes.prop) {
            if (typeof nodes.value === 'undefined') {
              throw new Error('Value field is missed in node creation');
            } else if (typeof nodes.value !== 'string') {
              nodes.value = String(nodes.value);
            }
            nodes = [new _declaration2.default(nodes)];
          } else if (nodes.selector) {
            var Rule = __webpack_require__(118);
            nodes = [new Rule(nodes)];
          } else if (nodes.name) {
            var AtRule = __webpack_require__(117);
            nodes = [new AtRule(nodes)];
          } else if (nodes.text) {
            nodes = [new _comment2.default(nodes)];
          } else {
            throw new Error('Unknown node type in node creation');
          }

          var processed = nodes.map(function (i) {
            if (typeof i.before !== 'function') i = _this2.rebuild(i);

            if (i.parent) i.parent.removeChild(i);
            if (typeof i.raws.before === 'undefined') {
              if (sample && typeof sample.raws.before !== 'undefined') {
                i.raws.before = sample.raws.before.replace(/[^\s]/g, '');
              }
            }
            i.parent = _this2;
            return i;
          });

          return processed;
        };

        Container.prototype.rebuild = function rebuild(node, parent) {
          var _this3 = this;

          var fix = void 0;
          if (node.type === 'root') {
            var Root = __webpack_require__(181);
            fix = new Root();
          } else if (node.type === 'atrule') {
            var AtRule = __webpack_require__(117);
            fix = new AtRule();
          } else if (node.type === 'rule') {
            var Rule = __webpack_require__(118);
            fix = new Rule();
          } else if (node.type === 'decl') {
            fix = new _declaration2.default();
          } else if (node.type === 'comment') {
            fix = new _comment2.default();
          }

          for (var i in node) {
            if (i === 'nodes') {
              fix.nodes = node.nodes.map(function (j) {
                return _this3.rebuild(j, fix);
              });
            } else if (i === 'parent' && parent) {
              fix.parent = parent;
            } else if (node.hasOwnProperty(i)) {
              fix[i] = node[i];
            }
          }

          return fix;
        };

        /**
         * @memberof Container#
         * @member {Node[]} nodes - an array containing the container’s children
         *
         * @example
         * const root = postcss.parse('a { color: black }');
         * root.nodes.length           //=> 1
         * root.nodes[0].selector      //=> 'a'
         * root.nodes[0].nodes[0].prop //=> 'color'
         */

        _createClass(Container, [
          {
            key: 'first',
            get: function get() {
              if (!this.nodes) return undefined;
              return this.nodes[0];
            },

            /**
             * The container’s last child.
             *
             * @type {Node}
             *
             * @example
             * rule.last == rule.nodes[rule.nodes.length - 1];
             */
          },
          {
            key: 'last',
            get: function get() {
              if (!this.nodes) return undefined;
              return this.nodes[this.nodes.length - 1];
            },
          },
        ]);

        return Container;
      })(_node2.default);

      exports.default = Container;

      /**
       * @callback childCondition
       * @param {Node} node    - container child
       * @param {number} index - child index
       * @param {Node[]} nodes - all container children
       * @return {boolean}
       */

      /**
       * @callback childIterator
       * @param {Node} node    - container child
       * @param {number} index - child index
       * @return {false|undefined} returning `false` will break iteration
       */

      module.exports = exports['default'];
      //# sourceMappingURL=data:application/json;charset=utf8;base64,

      /***/
    },
    /* 178 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';

      exports.__esModule = true;

      var _node = __webpack_require__(179);

      var _node2 = _interopRequireDefault(_node);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
          throw new TypeError('Cannot call a class as a function');
        }
      }

      function _possibleConstructorReturn(self, call) {
        if (!self) {
          throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
        }
        return call && (typeof call === 'object' || typeof call === 'function') ? call : self;
      }

      function _inherits(subClass, superClass) {
        if (typeof superClass !== 'function' && superClass !== null) {
          throw new TypeError(
            'Super expression must either be null or a function, not ' + typeof superClass
          );
        }
        subClass.prototype = Object.create(superClass && superClass.prototype, {
          constructor: { value: subClass, enumerable: false, writable: true, configurable: true },
        });
        if (superClass)
          Object.setPrototypeOf
            ? Object.setPrototypeOf(subClass, superClass)
            : (subClass.__proto__ = superClass);
      }

      /**
       * Represents a CSS declaration.
       *
       * @extends Node
       *
       * @example
       * const root = postcss.parse('a { color: black }');
       * const decl = root.first.first;
       * decl.type       //=> 'decl'
       * decl.toString() //=> ' color: black'
       */
      var Declaration = (function (_Node) {
        _inherits(Declaration, _Node);

        function Declaration(defaults) {
          _classCallCheck(this, Declaration);

          var _this = _possibleConstructorReturn(this, _Node.call(this, defaults));

          _this.type = 'decl';
          return _this;
        }

        /**
         * @memberof Declaration#
         * @member {string} prop - the declaration’s property name
         *
         * @example
         * const root = postcss.parse('a { color: black }');
         * const decl = root.first.first;
         * decl.prop //=> 'color'
         */

        /**
         * @memberof Declaration#
         * @member {string} value - the declaration’s value
         *
         * @example
         * const root = postcss.parse('a { color: black }');
         * const decl = root.first.first;
         * decl.value //=> 'black'
         */

        /**
         * @memberof Declaration#
         * @member {boolean} important - `true` if the declaration
         *                               has an !important annotation.
         *
         * @example
         * const root = postcss.parse('a { color: black !important; color: red }');
         * root.first.first.important //=> true
         * root.first.last.important  //=> undefined
         */

        /**
         * @memberof Declaration#
         * @member {object} raws - Information to generate byte-to-byte equal
         *                         node string as it was in the origin input.
         *
         * Every parser saves its own properties,
         * but the default CSS parser uses:
         *
         * * `before`: the space symbols before the node. It also stores `*`
         *   and `_` symbols before the declaration (IE hack).
         * * `between`: the symbols between the property and value
         *   for declarations.
         * * `important`: the content of the important statement,
         *   if it is not just `!important`.
         *
         * PostCSS cleans declaration from comments and extra spaces,
         * but it stores origin content in raws properties.
         * As such, if you don’t change a declaration’s value,
         * PostCSS will use the raw value with comments.
         *
         * @example
         * const root = postcss.parse('a {\n  color:black\n}')
         * root.first.first.raws //=> { before: '\n  ', between: ':' }
         */

        return Declaration;
      })(_node2.default);

      exports.default = Declaration;
      module.exports = exports['default'];
      //# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImRlY2xhcmF0aW9uLmVzNiJdLCJuYW1lcyI6WyJEZWNsYXJhdGlvbiIsImRlZmF1bHRzIiwidHlwZSJdLCJtYXBwaW5ncyI6Ijs7OztBQUFBOzs7Ozs7Ozs7Ozs7QUFFQTs7Ozs7Ozs7Ozs7SUFXTUEsVzs7O0FBRUYsdUJBQVlDLFFBQVosRUFBc0I7QUFBQTs7QUFBQSxpREFDbEIsaUJBQU1BLFFBQU4sQ0FEa0I7O0FBRWxCLFVBQUtDLElBQUwsR0FBWSxNQUFaO0FBRmtCO0FBR3JCOztBQUVEOzs7Ozs7Ozs7O0FBVUE7Ozs7Ozs7Ozs7QUFVQTs7Ozs7Ozs7Ozs7QUFXQTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztrQkEyQldGLFciLCJmaWxlIjoiZGVjbGFyYXRpb24uanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgTm9kZSBmcm9tICcuL25vZGUnO1xuXG4vKipcbiAqIFJlcHJlc2VudHMgYSBDU1MgZGVjbGFyYXRpb24uXG4gKlxuICogQGV4dGVuZHMgTm9kZVxuICpcbiAqIEBleGFtcGxlXG4gKiBjb25zdCByb290ID0gcG9zdGNzcy5wYXJzZSgnYSB7IGNvbG9yOiBibGFjayB9Jyk7XG4gKiBjb25zdCBkZWNsID0gcm9vdC5maXJzdC5maXJzdDtcbiAqIGRlY2wudHlwZSAgICAgICAvLz0+ICdkZWNsJ1xuICogZGVjbC50b1N0cmluZygpIC8vPT4gJyBjb2xvcjogYmxhY2snXG4gKi9cbmNsYXNzIERlY2xhcmF0aW9uIGV4dGVuZHMgTm9kZSB7XG5cbiAgICBjb25zdHJ1Y3RvcihkZWZhdWx0cykge1xuICAgICAgICBzdXBlcihkZWZhdWx0cyk7XG4gICAgICAgIHRoaXMudHlwZSA9ICdkZWNsJztcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiBAbWVtYmVyb2YgRGVjbGFyYXRpb24jXG4gICAgICogQG1lbWJlciB7c3RyaW5nfSBwcm9wIC0gdGhlIGRlY2xhcmF0aW9u4oCZcyBwcm9wZXJ0eSBuYW1lXG4gICAgICpcbiAgICAgKiBAZXhhbXBsZVxuICAgICAqIGNvbnN0IHJvb3QgPSBwb3N0Y3NzLnBhcnNlKCdhIHsgY29sb3I6IGJsYWNrIH0nKTtcbiAgICAgKiBjb25zdCBkZWNsID0gcm9vdC5maXJzdC5maXJzdDtcbiAgICAgKiBkZWNsLnByb3AgLy89PiAnY29sb3InXG4gICAgICovXG5cbiAgICAvKipcbiAgICAgKiBAbWVtYmVyb2YgRGVjbGFyYXRpb24jXG4gICAgICogQG1lbWJlciB7c3RyaW5nfSB2YWx1ZSAtIHRoZSBkZWNsYXJhdGlvbuKAmXMgdmFsdWVcbiAgICAgKlxuICAgICAqIEBleGFtcGxlXG4gICAgICogY29uc3Qgcm9vdCA9IHBvc3Rjc3MucGFyc2UoJ2EgeyBjb2xvcjogYmxhY2sgfScpO1xuICAgICAqIGNvbnN0IGRlY2wgPSByb290LmZpcnN0LmZpcnN0O1xuICAgICAqIGRlY2wudmFsdWUgLy89PiAnYmxhY2snXG4gICAgICovXG5cbiAgICAvKipcbiAgICAgKiBAbWVtYmVyb2YgRGVjbGFyYXRpb24jXG4gICAgICogQG1lbWJlciB7Ym9vbGVhbn0gaW1wb3J0YW50IC0gYHRydWVgIGlmIHRoZSBkZWNsYXJhdGlvblxuICAgICAqICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGhhcyBhbiAhaW1wb3J0YW50IGFubm90YXRpb24uXG4gICAgICpcbiAgICAgKiBAZXhhbXBsZVxuICAgICAqIGNvbnN0IHJvb3QgPSBwb3N0Y3NzLnBhcnNlKCdhIHsgY29sb3I6IGJsYWNrICFpbXBvcnRhbnQ7IGNvbG9yOiByZWQgfScpO1xuICAgICAqIHJvb3QuZmlyc3QuZmlyc3QuaW1wb3J0YW50IC8vPT4gdHJ1ZVxuICAgICAqIHJvb3QuZmlyc3QubGFzdC5pbXBvcnRhbnQgIC8vPT4gdW5kZWZpbmVkXG4gICAgICovXG5cbiAgICAvKipcbiAgICAgKiBAbWVtYmVyb2YgRGVjbGFyYXRpb24jXG4gICAgICogQG1lbWJlciB7b2JqZWN0fSByYXdzIC0gSW5mb3JtYXRpb24gdG8gZ2VuZXJhdGUgYnl0ZS10by1ieXRlIGVxdWFsXG4gICAgICogICAgICAgICAgICAgICAgICAgICAgICAgbm9kZSBzdHJpbmcgYXMgaXQgd2FzIGluIHRoZSBvcmlnaW4gaW5wdXQuXG4gICAgICpcbiAgICAgKiBFdmVyeSBwYXJzZXIgc2F2ZXMgaXRzIG93biBwcm9wZXJ0aWVzLFxuICAgICAqIGJ1dCB0aGUgZGVmYXVsdCBDU1MgcGFyc2VyIHVzZXM6XG4gICAgICpcbiAgICAgKiAqIGBiZWZvcmVgOiB0aGUgc3BhY2Ugc3ltYm9scyBiZWZvcmUgdGhlIG5vZGUuIEl0IGFsc28gc3RvcmVzIGAqYFxuICAgICAqICAgYW5kIGBfYCBzeW1ib2xzIGJlZm9yZSB0aGUgZGVjbGFyYXRpb24gKElFIGhhY2spLlxuICAgICAqICogYGJldHdlZW5gOiB0aGUgc3ltYm9scyBiZXR3ZWVuIHRoZSBwcm9wZXJ0eSBhbmQgdmFsdWVcbiAgICAgKiAgIGZvciBkZWNsYXJhdGlvbnMuXG4gICAgICogKiBgaW1wb3J0YW50YDogdGhlIGNvbnRlbnQgb2YgdGhlIGltcG9ydGFudCBzdGF0ZW1lbnQsXG4gICAgICogICBpZiBpdCBpcyBub3QganVzdCBgIWltcG9ydGFudGAuXG4gICAgICpcbiAgICAgKiBQb3N0Q1NTIGNsZWFucyBkZWNsYXJhdGlvbiBmcm9tIGNvbW1lbnRzIGFuZCBleHRyYSBzcGFjZXMsXG4gICAgICogYnV0IGl0IHN0b3JlcyBvcmlnaW4gY29udGVudCBpbiByYXdzIHByb3BlcnRpZXMuXG4gICAgICogQXMgc3VjaCwgaWYgeW91IGRvbuKAmXQgY2hhbmdlIGEgZGVjbGFyYXRpb27igJlzIHZhbHVlLFxuICAgICAqIFBvc3RDU1Mgd2lsbCB1c2UgdGhlIHJhdyB2YWx1ZSB3aXRoIGNvbW1lbnRzLlxuICAgICAqXG4gICAgICogQGV4YW1wbGVcbiAgICAgKiBjb25zdCByb290ID0gcG9zdGNzcy5wYXJzZSgnYSB7XFxuICBjb2xvcjpibGFja1xcbn0nKVxuICAgICAqIHJvb3QuZmlyc3QuZmlyc3QucmF3cyAvLz0+IHsgYmVmb3JlOiAnXFxuICAnLCBiZXR3ZWVuOiAnOicgfVxuICAgICAqL1xuXG59XG5cbmV4cG9ydCBkZWZhdWx0IERlY2xhcmF0aW9uO1xuIl19

      /***/
    },
    /* 179 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';

      exports.__esModule = true;

      var _typeof =
        typeof Symbol === 'function' && typeof Symbol.iterator === 'symbol'
          ? function (obj) {
              return typeof obj;
            }
          : function (obj) {
              return obj &&
                typeof Symbol === 'function' &&
                obj.constructor === Symbol &&
                obj !== Symbol.prototype
                ? 'symbol'
                : typeof obj;
            };

      var _cssSyntaxError = __webpack_require__(269);

      var _cssSyntaxError2 = _interopRequireDefault(_cssSyntaxError);

      var _stringifier = __webpack_require__(274);

      var _stringifier2 = _interopRequireDefault(_stringifier);

      var _stringify = __webpack_require__(182);

      var _stringify2 = _interopRequireDefault(_stringify);

      var _warnOnce = __webpack_require__(649);

      var _warnOnce2 = _interopRequireDefault(_warnOnce);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
          throw new TypeError('Cannot call a class as a function');
        }
      }

      var cloneNode = function cloneNode(obj, parent) {
        var cloned = new obj.constructor();

        for (var i in obj) {
          if (!obj.hasOwnProperty(i)) continue;
          var value = obj[i];
          var type = typeof value === 'undefined' ? 'undefined' : _typeof(value);

          if (i === 'parent' && type === 'object') {
            if (parent) cloned[i] = parent;
          } else if (i === 'source') {
            cloned[i] = value;
          } else if (value instanceof Array) {
            cloned[i] = value.map(function (j) {
              return cloneNode(j, cloned);
            });
          } else {
            if (type === 'object' && value !== null) value = cloneNode(value);
            cloned[i] = value;
          }
        }

        return cloned;
      };

      /**
       * All node classes inherit the following common methods.
       *
       * @abstract
       */

      var Node = (function () {
        /**
         * @param {object} [defaults] - value for node properties
         */
        function Node() {
          var defaults = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};

          _classCallCheck(this, Node);

          this.raws = {};
          if (
            (typeof defaults === 'undefined' ? 'undefined' : _typeof(defaults)) !== 'object' &&
            typeof defaults !== 'undefined'
          ) {
            throw new Error(
              'PostCSS nodes constructor accepts object, not ' + JSON.stringify(defaults)
            );
          }
          for (var name in defaults) {
            this[name] = defaults[name];
          }
        }

        /**
         * Returns a CssSyntaxError instance containing the original position
         * of the node in the source, showing line and column numbers and also
         * a small excerpt to facilitate debugging.
         *
         * If present, an input source map will be used to get the original position
         * of the source, even from a previous compilation step
         * (e.g., from Sass compilation).
         *
         * This method produces very useful error messages.
         *
         * @param {string} message     - error description
         * @param {object} [opts]      - options
         * @param {string} opts.plugin - plugin name that created this error.
         *                               PostCSS will set it automatically.
         * @param {string} opts.word   - a word inside a node’s string that should
         *                               be highlighted as the source of the error
         * @param {number} opts.index  - an index inside a node’s string that should
         *                               be highlighted as the source of the error
         *
         * @return {CssSyntaxError} error object to throw it
         *
         * @example
         * if ( !variables[name] ) {
         *   throw decl.error('Unknown variable ' + name, { word: name });
         *   // CssSyntaxError: postcss-vars:a.sass:4:3: Unknown variable $black
         *   //   color: $black
         *   // a
         *   //          ^
         *   //   background: white
         * }
         */

        Node.prototype.error = function error(message) {
          var opts = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

          if (this.source) {
            var pos = this.positionBy(opts);
            return this.source.input.error(message, pos.line, pos.column, opts);
          } else {
            return new _cssSyntaxError2.default(message);
          }
        };

        /**
         * This method is provided as a convenience wrapper for {@link Result#warn}.
         *
         * @param {Result} result      - the {@link Result} instance
         *                               that will receive the warning
         * @param {string} text        - warning message
         * @param {object} [opts]      - options
         * @param {string} opts.plugin - plugin name that created this warning.
         *                               PostCSS will set it automatically.
         * @param {string} opts.word   - a word inside a node’s string that should
         *                               be highlighted as the source of the warning
         * @param {number} opts.index  - an index inside a node’s string that should
         *                               be highlighted as the source of the warning
         *
         * @return {Warning} created warning object
         *
         * @example
         * const plugin = postcss.plugin('postcss-deprecated', () => {
         *   return (root, result) => {
         *     root.walkDecls('bad', decl => {
         *       decl.warn(result, 'Deprecated property bad');
         *     });
         *   };
         * });
         */

        Node.prototype.warn = function warn(result, text, opts) {
          var data = { node: this };
          for (var i in opts) {
            data[i] = opts[i];
          }
          return result.warn(text, data);
        };

        /**
         * Removes the node from its parent and cleans the parent properties
         * from the node and its children.
         *
         * @example
         * if ( decl.prop.match(/^-webkit-/) ) {
         *   decl.remove();
         * }
         *
         * @return {Node} node to make calls chain
         */

        Node.prototype.remove = function remove() {
          if (this.parent) {
            this.parent.removeChild(this);
          }
          this.parent = undefined;
          return this;
        };

        /**
         * Returns a CSS string representing the node.
         *
         * @param {stringifier|syntax} [stringifier] - a syntax to use
         *                                             in string generation
         *
         * @return {string} CSS string of this node
         *
         * @example
         * postcss.rule({ selector: 'a' }).toString() //=> "a {}"
         */

        Node.prototype.toString = function toString() {
          var stringifier =
            arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : _stringify2.default;

          if (stringifier.stringify) stringifier = stringifier.stringify;
          var result = '';
          stringifier(this, function (i) {
            result += i;
          });
          return result;
        };

        /**
         * Returns a clone of the node.
         *
         * The resulting cloned node and its (cloned) children will have
         * a clean parent and code style properties.
         *
         * @param {object} [overrides] - new properties to override in the clone.
         *
         * @example
         * const cloned = decl.clone({ prop: '-moz-' + decl.prop });
         * cloned.raws.before  //=> undefined
         * cloned.parent       //=> undefined
         * cloned.toString()   //=> -moz-transform: scale(0)
         *
         * @return {Node} clone of the node
         */

        Node.prototype.clone = function clone() {
          var overrides = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};

          var cloned = cloneNode(this);
          for (var name in overrides) {
            cloned[name] = overrides[name];
          }
          return cloned;
        };

        /**
         * Shortcut to clone the node and insert the resulting cloned node
         * before the current node.
         *
         * @param {object} [overrides] - new properties to override in the clone.
         *
         * @example
         * decl.cloneBefore({ prop: '-moz-' + decl.prop });
         *
         * @return {Node} - new node
         */

        Node.prototype.cloneBefore = function cloneBefore() {
          var overrides = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};

          var cloned = this.clone(overrides);
          this.parent.insertBefore(this, cloned);
          return cloned;
        };

        /**
         * Shortcut to clone the node and insert the resulting cloned node
         * after the current node.
         *
         * @param {object} [overrides] - new properties to override in the clone.
         *
         * @return {Node} - new node
         */

        Node.prototype.cloneAfter = function cloneAfter() {
          var overrides = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};

          var cloned = this.clone(overrides);
          this.parent.insertAfter(this, cloned);
          return cloned;
        };

        /**
         * Inserts node(s) before the current node and removes the current node.
         *
         * @param {...Node} nodes - node(s) to replace current one
         *
         * @example
         * if ( atrule.name == 'mixin' ) {
         *   atrule.replaceWith(mixinRules[atrule.params]);
         * }
         *
         * @return {Node} current node to methods chain
         */

        Node.prototype.replaceWith = function replaceWith() {
          if (this.parent) {
            for (var _len = arguments.length, nodes = Array(_len), _key = 0; _key < _len; _key++) {
              nodes[_key] = arguments[_key];
            }

            for (
              var _iterator = nodes,
                _isArray = Array.isArray(_iterator),
                _i = 0,
                _iterator = _isArray ? _iterator : _iterator[Symbol.iterator]();
              ;

            ) {
              var _ref;

              if (_isArray) {
                if (_i >= _iterator.length) break;
                _ref = _iterator[_i++];
              } else {
                _i = _iterator.next();
                if (_i.done) break;
                _ref = _i.value;
              }

              var node = _ref;

              this.parent.insertBefore(this, node);
            }

            this.remove();
          }

          return this;
        };

        Node.prototype.moveTo = function moveTo(newParent) {
          (0, _warnOnce2.default)('Node#moveTo was deprecated. Use Container#append.');
          this.cleanRaws(this.root() === newParent.root());
          this.remove();
          newParent.append(this);
          return this;
        };

        Node.prototype.moveBefore = function moveBefore(otherNode) {
          (0, _warnOnce2.default)('Node#moveBefore was deprecated. Use Node#before.');
          this.cleanRaws(this.root() === otherNode.root());
          this.remove();
          otherNode.parent.insertBefore(otherNode, this);
          return this;
        };

        Node.prototype.moveAfter = function moveAfter(otherNode) {
          (0, _warnOnce2.default)('Node#moveAfter was deprecated. Use Node#after.');
          this.cleanRaws(this.root() === otherNode.root());
          this.remove();
          otherNode.parent.insertAfter(otherNode, this);
          return this;
        };

        /**
         * Returns the next child of the node’s parent.
         * Returns `undefined` if the current node is the last child.
         *
         * @return {Node|undefined} next node
         *
         * @example
         * if ( comment.text === 'delete next' ) {
         *   const next = comment.next();
         *   if ( next ) {
         *     next.remove();
         *   }
         * }
         */

        Node.prototype.next = function next() {
          var index = this.parent.index(this);
          return this.parent.nodes[index + 1];
        };

        /**
         * Returns the previous child of the node’s parent.
         * Returns `undefined` if the current node is the first child.
         *
         * @return {Node|undefined} previous node
         *
         * @example
         * const annotation = decl.prev();
         * if ( annotation.type == 'comment' ) {
         *  readAnnotation(annotation.text);
         * }
         */

        Node.prototype.prev = function prev() {
          var index = this.parent.index(this);
          return this.parent.nodes[index - 1];
        };

        /**
         * Insert new node before current node to current node’s parent.
         *
         * Just alias for `node.parent.insertBefore(node, add)`.
         *
         * @param {Node|object|string|Node[]} add - new node
         *
         * @return {Node} this node for methods chain.
         *
         * @example
         * decl.before('content: ""');
         */

        Node.prototype.before = function before(add) {
          this.parent.insertBefore(this, add);
          return this;
        };

        /**
         * Insert new node after current node to current node’s parent.
         *
         * Just alias for `node.parent.insertAfter(node, add)`.
         *
         * @param {Node|object|string|Node[]} add - new node
         *
         * @return {Node} this node for methods chain.
         *
         * @example
         * decl.after('color: black');
         */

        Node.prototype.after = function after(add) {
          this.parent.insertAfter(this, add);
          return this;
        };

        Node.prototype.toJSON = function toJSON() {
          var fixed = {};

          for (var name in this) {
            if (!this.hasOwnProperty(name)) continue;
            if (name === 'parent') continue;
            var value = this[name];

            if (value instanceof Array) {
              fixed[name] = value.map(function (i) {
                if (
                  (typeof i === 'undefined' ? 'undefined' : _typeof(i)) === 'object' &&
                  i.toJSON
                ) {
                  return i.toJSON();
                } else {
                  return i;
                }
              });
            } else if (
              (typeof value === 'undefined' ? 'undefined' : _typeof(value)) === 'object' &&
              value.toJSON
            ) {
              fixed[name] = value.toJSON();
            } else {
              fixed[name] = value;
            }
          }

          return fixed;
        };

        /**
         * Returns a {@link Node#raws} value. If the node is missing
         * the code style property (because the node was manually built or cloned),
         * PostCSS will try to autodetect the code style property by looking
         * at other nodes in the tree.
         *
         * @param {string} prop          - name of code style property
         * @param {string} [defaultType] - name of default value, it can be missed
         *                                 if the value is the same as prop
         *
         * @example
         * const root = postcss.parse('a { background: white }');
         * root.nodes[0].append({ prop: 'color', value: 'black' });
         * root.nodes[0].nodes[1].raws.before   //=> undefined
         * root.nodes[0].nodes[1].raw('before') //=> ' '
         *
         * @return {string} code style value
         */

        Node.prototype.raw = function raw(prop, defaultType) {
          var str = new _stringifier2.default();
          return str.raw(this, prop, defaultType);
        };

        /**
         * Finds the Root instance of the node’s tree.
         *
         * @example
         * root.nodes[0].nodes[0].root() === root
         *
         * @return {Root} root parent
         */

        Node.prototype.root = function root() {
          var result = this;
          while (result.parent) {
            result = result.parent;
          }
          return result;
        };

        Node.prototype.cleanRaws = function cleanRaws(keepBetween) {
          delete this.raws.before;
          delete this.raws.after;
          if (!keepBetween) delete this.raws.between;
        };

        Node.prototype.positionInside = function positionInside(index) {
          var string = this.toString();
          var column = this.source.start.column;
          var line = this.source.start.line;

          for (var i = 0; i < index; i++) {
            if (string[i] === '\n') {
              column = 1;
              line += 1;
            } else {
              column += 1;
            }
          }

          return { line: line, column: column };
        };

        Node.prototype.positionBy = function positionBy(opts) {
          var pos = this.source.start;
          if (opts.index) {
            pos = this.positionInside(opts.index);
          } else if (opts.word) {
            var index = this.toString().indexOf(opts.word);
            if (index !== -1) pos = this.positionInside(index);
          }
          return pos;
        };

        /**
         * @memberof Node#
         * @member {string} type - String representing the node’s type.
         *                         Possible values are `root`, `atrule`, `rule`,
         *                         `decl`, or `comment`.
         *
         * @example
         * postcss.decl({ prop: 'color', value: 'black' }).type //=> 'decl'
         */

        /**
         * @memberof Node#
         * @member {Container} parent - the node’s parent node.
         *
         * @example
         * root.nodes[0].parent == root;
         */

        /**
         * @memberof Node#
         * @member {source} source - the input source of the node
         *
         * The property is used in source map generation.
         *
         * If you create a node manually (e.g., with `postcss.decl()`),
         * that node will not have a `source` property and will be absent
         * from the source map. For this reason, the plugin developer should
         * consider cloning nodes to create new ones (in which case the new node’s
         * source will reference the original, cloned node) or setting
         * the `source` property manually.
         *
         * ```js
         * // Bad
         * const prefixed = postcss.decl({
         *   prop: '-moz-' + decl.prop,
         *   value: decl.value
         * });
         *
         * // Good
         * const prefixed = decl.clone({ prop: '-moz-' + decl.prop });
         * ```
         *
         * ```js
         * if ( atrule.name == 'add-link' ) {
         *   const rule = postcss.rule({ selector: 'a', source: atrule.source });
         *   atrule.parent.insertBefore(atrule, rule);
         * }
         * ```
         *
         * @example
         * decl.source.input.from //=> '/home/ai/a.sass'
         * decl.source.start      //=> { line: 10, column: 2 }
         * decl.source.end        //=> { line: 10, column: 12 }
         */

        /**
         * @memberof Node#
         * @member {object} raws - Information to generate byte-to-byte equal
         *                         node string as it was in the origin input.
         *
         * Every parser saves its own properties,
         * but the default CSS parser uses:
         *
         * * `before`: the space symbols before the node. It also stores `*`
         *   and `_` symbols before the declaration (IE hack).
         * * `after`: the space symbols after the last child of the node
         *   to the end of the node.
         * * `between`: the symbols between the property and value
         *   for declarations, selector and `{` for rules, or last parameter
         *   and `{` for at-rules.
         * * `semicolon`: contains true if the last child has
         *   an (optional) semicolon.
         * * `afterName`: the space between the at-rule name and its parameters.
         * * `left`: the space symbols between `/*` and the comment’s text.
         * * `right`: the space symbols between the comment’s text
         *   and <code>*&#47;</code>.
         * * `important`: the content of the important statement,
         *   if it is not just `!important`.
         *
         * PostCSS cleans selectors, declaration values and at-rule parameters
         * from comments and extra spaces, but it stores origin content in raws
         * properties. As such, if you don’t change a declaration’s value,
         * PostCSS will use the raw value with comments.
         *
         * @example
         * const root = postcss.parse('a {\n  color:black\n}')
         * root.first.first.raws //=> { before: '\n  ', between: ':' }
         */

        return Node;
      })();

      exports.default = Node;

      /**
       * @typedef {object} position
       * @property {number} line   - source line in file
       * @property {number} column - source column in file
       */

      /**
       * @typedef {object} source
       * @property {Input} input    - {@link Input} with input file
       * @property {position} start - The starting position of the node’s source
       * @property {position} end   - The ending position of the node’s source
       */

      module.exports = exports['default'];
      //# sourceMappingURL=data:application/json;charset=utf8;base64,

      /***/
    },
    /* 180 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';

      exports.__esModule = true;
      exports.default = parse;

      var _parser = __webpack_require__(643);

      var _parser2 = _interopRequireDefault(_parser);

      var _input = __webpack_require__(270);

      var _input2 = _interopRequireDefault(_input);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      function parse(css, opts) {
        if (opts && opts.safe) {
          throw new Error(
            'Option safe was removed. ' + 'Use parser: require("postcss-safe-parser")'
          );
        }

        var input = new _input2.default(css, opts);
        var parser = new _parser2.default(input);
        try {
          parser.parse();
        } catch (e) {
          if (e.name === 'CssSyntaxError' && opts && opts.from) {
            if (/\.scss$/i.test(opts.from)) {
              e.message +=
                '\nYou tried to parse SCSS with ' +
                'the standard CSS parser; ' +
                'try again with the postcss-scss parser';
            } else if (/\.sass/i.test(opts.from)) {
              e.message +=
                '\nYou tried to parse Sass with ' +
                'the standard CSS parser; ' +
                'try again with the postcss-sass parser';
            } else if (/\.less$/i.test(opts.from)) {
              e.message +=
                '\nYou tried to parse Less with ' +
                'the standard CSS parser; ' +
                'try again with the postcss-less parser';
            }
          }
          throw e;
        }

        return parser.root;
      }
      module.exports = exports['default'];
      //# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInBhcnNlLmVzNiJdLCJuYW1lcyI6WyJwYXJzZSIsImNzcyIsIm9wdHMiLCJzYWZlIiwiRXJyb3IiLCJpbnB1dCIsInBhcnNlciIsImUiLCJuYW1lIiwiZnJvbSIsInRlc3QiLCJtZXNzYWdlIiwicm9vdCJdLCJtYXBwaW5ncyI6Ijs7O2tCQUd3QkEsSzs7QUFIeEI7Ozs7QUFDQTs7Ozs7O0FBRWUsU0FBU0EsS0FBVCxDQUFlQyxHQUFmLEVBQW9CQyxJQUFwQixFQUEwQjtBQUNyQyxRQUFLQSxRQUFRQSxLQUFLQyxJQUFsQixFQUF5QjtBQUNyQixjQUFNLElBQUlDLEtBQUosQ0FBVSw4QkFDQSw0Q0FEVixDQUFOO0FBRUg7O0FBRUQsUUFBSUMsUUFBUSxvQkFBVUosR0FBVixFQUFlQyxJQUFmLENBQVo7QUFDQSxRQUFJSSxTQUFTLHFCQUFXRCxLQUFYLENBQWI7QUFDQSxRQUFJO0FBQ0FDLGVBQU9OLEtBQVA7QUFDSCxLQUZELENBRUUsT0FBT08sQ0FBUCxFQUFVO0FBQ1IsWUFBS0EsRUFBRUMsSUFBRixLQUFXLGdCQUFYLElBQStCTixJQUEvQixJQUF1Q0EsS0FBS08sSUFBakQsRUFBd0Q7QUFDcEQsZ0JBQUssV0FBV0MsSUFBWCxDQUFnQlIsS0FBS08sSUFBckIsQ0FBTCxFQUFrQztBQUM5QkYsa0JBQUVJLE9BQUYsSUFBYSxvQ0FDQSwyQkFEQSxHQUVBLHdDQUZiO0FBR0gsYUFKRCxNQUlPLElBQUssVUFBVUQsSUFBVixDQUFlUixLQUFLTyxJQUFwQixDQUFMLEVBQWlDO0FBQ3BDRixrQkFBRUksT0FBRixJQUFhLG9DQUNBLDJCQURBLEdBRUEsd0NBRmI7QUFHSCxhQUpNLE1BSUEsSUFBSyxXQUFXRCxJQUFYLENBQWdCUixLQUFLTyxJQUFyQixDQUFMLEVBQWtDO0FBQ3JDRixrQkFBRUksT0FBRixJQUFhLG9DQUNBLDJCQURBLEdBRUEsd0NBRmI7QUFHSDtBQUNKO0FBQ0QsY0FBTUosQ0FBTjtBQUNIOztBQUVELFdBQU9ELE9BQU9NLElBQWQ7QUFDSCIsImZpbGUiOiJwYXJzZS5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBQYXJzZXIgZnJvbSAnLi9wYXJzZXInO1xuaW1wb3J0IElucHV0ICBmcm9tICcuL2lucHV0JztcblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gcGFyc2UoY3NzLCBvcHRzKSB7XG4gICAgaWYgKCBvcHRzICYmIG9wdHMuc2FmZSApIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdPcHRpb24gc2FmZSB3YXMgcmVtb3ZlZC4gJyArXG4gICAgICAgICAgICAgICAgICAgICAgICAnVXNlIHBhcnNlcjogcmVxdWlyZShcInBvc3Rjc3Mtc2FmZS1wYXJzZXJcIiknKTtcbiAgICB9XG5cbiAgICBsZXQgaW5wdXQgPSBuZXcgSW5wdXQoY3NzLCBvcHRzKTtcbiAgICBsZXQgcGFyc2VyID0gbmV3IFBhcnNlcihpbnB1dCk7XG4gICAgdHJ5IHtcbiAgICAgICAgcGFyc2VyLnBhcnNlKCk7XG4gICAgfSBjYXRjaCAoZSkge1xuICAgICAgICBpZiAoIGUubmFtZSA9PT0gJ0Nzc1N5bnRheEVycm9yJyAmJiBvcHRzICYmIG9wdHMuZnJvbSApIHtcbiAgICAgICAgICAgIGlmICggL1xcLnNjc3MkL2kudGVzdChvcHRzLmZyb20pICkge1xuICAgICAgICAgICAgICAgIGUubWVzc2FnZSArPSAnXFxuWW91IHRyaWVkIHRvIHBhcnNlIFNDU1Mgd2l0aCAnICtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJ3RoZSBzdGFuZGFyZCBDU1MgcGFyc2VyOyAnICtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJ3RyeSBhZ2FpbiB3aXRoIHRoZSBwb3N0Y3NzLXNjc3MgcGFyc2VyJztcbiAgICAgICAgICAgIH0gZWxzZSBpZiAoIC9cXC5zYXNzL2kudGVzdChvcHRzLmZyb20pICkge1xuICAgICAgICAgICAgICAgIGUubWVzc2FnZSArPSAnXFxuWW91IHRyaWVkIHRvIHBhcnNlIFNhc3Mgd2l0aCAnICtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJ3RoZSBzdGFuZGFyZCBDU1MgcGFyc2VyOyAnICtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJ3RyeSBhZ2FpbiB3aXRoIHRoZSBwb3N0Y3NzLXNhc3MgcGFyc2VyJztcbiAgICAgICAgICAgIH0gZWxzZSBpZiAoIC9cXC5sZXNzJC9pLnRlc3Qob3B0cy5mcm9tKSApIHtcbiAgICAgICAgICAgICAgICBlLm1lc3NhZ2UgKz0gJ1xcbllvdSB0cmllZCB0byBwYXJzZSBMZXNzIHdpdGggJyArXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICd0aGUgc3RhbmRhcmQgQ1NTIHBhcnNlcjsgJyArXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICd0cnkgYWdhaW4gd2l0aCB0aGUgcG9zdGNzcy1sZXNzIHBhcnNlcic7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgdGhyb3cgZTtcbiAgICB9XG5cbiAgICByZXR1cm4gcGFyc2VyLnJvb3Q7XG59XG4iXX0=

      /***/
    },
    /* 181 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';

      exports.__esModule = true;

      var _container = __webpack_require__(177);

      var _container2 = _interopRequireDefault(_container);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
          throw new TypeError('Cannot call a class as a function');
        }
      }

      function _possibleConstructorReturn(self, call) {
        if (!self) {
          throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
        }
        return call && (typeof call === 'object' || typeof call === 'function') ? call : self;
      }

      function _inherits(subClass, superClass) {
        if (typeof superClass !== 'function' && superClass !== null) {
          throw new TypeError(
            'Super expression must either be null or a function, not ' + typeof superClass
          );
        }
        subClass.prototype = Object.create(superClass && superClass.prototype, {
          constructor: { value: subClass, enumerable: false, writable: true, configurable: true },
        });
        if (superClass)
          Object.setPrototypeOf
            ? Object.setPrototypeOf(subClass, superClass)
            : (subClass.__proto__ = superClass);
      }

      /**
       * Represents a CSS file and contains all its parsed nodes.
       *
       * @extends Container
       *
       * @example
       * const root = postcss.parse('a{color:black} b{z-index:2}');
       * root.type         //=> 'root'
       * root.nodes.length //=> 2
       */
      var Root = (function (_Container) {
        _inherits(Root, _Container);

        function Root(defaults) {
          _classCallCheck(this, Root);

          var _this = _possibleConstructorReturn(this, _Container.call(this, defaults));

          _this.type = 'root';
          if (!_this.nodes) _this.nodes = [];
          return _this;
        }

        Root.prototype.removeChild = function removeChild(child, ignore) {
          var index = this.index(child);

          if (!ignore && index === 0 && this.nodes.length > 1) {
            this.nodes[1].raws.before = this.nodes[index].raws.before;
          }

          return _Container.prototype.removeChild.call(this, child);
        };

        Root.prototype.normalize = function normalize(child, sample, type) {
          var nodes = _Container.prototype.normalize.call(this, child);

          if (sample) {
            if (type === 'prepend') {
              if (this.nodes.length > 1) {
                sample.raws.before = this.nodes[1].raws.before;
              } else {
                delete sample.raws.before;
              }
            } else if (this.first !== sample) {
              for (
                var _iterator = nodes,
                  _isArray = Array.isArray(_iterator),
                  _i = 0,
                  _iterator = _isArray ? _iterator : _iterator[Symbol.iterator]();
                ;

              ) {
                var _ref;

                if (_isArray) {
                  if (_i >= _iterator.length) break;
                  _ref = _iterator[_i++];
                } else {
                  _i = _iterator.next();
                  if (_i.done) break;
                  _ref = _i.value;
                }

                var node = _ref;

                node.raws.before = sample.raws.before;
              }
            }
          }

          return nodes;
        };

        /**
         * Returns a {@link Result} instance representing the root’s CSS.
         *
         * @param {processOptions} [opts] - options with only `to` and `map` keys
         *
         * @return {Result} result with current root’s CSS
         *
         * @example
         * const root1 = postcss.parse(css1, { from: 'a.css' });
         * const root2 = postcss.parse(css2, { from: 'b.css' });
         * root1.append(root2);
         * const result = root1.toResult({ to: 'all.css', map: true });
         */

        Root.prototype.toResult = function toResult() {
          var opts = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};

          var LazyResult = __webpack_require__(271);
          var Processor = __webpack_require__(273);

          var lazy = new LazyResult(new Processor(), this, opts);
          return lazy.stringify();
        };

        /**
         * @memberof Root#
         * @member {object} raws - Information to generate byte-to-byte equal
         *                         node string as it was in the origin input.
         *
         * Every parser saves its own properties,
         * but the default CSS parser uses:
         *
         * * `after`: the space symbols after the last child to the end of file.
         * * `semicolon`: is the last child has an (optional) semicolon.
         *
         * @example
         * postcss.parse('a {}\n').raws //=> { after: '\n' }
         * postcss.parse('a {}').raws   //=> { after: '' }
         */

        return Root;
      })(_container2.default);

      exports.default = Root;
      module.exports = exports['default'];
      //# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInJvb3QuZXM2Il0sIm5hbWVzIjpbIlJvb3QiLCJkZWZhdWx0cyIsInR5cGUiLCJub2RlcyIsInJlbW92ZUNoaWxkIiwiY2hpbGQiLCJpZ25vcmUiLCJpbmRleCIsImxlbmd0aCIsInJhd3MiLCJiZWZvcmUiLCJub3JtYWxpemUiLCJzYW1wbGUiLCJmaXJzdCIsIm5vZGUiLCJ0b1Jlc3VsdCIsIm9wdHMiLCJMYXp5UmVzdWx0IiwicmVxdWlyZSIsIlByb2Nlc3NvciIsImxhenkiLCJzdHJpbmdpZnkiXSwibWFwcGluZ3MiOiI7Ozs7QUFBQTs7Ozs7Ozs7Ozs7O0FBRUE7Ozs7Ozs7Ozs7SUFVTUEsSTs7O0FBRUYsa0JBQVlDLFFBQVosRUFBc0I7QUFBQTs7QUFBQSxxREFDbEIsc0JBQU1BLFFBQU4sQ0FEa0I7O0FBRWxCLGNBQUtDLElBQUwsR0FBWSxNQUFaO0FBQ0EsWUFBSyxDQUFDLE1BQUtDLEtBQVgsRUFBbUIsTUFBS0EsS0FBTCxHQUFhLEVBQWI7QUFIRDtBQUlyQjs7bUJBRURDLFcsd0JBQVlDLEssRUFBT0MsTSxFQUFRO0FBQ3ZCLFlBQU1DLFFBQVEsS0FBS0EsS0FBTCxDQUFXRixLQUFYLENBQWQ7O0FBRUEsWUFBSyxDQUFDQyxNQUFELElBQVdDLFVBQVUsQ0FBckIsSUFBMEIsS0FBS0osS0FBTCxDQUFXSyxNQUFYLEdBQW9CLENBQW5ELEVBQXVEO0FBQ25ELGlCQUFLTCxLQUFMLENBQVcsQ0FBWCxFQUFjTSxJQUFkLENBQW1CQyxNQUFuQixHQUE0QixLQUFLUCxLQUFMLENBQVdJLEtBQVgsRUFBa0JFLElBQWxCLENBQXVCQyxNQUFuRDtBQUNIOztBQUVELGVBQU8scUJBQU1OLFdBQU4sWUFBa0JDLEtBQWxCLENBQVA7QUFDSCxLOzttQkFFRE0sUyxzQkFBVU4sSyxFQUFPTyxNLEVBQVFWLEksRUFBTTtBQUMzQixZQUFJQyxRQUFRLHFCQUFNUSxTQUFOLFlBQWdCTixLQUFoQixDQUFaOztBQUVBLFlBQUtPLE1BQUwsRUFBYztBQUNWLGdCQUFLVixTQUFTLFNBQWQsRUFBMEI7QUFDdEIsb0JBQUssS0FBS0MsS0FBTCxDQUFXSyxNQUFYLEdBQW9CLENBQXpCLEVBQTZCO0FBQ3pCSSwyQkFBT0gsSUFBUCxDQUFZQyxNQUFaLEdBQXFCLEtBQUtQLEtBQUwsQ0FBVyxDQUFYLEVBQWNNLElBQWQsQ0FBbUJDLE1BQXhDO0FBQ0gsaUJBRkQsTUFFTztBQUNILDJCQUFPRSxPQUFPSCxJQUFQLENBQVlDLE1BQW5CO0FBQ0g7QUFDSixhQU5ELE1BTU8sSUFBSyxLQUFLRyxLQUFMLEtBQWVELE1BQXBCLEVBQTZCO0FBQ2hDLHFDQUFrQlQsS0FBbEIsa0hBQTBCO0FBQUE7O0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTs7QUFBQSx3QkFBaEJXLElBQWdCOztBQUN0QkEseUJBQUtMLElBQUwsQ0FBVUMsTUFBVixHQUFtQkUsT0FBT0gsSUFBUCxDQUFZQyxNQUEvQjtBQUNIO0FBQ0o7QUFDSjs7QUFFRCxlQUFPUCxLQUFQO0FBQ0gsSzs7QUFFRDs7Ozs7Ozs7Ozs7Ozs7O21CQWFBWSxRLHVCQUFxQjtBQUFBLFlBQVpDLElBQVksdUVBQUwsRUFBSzs7QUFDakIsWUFBSUMsYUFBYUMsUUFBUSxlQUFSLENBQWpCO0FBQ0EsWUFBSUMsWUFBYUQsUUFBUSxhQUFSLENBQWpCOztBQUVBLFlBQUlFLE9BQU8sSUFBSUgsVUFBSixDQUFlLElBQUlFLFNBQUosRUFBZixFQUFnQyxJQUFoQyxFQUFzQ0gsSUFBdEMsQ0FBWDtBQUNBLGVBQU9JLEtBQUtDLFNBQUwsRUFBUDtBQUNILEs7O0FBRUQ7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7a0JBa0JXckIsSSIsImZpbGUiOiJyb290LmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IENvbnRhaW5lciBmcm9tICcuL2NvbnRhaW5lcic7XG5cbi8qKlxuICogUmVwcmVzZW50cyBhIENTUyBmaWxlIGFuZCBjb250YWlucyBhbGwgaXRzIHBhcnNlZCBub2Rlcy5cbiAqXG4gKiBAZXh0ZW5kcyBDb250YWluZXJcbiAqXG4gKiBAZXhhbXBsZVxuICogY29uc3Qgcm9vdCA9IHBvc3Rjc3MucGFyc2UoJ2F7Y29sb3I6YmxhY2t9IGJ7ei1pbmRleDoyfScpO1xuICogcm9vdC50eXBlICAgICAgICAgLy89PiAncm9vdCdcbiAqIHJvb3Qubm9kZXMubGVuZ3RoIC8vPT4gMlxuICovXG5jbGFzcyBSb290IGV4dGVuZHMgQ29udGFpbmVyIHtcblxuICAgIGNvbnN0cnVjdG9yKGRlZmF1bHRzKSB7XG4gICAgICAgIHN1cGVyKGRlZmF1bHRzKTtcbiAgICAgICAgdGhpcy50eXBlID0gJ3Jvb3QnO1xuICAgICAgICBpZiAoICF0aGlzLm5vZGVzICkgdGhpcy5ub2RlcyA9IFtdO1xuICAgIH1cblxuICAgIHJlbW92ZUNoaWxkKGNoaWxkLCBpZ25vcmUpIHtcbiAgICAgICAgY29uc3QgaW5kZXggPSB0aGlzLmluZGV4KGNoaWxkKTtcblxuICAgICAgICBpZiAoICFpZ25vcmUgJiYgaW5kZXggPT09IDAgJiYgdGhpcy5ub2Rlcy5sZW5ndGggPiAxICkge1xuICAgICAgICAgICAgdGhpcy5ub2Rlc1sxXS5yYXdzLmJlZm9yZSA9IHRoaXMubm9kZXNbaW5kZXhdLnJhd3MuYmVmb3JlO1xuICAgICAgICB9XG5cbiAgICAgICAgcmV0dXJuIHN1cGVyLnJlbW92ZUNoaWxkKGNoaWxkKTtcbiAgICB9XG5cbiAgICBub3JtYWxpemUoY2hpbGQsIHNhbXBsZSwgdHlwZSkge1xuICAgICAgICBsZXQgbm9kZXMgPSBzdXBlci5ub3JtYWxpemUoY2hpbGQpO1xuXG4gICAgICAgIGlmICggc2FtcGxlICkge1xuICAgICAgICAgICAgaWYgKCB0eXBlID09PSAncHJlcGVuZCcgKSB7XG4gICAgICAgICAgICAgICAgaWYgKCB0aGlzLm5vZGVzLmxlbmd0aCA+IDEgKSB7XG4gICAgICAgICAgICAgICAgICAgIHNhbXBsZS5yYXdzLmJlZm9yZSA9IHRoaXMubm9kZXNbMV0ucmF3cy5iZWZvcmU7XG4gICAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgZGVsZXRlIHNhbXBsZS5yYXdzLmJlZm9yZTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9IGVsc2UgaWYgKCB0aGlzLmZpcnN0ICE9PSBzYW1wbGUgKSB7XG4gICAgICAgICAgICAgICAgZm9yICggbGV0IG5vZGUgb2Ygbm9kZXMgKSB7XG4gICAgICAgICAgICAgICAgICAgIG5vZGUucmF3cy5iZWZvcmUgPSBzYW1wbGUucmF3cy5iZWZvcmU7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICB9XG5cbiAgICAgICAgcmV0dXJuIG5vZGVzO1xuICAgIH1cblxuICAgIC8qKlxuICAgICAqIFJldHVybnMgYSB7QGxpbmsgUmVzdWx0fSBpbnN0YW5jZSByZXByZXNlbnRpbmcgdGhlIHJvb3TigJlzIENTUy5cbiAgICAgKlxuICAgICAqIEBwYXJhbSB7cHJvY2Vzc09wdGlvbnN9IFtvcHRzXSAtIG9wdGlvbnMgd2l0aCBvbmx5IGB0b2AgYW5kIGBtYXBgIGtleXNcbiAgICAgKlxuICAgICAqIEByZXR1cm4ge1Jlc3VsdH0gcmVzdWx0IHdpdGggY3VycmVudCByb2904oCZcyBDU1NcbiAgICAgKlxuICAgICAqIEBleGFtcGxlXG4gICAgICogY29uc3Qgcm9vdDEgPSBwb3N0Y3NzLnBhcnNlKGNzczEsIHsgZnJvbTogJ2EuY3NzJyB9KTtcbiAgICAgKiBjb25zdCByb290MiA9IHBvc3Rjc3MucGFyc2UoY3NzMiwgeyBmcm9tOiAnYi5jc3MnIH0pO1xuICAgICAqIHJvb3QxLmFwcGVuZChyb290Mik7XG4gICAgICogY29uc3QgcmVzdWx0ID0gcm9vdDEudG9SZXN1bHQoeyB0bzogJ2FsbC5jc3MnLCBtYXA6IHRydWUgfSk7XG4gICAgICovXG4gICAgdG9SZXN1bHQob3B0cyA9IHsgfSkge1xuICAgICAgICBsZXQgTGF6eVJlc3VsdCA9IHJlcXVpcmUoJy4vbGF6eS1yZXN1bHQnKTtcbiAgICAgICAgbGV0IFByb2Nlc3NvciAgPSByZXF1aXJlKCcuL3Byb2Nlc3NvcicpO1xuXG4gICAgICAgIGxldCBsYXp5ID0gbmV3IExhenlSZXN1bHQobmV3IFByb2Nlc3NvcigpLCB0aGlzLCBvcHRzKTtcbiAgICAgICAgcmV0dXJuIGxhenkuc3RyaW5naWZ5KCk7XG4gICAgfVxuXG4gICAgLyoqXG4gICAgICogQG1lbWJlcm9mIFJvb3QjXG4gICAgICogQG1lbWJlciB7b2JqZWN0fSByYXdzIC0gSW5mb3JtYXRpb24gdG8gZ2VuZXJhdGUgYnl0ZS10by1ieXRlIGVxdWFsXG4gICAgICogICAgICAgICAgICAgICAgICAgICAgICAgbm9kZSBzdHJpbmcgYXMgaXQgd2FzIGluIHRoZSBvcmlnaW4gaW5wdXQuXG4gICAgICpcbiAgICAgKiBFdmVyeSBwYXJzZXIgc2F2ZXMgaXRzIG93biBwcm9wZXJ0aWVzLFxuICAgICAqIGJ1dCB0aGUgZGVmYXVsdCBDU1MgcGFyc2VyIHVzZXM6XG4gICAgICpcbiAgICAgKiAqIGBhZnRlcmA6IHRoZSBzcGFjZSBzeW1ib2xzIGFmdGVyIHRoZSBsYXN0IGNoaWxkIHRvIHRoZSBlbmQgb2YgZmlsZS5cbiAgICAgKiAqIGBzZW1pY29sb25gOiBpcyB0aGUgbGFzdCBjaGlsZCBoYXMgYW4gKG9wdGlvbmFsKSBzZW1pY29sb24uXG4gICAgICpcbiAgICAgKiBAZXhhbXBsZVxuICAgICAqIHBvc3Rjc3MucGFyc2UoJ2Ege31cXG4nKS5yYXdzIC8vPT4geyBhZnRlcjogJ1xcbicgfVxuICAgICAqIHBvc3Rjc3MucGFyc2UoJ2Ege30nKS5yYXdzICAgLy89PiB7IGFmdGVyOiAnJyB9XG4gICAgICovXG5cbn1cblxuZXhwb3J0IGRlZmF1bHQgUm9vdDtcbiJdfQ==

      /***/
    },
    /* 182 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';

      exports.__esModule = true;
      exports.default = stringify;

      var _stringifier = __webpack_require__(274);

      var _stringifier2 = _interopRequireDefault(_stringifier);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      function stringify(node, builder) {
        var str = new _stringifier2.default(builder);
        str.stringify(node);
      }
      module.exports = exports['default'];
      //# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInN0cmluZ2lmeS5lczYiXSwibmFtZXMiOlsic3RyaW5naWZ5Iiwibm9kZSIsImJ1aWxkZXIiLCJzdHIiXSwibWFwcGluZ3MiOiI7OztrQkFFd0JBLFM7O0FBRnhCOzs7Ozs7QUFFZSxTQUFTQSxTQUFULENBQW1CQyxJQUFuQixFQUF5QkMsT0FBekIsRUFBa0M7QUFDN0MsUUFBSUMsTUFBTSwwQkFBZ0JELE9BQWhCLENBQVY7QUFDQUMsUUFBSUgsU0FBSixDQUFjQyxJQUFkO0FBQ0giLCJmaWxlIjoic3RyaW5naWZ5LmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFN0cmluZ2lmaWVyIGZyb20gJy4vc3RyaW5naWZpZXInO1xuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBzdHJpbmdpZnkobm9kZSwgYnVpbGRlcikge1xuICAgIGxldCBzdHIgPSBuZXcgU3RyaW5naWZpZXIoYnVpbGRlcik7XG4gICAgc3RyLnN0cmluZ2lmeShub2RlKTtcbn1cbiJdfQ==

      /***/
    },
    /* 183 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';
      /* WEBPACK VAR INJECTION */ (function (process) {
        if (
          !process.version ||
          process.version.indexOf('v0.') === 0 ||
          (process.version.indexOf('v1.') === 0 && process.version.indexOf('v1.8.') !== 0)
        ) {
          module.exports = nextTick;
        } else {
          module.exports = process.nextTick;
        }

        function nextTick(fn, arg1, arg2, arg3) {
          if (typeof fn !== 'function') {
            throw new TypeError('"callback" argument must be a function');
          }
          var len = arguments.length;
          var args, i;
          switch (len) {
            case 0:
            case 1:
              return process.nextTick(fn);
            case 2:
              return process.nextTick(function afterTickOne() {
                fn.call(null, arg1);
              });
            case 3:
              return process.nextTick(function afterTickTwo() {
                fn.call(null, arg1, arg2);
              });
            case 4:
              return process.nextTick(function afterTickThree() {
                fn.call(null, arg1, arg2, arg3);
              });
            default:
              args = new Array(len - 1);
              i = 0;
              while (i < args.length) {
                args[i++] = arguments[i];
              }
              return process.nextTick(function afterTick() {
                fn.apply(null, args);
              });
          }
        }

        /* WEBPACK VAR INJECTION */
      }.call(exports, __webpack_require__(1)));

      /***/
    },
    /* 184 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';
      /**
       * Copyright 2013-present, Facebook, Inc.
       * All rights reserved.
       *
       * This source code is licensed under the BSD-style license found in the
       * LICENSE file in the root directory of this source tree. An additional grant
       * of patent rights can be found in the PATENTS file in the same directory.
       */

      var ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';

      module.exports = ReactPropTypesSecret;

      /***/
    },
    /* 185 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';
      /* WEBPACK VAR INJECTION */ (function (process) {
        /**
         * Copyright 2013-present, Facebook, Inc.
         * All rights reserved.
         *
         * This source code is licensed under the BSD-style license found in the
         * LICENSE file in the root directory of this source tree. An additional grant
         * of patent rights can be found in the PATENTS file in the same directory.
         *
         */

        var DOMLazyTree = __webpack_require__(83);
        var Danger = __webpack_require__(666);
        var ReactDOMComponentTree = __webpack_require__(15);
        var ReactInstrumentation = __webpack_require__(32);

        var createMicrosoftUnsafeLocalFunction = __webpack_require__(193);
        var setInnerHTML = __webpack_require__(125);
        var setTextContent = __webpack_require__(300);

        function getNodeAfter(parentNode, node) {
          // Special case for text components, which return [open, close] comments
          // from getHostNode.
          if (Array.isArray(node)) {
            node = node[1];
          }
          return node ? node.nextSibling : parentNode.firstChild;
        }

        /**
         * Inserts `childNode` as a child of `parentNode` at the `index`.
         *
         * @param {DOMElement} parentNode Parent node in which to insert.
         * @param {DOMElement} childNode Child node to insert.
         * @param {number} index Index at which to insert the child.
         * @internal
         */
        var insertChildAt = createMicrosoftUnsafeLocalFunction(function (
          parentNode,
          childNode,
          referenceNode
        ) {
          // We rely exclusively on `insertBefore(node, null)` instead of also using
          // `appendChild(node)`. (Using `undefined` is not allowed by all browsers so
          // we are careful to use `null`.)
          parentNode.insertBefore(childNode, referenceNode);
        });

        function insertLazyTreeChildAt(parentNode, childTree, referenceNode) {
          DOMLazyTree.insertTreeBefore(parentNode, childTree, referenceNode);
        }

        function moveChild(parentNode, childNode, referenceNode) {
          if (Array.isArray(childNode)) {
            moveDelimitedText(parentNode, childNode[0], childNode[1], referenceNode);
          } else {
            insertChildAt(parentNode, childNode, referenceNode);
          }
        }

        function removeChild(parentNode, childNode) {
          if (Array.isArray(childNode)) {
            var closingComment = childNode[1];
            childNode = childNode[0];
            removeDelimitedText(parentNode, childNode, closingComment);
            parentNode.removeChild(closingComment);
          }
          parentNode.removeChild(childNode);
        }

        function moveDelimitedText(parentNode, openingComment, closingComment, referenceNode) {
          var node = openingComment;
          while (true) {
            var nextNode = node.nextSibling;
            insertChildAt(parentNode, node, referenceNode);
            if (node === closingComment) {
              break;
            }
            node = nextNode;
          }
        }

        function removeDelimitedText(parentNode, startNode, closingComment) {
          while (true) {
            var node = startNode.nextSibling;
            if (node === closingComment) {
              // The closing comment is removed by ReactMultiChild.
              break;
            } else {
              parentNode.removeChild(node);
            }
          }
        }

        function replaceDelimitedText(openingComment, closingComment, stringText) {
          var parentNode = openingComment.parentNode;
          var nodeAfterComment = openingComment.nextSibling;
          if (nodeAfterComment === closingComment) {
            // There are no text nodes between the opening and closing comments; insert
            // a new one if stringText isn't empty.
            if (stringText) {
              insertChildAt(parentNode, document.createTextNode(stringText), nodeAfterComment);
            }
          } else {
            if (stringText) {
              // Set the text content of the first node after the opening comment, and
              // remove all following nodes up until the closing comment.
              setTextContent(nodeAfterComment, stringText);
              removeDelimitedText(parentNode, nodeAfterComment, closingComment);
            } else {
              removeDelimitedText(parentNode, openingComment, closingComment);
            }
          }

          if (process.env.NODE_ENV !== 'production') {
            ReactInstrumentation.debugTool.onHostOperation({
              instanceID: ReactDOMComponentTree.getInstanceFromNode(openingComment)._debugID,
              type: 'replace text',
              payload: stringText,
            });
          }
        }

        var dangerouslyReplaceNodeWithMarkup = Danger.dangerouslyReplaceNodeWithMarkup;
        if (process.env.NODE_ENV !== 'production') {
          dangerouslyReplaceNodeWithMarkup = function (oldChild, markup, prevInstance) {
            Danger.dangerouslyReplaceNodeWithMarkup(oldChild, markup);
            if (prevInstance._debugID !== 0) {
              ReactInstrumentation.debugTool.onHostOperation({
                instanceID: prevInstance._debugID,
                type: 'replace with',
                payload: markup.toString(),
              });
            } else {
              var nextInstance = ReactDOMComponentTree.getInstanceFromNode(markup.node);
              if (nextInstance._debugID !== 0) {
                ReactInstrumentation.debugTool.onHostOperation({
                  instanceID: nextInstance._debugID,
                  type: 'mount',
                  payload: markup.toString(),
                });
              }
            }
          };
        }

        /**
         * Operations for updating with DOM children.
         */
        var DOMChildrenOperations = {
          dangerouslyReplaceNodeWithMarkup: dangerouslyReplaceNodeWithMarkup,

          replaceDelimitedText: replaceDelimitedText,

          /**
           * Updates a component's children by processing a series of updates. The
           * update configurations are each expected to have a `parentNode` property.
           *
           * @param {array<object>} updates List of update configurations.
           * @internal
           */
          processUpdates: function (parentNode, updates) {
            if (process.env.NODE_ENV !== 'production') {
              var parentNodeDebugID = ReactDOMComponentTree.getInstanceFromNode(parentNode)
                ._debugID;
            }

            for (var k = 0; k < updates.length; k++) {
              var update = updates[k];
              switch (update.type) {
                case 'INSERT_MARKUP':
                  insertLazyTreeChildAt(
                    parentNode,
                    update.content,
                    getNodeAfter(parentNode, update.afterNode)
                  );
                  if (process.env.NODE_ENV !== 'production') {
                    ReactInstrumentation.debugTool.onHostOperation({
                      instanceID: parentNodeDebugID,
                      type: 'insert child',
                      payload: { toIndex: update.toIndex, content: update.content.toString() },
                    });
                  }
                  break;
                case 'MOVE_EXISTING':
                  moveChild(
                    parentNode,
                    update.fromNode,
                    getNodeAfter(parentNode, update.afterNode)
                  );
                  if (process.env.NODE_ENV !== 'production') {
                    ReactInstrumentation.debugTool.onHostOperation({
                      instanceID: parentNodeDebugID,
                      type: 'move child',
                      payload: { fromIndex: update.fromIndex, toIndex: update.toIndex },
                    });
                  }
                  break;
                case 'SET_MARKUP':
                  setInnerHTML(parentNode, update.content);
                  if (process.env.NODE_ENV !== 'production') {
                    ReactInstrumentation.debugTool.onHostOperation({
                      instanceID: parentNodeDebugID,
                      type: 'replace children',
                      payload: update.content.toString(),
                    });
                  }
                  break;
                case 'TEXT_CONTENT':
                  setTextContent(parentNode, update.content);
                  if (process.env.NODE_ENV !== 'production') {
                    ReactInstrumentation.debugTool.onHostOperation({
                      instanceID: parentNodeDebugID,
                      type: 'replace text',
                      payload: update.content.toString(),
                    });
                  }
                  break;
                case 'REMOVE_NODE':
                  removeChild(parentNode, update.fromNode);
                  if (process.env.NODE_ENV !== 'production') {
                    ReactInstrumentation.debugTool.onHostOperation({
                      instanceID: parentNodeDebugID,
                      type: 'remove child',
                      payload: { fromIndex: update.fromIndex },
                    });
                  }
                  break;
              }
            }
          },
        };

        module.exports = DOMChildrenOperations;
        /* WEBPACK VAR INJECTION */
      }.call(exports, __webpack_require__(1)));

      /***/
    },
    /* 186 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';
      /**
       * Copyright 2013-present, Facebook, Inc.
       * All rights reserved.
       *
       * This source code is licensed under the BSD-style license found in the
       * LICENSE file in the root directory of this source tree. An additional grant
       * of patent rights can be found in the PATENTS file in the same directory.
       *
       */

      var DOMNamespaces = {
        html: 'http://www.w3.org/1999/xhtml',
        mathml: 'http://www.w3.org/1998/Math/MathML',
        svg: 'http://www.w3.org/2000/svg',
      };

      module.exports = DOMNamespaces;

      /***/
    },
    /* 187 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';
      /* WEBPACK VAR INJECTION */ (function (process) {
        /**
         * Copyright 2013-present, Facebook, Inc.
         * All rights reserved.
         *
         * This source code is licensed under the BSD-style license found in the
         * LICENSE file in the root directory of this source tree. An additional grant
         * of patent rights can be found in the PATENTS file in the same directory.
         *
         */

        var _prodInvariant = __webpack_require__(8);

        var ReactErrorUtils = __webpack_require__(191);

        var invariant = __webpack_require__(2);
        var warning = __webpack_require__(3);

        /**
         * Injected dependencies:
         */

        /**
         * - `ComponentTree`: [required] Module that can convert between React instances
         *   and actual node references.
         */
        var ComponentTree;
        var TreeTraversal;
        var injection = {
          injectComponentTree: function (Injected) {
            ComponentTree = Injected;
            if (process.env.NODE_ENV !== 'production') {
              process.env.NODE_ENV !== 'production'
                ? warning(
                    Injected && Injected.getNodeFromInstance && Injected.getInstanceFromNode,
                    'EventPluginUtils.injection.injectComponentTree(...): Injected ' +
                      'module is missing getNodeFromInstance or getInstanceFromNode.'
                  )
                : void 0;
            }
          },
          injectTreeTraversal: function (Injected) {
            TreeTraversal = Injected;
            if (process.env.NODE_ENV !== 'production') {
              process.env.NODE_ENV !== 'production'
                ? warning(
                    Injected && Injected.isAncestor && Injected.getLowestCommonAncestor,
                    'EventPluginUtils.injection.injectTreeTraversal(...): Injected ' +
                      'module is missing isAncestor or getLowestCommonAncestor.'
                  )
                : void 0;
            }
          },
        };

        function isEndish(topLevelType) {
          return (
            topLevelType === 'topMouseUp' ||
            topLevelType === 'topTouchEnd' ||
            topLevelType === 'topTouchCancel'
          );
        }

        function isMoveish(topLevelType) {
          return topLevelType === 'topMouseMove' || topLevelType === 'topTouchMove';
        }
        function isStartish(topLevelType) {
          return topLevelType === 'topMouseDown' || topLevelType === 'topTouchStart';
        }

        var validateEventDispatches;
        if (process.env.NODE_ENV !== 'production') {
          validateEventDispatches = function (event) {
            var dispatchListeners = event._dispatchListeners;
            var dispatchInstances = event._dispatchInstances;

            var listenersIsArr = Array.isArray(dispatchListeners);
            var listenersLen = listenersIsArr
              ? dispatchListeners.length
              : dispatchListeners
              ? 1
              : 0;

            var instancesIsArr = Array.isArray(dispatchInstances);
            var instancesLen = instancesIsArr
              ? dispatchInstances.length
              : dispatchInstances
              ? 1
              : 0;

            process.env.NODE_ENV !== 'production'
              ? warning(
                  instancesIsArr === listenersIsArr && instancesLen === listenersLen,
                  'EventPluginUtils: Invalid `event`.'
                )
              : void 0;
          };
        }

        /**
         * Dispatch the event to the listener.
         * @param {SyntheticEvent} event SyntheticEvent to handle
         * @param {boolean} simulated If the event is simulated (changes exn behavior)
         * @param {function} listener Application-level callback
         * @param {*} inst Internal component instance
         */
        function executeDispatch(event, simulated, listener, inst) {
          var type = event.type || 'unknown-event';
          event.currentTarget = EventPluginUtils.getNodeFromInstance(inst);
          if (simulated) {
            ReactErrorUtils.invokeGuardedCallbackWithCatch(type, listener, event);
          } else {
            ReactErrorUtils.invokeGuardedCallback(type, listener, event);
          }
          event.currentTarget = null;
        }

        /**
         * Standard/simple iteration through an event's collected dispatches.
         */
        function executeDispatchesInOrder(event, simulated) {
          var dispatchListeners = event._dispatchListeners;
          var dispatchInstances = event._dispatchInstances;
          if (process.env.NODE_ENV !== 'production') {
            validateEventDispatches(event);
          }
          if (Array.isArray(dispatchListeners)) {
            for (var i = 0; i < dispatchListeners.length; i++) {
              if (event.isPropagationStopped()) {
                break;
              }
              // Listeners and Instances are two parallel arrays that are always in sync.
              executeDispatch(event, simulated, dispatchListeners[i], dispatchInstances[i]);
            }
          } else if (dispatchListeners) {
            executeDispatch(event, simulated, dispatchListeners, dispatchInstances);
          }
          event._dispatchListeners = null;
          event._dispatchInstances = null;
        }

        /**
         * Standard/simple iteration through an event's collected dispatches, but stops
         * at the first dispatch execution returning true, and returns that id.
         *
         * @return {?string} id of the first dispatch execution who's listener returns
         * true, or null if no listener returned true.
         */
        function executeDispatchesInOrderStopAtTrueImpl(event) {
          var dispatchListeners = event._dispatchListeners;
          var dispatchInstances = event._dispatchInstances;
          if (process.env.NODE_ENV !== 'production') {
            validateEventDispatches(event);
          }
          if (Array.isArray(dispatchListeners)) {
            for (var i = 0; i < dispatchListeners.length; i++) {
              if (event.isPropagationStopped()) {
                break;
              }
              // Listeners and Instances are two parallel arrays that are always in sync.
              if (dispatchListeners[i](event, dispatchInstances[i])) {
                return dispatchInstances[i];
              }
            }
          } else if (dispatchListeners) {
            if (dispatchListeners(event, dispatchInstances)) {
              return dispatchInstances;
            }
          }
          return null;
        }

        /**
         * @see executeDispatchesInOrderStopAtTrueImpl
         */
        function executeDispatchesInOrderStopAtTrue(event) {
          var ret = executeDispatchesInOrderStopAtTrueImpl(event);
          event._dispatchInstances = null;
          event._dispatchListeners = null;
          return ret;
        }

        /**
         * Execution of a "direct" dispatch - there must be at most one dispatch
         * accumulated on the event or it is considered an error. It doesn't really make
         * sense for an event with multiple dispatches (bubbled) to keep track of the
         * return values at each dispatch execution, but it does tend to make sense when
         * dealing with "direct" dispatches.
         *
         * @return {*} The return value of executing the single dispatch.
         */
        function executeDirectDispatch(event) {
          if (process.env.NODE_ENV !== 'production') {
            validateEventDispatches(event);
          }
          var dispatchListener = event._dispatchListeners;
          var dispatchInstance = event._dispatchInstances;
          !!Array.isArray(dispatchListener)
            ? process.env.NODE_ENV !== 'production'
              ? invariant(false, 'executeDirectDispatch(...): Invalid `event`.')
              : _prodInvariant('103')
            : void 0;
          event.currentTarget = dispatchListener
            ? EventPluginUtils.getNodeFromInstance(dispatchInstance)
            : null;
          var res = dispatchListener ? dispatchListener(event) : null;
          event.currentTarget = null;
          event._dispatchListeners = null;
          event._dispatchInstances = null;
          return res;
        }

        /**
         * @param {SyntheticEvent} event
         * @return {boolean} True iff number of dispatches accumulated is greater than 0.
         */
        function hasDispatches(event) {
          return !!event._dispatchListeners;
        }

        /**
         * General utilities that are useful in creating custom Event Plugins.
         */
        var EventPluginUtils = {
          isEndish: isEndish,
          isMoveish: isMoveish,
          isStartish: isStartish,

          executeDirectDispatch: executeDirectDispatch,
          executeDispatchesInOrder: executeDispatchesInOrder,
          executeDispatchesInOrderStopAtTrue: executeDispatchesInOrderStopAtTrue,
          hasDispatches: hasDispatches,

          getInstanceFromNode: function (node) {
            return ComponentTree.getInstanceFromNode(node);
          },
          getNodeFromInstance: function (node) {
            return ComponentTree.getNodeFromInstance(node);
          },
          isAncestor: function (a, b) {
            return TreeTraversal.isAncestor(a, b);
          },
          getLowestCommonAncestor: function (a, b) {
            return TreeTraversal.getLowestCommonAncestor(a, b);
          },
          getParentInstance: function (inst) {
            return TreeTraversal.getParentInstance(inst);
          },
          traverseTwoPhase: function (target, fn, arg) {
            return TreeTraversal.traverseTwoPhase(target, fn, arg);
          },
          traverseEnterLeave: function (from, to, fn, argFrom, argTo) {
            return TreeTraversal.traverseEnterLeave(from, to, fn, argFrom, argTo);
          },

          injection: injection,
        };

        module.exports = EventPluginUtils;
        /* WEBPACK VAR INJECTION */
      }.call(exports, __webpack_require__(1)));

      /***/
    },
    /* 188 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';
      /**
       * Copyright 2013-present, Facebook, Inc.
       * All rights reserved.
       *
       * This source code is licensed under the BSD-style license found in the
       * LICENSE file in the root directory of this source tree. An additional grant
       * of patent rights can be found in the PATENTS file in the same directory.
       *
       *
       */

      /**
       * Escape and wrap key so it is safe to use as a reactid
       *
       * @param {string} key to be escaped.
       * @return {string} the escaped key.
       */

      function escape(key) {
        var escapeRegex = /[=:]/g;
        var escaperLookup = {
          '=': '=0',
          ':': '=2',
        };
        var escapedString = ('' + key).replace(escapeRegex, function (match) {
          return escaperLookup[match];
        });

        return '$' + escapedString;
      }

      /**
       * Unescape and unwrap key for human-readable display
       *
       * @param {string} key to unescape.
       * @return {string} the unescaped key.
       */
      function unescape(key) {
        var unescapeRegex = /(=0|=2)/g;
        var unescaperLookup = {
          '=0': '=',
          '=2': ':',
        };
        var keySubstring = key[0] === '.' && key[1] === '$' ? key.substring(2) : key.substring(1);

        return ('' + keySubstring).replace(unescapeRegex, function (match) {
          return unescaperLookup[match];
        });
      }

      var KeyEscapeUtils = {
        escape: escape,
        unescape: unescape,
      };

      module.exports = KeyEscapeUtils;

      /***/
    },
    /* 189 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';
      /* WEBPACK VAR INJECTION */ (function (process) {
        /**
         * Copyright 2013-present, Facebook, Inc.
         * All rights reserved.
         *
         * This source code is licensed under the BSD-style license found in the
         * LICENSE file in the root directory of this source tree. An additional grant
         * of patent rights can be found in the PATENTS file in the same directory.
         *
         */

        var _prodInvariant = __webpack_require__(8);

        var React = __webpack_require__(85);
        var ReactPropTypesSecret = __webpack_require__(292);

        var invariant = __webpack_require__(2);
        var warning = __webpack_require__(3);

        var hasReadOnlyValue = {
          button: true,
          checkbox: true,
          image: true,
          hidden: true,
          radio: true,
          reset: true,
          submit: true,
        };

        function _assertSingleLink(inputProps) {
          !(inputProps.checkedLink == null || inputProps.valueLink == null)
            ? process.env.NODE_ENV !== 'production'
              ? invariant(
                  false,
                  "Cannot provide a checkedLink and a valueLink. If you want to use checkedLink, you probably don't want to use valueLink and vice versa."
                )
              : _prodInvariant('87')
            : void 0;
        }
        function _assertValueLink(inputProps) {
          _assertSingleLink(inputProps);
          !(inputProps.value == null && inputProps.onChange == null)
            ? process.env.NODE_ENV !== 'production'
              ? invariant(
                  false,
                  "Cannot provide a valueLink and a value or onChange event. If you want to use value or onChange, you probably don't want to use valueLink."
                )
              : _prodInvariant('88')
            : void 0;
        }

        function _assertCheckedLink(inputProps) {
          _assertSingleLink(inputProps);
          !(inputProps.checked == null && inputProps.onChange == null)
            ? process.env.NODE_ENV !== 'production'
              ? invariant(
                  false,
                  "Cannot provide a checkedLink and a checked property or onChange event. If you want to use checked or onChange, you probably don't want to use checkedLink"
                )
              : _prodInvariant('89')
            : void 0;
        }

        var propTypes = {
          value: function (props, propName, componentName) {
            if (
              !props[propName] ||
              hasReadOnlyValue[props.type] ||
              props.onChange ||
              props.readOnly ||
              props.disabled
            ) {
              return null;
            }
            return new Error(
              'You provided a `value` prop to a form field without an ' +
                '`onChange` handler. This will render a read-only field. If ' +
                'the field should be mutable use `defaultValue`. Otherwise, ' +
                'set either `onChange` or `readOnly`.'
            );
          },
          checked: function (props, propName, componentName) {
            if (!props[propName] || props.onChange || props.readOnly || props.disabled) {
              return null;
            }
            return new Error(
              'You provided a `checked` prop to a form field without an ' +
                '`onChange` handler. This will render a read-only field. If ' +
                'the field should be mutable use `defaultChecked`. Otherwise, ' +
                'set either `onChange` or `readOnly`.'
            );
          },
          onChange: React.PropTypes.func,
        };

        var loggedTypeFailures = {};
        function getDeclarationErrorAddendum(owner) {
          if (owner) {
            var name = owner.getName();
            if (name) {
              return ' Check the render method of `' + name + '`.';
            }
          }
          return '';
        }

        /**
         * Provide a linked `value` attribute for controlled forms. You should not use
         * this outside of the ReactDOM controlled form components.
         */
        var LinkedValueUtils = {
          checkPropTypes: function (tagName, props, owner) {
            for (var propName in propTypes) {
              if (propTypes.hasOwnProperty(propName)) {
                var error = propTypes[propName](
                  props,
                  propName,
                  tagName,
                  'prop',
                  null,
                  ReactPropTypesSecret
                );
              }
              if (error instanceof Error && !(error.message in loggedTypeFailures)) {
                // Only monitor this failure once because there tends to be a lot of the
                // same error.
                loggedTypeFailures[error.message] = true;

                var addendum = getDeclarationErrorAddendum(owner);
                process.env.NODE_ENV !== 'production'
                  ? warning(false, 'Failed form propType: %s%s', error.message, addendum)
                  : void 0;
              }
            }
          },

          /**
           * @param {object} inputProps Props for form component
           * @return {*} current value of the input either from value prop or link.
           */
          getValue: function (inputProps) {
            if (inputProps.valueLink) {
              _assertValueLink(inputProps);
              return inputProps.valueLink.value;
            }
            return inputProps.value;
          },

          /**
           * @param {object} inputProps Props for form component
           * @return {*} current checked status of the input either from checked prop
           *             or link.
           */
          getChecked: function (inputProps) {
            if (inputProps.checkedLink) {
              _assertCheckedLink(inputProps);
              return inputProps.checkedLink.value;
            }
            return inputProps.checked;
          },

          /**
           * @param {object} inputProps Props for form component
           * @param {SyntheticEvent} event change event to handle
           */
          executeOnChange: function (inputProps, event) {
            if (inputProps.valueLink) {
              _assertValueLink(inputProps);
              return inputProps.valueLink.requestChange(event.target.value);
            } else if (inputProps.checkedLink) {
              _assertCheckedLink(inputProps);
              return inputProps.checkedLink.requestChange(event.target.checked);
            } else if (inputProps.onChange) {
              return inputProps.onChange.call(undefined, event);
            }
          },
        };

        module.exports = LinkedValueUtils;
        /* WEBPACK VAR INJECTION */
      }.call(exports, __webpack_require__(1)));

      /***/
    },
    /* 190 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';
      /* WEBPACK VAR INJECTION */ (function (process) {
        /**
         * Copyright 2014-present, Facebook, Inc.
         * All rights reserved.
         *
         * This source code is licensed under the BSD-style license found in the
         * LICENSE file in the root directory of this source tree. An additional grant
         * of patent rights can be found in the PATENTS file in the same directory.
         *
         *
         */

        var _prodInvariant = __webpack_require__(8);

        var invariant = __webpack_require__(2);

        var injected = false;

        var ReactComponentEnvironment = {
          /**
           * Optionally injectable hook for swapping out mount images in the middle of
           * the tree.
           */
          replaceNodeWithMarkup: null,

          /**
           * Optionally injectable hook for processing a queue of child updates. Will
           * later move into MultiChildComponents.
           */
          processChildrenUpdates: null,

          injection: {
            injectEnvironment: function (environment) {
              !!injected
                ? process.env.NODE_ENV !== 'production'
                  ? invariant(
                      false,
                      'ReactCompositeComponent: injectEnvironment() can only be called once.'
                    )
                  : _prodInvariant('104')
                : void 0;
              ReactComponentEnvironment.replaceNodeWithMarkup = environment.replaceNodeWithMarkup;
              ReactComponentEnvironment.processChildrenUpdates = environment.processChildrenUpdates;
              injected = true;
            },
          },
        };

        module.exports = ReactComponentEnvironment;
        /* WEBPACK VAR INJECTION */
      }.call(exports, __webpack_require__(1)));

      /***/
    },
    /* 191 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';
      /* WEBPACK VAR INJECTION */ (function (process) {
        /**
         * Copyright 2013-present, Facebook, Inc.
         * All rights reserved.
         *
         * This source code is licensed under the BSD-style license found in the
         * LICENSE file in the root directory of this source tree. An additional grant
         * of patent rights can be found in the PATENTS file in the same directory.
         *
         *
         */

        var caughtError = null;

        /**
         * Call a function while guarding against errors that happens within it.
         *
         * @param {String} name of the guard to use for logging or debugging
         * @param {Function} func The function to invoke
         * @param {*} a First argument
         * @param {*} b Second argument
         */
        function invokeGuardedCallback(name, func, a) {
          try {
            func(a);
          } catch (x) {
            if (caughtError === null) {
              caughtError = x;
            }
          }
        }

        var ReactErrorUtils = {
          invokeGuardedCallback: invokeGuardedCallback,

          /**
           * Invoked by ReactTestUtils.Simulate so that any errors thrown by the event
           * handler are sure to be rethrown by rethrowCaughtError.
           */
          invokeGuardedCallbackWithCatch: invokeGuardedCallback,

          /**
           * During execution of guarded functions we will capture the first error which
           * we will rethrow to be handled by the top level error handler.
           */
          rethrowCaughtError: function () {
            if (caughtError) {
              var error = caughtError;
              caughtError = null;
              throw error;
            }
          },
        };

        if (process.env.NODE_ENV !== 'production') {
          /**
           * To help development we can get better devtools integration by simulating a
           * real browser event.
           */
          if (
            typeof window !== 'undefined' &&
            typeof window.dispatchEvent === 'function' &&
            typeof document !== 'undefined' &&
            typeof document.createEvent === 'function'
          ) {
            var fakeNode = document.createElement('react');
            ReactErrorUtils.invokeGuardedCallback = function (name, func, a) {
              var boundFunc = func.bind(null, a);
              var evtType = 'react-' + name;
              fakeNode.addEventListener(evtType, boundFunc, false);
              var evt = document.createEvent('Event');
              // $FlowFixMe https://github.com/facebook/flow/issues/2336
              evt.initEvent(evtType, false, false);
              fakeNode.dispatchEvent(evt);
              fakeNode.removeEventListener(evtType, boundFunc, false);
            };
          }
        }

        module.exports = ReactErrorUtils;
        /* WEBPACK VAR INJECTION */
      }.call(exports, __webpack_require__(1)));

      /***/
    },
    /* 192 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';
      /* WEBPACK VAR INJECTION */ (function (process) {
        /**
         * Copyright 2015-present, Facebook, Inc.
         * All rights reserved.
         *
         * This source code is licensed under the BSD-style license found in the
         * LICENSE file in the root directory of this source tree. An additional grant
         * of patent rights can be found in the PATENTS file in the same directory.
         *
         */

        var _prodInvariant = __webpack_require__(8);

        var ReactCurrentOwner = __webpack_require__(42);
        var ReactInstanceMap = __webpack_require__(99);
        var ReactInstrumentation = __webpack_require__(32);
        var ReactUpdates = __webpack_require__(41);

        var invariant = __webpack_require__(2);
        var warning = __webpack_require__(3);

        function enqueueUpdate(internalInstance) {
          ReactUpdates.enqueueUpdate(internalInstance);
        }

        function formatUnexpectedArgument(arg) {
          var type = typeof arg;
          if (type !== 'object') {
            return type;
          }
          var displayName = (arg.constructor && arg.constructor.name) || type;
          var keys = Object.keys(arg);
          if (keys.length > 0 && keys.length < 20) {
            return displayName + ' (keys: ' + keys.join(', ') + ')';
          }
          return displayName;
        }

        function getInternalInstanceReadyForUpdate(publicInstance, callerName) {
          var internalInstance = ReactInstanceMap.get(publicInstance);
          if (!internalInstance) {
            if (process.env.NODE_ENV !== 'production') {
              var ctor = publicInstance.constructor;
              // Only warn when we have a callerName. Otherwise we should be silent.
              // We're probably calling from enqueueCallback. We don't want to warn
              // there because we already warned for the corresponding lifecycle method.
              process.env.NODE_ENV !== 'production'
                ? warning(
                    !callerName,
                    '%s(...): Can only update a mounted or mounting component. ' +
                      'This usually means you called %s() on an unmounted component. ' +
                      'This is a no-op. Please check the code for the %s component.',
                    callerName,
                    callerName,
                    (ctor && (ctor.displayName || ctor.name)) || 'ReactClass'
                  )
                : void 0;
            }
            return null;
          }

          if (process.env.NODE_ENV !== 'production') {
            process.env.NODE_ENV !== 'production'
              ? warning(
                  ReactCurrentOwner.current == null,
                  '%s(...): Cannot update during an existing state transition (such as ' +
                    "within `render` or another component's constructor). Render methods " +
                    'should be a pure function of props and state; constructor ' +
                    'side-effects are an anti-pattern, but can be moved to ' +
                    '`componentWillMount`.',
                  callerName
                )
              : void 0;
          }

          return internalInstance;
        }

        /**
         * ReactUpdateQueue allows for state updates to be scheduled into a later
         * reconciliation step.
         */
        var ReactUpdateQueue = {
          /**
           * Checks whether or not this composite component is mounted.
           * @param {ReactClass} publicInstance The instance we want to test.
           * @return {boolean} True if mounted, false otherwise.
           * @protected
           * @final
           */
          isMounted: function (publicInstance) {
            if (process.env.NODE_ENV !== 'production') {
              var owner = ReactCurrentOwner.current;
              if (owner !== null) {
                process.env.NODE_ENV !== 'production'
                  ? warning(
                      owner._warnedAboutRefsInRender,
                      '%s is accessing isMounted inside its render() function. ' +
                        'render() should be a pure function of props and state. It should ' +
                        'never access something that requires stale data from the previous ' +
                        'render, such as refs. Move this logic to componentDidMount and ' +
                        'componentDidUpdate instead.',
                      owner.getName() || 'A component'
                    )
                  : void 0;
                owner._warnedAboutRefsInRender = true;
              }
            }
            var internalInstance = ReactInstanceMap.get(publicInstance);
            if (internalInstance) {
              // During componentWillMount and render this will still be null but after
              // that will always render to something. At least for now. So we can use
              // this hack.
              return !!internalInstance._renderedComponent;
            } else {
              return false;
            }
          },

          /**
           * Enqueue a callback that will be executed after all the pending updates
           * have processed.
           *
           * @param {ReactClass} publicInstance The instance to use as `this` context.
           * @param {?function} callback Called after state is updated.
           * @param {string} callerName Name of the calling function in the public API.
           * @internal
           */
          enqueueCallback: function (publicInstance, callback, callerName) {
            ReactUpdateQueue.validateCallback(callback, callerName);
            var internalInstance = getInternalInstanceReadyForUpdate(publicInstance);

            // Previously we would throw an error if we didn't have an internal
            // instance. Since we want to make it a no-op instead, we mirror the same
            // behavior we have in other enqueue* methods.
            // We also need to ignore callbacks in componentWillMount. See
            // enqueueUpdates.
            if (!internalInstance) {
              return null;
            }

            if (internalInstance._pendingCallbacks) {
              internalInstance._pendingCallbacks.push(callback);
            } else {
              internalInstance._pendingCallbacks = [callback];
            }
            // TODO: The callback here is ignored when setState is called from
            // componentWillMount. Either fix it or disallow doing so completely in
            // favor of getInitialState. Alternatively, we can disallow
            // componentWillMount during server-side rendering.
            enqueueUpdate(internalInstance);
          },

          enqueueCallbackInternal: function (internalInstance, callback) {
            if (internalInstance._pendingCallbacks) {
              internalInstance._pendingCallbacks.push(callback);
            } else {
              internalInstance._pendingCallbacks = [callback];
            }
            enqueueUpdate(internalInstance);
          },

          /**
           * Forces an update. This should only be invoked when it is known with
           * certainty that we are **not** in a DOM transaction.
           *
           * You may want to call this when you know that some deeper aspect of the
           * component's state has changed but `setState` was not called.
           *
           * This will not invoke `shouldComponentUpdate`, but it will invoke
           * `componentWillUpdate` and `componentDidUpdate`.
           *
           * @param {ReactClass} publicInstance The instance that should rerender.
           * @internal
           */
          enqueueForceUpdate: function (publicInstance) {
            var internalInstance = getInternalInstanceReadyForUpdate(publicInstance, 'forceUpdate');

            if (!internalInstance) {
              return;
            }

            internalInstance._pendingForceUpdate = true;

            enqueueUpdate(internalInstance);
          },

          /**
           * Replaces all of the state. Always use this or `setState` to mutate state.
           * You should treat `this.state` as immutable.
           *
           * There is no guarantee that `this.state` will be immediately updated, so
           * accessing `this.state` after calling this method may return the old value.
           *
           * @param {ReactClass} publicInstance The instance that should rerender.
           * @param {object} completeState Next state.
           * @internal
           */
          enqueueReplaceState: function (publicInstance, completeState) {
            var internalInstance = getInternalInstanceReadyForUpdate(
              publicInstance,
              'replaceState'
            );

            if (!internalInstance) {
              return;
            }

            internalInstance._pendingStateQueue = [completeState];
            internalInstance._pendingReplaceState = true;

            enqueueUpdate(internalInstance);
          },

          /**
           * Sets a subset of the state. This only exists because _pendingState is
           * internal. This provides a merging strategy that is not available to deep
           * properties which is confusing. TODO: Expose pendingState or don't use it
           * during the merge.
           *
           * @param {ReactClass} publicInstance The instance that should rerender.
           * @param {object} partialState Next partial state to be merged with state.
           * @internal
           */
          enqueueSetState: function (publicInstance, partialState) {
            if (process.env.NODE_ENV !== 'production') {
              ReactInstrumentation.debugTool.onSetState();
              process.env.NODE_ENV !== 'production'
                ? warning(
                    partialState != null,
                    'setState(...): You passed an undefined or null state object; ' +
                      'instead, use forceUpdate().'
                  )
                : void 0;
            }

            var internalInstance = getInternalInstanceReadyForUpdate(publicInstance, 'setState');

            if (!internalInstance) {
              return;
            }

            var queue =
              internalInstance._pendingStateQueue || (internalInstance._pendingStateQueue = []);
            queue.push(partialState);

            enqueueUpdate(internalInstance);
          },

          enqueueElementInternal: function (internalInstance, nextElement, nextContext) {
            internalInstance._pendingElement = nextElement;
            // TODO: introduce _pendingContext instead of setting it directly.
            internalInstance._context = nextContext;
            enqueueUpdate(internalInstance);
          },

          validateCallback: function (callback, callerName) {
            !(!callback || typeof callback === 'function')
              ? process.env.NODE_ENV !== 'production'
                ? invariant(
                    false,
                    '%s(...): Expected the last optional `callback` argument to be a function. Instead received: %s.',
                    callerName,
                    formatUnexpectedArgument(callback)
                  )
                : _prodInvariant('122', callerName, formatUnexpectedArgument(callback))
              : void 0;
          },
        };

        module.exports = ReactUpdateQueue;
        /* WEBPACK VAR INJECTION */
      }.call(exports, __webpack_require__(1)));

      /***/
    },
    /* 193 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';
      /**
       * Copyright 2013-present, Facebook, Inc.
       * All rights reserved.
       *
       * This source code is licensed under the BSD-style license found in the
       * LICENSE file in the root directory of this source tree. An additional grant
       * of patent rights can be found in the PATENTS file in the same directory.
       *
       */

      /* globals MSApp */

      /**
       * Create a function which has 'unsafe' privileges (required by windows8 apps)
       */

      var createMicrosoftUnsafeLocalFunction = function (func) {
        if (typeof MSApp !== 'undefined' && MSApp.execUnsafeLocalFunction) {
          return function (arg0, arg1, arg2, arg3) {
            MSApp.execUnsafeLocalFunction(function () {
              return func(arg0, arg1, arg2, arg3);
            });
          };
        } else {
          return func;
        }
      };

      module.exports = createMicrosoftUnsafeLocalFunction;

      /***/
    },
    /* 194 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';
      /**
       * Copyright 2013-present, Facebook, Inc.
       * All rights reserved.
       *
       * This source code is licensed under the BSD-style license found in the
       * LICENSE file in the root directory of this source tree. An additional grant
       * of patent rights can be found in the PATENTS file in the same directory.
       *
       */

      /**
       * `charCode` represents the actual "character code" and is safe to use with
       * `String.fromCharCode`. As such, only keys that correspond to printable
       * characters produce a valid `charCode`, the only exception to this is Enter.
       * The Tab-key is considered non-printable and does not have a `charCode`,
       * presumably because it does not produce a tab-character in browsers.
       *
       * @param {object} nativeEvent Native browser event.
       * @return {number} Normalized `charCode` property.
       */

      function getEventCharCode(nativeEvent) {
        var charCode;
        var keyCode = nativeEvent.keyCode;

        if ('charCode' in nativeEvent) {
          charCode = nativeEvent.charCode;

          // FF does not set `charCode` for the Enter-key, check against `keyCode`.
          if (charCode === 0 && keyCode === 13) {
            charCode = 13;
          }
        } else {
          // IE8 does not implement `charCode`, but `keyCode` has the correct value.
          charCode = keyCode;
        }

        // Some non-printable keys are reported in `charCode`/`keyCode`, discard them.
        // Must not discard the (non-)printable Enter-key.
        if (charCode >= 32 || charCode === 13) {
          return charCode;
        }

        return 0;
      }

      module.exports = getEventCharCode;

      /***/
    },
    /* 195 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';
      /**
       * Copyright 2013-present, Facebook, Inc.
       * All rights reserved.
       *
       * This source code is licensed under the BSD-style license found in the
       * LICENSE file in the root directory of this source tree. An additional grant
       * of patent rights can be found in the PATENTS file in the same directory.
       *
       */

      /**
       * Translation from modifier key to the associated property in the event.
       * @see http://www.w3.org/TR/DOM-Level-3-Events/#keys-Modifiers
       */

      var modifierKeyToProp = {
        Alt: 'altKey',
        Control: 'ctrlKey',
        Meta: 'metaKey',
        Shift: 'shiftKey',
      };

      // IE8 does not implement getModifierState so we simply map it to the only
      // modifier keys exposed by the event itself, does not support Lock-keys.
      // Currently, all major browsers except Chrome seems to support Lock-keys.
      function modifierStateGetter(keyArg) {
        var syntheticEvent = this;
        var nativeEvent = syntheticEvent.nativeEvent;
        if (nativeEvent.getModifierState) {
          return nativeEvent.getModifierState(keyArg);
        }
        var keyProp = modifierKeyToProp[keyArg];
        return keyProp ? !!nativeEvent[keyProp] : false;
      }

      function getEventModifierState(nativeEvent) {
        return modifierStateGetter;
      }

      module.exports = getEventModifierState;

      /***/
    },
    /* 196 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';
      /**
       * Copyright 2013-present, Facebook, Inc.
       * All rights reserved.
       *
       * This source code is licensed under the BSD-style license found in the
       * LICENSE file in the root directory of this source tree. An additional grant
       * of patent rights can be found in the PATENTS file in the same directory.
       *
       */

      /**
       * Gets the target node from a native browser event by accounting for
       * inconsistencies in browser DOM APIs.
       *
       * @param {object} nativeEvent Native browser event.
       * @return {DOMEventTarget} Target node.
       */

      function getEventTarget(nativeEvent) {
        var target = nativeEvent.target || nativeEvent.srcElement || window;

        // Normalize SVG <use> element events #4963
        if (target.correspondingUseElement) {
          target = target.correspondingUseElement;
        }

        // Safari may fire events on text nodes (Node.TEXT_NODE is 3).
        // @see http://www.quirksmode.org/js/events_properties.html
        return target.nodeType === 3 ? target.parentNode : target;
      }

      module.exports = getEventTarget;

      /***/
    },
    /* 197 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';
      /**
       * Copyright 2013-present, Facebook, Inc.
       * All rights reserved.
       *
       * This source code is licensed under the BSD-style license found in the
       * LICENSE file in the root directory of this source tree. An additional grant
       * of patent rights can be found in the PATENTS file in the same directory.
       *
       */

      var ExecutionEnvironment = __webpack_require__(18);

      var useHasFeature;
      if (ExecutionEnvironment.canUseDOM) {
        useHasFeature =
          document.implementation &&
          document.implementation.hasFeature &&
          // always returns true in newer browsers as per the standard.
          // @see http://dom.spec.whatwg.org/#dom-domimplementation-hasfeature
          document.implementation.hasFeature('', '') !== true;
      }

      /**
       * Checks if an event is supported in the current execution environment.
       *
       * NOTE: This will not work correctly for non-generic events such as `change`,
       * `reset`, `load`, `error`, and `select`.
       *
       * Borrows from Modernizr.
       *
       * @param {string} eventNameSuffix Event name, e.g. "click".
       * @param {?boolean} capture Check if the capture phase is supported.
       * @return {boolean} True if the event is supported.
       * @internal
       * @license Modernizr 3.0.0pre (Custom Build) | MIT
       */
      function isEventSupported(eventNameSuffix, capture) {
        if (!ExecutionEnvironment.canUseDOM || (capture && !('addEventListener' in document))) {
          return false;
        }

        var eventName = 'on' + eventNameSuffix;
        var isSupported = eventName in document;

        if (!isSupported) {
          var element = document.createElement('div');
          element.setAttribute(eventName, 'return;');
          isSupported = typeof element[eventName] === 'function';
        }

        if (!isSupported && useHasFeature && eventNameSuffix === 'wheel') {
          // This is the only way to test support for the `wheel` event in IE9+.
          isSupported = document.implementation.hasFeature('Events.wheel', '3.0');
        }

        return isSupported;
      }

      module.exports = isEventSupported;

      /***/
    },
    /* 198 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';
      /**
       * Copyright 2013-present, Facebook, Inc.
       * All rights reserved.
       *
       * This source code is licensed under the BSD-style license found in the
       * LICENSE file in the root directory of this source tree. An additional grant
       * of patent rights can be found in the PATENTS file in the same directory.
       *
       */

      /**
       * Given a `prevElement` and `nextElement`, determines if the existing
       * instance should be updated as opposed to being destroyed or replaced by a new
       * instance. Both arguments are elements. This ensures that this logic can
       * operate on stateless trees without any backing instance.
       *
       * @param {?object} prevElement
       * @param {?object} nextElement
       * @return {boolean} True if the existing instance should be updated.
       * @protected
       */

      function shouldUpdateReactComponent(prevElement, nextElement) {
        var prevEmpty = prevElement === null || prevElement === false;
        var nextEmpty = nextElement === null || nextElement === false;
        if (prevEmpty || nextEmpty) {
          return prevEmpty === nextEmpty;
        }

        var prevType = typeof prevElement;
        var nextType = typeof nextElement;
        if (prevType === 'string' || prevType === 'number') {
          return nextType === 'string' || nextType === 'number';
        } else {
          return (
            nextType === 'object' &&
            prevElement.type === nextElement.type &&
            prevElement.key === nextElement.key
          );
        }
      }

      module.exports = shouldUpdateReactComponent;

      /***/
    },
    /* 199 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';
      /* WEBPACK VAR INJECTION */ (function (process) {
        /**
         * Copyright 2015-present, Facebook, Inc.
         * All rights reserved.
         *
         * This source code is licensed under the BSD-style license found in the
         * LICENSE file in the root directory of this source tree. An additional grant
         * of patent rights can be found in the PATENTS file in the same directory.
         *
         */

        var _assign = __webpack_require__(12);

        var emptyFunction = __webpack_require__(28);
        var warning = __webpack_require__(3);

        var validateDOMNesting = emptyFunction;

        if (process.env.NODE_ENV !== 'production') {
          // This validation code was written based on the HTML5 parsing spec:
          // https://html.spec.whatwg.org/multipage/syntax.html#has-an-element-in-scope
          //
          // Note: this does not catch all invalid nesting, nor does it try to (as it's
          // not clear what practical benefit doing so provides); instead, we warn only
          // for cases where the parser will give a parse tree differing from what React
          // intended. For example, <b><div></div></b> is invalid but we don't warn
          // because it still parses correctly; we do warn for other cases like nested
          // <p> tags where the beginning of the second element implicitly closes the
          // first, causing a confusing mess.

          // https://html.spec.whatwg.org/multipage/syntax.html#special
          var specialTags = [
            'address',
            'applet',
            'area',
            'article',
            'aside',
            'base',
            'basefont',
            'bgsound',
            'blockquote',
            'body',
            'br',
            'button',
            'caption',
            'center',
            'col',
            'colgroup',
            'dd',
            'details',
            'dir',
            'div',
            'dl',
            'dt',
            'embed',
            'fieldset',
            'figcaption',
            'figure',
            'footer',
            'form',
            'frame',
            'frameset',
            'h1',
            'h2',
            'h3',
            'h4',
            'h5',
            'h6',
            'head',
            'header',
            'hgroup',
            'hr',
            'html',
            'iframe',
            'img',
            'input',
            'isindex',
            'li',
            'link',
            'listing',
            'main',
            'marquee',
            'menu',
            'menuitem',
            'meta',
            'nav',
            'noembed',
            'noframes',
            'noscript',
            'object',
            'ol',
            'p',
            'param',
            'plaintext',
            'pre',
            'script',
            'section',
            'select',
            'source',
            'style',
            'summary',
            'table',
            'tbody',
            'td',
            'template',
            'textarea',
            'tfoot',
            'th',
            'thead',
            'title',
            'tr',
            'track',
            'ul',
            'wbr',
            'xmp',
          ];

          // https://html.spec.whatwg.org/multipage/syntax.html#has-an-element-in-scope
          var inScopeTags = [
            'applet',
            'caption',
            'html',
            'table',
            'td',
            'th',
            'marquee',
            'object',
            'template',

            // https://html.spec.whatwg.org/multipage/syntax.html#html-integration-point
            // TODO: Distinguish by namespace here -- for <title>, including it here
            // errs on the side of fewer warnings
            'foreignObject',
            'desc',
            'title',
          ];

          // https://html.spec.whatwg.org/multipage/syntax.html#has-an-element-in-button-scope
          var buttonScopeTags = inScopeTags.concat(['button']);

          // https://html.spec.whatwg.org/multipage/syntax.html#generate-implied-end-tags
          var impliedEndTags = ['dd', 'dt', 'li', 'option', 'optgroup', 'p', 'rp', 'rt'];

          var emptyAncestorInfo = {
            current: null,

            formTag: null,
            aTagInScope: null,
            buttonTagInScope: null,
            nobrTagInScope: null,
            pTagInButtonScope: null,

            listItemTagAutoclosing: null,
            dlItemTagAutoclosing: null,
          };

          var updatedAncestorInfo = function (oldInfo, tag, instance) {
            var ancestorInfo = _assign({}, oldInfo || emptyAncestorInfo);
            var info = { tag: tag, instance: instance };

            if (inScopeTags.indexOf(tag) !== -1) {
              ancestorInfo.aTagInScope = null;
              ancestorInfo.buttonTagInScope = null;
              ancestorInfo.nobrTagInScope = null;
            }
            if (buttonScopeTags.indexOf(tag) !== -1) {
              ancestorInfo.pTagInButtonScope = null;
            }

            // See rules for 'li', 'dd', 'dt' start tags in
            // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-inbody
            if (
              specialTags.indexOf(tag) !== -1 &&
              tag !== 'address' &&
              tag !== 'div' &&
              tag !== 'p'
            ) {
              ancestorInfo.listItemTagAutoclosing = null;
              ancestorInfo.dlItemTagAutoclosing = null;
            }

            ancestorInfo.current = info;

            if (tag === 'form') {
              ancestorInfo.formTag = info;
            }
            if (tag === 'a') {
              ancestorInfo.aTagInScope = info;
            }
            if (tag === 'button') {
              ancestorInfo.buttonTagInScope = info;
            }
            if (tag === 'nobr') {
              ancestorInfo.nobrTagInScope = info;
            }
            if (tag === 'p') {
              ancestorInfo.pTagInButtonScope = info;
            }
            if (tag === 'li') {
              ancestorInfo.listItemTagAutoclosing = info;
            }
            if (tag === 'dd' || tag === 'dt') {
              ancestorInfo.dlItemTagAutoclosing = info;
            }

            return ancestorInfo;
          };

          /**
           * Returns whether
           */
          var isTagValidWithParent = function (tag, parentTag) {
            // First, let's check if we're in an unusual parsing mode...
            switch (parentTag) {
              // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-inselect
              case 'select':
                return tag === 'option' || tag === 'optgroup' || tag === '#text';
              case 'optgroup':
                return tag === 'option' || tag === '#text';
              // Strictly speaking, seeing an <option> doesn't mean we're in a <select>
              // but
              case 'option':
                return tag === '#text';

              // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-intd
              // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-incaption
              // No special behavior since these rules fall back to "in body" mode for
              // all except special table nodes which cause bad parsing behavior anyway.

              // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-intr
              case 'tr':
                return (
                  tag === 'th' ||
                  tag === 'td' ||
                  tag === 'style' ||
                  tag === 'script' ||
                  tag === 'template'
                );

              // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-intbody
              case 'tbody':
              case 'thead':
              case 'tfoot':
                return tag === 'tr' || tag === 'style' || tag === 'script' || tag === 'template';

              // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-incolgroup
              case 'colgroup':
                return tag === 'col' || tag === 'template';

              // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-intable
              case 'table':
                return (
                  tag === 'caption' ||
                  tag === 'colgroup' ||
                  tag === 'tbody' ||
                  tag === 'tfoot' ||
                  tag === 'thead' ||
                  tag === 'style' ||
                  tag === 'script' ||
                  tag === 'template'
                );

              // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-inhead
              case 'head':
                return (
                  tag === 'base' ||
                  tag === 'basefont' ||
                  tag === 'bgsound' ||
                  tag === 'link' ||
                  tag === 'meta' ||
                  tag === 'title' ||
                  tag === 'noscript' ||
                  tag === 'noframes' ||
                  tag === 'style' ||
                  tag === 'script' ||
                  tag === 'template'
                );

              // https://html.spec.whatwg.org/multipage/semantics.html#the-html-element
              case 'html':
                return tag === 'head' || tag === 'body';
              case '#document':
                return tag === 'html';
            }

            // Probably in the "in body" parsing mode, so we outlaw only tag combos
            // where the parsing rules cause implicit opens or closes to be added.
            // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-inbody
            switch (tag) {
              case 'h1':
              case 'h2':
              case 'h3':
              case 'h4':
              case 'h5':
              case 'h6':
                return (
                  parentTag !== 'h1' &&
                  parentTag !== 'h2' &&
                  parentTag !== 'h3' &&
                  parentTag !== 'h4' &&
                  parentTag !== 'h5' &&
                  parentTag !== 'h6'
                );

              case 'rp':
              case 'rt':
                return impliedEndTags.indexOf(parentTag) === -1;

              case 'body':
              case 'caption':
              case 'col':
              case 'colgroup':
              case 'frame':
              case 'head':
              case 'html':
              case 'tbody':
              case 'td':
              case 'tfoot':
              case 'th':
              case 'thead':
              case 'tr':
                // These tags are only valid with a few parents that have special child
                // parsing rules -- if we're down here, then none of those matched and
                // so we allow it only if we don't know what the parent is, as all other
                // cases are invalid.
                return parentTag == null;
            }

            return true;
          };

          /**
           * Returns whether
           */
          var findInvalidAncestorForTag = function (tag, ancestorInfo) {
            switch (tag) {
              case 'address':
              case 'article':
              case 'aside':
              case 'blockquote':
              case 'center':
              case 'details':
              case 'dialog':
              case 'dir':
              case 'div':
              case 'dl':
              case 'fieldset':
              case 'figcaption':
              case 'figure':
              case 'footer':
              case 'header':
              case 'hgroup':
              case 'main':
              case 'menu':
              case 'nav':
              case 'ol':
              case 'p':
              case 'section':
              case 'summary':
              case 'ul':

              case 'pre':
              case 'listing':

              case 'table':

              case 'hr':

              case 'xmp':

              case 'h1':
              case 'h2':
              case 'h3':
              case 'h4':
              case 'h5':
              case 'h6':
                return ancestorInfo.pTagInButtonScope;

              case 'form':
                return ancestorInfo.formTag || ancestorInfo.pTagInButtonScope;

              case 'li':
                return ancestorInfo.listItemTagAutoclosing;

              case 'dd':
              case 'dt':
                return ancestorInfo.dlItemTagAutoclosing;

              case 'button':
                return ancestorInfo.buttonTagInScope;

              case 'a':
                // Spec says something about storing a list of markers, but it sounds
                // equivalent to this check.
                return ancestorInfo.aTagInScope;

              case 'nobr':
                return ancestorInfo.nobrTagInScope;
            }

            return null;
          };

          /**
           * Given a ReactCompositeComponent instance, return a list of its recursive
           * owners, starting at the root and ending with the instance itself.
           */
          var findOwnerStack = function (instance) {
            if (!instance) {
              return [];
            }

            var stack = [];
            do {
              stack.push(instance);
            } while ((instance = instance._currentElement._owner));
            stack.reverse();
            return stack;
          };

          var didWarn = {};

          validateDOMNesting = function (childTag, childText, childInstance, ancestorInfo) {
            ancestorInfo = ancestorInfo || emptyAncestorInfo;
            var parentInfo = ancestorInfo.current;
            var parentTag = parentInfo && parentInfo.tag;

            if (childText != null) {
              process.env.NODE_ENV !== 'production'
                ? warning(
                    childTag == null,
                    'validateDOMNesting: when childText is passed, childTag should be null'
                  )
                : void 0;
              childTag = '#text';
            }

            var invalidParent = isTagValidWithParent(childTag, parentTag) ? null : parentInfo;
            var invalidAncestor = invalidParent
              ? null
              : findInvalidAncestorForTag(childTag, ancestorInfo);
            var problematic = invalidParent || invalidAncestor;

            if (problematic) {
              var ancestorTag = problematic.tag;
              var ancestorInstance = problematic.instance;

              var childOwner = childInstance && childInstance._currentElement._owner;
              var ancestorOwner = ancestorInstance && ancestorInstance._currentElement._owner;

              var childOwners = findOwnerStack(childOwner);
              var ancestorOwners = findOwnerStack(ancestorOwner);

              var minStackLen = Math.min(childOwners.length, ancestorOwners.length);
              var i;

              var deepestCommon = -1;
              for (i = 0; i < minStackLen; i++) {
                if (childOwners[i] === ancestorOwners[i]) {
                  deepestCommon = i;
                } else {
                  break;
                }
              }

              var UNKNOWN = '(unknown)';
              var childOwnerNames = childOwners.slice(deepestCommon + 1).map(function (inst) {
                return inst.getName() || UNKNOWN;
              });
              var ancestorOwnerNames = ancestorOwners.slice(deepestCommon + 1).map(function (inst) {
                return inst.getName() || UNKNOWN;
              });
              var ownerInfo = []
                .concat(
                  // If the parent and child instances have a common owner ancestor, start
                  // with that -- otherwise we just start with the parent's owners.
                  deepestCommon !== -1 ? childOwners[deepestCommon].getName() || UNKNOWN : [],
                  ancestorOwnerNames,
                  ancestorTag,
                  // If we're warning about an invalid (non-parent) ancestry, add '...'
                  invalidAncestor ? ['...'] : [],
                  childOwnerNames,
                  childTag
                )
                .join(' > ');

              var warnKey = !!invalidParent + '|' + childTag + '|' + ancestorTag + '|' + ownerInfo;
              if (didWarn[warnKey]) {
                return;
              }
              didWarn[warnKey] = true;

              var tagDisplayName = childTag;
              var whitespaceInfo = '';
              if (childTag === '#text') {
                if (/\S/.test(childText)) {
                  tagDisplayName = 'Text nodes';
                } else {
                  tagDisplayName = 'Whitespace text nodes';
                  whitespaceInfo =
                    " Make sure you don't have any extra whitespace between tags on " +
                    'each line of your source code.';
                }
              } else {
                tagDisplayName = '<' + childTag + '>';
              }

              if (invalidParent) {
                var info = '';
                if (ancestorTag === 'table' && childTag === 'tr') {
                  info +=
                    ' Add a <tbody> to your code to match the DOM tree generated by ' +
                    'the browser.';
                }
                process.env.NODE_ENV !== 'production'
                  ? warning(
                      false,
                      'validateDOMNesting(...): %s cannot appear as a child of <%s>.%s ' +
                        'See %s.%s',
                      tagDisplayName,
                      ancestorTag,
                      whitespaceInfo,
                      ownerInfo,
                      info
                    )
                  : void 0;
              } else {
                process.env.NODE_ENV !== 'production'
                  ? warning(
                      false,
                      'validateDOMNesting(...): %s cannot appear as a descendant of ' +
                        '<%s>. See %s.',
                      tagDisplayName,
                      ancestorTag,
                      ownerInfo
                    )
                  : void 0;
              }
            }
          };

          validateDOMNesting.updatedAncestorInfo = updatedAncestorInfo;

          // For testing
          validateDOMNesting.isTagValidInContext = function (tag, ancestorInfo) {
            ancestorInfo = ancestorInfo || emptyAncestorInfo;
            var parentInfo = ancestorInfo.current;
            var parentTag = parentInfo && parentInfo.tag;
            return (
              isTagValidWithParent(tag, parentTag) && !findInvalidAncestorForTag(tag, ancestorInfo)
            );
          };
        }

        module.exports = validateDOMNesting;
        /* WEBPACK VAR INJECTION */
      }.call(exports, __webpack_require__(1)));

      /***/
    },
    /* 200 */
    /***/ function (module, __webpack_exports__, __webpack_require__) {
      'use strict';
      /* harmony export (immutable) */ __webpack_exports__['a'] = warning;
      /**
       * Prints a warning in the console if it exists.
       *
       * @param {String} message The warning message.
       * @returns {void}
       */
      function warning(message) {
        /* eslint-disable no-console */
        if (typeof console !== 'undefined' && typeof console.error === 'function') {
          console.error(message);
        }
        /* eslint-enable no-console */
        try {
          // This error was thrown as a convenience so that if you enable
          // "break on all exceptions" in your console,
          // it would pause the execution at this line.
          throw new Error(message);
          /* eslint-disable no-empty */
        } catch (e) {}
        /* eslint-enable no-empty */
      }

      /***/
    },
    /* 201 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true,
      });
      exports.isPromise = undefined;

      var _typeof2 = __webpack_require__(130);

      var _typeof3 = _interopRequireDefault(_typeof2);

      var _keys = __webpack_require__(212);

      var _keys2 = _interopRequireDefault(_keys);

      exports.objectToGetParams = objectToGetParams;
      exports.windowOpen = windowOpen;

      var _platform = __webpack_require__(268);

      var _platform2 = _interopRequireDefault(_platform);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      function objectToGetParams(object) {
        return (
          '?' +
          (0, _keys2.default)(object)
            .filter(function (key) {
              return !!object[key];
            })
            .map(function (key) {
              return key + '=' + encodeURIComponent(object[key]);
            })
            .join('&')
        );
      } /* eslint-disable prefer-template */
      function windowOpen(url, _ref) {
        var name = _ref.name,
          _ref$height = _ref.height,
          height = _ref$height === undefined ? 400 : _ref$height,
          _ref$width = _ref.width,
          width = _ref$width === undefined ? 550 : _ref$width;

        var left = window.outerWidth / 2 + (window.screenX || window.screenLeft || 0) - width / 2;
        var top = window.outerHeight / 2 + (window.screenY || window.screenTop || 0) - height / 2;

        var config = {
          height: height,
          width: width,
          left: left,
          top: top,
          location: 'no',
          toolbar: 'no',
          status: 'no',
          directories: 'no',
          menubar: 'no',
          scrollbars: 'yes',
          resizable: 'no',
          centerscreen: 'yes',
          chrome: 'yes',
        };

        return window.open(
          url,
          _platform2.default.name === 'IE' && parseInt(_platform2.default.version, 10) < 10
            ? ''
            : name,
          (0, _keys2.default)(config)
            .map(function (key) {
              return key + '=' + config[key];
            })
            .join(', ')
        );
      }

      var isPromise = (exports.isPromise = function isPromise(obj) {
        return (
          !!obj &&
          ((typeof obj === 'undefined' ? 'undefined' : (0, _typeof3.default)(obj)) === 'object' ||
            typeof obj === 'function') &&
          typeof obj.then === 'function'
        );
      });

      /***/
    },
    /* 202 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';
      /* WEBPACK VAR INJECTION */ (function (process) {
        /**
         * Copyright 2013-present, Facebook, Inc.
         * All rights reserved.
         *
         * This source code is licensed under the BSD-style license found in the
         * LICENSE file in the root directory of this source tree. An additional grant
         * of patent rights can be found in the PATENTS file in the same directory.
         *
         */

        var _prodInvariant = __webpack_require__(70);

        var ReactNoopUpdateQueue = __webpack_require__(203);

        var canDefineProperty = __webpack_require__(205);
        var emptyObject = __webpack_require__(94);
        var invariant = __webpack_require__(2);
        var warning = __webpack_require__(3);

        /**
         * Base class helpers for the updating state of a component.
         */
        function ReactComponent(props, context, updater) {
          this.props = props;
          this.context = context;
          this.refs = emptyObject;
          // We initialize the default updater but the real one gets injected by the
          // renderer.
          this.updater = updater || ReactNoopUpdateQueue;
        }

        ReactComponent.prototype.isReactComponent = {};

        /**
         * Sets a subset of the state. Always use this to mutate
         * state. You should treat `this.state` as immutable.
         *
         * There is no guarantee that `this.state` will be immediately updated, so
         * accessing `this.state` after calling this method may return the old value.
         *
         * There is no guarantee that calls to `setState` will run synchronously,
         * as they may eventually be batched together.  You can provide an optional
         * callback that will be executed when the call to setState is actually
         * completed.
         *
         * When a function is provided to setState, it will be called at some point in
         * the future (not synchronously). It will be called with the up to date
         * component arguments (state, props, context). These values can be different
         * from this.* because your function may be called after receiveProps but before
         * shouldComponentUpdate, and this new state, props, and context will not yet be
         * assigned to this.
         *
         * @param {object|function} partialState Next partial state or function to
         *        produce next partial state to be merged with current state.
         * @param {?function} callback Called after state is updated.
         * @final
         * @protected
         */
        ReactComponent.prototype.setState = function (partialState, callback) {
          !(
            typeof partialState === 'object' ||
            typeof partialState === 'function' ||
            partialState == null
          )
            ? process.env.NODE_ENV !== 'production'
              ? invariant(
                  false,
                  'setState(...): takes an object of state variables to update or a function which returns an object of state variables.'
                )
              : _prodInvariant('85')
            : void 0;
          this.updater.enqueueSetState(this, partialState);
          if (callback) {
            this.updater.enqueueCallback(this, callback, 'setState');
          }
        };

        /**
         * Forces an update. This should only be invoked when it is known with
         * certainty that we are **not** in a DOM transaction.
         *
         * You may want to call this when you know that some deeper aspect of the
         * component's state has changed but `setState` was not called.
         *
         * This will not invoke `shouldComponentUpdate`, but it will invoke
         * `componentWillUpdate` and `componentDidUpdate`.
         *
         * @param {?function} callback Called after update is complete.
         * @final
         * @protected
         */
        ReactComponent.prototype.forceUpdate = function (callback) {
          this.updater.enqueueForceUpdate(this);
          if (callback) {
            this.updater.enqueueCallback(this, callback, 'forceUpdate');
          }
        };

        /**
         * Deprecated APIs. These APIs used to exist on classic React classes but since
         * we would like to deprecate them, we're not going to move them over to this
         * modern base class. Instead, we define a getter that warns if it's accessed.
         */
        if (process.env.NODE_ENV !== 'production') {
          var deprecatedAPIs = {
            isMounted: [
              'isMounted',
              'Instead, make sure to clean up subscriptions and pending requests in ' +
                'componentWillUnmount to prevent memory leaks.',
            ],
            replaceState: [
              'replaceState',
              'Refactor your code to use setState instead (see ' +
                'https://github.com/facebook/react/issues/3236).',
            ],
          };
          var defineDeprecationWarning = function (methodName, info) {
            if (canDefineProperty) {
              Object.defineProperty(ReactComponent.prototype, methodName, {
                get: function () {
                  process.env.NODE_ENV !== 'production'
                    ? warning(
                        false,
                        '%s(...) is deprecated in plain JavaScript React classes. %s',
                        info[0],
                        info[1]
                      )
                    : void 0;
                  return undefined;
                },
              });
            }
          };
          for (var fnName in deprecatedAPIs) {
            if (deprecatedAPIs.hasOwnProperty(fnName)) {
              defineDeprecationWarning(fnName, deprecatedAPIs[fnName]);
            }
          }
        }

        module.exports = ReactComponent;
        /* WEBPACK VAR INJECTION */
      }.call(exports, __webpack_require__(1)));

      /***/
    },
    /* 203 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';
      /* WEBPACK VAR INJECTION */ (function (process) {
        /**
         * Copyright 2015-present, Facebook, Inc.
         * All rights reserved.
         *
         * This source code is licensed under the BSD-style license found in the
         * LICENSE file in the root directory of this source tree. An additional grant
         * of patent rights can be found in the PATENTS file in the same directory.
         *
         */

        var warning = __webpack_require__(3);

        function warnNoop(publicInstance, callerName) {
          if (process.env.NODE_ENV !== 'production') {
            var constructor = publicInstance.constructor;
            process.env.NODE_ENV !== 'production'
              ? warning(
                  false,
                  '%s(...): Can only update a mounted or mounting component. ' +
                    'This usually means you called %s() on an unmounted component. ' +
                    'This is a no-op. Please check the code for the %s component.',
                  callerName,
                  callerName,
                  (constructor && (constructor.displayName || constructor.name)) || 'ReactClass'
                )
              : void 0;
          }
        }

        /**
         * This is the abstract API for an update queue.
         */
        var ReactNoopUpdateQueue = {
          /**
           * Checks whether or not this composite component is mounted.
           * @param {ReactClass} publicInstance The instance we want to test.
           * @return {boolean} True if mounted, false otherwise.
           * @protected
           * @final
           */
          isMounted: function (publicInstance) {
            return false;
          },

          /**
           * Enqueue a callback that will be executed after all the pending updates
           * have processed.
           *
           * @param {ReactClass} publicInstance The instance to use as `this` context.
           * @param {?function} callback Called after state is updated.
           * @internal
           */
          enqueueCallback: function (publicInstance, callback) {},

          /**
           * Forces an update. This should only be invoked when it is known with
           * certainty that we are **not** in a DOM transaction.
           *
           * You may want to call this when you know that some deeper aspect of the
           * component's state has changed but `setState` was not called.
           *
           * This will not invoke `shouldComponentUpdate`, but it will invoke
           * `componentWillUpdate` and `componentDidUpdate`.
           *
           * @param {ReactClass} publicInstance The instance that should rerender.
           * @internal
           */
          enqueueForceUpdate: function (publicInstance) {
            warnNoop(publicInstance, 'forceUpdate');
          },

          /**
           * Replaces all of the state. Always use this or `setState` to mutate state.
           * You should treat `this.state` as immutable.
           *
           * There is no guarantee that `this.state` will be immediately updated, so
           * accessing `this.state` after calling this method may return the old value.
           *
           * @param {ReactClass} publicInstance The instance that should rerender.
           * @param {object} completeState Next state.
           * @internal
           */
          enqueueReplaceState: function (publicInstance, completeState) {
            warnNoop(publicInstance, 'replaceState');
          },

          /**
           * Sets a subset of the state. This only exists because _pendingState is
           * internal. This provides a merging strategy that is not available to deep
           * properties which is confusing. TODO: Expose pendingState or don't use it
           * during the merge.
           *
           * @param {ReactClass} publicInstance The instance that should rerender.
           * @param {object} partialState Next partial state to be merged with state.
           * @internal
           */
          enqueueSetState: function (publicInstance, partialState) {
            warnNoop(publicInstance, 'setState');
          },
        };

        module.exports = ReactNoopUpdateQueue;
        /* WEBPACK VAR INJECTION */
      }.call(exports, __webpack_require__(1)));

      /***/
    },
    /* 204 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';
      /* WEBPACK VAR INJECTION */ (function (process) {
        /**
         * Copyright 2013-present, Facebook, Inc.
         * All rights reserved.
         *
         * This source code is licensed under the BSD-style license found in the
         * LICENSE file in the root directory of this source tree. An additional grant
         * of patent rights can be found in the PATENTS file in the same directory.
         *
         *
         */

        var ReactPropTypeLocationNames = {};

        if (process.env.NODE_ENV !== 'production') {
          ReactPropTypeLocationNames = {
            prop: 'prop',
            context: 'context',
            childContext: 'child context',
          };
        }

        module.exports = ReactPropTypeLocationNames;
        /* WEBPACK VAR INJECTION */
      }.call(exports, __webpack_require__(1)));

      /***/
    },
    /* 205 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';
      /* WEBPACK VAR INJECTION */ (function (process) {
        /**
         * Copyright 2013-present, Facebook, Inc.
         * All rights reserved.
         *
         * This source code is licensed under the BSD-style license found in the
         * LICENSE file in the root directory of this source tree. An additional grant
         * of patent rights can be found in the PATENTS file in the same directory.
         *
         *
         */

        var canDefineProperty = false;
        if (process.env.NODE_ENV !== 'production') {
          try {
            // $FlowFixMe https://github.com/facebook/flow/issues/285
            Object.defineProperty({}, 'x', { get: function () {} });
            canDefineProperty = true;
          } catch (x) {
            // IE will fail on defineProperty
          }
        }

        module.exports = canDefineProperty;
        /* WEBPACK VAR INJECTION */
      }.call(exports, __webpack_require__(1)));

      /***/
    },
    /* 206 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';
      /**
       * Copyright 2013-present, Facebook, Inc.
       * All rights reserved.
       *
       * This source code is licensed under the BSD-style license found in the
       * LICENSE file in the root directory of this source tree. An additional grant
       * of patent rights can be found in the PATENTS file in the same directory.
       *
       *
       */

      /* global Symbol */

      var ITERATOR_SYMBOL = typeof Symbol === 'function' && Symbol.iterator;
      var FAUX_ITERATOR_SYMBOL = '@@iterator'; // Before Symbol spec.

      /**
       * Returns the iterator method function contained on the iterable object.
       *
       * Be sure to invoke the function with the iterable as context:
       *
       *     var iteratorFn = getIteratorFn(myIterable);
       *     if (iteratorFn) {
       *       var iterator = iteratorFn.call(myIterable);
       *       ...
       *     }
       *
       * @param {?object} maybeIterable
       * @return {?function}
       */
      function getIteratorFn(maybeIterable) {
        var iteratorFn =
          maybeIterable &&
          ((ITERATOR_SYMBOL && maybeIterable[ITERATOR_SYMBOL]) ||
            maybeIterable[FAUX_ITERATOR_SYMBOL]);
        if (typeof iteratorFn === 'function') {
          return iteratorFn;
        }
      }

      module.exports = getIteratorFn;

      /***/
    },
    /* 207 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';
      // a transform stream is a readable/writable stream where you do
      // something with the data.  Sometimes it's called a "filter",
      // but that's not a great name for it, since that implies a thing where
      // some bits pass through, and others are simply ignored.  (That would
      // be a valid example of a transform, of course.)
      //
      // While the output is causally related to the input, it's not a
      // necessarily symmetric or synchronous transformation.  For example,
      // a zlib stream might take multiple plain-text writes(), and then
      // emit a single compressed chunk some time in the future.
      //
      // Here's how this works:
      //
      // The Transform stream has all the aspects of the readable and writable
      // stream classes.  When you write(chunk), that calls _write(chunk,cb)
      // internally, and returns false if there's a lot of pending writes
      // buffered up.  When you call read(), that calls _read(n) until
      // there's enough pending readable data buffered up.
      //
      // In a transform stream, the written data is placed in a buffer.  When
      // _read(n) is called, it transforms the queued up data, calling the
      // buffered _write cb's as it consumes chunks.  If consuming a single
      // written chunk would result in multiple output chunks, then the first
      // outputted bit calls the readcb, and subsequent chunks just go into
      // the read buffer, and will cause it to emit 'readable' if necessary.
      //
      // This way, back-pressure is actually determined by the reading side,
      // since _read has to be called to start processing a new chunk.  However,
      // a pathological inflate type of transform can cause excessive buffering
      // here.  For example, imagine a stream where every byte of input is
      // interpreted as an integer from 0-255, and then results in that many
      // bytes of output.  Writing the 4 bytes {ff,ff,ff,ff} would result in
      // 1kb of data being output.  In this case, you could write a very small
      // amount of input, and end up with a very large amount of output.  In
      // such a pathological inflating mechanism, there'd be no way to tell
      // the system to stop doing the transform.  A single 4MB write could
      // cause the system to run out of memory.
      //
      // However, even in such a pathological case, only a single written chunk
      // would be consumed, and then the rest would wait (un-transformed) until
      // the results of the previous transformed chunk were consumed.

      module.exports = Transform;

      var Duplex = __webpack_require__(71);

      /*<replacement>*/
      var util = __webpack_require__(91);
      util.inherits = __webpack_require__(40);
      /*</replacement>*/

      util.inherits(Transform, Duplex);

      function TransformState(stream) {
        this.afterTransform = function (er, data) {
          return afterTransform(stream, er, data);
        };

        this.needTransform = false;
        this.transforming = false;
        this.writecb = null;
        this.writechunk = null;
        this.writeencoding = null;
      }

      function afterTransform(stream, er, data) {
        var ts = stream._transformState;
        ts.transforming = false;

        var cb = ts.writecb;

        if (!cb) return stream.emit('error', new Error('no writecb in Transform class'));

        ts.writechunk = null;
        ts.writecb = null;

        if (data !== null && data !== undefined) stream.push(data);

        cb(er);

        var rs = stream._readableState;
        rs.reading = false;
        if (rs.needReadable || rs.length < rs.highWaterMark) {
          stream._read(rs.highWaterMark);
        }
      }

      function Transform(options) {
        if (!(this instanceof Transform)) return new Transform(options);

        Duplex.call(this, options);

        this._transformState = new TransformState(this);

        var stream = this;

        // start out asking for a readable event once data is transformed.
        this._readableState.needReadable = true;

        // we have implemented the _read method, and done the other things
        // that Readable wants before the first _read call, so unset the
        // sync guard flag.
        this._readableState.sync = false;

        if (options) {
          if (typeof options.transform === 'function') this._transform = options.transform;

          if (typeof options.flush === 'function') this._flush = options.flush;
        }

        // When the writable side finishes, then flush out anything remaining.
        this.once('prefinish', function () {
          if (typeof this._flush === 'function')
            this._flush(function (er, data) {
              done(stream, er, data);
            });
          else done(stream);
        });
      }

      Transform.prototype.push = function (chunk, encoding) {
        this._transformState.needTransform = false;
        return Duplex.prototype.push.call(this, chunk, encoding);
      };

      // This is the part where you do stuff!
      // override this function in implementation classes.
      // 'chunk' is an input chunk.
      //
      // Call `push(newChunk)` to pass along transformed output
      // to the readable side.  You may call 'push' zero or more times.
      //
      // Call `cb(err)` when you are done with this chunk.  If you pass
      // an error, then that'll put the hurt on the whole operation.  If you
      // never call cb(), then you'll never get another chunk.
      Transform.prototype._transform = function (chunk, encoding, cb) {
        throw new Error('_transform() is not implemented');
      };

      Transform.prototype._write = function (chunk, encoding, cb) {
        var ts = this._transformState;
        ts.writecb = cb;
        ts.writechunk = chunk;
        ts.writeencoding = encoding;
        if (!ts.transforming) {
          var rs = this._readableState;
          if (ts.needTransform || rs.needReadable || rs.length < rs.highWaterMark)
            this._read(rs.highWaterMark);
        }
      };

      // Doesn't matter what the args are here.
      // _transform does all the work.
      // That we got here means that the readable side wants more data.
      Transform.prototype._read = function (n) {
        var ts = this._transformState;

        if (ts.writechunk !== null && ts.writecb && !ts.transforming) {
          ts.transforming = true;
          this._transform(ts.writechunk, ts.writeencoding, ts.afterTransform);
        } else {
          // mark that we need a transform, so that any data that comes in
          // will get processed, now that we've asked for it.
          ts.needTransform = true;
        }
      };

      function done(stream, er, data) {
        if (er) return stream.emit('error', er);

        if (data !== null && data !== undefined) stream.push(data);

        // if there's nothing in the write buffer, then that means
        // that nothing more will ever be provided
        var ws = stream._writableState;
        var ts = stream._transformState;

        if (ws.length) throw new Error('Calling transform done when ws.length != 0');

        if (ts.transforming) throw new Error('Calling transform done when still transforming');

        return stream.push(null);
      }

      /***/
    },
    /* 208 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';
      /* WEBPACK VAR INJECTION */ (function (process, setImmediate) {
        // A bit simpler than readable streams.
        // Implement an async ._write(chunk, encoding, cb), and it'll handle all
        // the drain event emission and buffering.

        module.exports = Writable;

        /*<replacement>*/
        var processNextTick = __webpack_require__(183);
        /*</replacement>*/

        /*<replacement>*/
        var asyncWrite =
          !process.browser && ['v0.10', 'v0.9.'].indexOf(process.version.slice(0, 5)) > -1
            ? setImmediate
            : processNextTick;
        /*</replacement>*/

        /*<replacement>*/
        var Duplex;
        /*</replacement>*/

        Writable.WritableState = WritableState;

        /*<replacement>*/
        var util = __webpack_require__(91);
        util.inherits = __webpack_require__(40);
        /*</replacement>*/

        /*<replacement>*/
        var internalUtil = {
          deprecate: __webpack_require__(791),
        };
        /*</replacement>*/

        /*<replacement>*/
        var Stream;
        (function () {
          try {
            Stream = __webpack_require__(126);
          } catch (_) {
          } finally {
            if (!Stream) Stream = __webpack_require__(93).EventEmitter;
          }
        })();
        /*</replacement>*/

        var Buffer = __webpack_require__(43).Buffer;
        /*<replacement>*/
        var bufferShim = __webpack_require__(131);
        /*</replacement>*/

        util.inherits(Writable, Stream);

        function nop() {}

        function WriteReq(chunk, encoding, cb) {
          this.chunk = chunk;
          this.encoding = encoding;
          this.callback = cb;
          this.next = null;
        }

        function WritableState(options, stream) {
          Duplex = Duplex || __webpack_require__(71);

          options = options || {};

          // object stream flag to indicate whether or not this stream
          // contains buffers or objects.
          this.objectMode = !!options.objectMode;

          if (stream instanceof Duplex)
            this.objectMode = this.objectMode || !!options.writableObjectMode;

          // the point at which write() starts returning false
          // Note: 0 is a valid value, means that we always return false if
          // the entire buffer is not flushed immediately on write()
          var hwm = options.highWaterMark;
          var defaultHwm = this.objectMode ? 16 : 16 * 1024;
          this.highWaterMark = hwm || hwm === 0 ? hwm : defaultHwm;

          // cast to ints.
          this.highWaterMark = ~~this.highWaterMark;

          // drain event flag.
          this.needDrain = false;
          // at the start of calling end()
          this.ending = false;
          // when end() has been called, and returned
          this.ended = false;
          // when 'finish' is emitted
          this.finished = false;

          // should we decode strings into buffers before passing to _write?
          // this is here so that some node-core streams can optimize string
          // handling at a lower level.
          var noDecode = options.decodeStrings === false;
          this.decodeStrings = !noDecode;

          // Crypto is kind of old and crusty.  Historically, its default string
          // encoding is 'binary' so we have to make this configurable.
          // Everything else in the universe uses 'utf8', though.
          this.defaultEncoding = options.defaultEncoding || 'utf8';

          // not an actual buffer we keep track of, but a measurement
          // of how much we're waiting to get pushed to some underlying
          // socket or file.
          this.length = 0;

          // a flag to see when we're in the middle of a write.
          this.writing = false;

          // when true all writes will be buffered until .uncork() call
          this.corked = 0;

          // a flag to be able to tell if the onwrite cb is called immediately,
          // or on a later tick.  We set this to true at first, because any
          // actions that shouldn't happen until "later" should generally also
          // not happen before the first write call.
          this.sync = true;

          // a flag to know if we're processing previously buffered items, which
          // may call the _write() callback in the same tick, so that we don't
          // end up in an overlapped onwrite situation.
          this.bufferProcessing = false;

          // the callback that's passed to _write(chunk,cb)
          this.onwrite = function (er) {
            onwrite(stream, er);
          };

          // the callback that the user supplies to write(chunk,encoding,cb)
          this.writecb = null;

          // the amount that is being written when _write is called.
          this.writelen = 0;

          this.bufferedRequest = null;
          this.lastBufferedRequest = null;

          // number of pending user-supplied write callbacks
          // this must be 0 before 'finish' can be emitted
          this.pendingcb = 0;

          // emit prefinish if the only thing we're waiting for is _write cbs
          // This is relevant for synchronous Transform streams
          this.prefinished = false;

          // True if the error was already emitted and should not be thrown again
          this.errorEmitted = false;

          // count buffered requests
          this.bufferedRequestCount = 0;

          // allocate the first CorkedRequest, there is always
          // one allocated and free to use, and we maintain at most two
          this.corkedRequestsFree = new CorkedRequest(this);
        }

        WritableState.prototype.getBuffer = function getBuffer() {
          var current = this.bufferedRequest;
          var out = [];
          while (current) {
            out.push(current);
            current = current.next;
          }
          return out;
        };

        (function () {
          try {
            Object.defineProperty(WritableState.prototype, 'buffer', {
              get: internalUtil.deprecate(function () {
                return this.getBuffer();
              }, '_writableState.buffer is deprecated. Use _writableState.getBuffer ' + 'instead.'),
            });
          } catch (_) {}
        })();

        // Test _writableState for inheritance to account for Duplex streams,
        // whose prototype chain only points to Readable.
        var realHasInstance;
        if (
          typeof Symbol === 'function' &&
          Symbol.hasInstance &&
          typeof Function.prototype[Symbol.hasInstance] === 'function'
        ) {
          realHasInstance = Function.prototype[Symbol.hasInstance];
          Object.defineProperty(Writable, Symbol.hasInstance, {
            value: function (object) {
              if (realHasInstance.call(this, object)) return true;

              return object && object._writableState instanceof WritableState;
            },
          });
        } else {
          realHasInstance = function (object) {
            return object instanceof this;
          };
        }

        function Writable(options) {
          Duplex = Duplex || __webpack_require__(71);

          // Writable ctor is applied to Duplexes, too.
          // `realHasInstance` is necessary because using plain `instanceof`
          // would return false, as no `_writableState` property is attached.

          // Trying to use the custom `instanceof` for Writable here will also break the
          // Node.js LazyTransform implementation, which has a non-trivial getter for
          // `_writableState` that would lead to infinite recursion.
          if (!realHasInstance.call(Writable, this) && !(this instanceof Duplex)) {
            return new Writable(options);
          }

          this._writableState = new WritableState(options, this);

          // legacy.
          this.writable = true;

          if (options) {
            if (typeof options.write === 'function') this._write = options.write;

            if (typeof options.writev === 'function') this._writev = options.writev;
          }

          Stream.call(this);
        }

        // Otherwise people can pipe Writable streams, which is just wrong.
        Writable.prototype.pipe = function () {
          this.emit('error', new Error('Cannot pipe, not readable'));
        };

        function writeAfterEnd(stream, cb) {
          var er = new Error('write after end');
          // TODO: defer error events consistently everywhere, not just the cb
          stream.emit('error', er);
          processNextTick(cb, er);
        }

        // If we get something that is not a buffer, string, null, or undefined,
        // and we're not in objectMode, then that's an error.
        // Otherwise stream chunks are all considered to be of length=1, and the
        // watermarks determine how many objects to keep in the buffer, rather than
        // how many bytes or characters.
        function validChunk(stream, state, chunk, cb) {
          var valid = true;
          var er = false;
          // Always throw error if a null is written
          // if we are not in object mode then throw
          // if it is not a buffer, string, or undefined.
          if (chunk === null) {
            er = new TypeError('May not write null values to stream');
          } else if (
            !Buffer.isBuffer(chunk) &&
            typeof chunk !== 'string' &&
            chunk !== undefined &&
            !state.objectMode
          ) {
            er = new TypeError('Invalid non-string/buffer chunk');
          }
          if (er) {
            stream.emit('error', er);
            processNextTick(cb, er);
            valid = false;
          }
          return valid;
        }

        Writable.prototype.write = function (chunk, encoding, cb) {
          var state = this._writableState;
          var ret = false;

          if (typeof encoding === 'function') {
            cb = encoding;
            encoding = null;
          }

          if (Buffer.isBuffer(chunk)) encoding = 'buffer';
          else if (!encoding) encoding = state.defaultEncoding;

          if (typeof cb !== 'function') cb = nop;

          if (state.ended) writeAfterEnd(this, cb);
          else if (validChunk(this, state, chunk, cb)) {
            state.pendingcb++;
            ret = writeOrBuffer(this, state, chunk, encoding, cb);
          }

          return ret;
        };

        Writable.prototype.cork = function () {
          var state = this._writableState;

          state.corked++;
        };

        Writable.prototype.uncork = function () {
          var state = this._writableState;

          if (state.corked) {
            state.corked--;

            if (
              !state.writing &&
              !state.corked &&
              !state.finished &&
              !state.bufferProcessing &&
              state.bufferedRequest
            )
              clearBuffer(this, state);
          }
        };

        Writable.prototype.setDefaultEncoding = function setDefaultEncoding(encoding) {
          // node::ParseEncoding() requires lower case.
          if (typeof encoding === 'string') encoding = encoding.toLowerCase();
          if (
            !(
              [
                'hex',
                'utf8',
                'utf-8',
                'ascii',
                'binary',
                'base64',
                'ucs2',
                'ucs-2',
                'utf16le',
                'utf-16le',
                'raw',
              ].indexOf((encoding + '').toLowerCase()) > -1
            )
          )
            throw new TypeError('Unknown encoding: ' + encoding);
          this._writableState.defaultEncoding = encoding;
          return this;
        };

        function decodeChunk(state, chunk, encoding) {
          if (!state.objectMode && state.decodeStrings !== false && typeof chunk === 'string') {
            chunk = bufferShim.from(chunk, encoding);
          }
          return chunk;
        }

        // if we're already writing something, then just put this
        // in the queue, and wait our turn.  Otherwise, call _write
        // If we return false, then we need a drain event, so set that flag.
        function writeOrBuffer(stream, state, chunk, encoding, cb) {
          chunk = decodeChunk(state, chunk, encoding);

          if (Buffer.isBuffer(chunk)) encoding = 'buffer';
          var len = state.objectMode ? 1 : chunk.length;

          state.length += len;

          var ret = state.length < state.highWaterMark;
          // we must ensure that previous needDrain will not be reset to false.
          if (!ret) state.needDrain = true;

          if (state.writing || state.corked) {
            var last = state.lastBufferedRequest;
            state.lastBufferedRequest = new WriteReq(chunk, encoding, cb);
            if (last) {
              last.next = state.lastBufferedRequest;
            } else {
              state.bufferedRequest = state.lastBufferedRequest;
            }
            state.bufferedRequestCount += 1;
          } else {
            doWrite(stream, state, false, len, chunk, encoding, cb);
          }

          return ret;
        }

        function doWrite(stream, state, writev, len, chunk, encoding, cb) {
          state.writelen = len;
          state.writecb = cb;
          state.writing = true;
          state.sync = true;
          if (writev) stream._writev(chunk, state.onwrite);
          else stream._write(chunk, encoding, state.onwrite);
          state.sync = false;
        }

        function onwriteError(stream, state, sync, er, cb) {
          --state.pendingcb;
          if (sync) processNextTick(cb, er);
          else cb(er);

          stream._writableState.errorEmitted = true;
          stream.emit('error', er);
        }

        function onwriteStateUpdate(state) {
          state.writing = false;
          state.writecb = null;
          state.length -= state.writelen;
          state.writelen = 0;
        }

        function onwrite(stream, er) {
          var state = stream._writableState;
          var sync = state.sync;
          var cb = state.writecb;

          onwriteStateUpdate(state);

          if (er) onwriteError(stream, state, sync, er, cb);
          else {
            // Check if we're actually ready to finish, but don't emit yet
            var finished = needFinish(state);

            if (!finished && !state.corked && !state.bufferProcessing && state.bufferedRequest) {
              clearBuffer(stream, state);
            }

            if (sync) {
              /*<replacement>*/
              asyncWrite(afterWrite, stream, state, finished, cb);
              /*</replacement>*/
            } else {
              afterWrite(stream, state, finished, cb);
            }
          }
        }

        function afterWrite(stream, state, finished, cb) {
          if (!finished) onwriteDrain(stream, state);
          state.pendingcb--;
          cb();
          finishMaybe(stream, state);
        }

        // Must force callback to be called on nextTick, so that we don't
        // emit 'drain' before the write() consumer gets the 'false' return
        // value, and has a chance to attach a 'drain' listener.
        function onwriteDrain(stream, state) {
          if (state.length === 0 && state.needDrain) {
            state.needDrain = false;
            stream.emit('drain');
          }
        }

        // if there's something in the buffer waiting, then process it
        function clearBuffer(stream, state) {
          state.bufferProcessing = true;
          var entry = state.bufferedRequest;

          if (stream._writev && entry && entry.next) {
            // Fast case, write everything using _writev()
            var l = state.bufferedRequestCount;
            var buffer = new Array(l);
            var holder = state.corkedRequestsFree;
            holder.entry = entry;

            var count = 0;
            while (entry) {
              buffer[count] = entry;
              entry = entry.next;
              count += 1;
            }

            doWrite(stream, state, true, state.length, buffer, '', holder.finish);

            // doWrite is almost always async, defer these to save a bit of time
            // as the hot path ends with doWrite
            state.pendingcb++;
            state.lastBufferedRequest = null;
            if (holder.next) {
              state.corkedRequestsFree = holder.next;
              holder.next = null;
            } else {
              state.corkedRequestsFree = new CorkedRequest(state);
            }
          } else {
            // Slow case, write chunks one-by-one
            while (entry) {
              var chunk = entry.chunk;
              var encoding = entry.encoding;
              var cb = entry.callback;
              var len = state.objectMode ? 1 : chunk.length;

              doWrite(stream, state, false, len, chunk, encoding, cb);
              entry = entry.next;
              // if we didn't call the onwrite immediately, then
              // it means that we need to wait until it does.
              // also, that means that the chunk and cb are currently
              // being processed, so move the buffer counter past them.
              if (state.writing) {
                break;
              }
            }

            if (entry === null) state.lastBufferedRequest = null;
          }

          state.bufferedRequestCount = 0;
          state.bufferedRequest = entry;
          state.bufferProcessing = false;
        }

        Writable.prototype._write = function (chunk, encoding, cb) {
          cb(new Error('_write() is not implemented'));
        };

        Writable.prototype._writev = null;

        Writable.prototype.end = function (chunk, encoding, cb) {
          var state = this._writableState;

          if (typeof chunk === 'function') {
            cb = chunk;
            chunk = null;
            encoding = null;
          } else if (typeof encoding === 'function') {
            cb = encoding;
            encoding = null;
          }

          if (chunk !== null && chunk !== undefined) this.write(chunk, encoding);

          // .end() fully uncorks
          if (state.corked) {
            state.corked = 1;
            this.uncork();
          }

          // ignore unnecessary end() calls.
          if (!state.ending && !state.finished) endWritable(this, state, cb);
        };

        function needFinish(state) {
          return (
            state.ending &&
            state.length === 0 &&
            state.bufferedRequest === null &&
            !state.finished &&
            !state.writing
          );
        }

        function prefinish(stream, state) {
          if (!state.prefinished) {
            state.prefinished = true;
            stream.emit('prefinish');
          }
        }

        function finishMaybe(stream, state) {
          var need = needFinish(state);
          if (need) {
            if (state.pendingcb === 0) {
              prefinish(stream, state);
              state.finished = true;
              stream.emit('finish');
            } else {
              prefinish(stream, state);
            }
          }
          return need;
        }

        function endWritable(stream, state, cb) {
          state.ending = true;
          finishMaybe(stream, state);
          if (cb) {
            if (state.finished) processNextTick(cb);
            else stream.once('finish', cb);
          }
          state.ended = true;
          stream.writable = false;
        }

        // It seems a linked list but it is not
        // there will be only 2 of these for each stream
        function CorkedRequest(state) {
          var _this = this;

          this.next = null;
          this.entry = null;

          this.finish = function (err) {
            var entry = _this.entry;
            _this.entry = null;
            while (entry) {
              var cb = entry.callback;
              state.pendingcb--;
              cb(err);
              entry = entry.next;
            }
            if (state.corkedRequestsFree) {
              state.corkedRequestsFree.next = _this;
            } else {
              state.corkedRequestsFree = _this;
            }
          };
        }
        /* WEBPACK VAR INJECTION */
      }.call(exports, __webpack_require__(1), __webpack_require__(790).setImmediate));

      /***/
    },
    /* 209 */
    /***/ function (module, exports, __webpack_require__) {
      // Copyright Joyent, Inc. and other Node contributors.
      //
      // Permission is hereby granted, free of charge, to any person obtaining a
      // copy of this software and associated documentation files (the
      // "Software"), to deal in the Software without restriction, including
      // without limitation the rights to use, copy, modify, merge, publish,
      // distribute, sublicense, and/or sell copies of the Software, and to permit
      // persons to whom the Software is furnished to do so, subject to the
      // following conditions:
      //
      // The above copyright notice and this permission notice shall be included
      // in all copies or substantial portions of the Software.
      //
      // THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
      // OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
      // MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
      // NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
      // DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
      // OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
      // USE OR OTHER DEALINGS IN THE SOFTWARE.

      var Buffer = __webpack_require__(43).Buffer;

      var isBufferEncoding =
        Buffer.isEncoding ||
        function (encoding) {
          switch (encoding && encoding.toLowerCase()) {
            case 'hex':
            case 'utf8':
            case 'utf-8':
            case 'ascii':
            case 'binary':
            case 'base64':
            case 'ucs2':
            case 'ucs-2':
            case 'utf16le':
            case 'utf-16le':
            case 'raw':
              return true;
            default:
              return false;
          }
        };

      function assertEncoding(encoding) {
        if (encoding && !isBufferEncoding(encoding)) {
          throw new Error('Unknown encoding: ' + encoding);
        }
      }

      // StringDecoder provides an interface for efficiently splitting a series of
      // buffers into a series of JS strings without breaking apart multi-byte
      // characters. CESU-8 is handled as part of the UTF-8 encoding.
      //
      // @TODO Handling all encodings inside a single object makes it very difficult
      // to reason about this code, so it should be split up in the future.
      // @TODO There should be a utf8-strict encoding that rejects invalid UTF-8 code
      // points as used by CESU-8.
      var StringDecoder = (exports.StringDecoder = function (encoding) {
        this.encoding = (encoding || 'utf8').toLowerCase().replace(/[-_]/, '');
        assertEncoding(encoding);
        switch (this.encoding) {
          case 'utf8':
            // CESU-8 represents each of Surrogate Pair by 3-bytes
            this.surrogateSize = 3;
            break;
          case 'ucs2':
          case 'utf16le':
            // UTF-16 represents each of Surrogate Pair by 2-bytes
            this.surrogateSize = 2;
            this.detectIncompleteChar = utf16DetectIncompleteChar;
            break;
          case 'base64':
            // Base-64 stores 3 bytes in 4 chars, and pads the remainder.
            this.surrogateSize = 3;
            this.detectIncompleteChar = base64DetectIncompleteChar;
            break;
          default:
            this.write = passThroughWrite;
            return;
        }

        // Enough space to store all bytes of a single character. UTF-8 needs 4
        // bytes, but CESU-8 may require up to 6 (3 bytes per surrogate).
        this.charBuffer = new Buffer(6);
        // Number of bytes received for the current incomplete multi-byte character.
        this.charReceived = 0;
        // Number of bytes expected for the current incomplete multi-byte character.
        this.charLength = 0;
      });

      // write decodes the given buffer and returns it as JS string that is
      // guaranteed to not contain any partial multi-byte characters. Any partial
      // character found at the end of the buffer is buffered up, and will be
      // returned when calling write again with the remaining bytes.
      //
      // Note: Converting a Buffer containing an orphan surrogate to a String
      // currently works, but converting a String to a Buffer (via `new Buffer`, or
      // Buffer#write) will replace incomplete surrogates with the unicode
      // replacement character. See https://codereview.chromium.org/121173009/ .
      StringDecoder.prototype.write = function (buffer) {
        var charStr = '';
        // if our last write ended with an incomplete multibyte character
        while (this.charLength) {
          // determine how many remaining bytes this buffer has to offer for this char
          var available =
            buffer.length >= this.charLength - this.charReceived
              ? this.charLength - this.charReceived
              : buffer.length;

          // add the new bytes to the char buffer
          buffer.copy(this.charBuffer, this.charReceived, 0, available);
          this.charReceived += available;

          if (this.charReceived < this.charLength) {
            // still not enough chars in this buffer? wait for more ...
            return '';
          }

          // remove bytes belonging to the current character from the buffer
          buffer = buffer.slice(available, buffer.length);

          // get the character that was split
          charStr = this.charBuffer.slice(0, this.charLength).toString(this.encoding);

          // CESU-8: lead surrogate (D800-DBFF) is also the incomplete character
          var charCode = charStr.charCodeAt(charStr.length - 1);
          if (charCode >= 0xd800 && charCode <= 0xdbff) {
            this.charLength += this.surrogateSize;
            charStr = '';
            continue;
          }
          this.charReceived = this.charLength = 0;

          // if there are no more bytes in this buffer, just emit our char
          if (buffer.length === 0) {
            return charStr;
          }
          break;
        }

        // determine and set charLength / charReceived
        this.detectIncompleteChar(buffer);

        var end = buffer.length;
        if (this.charLength) {
          // buffer the incomplete character bytes we got
          buffer.copy(this.charBuffer, 0, buffer.length - this.charReceived, end);
          end -= this.charReceived;
        }

        charStr += buffer.toString(this.encoding, 0, end);

        var end = charStr.length - 1;
        var charCode = charStr.charCodeAt(end);
        // CESU-8: lead surrogate (D800-DBFF) is also the incomplete character
        if (charCode >= 0xd800 && charCode <= 0xdbff) {
          var size = this.surrogateSize;
          this.charLength += size;
          this.charReceived += size;
          this.charBuffer.copy(this.charBuffer, size, 0, size);
          buffer.copy(this.charBuffer, 0, 0, size);
          return charStr.substring(0, end);
        }

        // or just emit the charStr
        return charStr;
      };

      // detectIncompleteChar determines if there is an incomplete UTF-8 character at
      // the end of the given buffer. If so, it sets this.charLength to the byte
      // length that character, and sets this.charReceived to the number of bytes
      // that are available for this character.
      StringDecoder.prototype.detectIncompleteChar = function (buffer) {
        // determine how many bytes we have to check at the end of this buffer
        var i = buffer.length >= 3 ? 3 : buffer.length;

        // Figure out if one of the last i bytes of our buffer announces an
        // incomplete char.
        for (; i > 0; i--) {
          var c = buffer[buffer.length - i];

          // See http://en.wikipedia.org/wiki/UTF-8#Description

          // 110XXXXX
          if (i == 1 && c >> 5 == 0x06) {
            this.charLength = 2;
            break;
          }

          // 1110XXXX
          if (i <= 2 && c >> 4 == 0x0e) {
            this.charLength = 3;
            break;
          }

          // 11110XXX
          if (i <= 3 && c >> 3 == 0x1e) {
            this.charLength = 4;
            break;
          }
        }
        this.charReceived = i;
      };

      StringDecoder.prototype.end = function (buffer) {
        var res = '';
        if (buffer && buffer.length) res = this.write(buffer);

        if (this.charReceived) {
          var cr = this.charReceived;
          var buf = this.charBuffer;
          var enc = this.encoding;
          res += buf.slice(0, cr).toString(enc);
        }

        return res;
      };

      function passThroughWrite(buffer) {
        return buffer.toString(this.encoding);
      }

      function utf16DetectIncompleteChar(buffer) {
        this.charReceived = buffer.length % 2;
        this.charLength = this.charReceived ? 2 : 0;
      }

      function base64DetectIncompleteChar(buffer) {
        this.charReceived = buffer.length % 3;
        this.charLength = this.charReceived ? 3 : 0;
      }

      /***/
    },
    /* 210 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';
      /* WEBPACK VAR INJECTION */ (function (global) {
        __webpack_require__(587);

        __webpack_require__(782);

        __webpack_require__(368);

        if (global._babelPolyfill) {
          throw new Error('only one instance of babel-polyfill is allowed');
        }
        global._babelPolyfill = true;

        var DEFINE_PROPERTY = 'defineProperty';
        function define(O, key, value) {
          O[key] ||
            Object[DEFINE_PROPERTY](O, key, {
              writable: true,
              configurable: true,
              value: value,
            });
        }

        define(String.prototype, 'padLeft', ''.padStart);
        define(String.prototype, 'padRight', ''.padEnd);

        'pop,reverse,shift,keys,values,entries,indexOf,every,some,forEach,map,filter,find,findIndex,includes,join,slice,concat,push,splice,unshift,sort,lastIndexOf,reduce,reduceRight,copyWithin,fill'
          .split(',')
          .forEach(function (key) {
            [][key] && define(Array, key, Function.call.bind([][key]));
          });
        /* WEBPACK VAR INJECTION */
      }.call(exports, __webpack_require__(20)));

      /***/
    },
    /* 211 */
    /***/ function (module, exports, __webpack_require__) {
      module.exports = { default: __webpack_require__(373), __esModule: true };

      /***/
    },
    /* 212 */
    /***/ function (module, exports, __webpack_require__) {
      module.exports = { default: __webpack_require__(374), __esModule: true };

      /***/
    },
    /* 213 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';

      exports.__esModule = true;

      exports.default = function (instance, Constructor) {
        if (!(instance instanceof Constructor)) {
          throw new TypeError('Cannot call a class as a function');
        }
      };

      /***/
    },
    /* 214 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';

      exports.__esModule = true;

      var _defineProperty = __webpack_require__(363);

      var _defineProperty2 = _interopRequireDefault(_defineProperty);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      exports.default = (function () {
        function defineProperties(target, props) {
          for (var i = 0; i < props.length; i++) {
            var descriptor = props[i];
            descriptor.enumerable = descriptor.enumerable || false;
            descriptor.configurable = true;
            if ('value' in descriptor) descriptor.writable = true;
            (0, _defineProperty2.default)(target, descriptor.key, descriptor);
          }
        }

        return function (Constructor, protoProps, staticProps) {
          if (protoProps) defineProperties(Constructor.prototype, protoProps);
          if (staticProps) defineProperties(Constructor, staticProps);
          return Constructor;
        };
      })();

      /***/
    },
    /* 215 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';

      exports.__esModule = true;

      var _setPrototypeOf = __webpack_require__(364);

      var _setPrototypeOf2 = _interopRequireDefault(_setPrototypeOf);

      var _create = __webpack_require__(362);

      var _create2 = _interopRequireDefault(_create);

      var _typeof2 = __webpack_require__(130);

      var _typeof3 = _interopRequireDefault(_typeof2);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      exports.default = function (subClass, superClass) {
        if (typeof superClass !== 'function' && superClass !== null) {
          throw new TypeError(
            'Super expression must either be null or a function, not ' +
              (typeof superClass === 'undefined' ? 'undefined' : (0, _typeof3.default)(superClass))
          );
        }

        subClass.prototype = (0, _create2.default)(superClass && superClass.prototype, {
          constructor: {
            value: subClass,
            enumerable: false,
            writable: true,
            configurable: true,
          },
        });
        if (superClass)
          _setPrototypeOf2.default
            ? (0, _setPrototypeOf2.default)(subClass, superClass)
            : (subClass.__proto__ = superClass);
      };

      /***/
    },
    /* 216 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';

      exports.__esModule = true;

      var _typeof2 = __webpack_require__(130);

      var _typeof3 = _interopRequireDefault(_typeof2);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      exports.default = function (self, call) {
        if (!self) {
          throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
        }

        return call &&
          ((typeof call === 'undefined' ? 'undefined' : (0, _typeof3.default)(call)) === 'object' ||
            typeof call === 'function')
          ? call
          : self;
      };

      /***/
    },
    /* 217 */
    /***/ function (module, exports) {
      var toString = {}.toString;

      module.exports = function (it) {
        return toString.call(it).slice(8, -1);
      };

      /***/
    },
    /* 218 */
    /***/ function (module, exports, __webpack_require__) {
      // optional / simple context binding
      var aFunction = __webpack_require__(378);
      module.exports = function (fn, that, length) {
        aFunction(fn);
        if (that === undefined) return fn;
        switch (length) {
          case 1:
            return function (a) {
              return fn.call(that, a);
            };
          case 2:
            return function (a, b) {
              return fn.call(that, a, b);
            };
          case 3:
            return function (a, b, c) {
              return fn.call(that, a, b, c);
            };
        }
        return function (/* ...args */) {
          return fn.apply(that, arguments);
        };
      };

      /***/
    },
    /* 219 */
    /***/ function (module, exports, __webpack_require__) {
      var isObject = __webpack_require__(87),
        document = __webpack_require__(49).document,
        // in old IE typeof document.createElement is 'object'
        is = isObject(document) && isObject(document.createElement);
      module.exports = function (it) {
        return is ? document.createElement(it) : {};
      };

      /***/
    },
    /* 220 */
    /***/ function (module, exports, __webpack_require__) {
      module.exports =
        !__webpack_require__(54) &&
        !__webpack_require__(73)(function () {
          return (
            Object.defineProperty(__webpack_require__(219)('div'), 'a', {
              get: function () {
                return 7;
              },
            }).a != 7
          );
        });

      /***/
    },
    /* 221 */
    /***/ function (module, exports, __webpack_require__) {
      // fallback for non-array-like ES3 and non-enumerable old V8 strings
      var cof = __webpack_require__(217);
      module.exports = Object('z').propertyIsEnumerable(0)
        ? Object
        : function (it) {
            return cof(it) == 'String' ? it.split('') : Object(it);
          };

      /***/
    },
    /* 222 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';

      var LIBRARY = __webpack_require__(135),
        $export = __webpack_require__(55),
        redefine = __webpack_require__(228),
        hide = __webpack_require__(74),
        has = __webpack_require__(56),
        Iterators = __webpack_require__(134),
        $iterCreate = __webpack_require__(384),
        setToStringTag = __webpack_require__(138),
        getPrototypeOf = __webpack_require__(225),
        ITERATOR = __webpack_require__(76)('iterator'),
        BUGGY = !([].keys && 'next' in [].keys()), // Safari has buggy iterators w/o `next`
        FF_ITERATOR = '@@iterator',
        KEYS = 'keys',
        VALUES = 'values';

      var returnThis = function () {
        return this;
      };

      module.exports = function (Base, NAME, Constructor, next, DEFAULT, IS_SET, FORCED) {
        $iterCreate(Constructor, NAME, next);
        var getMethod = function (kind) {
          if (!BUGGY && kind in proto) return proto[kind];
          switch (kind) {
            case KEYS:
              return function keys() {
                return new Constructor(this, kind);
              };
            case VALUES:
              return function values() {
                return new Constructor(this, kind);
              };
          }
          return function entries() {
            return new Constructor(this, kind);
          };
        };
        var TAG = NAME + ' Iterator',
          DEF_VALUES = DEFAULT == VALUES,
          VALUES_BUG = false,
          proto = Base.prototype,
          $native = proto[ITERATOR] || proto[FF_ITERATOR] || (DEFAULT && proto[DEFAULT]),
          $default = $native || getMethod(DEFAULT),
          $entries = DEFAULT ? (!DEF_VALUES ? $default : getMethod('entries')) : undefined,
          $anyNative = NAME == 'Array' ? proto.entries || $native : $native,
          methods,
          key,
          IteratorPrototype;
        // Fix native
        if ($anyNative) {
          IteratorPrototype = getPrototypeOf($anyNative.call(new Base()));
          if (IteratorPrototype !== Object.prototype) {
            // Set @@toStringTag to native iterators
            setToStringTag(IteratorPrototype, TAG, true);
            // fix for some old engines
            if (!LIBRARY && !has(IteratorPrototype, ITERATOR))
              hide(IteratorPrototype, ITERATOR, returnThis);
          }
        }
        // fix Array#{values, @@iterator}.name in V8 / FF
        if (DEF_VALUES && $native && $native.name !== VALUES) {
          VALUES_BUG = true;
          $default = function values() {
            return $native.call(this);
          };
        }
        // Define iterator
        if ((!LIBRARY || FORCED) && (BUGGY || VALUES_BUG || !proto[ITERATOR])) {
          hide(proto, ITERATOR, $default);
        }
        // Plug for library
        Iterators[NAME] = $default;
        Iterators[TAG] = returnThis;
        if (DEFAULT) {
          methods = {
            values: DEF_VALUES ? $default : getMethod(VALUES),
            keys: IS_SET ? $default : getMethod(KEYS),
            entries: $entries,
          };
          if (FORCED)
            for (key in methods) {
              if (!(key in proto)) redefine(proto, key, methods[key]);
            }
          else $export($export.P + $export.F * (BUGGY || VALUES_BUG), NAME, methods);
        }
        return methods;
      };

      /***/
    },
    /* 223 */
    /***/ function (module, exports, __webpack_require__) {
      var pIE = __webpack_require__(102),
        createDesc = __webpack_require__(103),
        toIObject = __webpack_require__(58),
        toPrimitive = __webpack_require__(142),
        has = __webpack_require__(56),
        IE8_DOM_DEFINE = __webpack_require__(220),
        gOPD = Object.getOwnPropertyDescriptor;

      exports.f = __webpack_require__(54)
        ? gOPD
        : function getOwnPropertyDescriptor(O, P) {
            O = toIObject(O);
            P = toPrimitive(P, true);
            if (IE8_DOM_DEFINE)
              try {
                return gOPD(O, P);
              } catch (e) {
                /* empty */
              }
            if (has(O, P)) return createDesc(!pIE.f.call(O, P), O[P]);
          };

      /***/
    },
    /* 224 */
    /***/ function (module, exports, __webpack_require__) {
      // 19.1.2.7 / 15.2.3.4 Object.getOwnPropertyNames(O)
      var $keys = __webpack_require__(226),
        hiddenKeys = __webpack_require__(133).concat('length', 'prototype');

      exports.f =
        Object.getOwnPropertyNames ||
        function getOwnPropertyNames(O) {
          return $keys(O, hiddenKeys);
        };

      /***/
    },
    /* 225 */
    /***/ function (module, exports, __webpack_require__) {
      // 19.1.2.9 / 15.2.3.2 Object.getPrototypeOf(O)
      var has = __webpack_require__(56),
        toObject = __webpack_require__(104),
        IE_PROTO = __webpack_require__(139)('IE_PROTO'),
        ObjectProto = Object.prototype;

      module.exports =
        Object.getPrototypeOf ||
        function (O) {
          O = toObject(O);
          if (has(O, IE_PROTO)) return O[IE_PROTO];
          if (typeof O.constructor == 'function' && O instanceof O.constructor) {
            return O.constructor.prototype;
          }
          return O instanceof Object ? ObjectProto : null;
        };

      /***/
    },
    /* 226 */
    /***/ function (module, exports, __webpack_require__) {
      var has = __webpack_require__(56),
        toIObject = __webpack_require__(58),
        arrayIndexOf = __webpack_require__(380)(false),
        IE_PROTO = __webpack_require__(139)('IE_PROTO');

      module.exports = function (object, names) {
        var O = toIObject(object),
          i = 0,
          result = [],
          key;
        for (key in O) if (key != IE_PROTO) has(O, key) && result.push(key);
        // Don't enum bug & hidden keys
        while (names.length > i)
          if (has(O, (key = names[i++]))) {
            ~arrayIndexOf(result, key) || result.push(key);
          }
        return result;
      };

      /***/
    },
    /* 227 */
    /***/ function (module, exports, __webpack_require__) {
      // most Object methods by ES6 should accept primitives
      var $export = __webpack_require__(55),
        core = __webpack_require__(33),
        fails = __webpack_require__(73);
      module.exports = function (KEY, exec) {
        var fn = (core.Object || {})[KEY] || Object[KEY],
          exp = {};
        exp[KEY] = exec(fn);
        $export(
          $export.S +
            $export.F *
              fails(function () {
                fn(1);
              }),
          'Object',
          exp
        );
      };

      /***/
    },
    /* 228 */
    /***/ function (module, exports, __webpack_require__) {
      module.exports = __webpack_require__(74);

      /***/
    },
    /* 229 */
    /***/ function (module, exports, __webpack_require__) {
      var cof = __webpack_require__(34);
      module.exports = function (it, msg) {
        if (typeof it != 'number' && cof(it) != 'Number') throw TypeError(msg);
        return +it;
      };

      /***/
    },
    /* 230 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';
      // 22.1.3.3 Array.prototype.copyWithin(target, start, end = this.length)

      var toObject = __webpack_require__(19),
        toIndex = __webpack_require__(66),
        toLength = __webpack_require__(17);

      module.exports =
        [].copyWithin ||
        function copyWithin(target /*= 0*/, start /*= 0, end = @length*/) {
          var O = toObject(this),
            len = toLength(O.length),
            to = toIndex(target, len),
            from = toIndex(start, len),
            end = arguments.length > 2 ? arguments[2] : undefined,
            count = Math.min((end === undefined ? len : toIndex(end, len)) - from, len - to),
            inc = 1;
          if (from < to && to < from + count) {
            inc = -1;
            from += count - 1;
            to += count - 1;
          }
          while (count-- > 0) {
            if (from in O) O[to] = O[from];
            else delete O[to];
            to += inc;
            from += inc;
          }
          return O;
        };

      /***/
    },
    /* 231 */
    /***/ function (module, exports, __webpack_require__) {
      var forOf = __webpack_require__(78);

      module.exports = function (iter, ITERATOR) {
        var result = [];
        forOf(iter, false, result.push, result, ITERATOR);
        return result;
      };

      /***/
    },
    /* 232 */
    /***/ function (module, exports, __webpack_require__) {
      var aFunction = __webpack_require__(23),
        toObject = __webpack_require__(19),
        IObject = __webpack_require__(89),
        toLength = __webpack_require__(17);

      module.exports = function (that, callbackfn, aLen, memo, isRight) {
        aFunction(callbackfn);
        var O = toObject(that),
          self = IObject(O),
          length = toLength(O.length),
          index = isRight ? length - 1 : 0,
          i = isRight ? -1 : 1;
        if (aLen < 2)
          for (;;) {
            if (index in self) {
              memo = self[index];
              index += i;
              break;
            }
            index += i;
            if (isRight ? index < 0 : length <= index) {
              throw TypeError('Reduce of empty array with no initial value');
            }
          }
        for (; isRight ? index >= 0 : length > index; index += i)
          if (index in self) {
            memo = callbackfn(memo, self[index], index, O);
          }
        return memo;
      };

      /***/
    },
    /* 233 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';

      var aFunction = __webpack_require__(23),
        isObject = __webpack_require__(9),
        invoke = __webpack_require__(110),
        arraySlice = [].slice,
        factories = {};

      var construct = function (F, len, args) {
        if (!(len in factories)) {
          for (var n = [], i = 0; i < len; i++) n[i] = 'a[' + i + ']';
          factories[len] = Function('F,a', 'return new F(' + n.join(',') + ')');
        }
        return factories[len](F, args);
      };

      module.exports =
        Function.bind ||
        function bind(that /*, args... */) {
          var fn = aFunction(this),
            partArgs = arraySlice.call(arguments, 1);
          var bound = function (/* args... */) {
            var args = partArgs.concat(arraySlice.call(arguments));
            return this instanceof bound
              ? construct(fn, args.length, args)
              : invoke(fn, args, that);
          };
          if (isObject(fn.prototype)) bound.prototype = fn.prototype;
          return bound;
        };

      /***/
    },
    /* 234 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';

      var dP = __webpack_require__(14).f,
        create = __webpack_require__(61),
        redefineAll = __webpack_require__(64),
        ctx = __webpack_require__(45),
        anInstance = __webpack_require__(59),
        defined = __webpack_require__(35),
        forOf = __webpack_require__(78),
        $iterDefine = __webpack_require__(155),
        step = __webpack_require__(240),
        setSpecies = __webpack_require__(65),
        DESCRIPTORS = __webpack_require__(13),
        fastKey = __webpack_require__(50).fastKey,
        SIZE = DESCRIPTORS ? '_s' : 'size';

      var getEntry = function (that, key) {
        // fast case
        var index = fastKey(key),
          entry;
        if (index !== 'F') return that._i[index];
        // frozen object case
        for (entry = that._f; entry; entry = entry.n) {
          if (entry.k == key) return entry;
        }
      };

      module.exports = {
        getConstructor: function (wrapper, NAME, IS_MAP, ADDER) {
          var C = wrapper(function (that, iterable) {
            anInstance(that, C, NAME, '_i');
            that._i = create(null); // index
            that._f = undefined; // first entry
            that._l = undefined; // last entry
            that[SIZE] = 0; // size
            if (iterable != undefined) forOf(iterable, IS_MAP, that[ADDER], that);
          });
          redefineAll(C.prototype, {
            // 23.1.3.1 Map.prototype.clear()
            // 23.2.3.2 Set.prototype.clear()
            clear: function clear() {
              for (var that = this, data = that._i, entry = that._f; entry; entry = entry.n) {
                entry.r = true;
                if (entry.p) entry.p = entry.p.n = undefined;
                delete data[entry.i];
              }
              that._f = that._l = undefined;
              that[SIZE] = 0;
            },
            // 23.1.3.3 Map.prototype.delete(key)
            // 23.2.3.4 Set.prototype.delete(value)
            delete: function (key) {
              var that = this,
                entry = getEntry(that, key);
              if (entry) {
                var next = entry.n,
                  prev = entry.p;
                delete that._i[entry.i];
                entry.r = true;
                if (prev) prev.n = next;
                if (next) next.p = prev;
                if (that._f == entry) that._f = next;
                if (that._l == entry) that._l = prev;
                that[SIZE]--;
              }
              return !!entry;
            },
            // 23.2.3.6 Set.prototype.forEach(callbackfn, thisArg = undefined)
            // 23.1.3.5 Map.prototype.forEach(callbackfn, thisArg = undefined)
            forEach: function forEach(callbackfn /*, that = undefined */) {
              anInstance(this, C, 'forEach');
              var f = ctx(callbackfn, arguments.length > 1 ? arguments[1] : undefined, 3),
                entry;
              while ((entry = entry ? entry.n : this._f)) {
                f(entry.v, entry.k, this);
                // revert to the last existing entry
                while (entry && entry.r) entry = entry.p;
              }
            },
            // 23.1.3.7 Map.prototype.has(key)
            // 23.2.3.7 Set.prototype.has(value)
            has: function has(key) {
              return !!getEntry(this, key);
            },
          });
          if (DESCRIPTORS)
            dP(C.prototype, 'size', {
              get: function () {
                return defined(this[SIZE]);
              },
            });
          return C;
        },
        def: function (that, key, value) {
          var entry = getEntry(that, key),
            prev,
            index;
          // change existing entry
          if (entry) {
            entry.v = value;
            // create new entry
          } else {
            that._l = entry = {
              i: (index = fastKey(key, true)), // <- index
              k: key, // <- key
              v: value, // <- value
              p: (prev = that._l), // <- previous entry
              n: undefined, // <- next entry
              r: false, // <- removed
            };
            if (!that._f) that._f = entry;
            if (prev) prev.n = entry;
            that[SIZE]++;
            // add to index
            if (index !== 'F') that._i[index] = entry;
          }
          return that;
        },
        getEntry: getEntry,
        setStrong: function (C, NAME, IS_MAP) {
          // add .keys, .values, .entries, [@@iterator]
          // 23.1.3.4, 23.1.3.8, 23.1.3.11, 23.1.3.12, 23.2.3.5, 23.2.3.8, 23.2.3.10, 23.2.3.11
          $iterDefine(
            C,
            NAME,
            function (iterated, kind) {
              this._t = iterated; // target
              this._k = kind; // kind
              this._l = undefined; // previous
            },
            function () {
              var that = this,
                kind = that._k,
                entry = that._l;
              // revert to the last existing entry
              while (entry && entry.r) entry = entry.p;
              // get next entry
              if (!that._t || !(that._l = entry = entry ? entry.n : that._t._f)) {
                // or finish the iteration
                that._t = undefined;
                return step(1);
              }
              // return step by kind
              if (kind == 'keys') return step(0, entry.k);
              if (kind == 'values') return step(0, entry.v);
              return step(0, [entry.k, entry.v]);
            },
            IS_MAP ? 'entries' : 'values',
            !IS_MAP,
            true
          );

          // add [@@species], 23.1.2.2, 23.2.2.2
          setSpecies(NAME);
        },
      };

      /***/
    },
    /* 235 */
    /***/ function (module, exports, __webpack_require__) {
      // https://github.com/DavidBruant/Map-Set.prototype.toJSON
      var classof = __webpack_require__(88),
        from = __webpack_require__(231);
      module.exports = function (NAME) {
        return function toJSON() {
          if (classof(this) != NAME) throw TypeError(NAME + "#toJSON isn't generic");
          return from(this);
        };
      };

      /***/
    },
    /* 236 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';

      var redefineAll = __webpack_require__(64),
        getWeak = __webpack_require__(50).getWeak,
        anObject = __webpack_require__(5),
        isObject = __webpack_require__(9),
        anInstance = __webpack_require__(59),
        forOf = __webpack_require__(78),
        createArrayMethod = __webpack_require__(37),
        $has = __webpack_require__(21),
        arrayFind = createArrayMethod(5),
        arrayFindIndex = createArrayMethod(6),
        id = 0;

      // fallback for uncaught frozen keys
      var uncaughtFrozenStore = function (that) {
        return that._l || (that._l = new UncaughtFrozenStore());
      };
      var UncaughtFrozenStore = function () {
        this.a = [];
      };
      var findUncaughtFrozen = function (store, key) {
        return arrayFind(store.a, function (it) {
          return it[0] === key;
        });
      };
      UncaughtFrozenStore.prototype = {
        get: function (key) {
          var entry = findUncaughtFrozen(this, key);
          if (entry) return entry[1];
        },
        has: function (key) {
          return !!findUncaughtFrozen(this, key);
        },
        set: function (key, value) {
          var entry = findUncaughtFrozen(this, key);
          if (entry) entry[1] = value;
          else this.a.push([key, value]);
        },
        delete: function (key) {
          var index = arrayFindIndex(this.a, function (it) {
            return it[0] === key;
          });
          if (~index) this.a.splice(index, 1);
          return !!~index;
        },
      };

      module.exports = {
        getConstructor: function (wrapper, NAME, IS_MAP, ADDER) {
          var C = wrapper(function (that, iterable) {
            anInstance(that, C, NAME, '_i');
            that._i = id++; // collection id
            that._l = undefined; // leak store for uncaught frozen objects
            if (iterable != undefined) forOf(iterable, IS_MAP, that[ADDER], that);
          });
          redefineAll(C.prototype, {
            // 23.3.3.2 WeakMap.prototype.delete(key)
            // 23.4.3.3 WeakSet.prototype.delete(value)
            delete: function (key) {
              if (!isObject(key)) return false;
              var data = getWeak(key);
              if (data === true) return uncaughtFrozenStore(this)['delete'](key);
              return data && $has(data, this._i) && delete data[this._i];
            },
            // 23.3.3.4 WeakMap.prototype.has(key)
            // 23.4.3.4 WeakSet.prototype.has(value)
            has: function has(key) {
              if (!isObject(key)) return false;
              var data = getWeak(key);
              if (data === true) return uncaughtFrozenStore(this).has(key);
              return data && $has(data, this._i);
            },
          });
          return C;
        },
        def: function (that, key, value) {
          var data = getWeak(anObject(key), true);
          if (data === true) uncaughtFrozenStore(that).set(key, value);
          else data[that._i] = value;
          return that;
        },
        ufstore: uncaughtFrozenStore,
      };

      /***/
    },
    /* 237 */
    /***/ function (module, exports, __webpack_require__) {
      module.exports =
        !__webpack_require__(13) &&
        !__webpack_require__(7)(function () {
          return (
            Object.defineProperty(__webpack_require__(147)('div'), 'a', {
              get: function () {
                return 7;
              },
            }).a != 7
          );
        });

      /***/
    },
    /* 238 */
    /***/ function (module, exports, __webpack_require__) {
      // 20.1.2.3 Number.isInteger(number)
      var isObject = __webpack_require__(9),
        floor = Math.floor;
      module.exports = function isInteger(it) {
        return !isObject(it) && isFinite(it) && floor(it) === it;
      };

      /***/
    },
    /* 239 */
    /***/ function (module, exports, __webpack_require__) {
      // call something on iterator step with safe closing on error
      var anObject = __webpack_require__(5);
      module.exports = function (iterator, fn, value, entries) {
        try {
          return entries ? fn(anObject(value)[0], value[1]) : fn(value);
          // 7.4.6 IteratorClose(iterator, completion)
        } catch (e) {
          var ret = iterator['return'];
          if (ret !== undefined) anObject(ret.call(iterator));
          throw e;
        }
      };

      /***/
    },
    /* 240 */
    /***/ function (module, exports) {
      module.exports = function (done, value) {
        return { value: value, done: !!done };
      };

      /***/
    },
    /* 241 */
    /***/ function (module, exports) {
      // 20.2.2.20 Math.log1p(x)
      module.exports =
        Math.log1p ||
        function log1p(x) {
          return (x = +x) > -1e-8 && x < 1e-8 ? x - (x * x) / 2 : Math.log(1 + x);
        };

      /***/
    },
    /* 242 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';

      // 19.1.2.1 Object.assign(target, source, ...)
      var getKeys = __webpack_require__(63),
        gOPS = __webpack_require__(114),
        pIE = __webpack_require__(90),
        toObject = __webpack_require__(19),
        IObject = __webpack_require__(89),
        $assign = Object.assign;

      // should work with symbols and should have deterministic property order (V8 bug)
      module.exports =
        !$assign ||
        __webpack_require__(7)(function () {
          var A = {},
            B = {},
            S = Symbol(),
            K = 'abcdefghijklmnopqrst';
          A[S] = 7;
          K.split('').forEach(function (k) {
            B[k] = k;
          });
          return $assign({}, A)[S] != 7 || Object.keys($assign({}, B)).join('') != K;
        })
          ? function assign(target, source) {
              // eslint-disable-line no-unused-vars
              var T = toObject(target),
                aLen = arguments.length,
                index = 1,
                getSymbols = gOPS.f,
                isEnum = pIE.f;
              while (aLen > index) {
                var S = IObject(arguments[index++]),
                  keys = getSymbols ? getKeys(S).concat(getSymbols(S)) : getKeys(S),
                  length = keys.length,
                  j = 0,
                  key;
                while (length > j) if (isEnum.call(S, (key = keys[j++]))) T[key] = S[key];
              }
              return T;
            }
          : $assign;

      /***/
    },
    /* 243 */
    /***/ function (module, exports, __webpack_require__) {
      var dP = __webpack_require__(14),
        anObject = __webpack_require__(5),
        getKeys = __webpack_require__(63);

      module.exports = __webpack_require__(13)
        ? Object.defineProperties
        : function defineProperties(O, Properties) {
            anObject(O);
            var keys = getKeys(Properties),
              length = keys.length,
              i = 0,
              P;
            while (length > i) dP.f(O, (P = keys[i++]), Properties[P]);
            return O;
          };

      /***/
    },
    /* 244 */
    /***/ function (module, exports, __webpack_require__) {
      // fallback for IE11 buggy Object.getOwnPropertyNames with iframe and window
      var toIObject = __webpack_require__(27),
        gOPN = __webpack_require__(62).f,
        toString = {}.toString;

      var windowNames =
        typeof window == 'object' && window && Object.getOwnPropertyNames
          ? Object.getOwnPropertyNames(window)
          : [];

      var getWindowNames = function (it) {
        try {
          return gOPN(it);
        } catch (e) {
          return windowNames.slice();
        }
      };

      module.exports.f = function getOwnPropertyNames(it) {
        return windowNames && toString.call(it) == '[object Window]'
          ? getWindowNames(it)
          : gOPN(toIObject(it));
      };

      /***/
    },
    /* 245 */
    /***/ function (module, exports, __webpack_require__) {
      var has = __webpack_require__(21),
        toIObject = __webpack_require__(27),
        arrayIndexOf = __webpack_require__(106)(false),
        IE_PROTO = __webpack_require__(160)('IE_PROTO');

      module.exports = function (object, names) {
        var O = toIObject(object),
          i = 0,
          result = [],
          key;
        for (key in O) if (key != IE_PROTO) has(O, key) && result.push(key);
        // Don't enum bug & hidden keys
        while (names.length > i)
          if (has(O, (key = names[i++]))) {
            ~arrayIndexOf(result, key) || result.push(key);
          }
        return result;
      };

      /***/
    },
    /* 246 */
    /***/ function (module, exports, __webpack_require__) {
      var getKeys = __webpack_require__(63),
        toIObject = __webpack_require__(27),
        isEnum = __webpack_require__(90).f;
      module.exports = function (isEntries) {
        return function (it) {
          var O = toIObject(it),
            keys = getKeys(O),
            length = keys.length,
            i = 0,
            result = [],
            key;
          while (length > i)
            if (isEnum.call(O, (key = keys[i++]))) {
              result.push(isEntries ? [key, O[key]] : O[key]);
            }
          return result;
        };
      };

      /***/
    },
    /* 247 */
    /***/ function (module, exports, __webpack_require__) {
      // all object keys, includes non-enumerable and symbols
      var gOPN = __webpack_require__(62),
        gOPS = __webpack_require__(114),
        anObject = __webpack_require__(5),
        Reflect = __webpack_require__(6).Reflect;
      module.exports =
        (Reflect && Reflect.ownKeys) ||
        function ownKeys(it) {
          var keys = gOPN.f(anObject(it)),
            getSymbols = gOPS.f;
          return getSymbols ? keys.concat(getSymbols(it)) : keys;
        };

      /***/
    },
    /* 248 */
    /***/ function (module, exports, __webpack_require__) {
      var $parseFloat = __webpack_require__(6).parseFloat,
        $trim = __webpack_require__(81).trim;

      module.exports =
        1 / $parseFloat(__webpack_require__(165) + '-0') !== -Infinity
          ? function parseFloat(str) {
              var string = $trim(String(str), 3),
                result = $parseFloat(string);
              return result === 0 && string.charAt(0) == '-' ? -0 : result;
            }
          : $parseFloat;

      /***/
    },
    /* 249 */
    /***/ function (module, exports, __webpack_require__) {
      var $parseInt = __webpack_require__(6).parseInt,
        $trim = __webpack_require__(81).trim,
        ws = __webpack_require__(165),
        hex = /^[\-+]?0[xX]/;

      module.exports =
        $parseInt(ws + '08') !== 8 || $parseInt(ws + '0x16') !== 22
          ? function parseInt(str, radix) {
              var string = $trim(String(str), 3);
              return $parseInt(string, radix >>> 0 || (hex.test(string) ? 16 : 10));
            }
          : $parseInt;

      /***/
    },
    /* 250 */
    /***/ function (module, exports) {
      // 7.2.9 SameValue(x, y)
      module.exports =
        Object.is ||
        function is(x, y) {
          return x === y ? x !== 0 || 1 / x === 1 / y : x != x && y != y;
        };

      /***/
    },
    /* 251 */
    /***/ function (module, exports, __webpack_require__) {
      // https://github.com/tc39/proposal-string-pad-start-end
      var toLength = __webpack_require__(17),
        repeat = __webpack_require__(164),
        defined = __webpack_require__(35);

      module.exports = function (that, maxLength, fillString, left) {
        var S = String(defined(that)),
          stringLength = S.length,
          fillStr = fillString === undefined ? ' ' : String(fillString),
          intMaxLength = toLength(maxLength);
        if (intMaxLength <= stringLength || fillStr == '') return S;
        var fillLen = intMaxLength - stringLength,
          stringFiller = repeat.call(fillStr, Math.ceil(fillLen / fillStr.length));
        if (stringFiller.length > fillLen) stringFiller = stringFiller.slice(0, fillLen);
        return left ? stringFiller + S : S + stringFiller;
      };

      /***/
    },
    /* 252 */
    /***/ function (module, exports, __webpack_require__) {
      exports.f = __webpack_require__(10);

      /***/
    },
    /* 253 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';

      var strong = __webpack_require__(234);

      // 23.1 Map Objects
      module.exports = __webpack_require__(107)(
        'Map',
        function (get) {
          return function Map() {
            return get(this, arguments.length > 0 ? arguments[0] : undefined);
          };
        },
        {
          // 23.1.3.6 Map.prototype.get(key)
          get: function get(key) {
            var entry = strong.getEntry(this, key);
            return entry && entry.v;
          },
          // 23.1.3.9 Map.prototype.set(key, value)
          set: function set(key, value) {
            return strong.def(this, key === 0 ? 0 : key, value);
          },
        },
        strong,
        true
      );

      /***/
    },
    /* 254 */
    /***/ function (module, exports, __webpack_require__) {
      // 21.2.5.3 get RegExp.prototype.flags()
      if (__webpack_require__(13) && /./g.flags != 'g')
        __webpack_require__(14).f(RegExp.prototype, 'flags', {
          configurable: true,
          get: __webpack_require__(109),
        });

      /***/
    },
    /* 255 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';

      var strong = __webpack_require__(234);

      // 23.2 Set Objects
      module.exports = __webpack_require__(107)(
        'Set',
        function (get) {
          return function Set() {
            return get(this, arguments.length > 0 ? arguments[0] : undefined);
          };
        },
        {
          // 23.2.3.1 Set.prototype.add(value)
          add: function add(value) {
            return strong.def(this, (value = value === 0 ? 0 : value), value);
          },
        },
        strong
      );

      /***/
    },
    /* 256 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';

      var each = __webpack_require__(37)(0),
        redefine = __webpack_require__(25),
        meta = __webpack_require__(50),
        assign = __webpack_require__(242),
        weak = __webpack_require__(236),
        isObject = __webpack_require__(9),
        getWeak = meta.getWeak,
        isExtensible = Object.isExtensible,
        uncaughtFrozenStore = weak.ufstore,
        tmp = {},
        InternalMap;

      var wrapper = function (get) {
        return function WeakMap() {
          return get(this, arguments.length > 0 ? arguments[0] : undefined);
        };
      };

      var methods = {
        // 23.3.3.3 WeakMap.prototype.get(key)
        get: function get(key) {
          if (isObject(key)) {
            var data = getWeak(key);
            if (data === true) return uncaughtFrozenStore(this).get(key);
            return data ? data[this._i] : undefined;
          }
        },
        // 23.3.3.5 WeakMap.prototype.set(key, value)
        set: function set(key, value) {
          return weak.def(this, key, value);
        },
      };

      // 23.3 WeakMap Objects
      var $WeakMap = (module.exports = __webpack_require__(107)(
        'WeakMap',
        wrapper,
        methods,
        weak,
        true,
        true
      ));

      // IE11 WeakMap frozen keys fix
      if (new $WeakMap().set((Object.freeze || Object)(tmp), 7).get(tmp) != 7) {
        InternalMap = weak.getConstructor(wrapper);
        assign(InternalMap.prototype, methods);
        meta.NEED = true;
        each(['delete', 'has', 'get', 'set'], function (key) {
          var proto = $WeakMap.prototype,
            method = proto[key];
          redefine(proto, key, function (a, b) {
            // store frozen objects on internal weakmap shim
            if (isObject(a) && !isExtensible(a)) {
              if (!this._f) this._f = new InternalMap();
              var result = this._f[key](a, b);
              return key == 'set' ? this : result;
              // store all the rest on native weakmap
            }
            return method.call(this, a, b);
          });
        });
      }

      /***/
    },
    /* 257 */
    /***/ function (module, exports) {
      // This object will be used as the prototype for Nodes when creating a
      // DOM-Level-1-compliant structure.
      var NodePrototype = (module.exports = {
        get firstChild() {
          var children = this.children;
          return (children && children[0]) || null;
        },
        get lastChild() {
          var children = this.children;
          return (children && children[children.length - 1]) || null;
        },
        get nodeType() {
          return nodeTypes[this.type] || nodeTypes.element;
        },
      });

      var domLvl1 = {
        tagName: 'name',
        childNodes: 'children',
        parentNode: 'parent',
        previousSibling: 'prev',
        nextSibling: 'next',
        nodeValue: 'data',
      };

      var nodeTypes = {
        element: 1,
        text: 3,
        cdata: 4,
        comment: 8,
      };

      Object.keys(domLvl1).forEach(function (key) {
        var shorthand = domLvl1[key];
        Object.defineProperty(NodePrototype, key, {
          get: function () {
            return this[shorthand] || null;
          },
          set: function (val) {
            this[shorthand] = val;
            return val;
          },
        });
      });

      /***/
    },
    /* 258 */
    /***/ function (module, exports, __webpack_require__) {
      var decodeMap = __webpack_require__(606);

      module.exports = decodeCodePoint;

      // modified version of https://github.com/mathiasbynens/he/blob/master/src/he.js#L94-L119
      function decodeCodePoint(codePoint) {
        if ((codePoint >= 0xd800 && codePoint <= 0xdfff) || codePoint > 0x10ffff) {
          return '\uFFFD';
        }

        if (codePoint in decodeMap) {
          codePoint = decodeMap[codePoint];
        }

        var output = '';

        if (codePoint > 0xffff) {
          codePoint -= 0x10000;
          output += String.fromCharCode(((codePoint >>> 10) & 0x3ff) | 0xd800);
          codePoint = 0xdc00 | (codePoint & 0x3ff);
        }

        output += String.fromCharCode(codePoint);
        return output;
      }

      /***/
    },
    /* 259 */
    /***/ function (module, exports) {
      module.exports = {
        Aacute: 'Á',
        aacute: 'á',
        Acirc: 'Â',
        acirc: 'â',
        acute: '´',
        AElig: 'Æ',
        aelig: 'æ',
        Agrave: 'À',
        agrave: 'à',
        amp: '&',
        AMP: '&',
        Aring: 'Å',
        aring: 'å',
        Atilde: 'Ã',
        atilde: 'ã',
        Auml: 'Ä',
        auml: 'ä',
        brvbar: '¦',
        Ccedil: 'Ç',
        ccedil: 'ç',
        cedil: '¸',
        cent: '¢',
        copy: '©',
        COPY: '©',
        curren: '¤',
        deg: '°',
        divide: '÷',
        Eacute: 'É',
        eacute: 'é',
        Ecirc: 'Ê',
        ecirc: 'ê',
        Egrave: 'È',
        egrave: 'è',
        ETH: 'Ð',
        eth: 'ð',
        Euml: 'Ë',
        euml: 'ë',
        frac12: '½',
        frac14: '¼',
        frac34: '¾',
        gt: '>',
        GT: '>',
        Iacute: 'Í',
        iacute: 'í',
        Icirc: 'Î',
        icirc: 'î',
        iexcl: '¡',
        Igrave: 'Ì',
        igrave: 'ì',
        iquest: '¿',
        Iuml: 'Ï',
        iuml: 'ï',
        laquo: '«',
        lt: '<',
        LT: '<',
        macr: '¯',
        micro: 'µ',
        middot: '·',
        nbsp: ' ',
        not: '¬',
        Ntilde: 'Ñ',
        ntilde: 'ñ',
        Oacute: 'Ó',
        oacute: 'ó',
        Ocirc: 'Ô',
        ocirc: 'ô',
        Ograve: 'Ò',
        ograve: 'ò',
        ordf: 'ª',
        ordm: 'º',
        Oslash: 'Ø',
        oslash: 'ø',
        Otilde: 'Õ',
        otilde: 'õ',
        Ouml: 'Ö',
        ouml: 'ö',
        para: '¶',
        plusmn: '±',
        pound: '£',
        quot: '"',
        QUOT: '"',
        raquo: '»',
        reg: '®',
        REG: '®',
        sect: '§',
        shy: '­',
        sup1: '¹',
        sup2: '²',
        sup3: '³',
        szlig: 'ß',
        THORN: 'Þ',
        thorn: 'þ',
        times: '×',
        Uacute: 'Ú',
        uacute: 'ú',
        Ucirc: 'Û',
        ucirc: 'û',
        Ugrave: 'Ù',
        ugrave: 'ù',
        uml: '¨',
        Uuml: 'Ü',
        uuml: 'ü',
        Yacute: 'Ý',
        yacute: 'ý',
        yen: '¥',
        yuml: 'ÿ',
      };

      /***/
    },
    /* 260 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';
      /* WEBPACK VAR INJECTION */ (function (process) {
        /**
         * Copyright (c) 2013-present, Facebook, Inc.
         *
         * Licensed under the Apache License, Version 2.0 (the "License");
         * you may not use this file except in compliance with the License.
         * You may obtain a copy of the License at
         *
         * http://www.apache.org/licenses/LICENSE-2.0
         *
         * Unless required by applicable law or agreed to in writing, software
         * distributed under the License is distributed on an "AS IS" BASIS,
         * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
         * See the License for the specific language governing permissions and
         * limitations under the License.
         *
         * @typechecks
         */

        var emptyFunction = __webpack_require__(28);

        /**
         * Upstream version of event listener. Does not take into account specific
         * nature of platform.
         */
        var EventListener = {
          /**
           * Listen to DOM events during the bubble phase.
           *
           * @param {DOMEventTarget} target DOM element to register listener on.
           * @param {string} eventType Event type, e.g. 'click' or 'mouseover'.
           * @param {function} callback Callback function.
           * @return {object} Object with a `remove` method.
           */
          listen: function listen(target, eventType, callback) {
            if (target.addEventListener) {
              target.addEventListener(eventType, callback, false);
              return {
                remove: function remove() {
                  target.removeEventListener(eventType, callback, false);
                },
              };
            } else if (target.attachEvent) {
              target.attachEvent('on' + eventType, callback);
              return {
                remove: function remove() {
                  target.detachEvent('on' + eventType, callback);
                },
              };
            }
          },

          /**
           * Listen to DOM events during the capture phase.
           *
           * @param {DOMEventTarget} target DOM element to register listener on.
           * @param {string} eventType Event type, e.g. 'click' or 'mouseover'.
           * @param {function} callback Callback function.
           * @return {object} Object with a `remove` method.
           */
          capture: function capture(target, eventType, callback) {
            if (target.addEventListener) {
              target.addEventListener(eventType, callback, true);
              return {
                remove: function remove() {
                  target.removeEventListener(eventType, callback, true);
                },
              };
            } else {
              if (process.env.NODE_ENV !== 'production') {
                console.error(
                  'Attempted to listen to events during the capture phase on a ' +
                    'browser that does not support the capture phase. Your application ' +
                    'will not receive some events.'
                );
              }
              return {
                remove: emptyFunction,
              };
            }
          },

          registerDefault: function registerDefault() {},
        };

        module.exports = EventListener;
        /* WEBPACK VAR INJECTION */
      }.call(exports, __webpack_require__(1)));

      /***/
    },
    /* 261 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';
      /**
       * Copyright (c) 2013-present, Facebook, Inc.
       * All rights reserved.
       *
       * This source code is licensed under the BSD-style license found in the
       * LICENSE file in the root directory of this source tree. An additional grant
       * of patent rights can be found in the PATENTS file in the same directory.
       *
       */

      /**
       * @param {DOMElement} node input/textarea to focus
       */

      function focusNode(node) {
        // IE8 can throw "Can't move focus to the control because it is invisible,
        // not enabled, or of a type that does not accept the focus." for all kinds of
        // reasons that are too expensive and fragile to test.
        try {
          node.focus();
        } catch (e) {}
      }

      module.exports = focusNode;

      /***/
    },
    /* 262 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';

      /**
       * Copyright (c) 2013-present, Facebook, Inc.
       * All rights reserved.
       *
       * This source code is licensed under the BSD-style license found in the
       * LICENSE file in the root directory of this source tree. An additional grant
       * of patent rights can be found in the PATENTS file in the same directory.
       *
       * @typechecks
       */

      /* eslint-disable fb-www/typeof-undefined */

      /**
       * Same as document.activeElement but wraps in a try-catch block. In IE it is
       * not safe to call document.activeElement if there is nothing focused.
       *
       * The activeElement will be null only if the document or document body is not
       * yet defined.
       */
      function getActiveElement() /*?DOMElement*/ {
        if (typeof document === 'undefined') {
          return null;
        }
        try {
          return document.activeElement || document.body;
        } catch (e) {
          return document.body;
        }
      }

      module.exports = getActiveElement;

      /***/
    },
    /* 263 */
    /***/ function (module, exports, __webpack_require__) {
      var Tokenizer = __webpack_require__(264);

      /*
	Options:

	xmlMode: Disables the special behavior for script/style tags (false by default)
	lowerCaseAttributeNames: call .toLowerCase for each attribute name (true if xmlMode is `false`)
	lowerCaseTags: call .toLowerCase for each tag name (true if xmlMode is `false`)
*/

      /*
	Callbacks:

	oncdataend,
	oncdatastart,
	onclosetag,
	oncomment,
	oncommentend,
	onerror,
	onopentag,
	onprocessinginstruction,
	onreset,
	ontext
*/

      var formTags = {
        input: true,
        option: true,
        optgroup: true,
        select: true,
        button: true,
        datalist: true,
        textarea: true,
      };

      var openImpliesClose = {
        tr: { tr: true, th: true, td: true },
        th: { th: true },
        td: { thead: true, th: true, td: true },
        body: { head: true, link: true, script: true },
        li: { li: true },
        p: { p: true },
        h1: { p: true },
        h2: { p: true },
        h3: { p: true },
        h4: { p: true },
        h5: { p: true },
        h6: { p: true },
        select: formTags,
        input: formTags,
        output: formTags,
        button: formTags,
        datalist: formTags,
        textarea: formTags,
        option: { option: true },
        optgroup: { optgroup: true },
      };

      var voidElements = {
        __proto__: null,
        area: true,
        base: true,
        basefont: true,
        br: true,
        col: true,
        command: true,
        embed: true,
        frame: true,
        hr: true,
        img: true,
        input: true,
        isindex: true,
        keygen: true,
        link: true,
        meta: true,
        param: true,
        source: true,
        track: true,
        wbr: true,

        //common self closing svg elements
        path: true,
        circle: true,
        ellipse: true,
        line: true,
        rect: true,
        use: true,
        stop: true,
        polyline: true,
        polygon: true,
      };

      var re_nameEnd = /\s|\//;

      function Parser(cbs, options) {
        this._options = options || {};
        this._cbs = cbs || {};

        this._tagname = '';
        this._attribname = '';
        this._attribvalue = '';
        this._attribs = null;
        this._stack = [];

        this.startIndex = 0;
        this.endIndex = null;

        this._lowerCaseTagNames =
          'lowerCaseTags' in this._options ? !!this._options.lowerCaseTags : !this._options.xmlMode;
        this._lowerCaseAttributeNames =
          'lowerCaseAttributeNames' in this._options
            ? !!this._options.lowerCaseAttributeNames
            : !this._options.xmlMode;

        if (this._options.Tokenizer) {
          Tokenizer = this._options.Tokenizer;
        }
        this._tokenizer = new Tokenizer(this._options, this);

        if (this._cbs.onparserinit) this._cbs.onparserinit(this);
      }

      __webpack_require__(40)(Parser, __webpack_require__(93).EventEmitter);

      Parser.prototype._updatePosition = function (initialOffset) {
        if (this.endIndex === null) {
          if (this._tokenizer._sectionStart <= initialOffset) {
            this.startIndex = 0;
          } else {
            this.startIndex = this._tokenizer._sectionStart - initialOffset;
          }
        } else this.startIndex = this.endIndex + 1;
        this.endIndex = this._tokenizer.getAbsoluteIndex();
      };

      //Tokenizer event handlers
      Parser.prototype.ontext = function (data) {
        this._updatePosition(1);
        this.endIndex--;

        if (this._cbs.ontext) this._cbs.ontext(data);
      };

      Parser.prototype.onopentagname = function (name) {
        if (this._lowerCaseTagNames) {
          name = name.toLowerCase();
        }

        this._tagname = name;

        if (!this._options.xmlMode && name in openImpliesClose) {
          for (
            var el;
            (el = this._stack[this._stack.length - 1]) in openImpliesClose[name];
            this.onclosetag(el)
          );
        }

        if (this._options.xmlMode || !(name in voidElements)) {
          this._stack.push(name);
        }

        if (this._cbs.onopentagname) this._cbs.onopentagname(name);
        if (this._cbs.onopentag) this._attribs = {};
      };

      Parser.prototype.onopentagend = function () {
        this._updatePosition(1);

        if (this._attribs) {
          if (this._cbs.onopentag) this._cbs.onopentag(this._tagname, this._attribs);
          this._attribs = null;
        }

        if (!this._options.xmlMode && this._cbs.onclosetag && this._tagname in voidElements) {
          this._cbs.onclosetag(this._tagname);
        }

        this._tagname = '';
      };

      Parser.prototype.onclosetag = function (name) {
        this._updatePosition(1);

        if (this._lowerCaseTagNames) {
          name = name.toLowerCase();
        }

        if (this._stack.length && (!(name in voidElements) || this._options.xmlMode)) {
          var pos = this._stack.lastIndexOf(name);
          if (pos !== -1) {
            if (this._cbs.onclosetag) {
              pos = this._stack.length - pos;
              while (pos--) this._cbs.onclosetag(this._stack.pop());
            } else this._stack.length = pos;
          } else if (name === 'p' && !this._options.xmlMode) {
            this.onopentagname(name);
            this._closeCurrentTag();
          }
        } else if (!this._options.xmlMode && (name === 'br' || name === 'p')) {
          this.onopentagname(name);
          this._closeCurrentTag();
        }
      };

      Parser.prototype.onselfclosingtag = function () {
        if (this._options.xmlMode || this._options.recognizeSelfClosing) {
          this._closeCurrentTag();
        } else {
          this.onopentagend();
        }
      };

      Parser.prototype._closeCurrentTag = function () {
        var name = this._tagname;

        this.onopentagend();

        //self-closing tags will be on the top of the stack
        //(cheaper check than in onclosetag)
        if (this._stack[this._stack.length - 1] === name) {
          if (this._cbs.onclosetag) {
            this._cbs.onclosetag(name);
          }
          this._stack.pop();
        }
      };

      Parser.prototype.onattribname = function (name) {
        if (this._lowerCaseAttributeNames) {
          name = name.toLowerCase();
        }
        this._attribname = name;
      };

      Parser.prototype.onattribdata = function (value) {
        this._attribvalue += value;
      };

      Parser.prototype.onattribend = function () {
        if (this._cbs.onattribute) this._cbs.onattribute(this._attribname, this._attribvalue);
        if (
          this._attribs &&
          !Object.prototype.hasOwnProperty.call(this._attribs, this._attribname)
        ) {
          this._attribs[this._attribname] = this._attribvalue;
        }
        this._attribname = '';
        this._attribvalue = '';
      };

      Parser.prototype._getInstructionName = function (value) {
        var idx = value.search(re_nameEnd),
          name = idx < 0 ? value : value.substr(0, idx);

        if (this._lowerCaseTagNames) {
          name = name.toLowerCase();
        }

        return name;
      };

      Parser.prototype.ondeclaration = function (value) {
        if (this._cbs.onprocessinginstruction) {
          var name = this._getInstructionName(value);
          this._cbs.onprocessinginstruction('!' + name, '!' + value);
        }
      };

      Parser.prototype.onprocessinginstruction = function (value) {
        if (this._cbs.onprocessinginstruction) {
          var name = this._getInstructionName(value);
          this._cbs.onprocessinginstruction('?' + name, '?' + value);
        }
      };

      Parser.prototype.oncomment = function (value) {
        this._updatePosition(4);

        if (this._cbs.oncomment) this._cbs.oncomment(value);
        if (this._cbs.oncommentend) this._cbs.oncommentend();
      };

      Parser.prototype.oncdata = function (value) {
        this._updatePosition(1);

        if (this._options.xmlMode || this._options.recognizeCDATA) {
          if (this._cbs.oncdatastart) this._cbs.oncdatastart();
          if (this._cbs.ontext) this._cbs.ontext(value);
          if (this._cbs.oncdataend) this._cbs.oncdataend();
        } else {
          this.oncomment('[CDATA[' + value + ']]');
        }
      };

      Parser.prototype.onerror = function (err) {
        if (this._cbs.onerror) this._cbs.onerror(err);
      };

      Parser.prototype.onend = function () {
        if (this._cbs.onclosetag) {
          for (var i = this._stack.length; i > 0; this._cbs.onclosetag(this._stack[--i]));
        }
        if (this._cbs.onend) this._cbs.onend();
      };

      //Resets the parser to a blank state, ready to parse a new HTML document
      Parser.prototype.reset = function () {
        if (this._cbs.onreset) this._cbs.onreset();
        this._tokenizer.reset();

        this._tagname = '';
        this._attribname = '';
        this._attribs = null;
        this._stack = [];

        if (this._cbs.onparserinit) this._cbs.onparserinit(this);
      };

      //Parses a complete HTML document and pushes it to the handler
      Parser.prototype.parseComplete = function (data) {
        this.reset();
        this.end(data);
      };

      Parser.prototype.write = function (chunk) {
        this._tokenizer.write(chunk);
      };

      Parser.prototype.end = function (chunk) {
        this._tokenizer.end(chunk);
      };

      Parser.prototype.pause = function () {
        this._tokenizer.pause();
      };

      Parser.prototype.resume = function () {
        this._tokenizer.resume();
      };

      //alias for backwards compat
      Parser.prototype.parseChunk = Parser.prototype.write;
      Parser.prototype.done = Parser.prototype.end;

      module.exports = Parser;

      /***/
    },
    /* 264 */
    /***/ function (module, exports, __webpack_require__) {
      module.exports = Tokenizer;

      var decodeCodePoint = __webpack_require__(258),
        entityMap = __webpack_require__(171),
        legacyMap = __webpack_require__(259),
        xmlMap = __webpack_require__(172),
        i = 0,
        TEXT = i++,
        BEFORE_TAG_NAME = i++, //after <
        IN_TAG_NAME = i++,
        IN_SELF_CLOSING_TAG = i++,
        BEFORE_CLOSING_TAG_NAME = i++,
        IN_CLOSING_TAG_NAME = i++,
        AFTER_CLOSING_TAG_NAME = i++,
        //attributes
        BEFORE_ATTRIBUTE_NAME = i++,
        IN_ATTRIBUTE_NAME = i++,
        AFTER_ATTRIBUTE_NAME = i++,
        BEFORE_ATTRIBUTE_VALUE = i++,
        IN_ATTRIBUTE_VALUE_DQ = i++, // "
        IN_ATTRIBUTE_VALUE_SQ = i++, // '
        IN_ATTRIBUTE_VALUE_NQ = i++,
        //declarations
        BEFORE_DECLARATION = i++, // !
        IN_DECLARATION = i++,
        //processing instructions
        IN_PROCESSING_INSTRUCTION = i++, // ?
        //comments
        BEFORE_COMMENT = i++,
        IN_COMMENT = i++,
        AFTER_COMMENT_1 = i++,
        AFTER_COMMENT_2 = i++,
        //cdata
        BEFORE_CDATA_1 = i++, // [
        BEFORE_CDATA_2 = i++, // C
        BEFORE_CDATA_3 = i++, // D
        BEFORE_CDATA_4 = i++, // A
        BEFORE_CDATA_5 = i++, // T
        BEFORE_CDATA_6 = i++, // A
        IN_CDATA = i++, // [
        AFTER_CDATA_1 = i++, // ]
        AFTER_CDATA_2 = i++, // ]
        //special tags
        BEFORE_SPECIAL = i++, //S
        BEFORE_SPECIAL_END = i++, //S
        BEFORE_SCRIPT_1 = i++, //C
        BEFORE_SCRIPT_2 = i++, //R
        BEFORE_SCRIPT_3 = i++, //I
        BEFORE_SCRIPT_4 = i++, //P
        BEFORE_SCRIPT_5 = i++, //T
        AFTER_SCRIPT_1 = i++, //C
        AFTER_SCRIPT_2 = i++, //R
        AFTER_SCRIPT_3 = i++, //I
        AFTER_SCRIPT_4 = i++, //P
        AFTER_SCRIPT_5 = i++, //T
        BEFORE_STYLE_1 = i++, //T
        BEFORE_STYLE_2 = i++, //Y
        BEFORE_STYLE_3 = i++, //L
        BEFORE_STYLE_4 = i++, //E
        AFTER_STYLE_1 = i++, //T
        AFTER_STYLE_2 = i++, //Y
        AFTER_STYLE_3 = i++, //L
        AFTER_STYLE_4 = i++, //E
        BEFORE_ENTITY = i++, //&
        BEFORE_NUMERIC_ENTITY = i++, //#
        IN_NAMED_ENTITY = i++,
        IN_NUMERIC_ENTITY = i++,
        IN_HEX_ENTITY = i++, //X
        j = 0,
        SPECIAL_NONE = j++,
        SPECIAL_SCRIPT = j++,
        SPECIAL_STYLE = j++;

      function whitespace(c) {
        return c === ' ' || c === '\n' || c === '\t' || c === '\f' || c === '\r';
      }

      function characterState(char, SUCCESS) {
        return function (c) {
          if (c === char) this._state = SUCCESS;
        };
      }

      function ifElseState(upper, SUCCESS, FAILURE) {
        var lower = upper.toLowerCase();

        if (upper === lower) {
          return function (c) {
            if (c === lower) {
              this._state = SUCCESS;
            } else {
              this._state = FAILURE;
              this._index--;
            }
          };
        } else {
          return function (c) {
            if (c === lower || c === upper) {
              this._state = SUCCESS;
            } else {
              this._state = FAILURE;
              this._index--;
            }
          };
        }
      }

      function consumeSpecialNameChar(upper, NEXT_STATE) {
        var lower = upper.toLowerCase();

        return function (c) {
          if (c === lower || c === upper) {
            this._state = NEXT_STATE;
          } else {
            this._state = IN_TAG_NAME;
            this._index--; //consume the token again
          }
        };
      }

      function Tokenizer(options, cbs) {
        this._state = TEXT;
        this._buffer = '';
        this._sectionStart = 0;
        this._index = 0;
        this._bufferOffset = 0; //chars removed from _buffer
        this._baseState = TEXT;
        this._special = SPECIAL_NONE;
        this._cbs = cbs;
        this._running = true;
        this._ended = false;
        this._xmlMode = !!(options && options.xmlMode);
        this._decodeEntities = !!(options && options.decodeEntities);
      }

      Tokenizer.prototype._stateText = function (c) {
        if (c === '<') {
          if (this._index > this._sectionStart) {
            this._cbs.ontext(this._getSection());
          }
          this._state = BEFORE_TAG_NAME;
          this._sectionStart = this._index;
        } else if (this._decodeEntities && this._special === SPECIAL_NONE && c === '&') {
          if (this._index > this._sectionStart) {
            this._cbs.ontext(this._getSection());
          }
          this._baseState = TEXT;
          this._state = BEFORE_ENTITY;
          this._sectionStart = this._index;
        }
      };

      Tokenizer.prototype._stateBeforeTagName = function (c) {
        if (c === '/') {
          this._state = BEFORE_CLOSING_TAG_NAME;
        } else if (c === '<') {
          this._cbs.ontext(this._getSection());
          this._sectionStart = this._index;
        } else if (c === '>' || this._special !== SPECIAL_NONE || whitespace(c)) {
          this._state = TEXT;
        } else if (c === '!') {
          this._state = BEFORE_DECLARATION;
          this._sectionStart = this._index + 1;
        } else if (c === '?') {
          this._state = IN_PROCESSING_INSTRUCTION;
          this._sectionStart = this._index + 1;
        } else {
          this._state = !this._xmlMode && (c === 's' || c === 'S') ? BEFORE_SPECIAL : IN_TAG_NAME;
          this._sectionStart = this._index;
        }
      };

      Tokenizer.prototype._stateInTagName = function (c) {
        if (c === '/' || c === '>' || whitespace(c)) {
          this._emitToken('onopentagname');
          this._state = BEFORE_ATTRIBUTE_NAME;
          this._index--;
        }
      };

      Tokenizer.prototype._stateBeforeCloseingTagName = function (c) {
        if (whitespace(c));
        else if (c === '>') {
          this._state = TEXT;
        } else if (this._special !== SPECIAL_NONE) {
          if (c === 's' || c === 'S') {
            this._state = BEFORE_SPECIAL_END;
          } else {
            this._state = TEXT;
            this._index--;
          }
        } else {
          this._state = IN_CLOSING_TAG_NAME;
          this._sectionStart = this._index;
        }
      };

      Tokenizer.prototype._stateInCloseingTagName = function (c) {
        if (c === '>' || whitespace(c)) {
          this._emitToken('onclosetag');
          this._state = AFTER_CLOSING_TAG_NAME;
          this._index--;
        }
      };

      Tokenizer.prototype._stateAfterCloseingTagName = function (c) {
        //skip everything until ">"
        if (c === '>') {
          this._state = TEXT;
          this._sectionStart = this._index + 1;
        }
      };

      Tokenizer.prototype._stateBeforeAttributeName = function (c) {
        if (c === '>') {
          this._cbs.onopentagend();
          this._state = TEXT;
          this._sectionStart = this._index + 1;
        } else if (c === '/') {
          this._state = IN_SELF_CLOSING_TAG;
        } else if (!whitespace(c)) {
          this._state = IN_ATTRIBUTE_NAME;
          this._sectionStart = this._index;
        }
      };

      Tokenizer.prototype._stateInSelfClosingTag = function (c) {
        if (c === '>') {
          this._cbs.onselfclosingtag();
          this._state = TEXT;
          this._sectionStart = this._index + 1;
        } else if (!whitespace(c)) {
          this._state = BEFORE_ATTRIBUTE_NAME;
          this._index--;
        }
      };

      Tokenizer.prototype._stateInAttributeName = function (c) {
        if (c === '=' || c === '/' || c === '>' || whitespace(c)) {
          this._cbs.onattribname(this._getSection());
          this._sectionStart = -1;
          this._state = AFTER_ATTRIBUTE_NAME;
          this._index--;
        }
      };

      Tokenizer.prototype._stateAfterAttributeName = function (c) {
        if (c === '=') {
          this._state = BEFORE_ATTRIBUTE_VALUE;
        } else if (c === '/' || c === '>') {
          this._cbs.onattribend();
          this._state = BEFORE_ATTRIBUTE_NAME;
          this._index--;
        } else if (!whitespace(c)) {
          this._cbs.onattribend();
          this._state = IN_ATTRIBUTE_NAME;
          this._sectionStart = this._index;
        }
      };

      Tokenizer.prototype._stateBeforeAttributeValue = function (c) {
        if (c === '"') {
          this._state = IN_ATTRIBUTE_VALUE_DQ;
          this._sectionStart = this._index + 1;
        } else if (c === "'") {
          this._state = IN_ATTRIBUTE_VALUE_SQ;
          this._sectionStart = this._index + 1;
        } else if (!whitespace(c)) {
          this._state = IN_ATTRIBUTE_VALUE_NQ;
          this._sectionStart = this._index;
          this._index--; //reconsume token
        }
      };

      Tokenizer.prototype._stateInAttributeValueDoubleQuotes = function (c) {
        if (c === '"') {
          this._emitToken('onattribdata');
          this._cbs.onattribend();
          this._state = BEFORE_ATTRIBUTE_NAME;
        } else if (this._decodeEntities && c === '&') {
          this._emitToken('onattribdata');
          this._baseState = this._state;
          this._state = BEFORE_ENTITY;
          this._sectionStart = this._index;
        }
      };

      Tokenizer.prototype._stateInAttributeValueSingleQuotes = function (c) {
        if (c === "'") {
          this._emitToken('onattribdata');
          this._cbs.onattribend();
          this._state = BEFORE_ATTRIBUTE_NAME;
        } else if (this._decodeEntities && c === '&') {
          this._emitToken('onattribdata');
          this._baseState = this._state;
          this._state = BEFORE_ENTITY;
          this._sectionStart = this._index;
        }
      };

      Tokenizer.prototype._stateInAttributeValueNoQuotes = function (c) {
        if (whitespace(c) || c === '>') {
          this._emitToken('onattribdata');
          this._cbs.onattribend();
          this._state = BEFORE_ATTRIBUTE_NAME;
          this._index--;
        } else if (this._decodeEntities && c === '&') {
          this._emitToken('onattribdata');
          this._baseState = this._state;
          this._state = BEFORE_ENTITY;
          this._sectionStart = this._index;
        }
      };

      Tokenizer.prototype._stateBeforeDeclaration = function (c) {
        this._state = c === '[' ? BEFORE_CDATA_1 : c === '-' ? BEFORE_COMMENT : IN_DECLARATION;
      };

      Tokenizer.prototype._stateInDeclaration = function (c) {
        if (c === '>') {
          this._cbs.ondeclaration(this._getSection());
          this._state = TEXT;
          this._sectionStart = this._index + 1;
        }
      };

      Tokenizer.prototype._stateInProcessingInstruction = function (c) {
        if (c === '>') {
          this._cbs.onprocessinginstruction(this._getSection());
          this._state = TEXT;
          this._sectionStart = this._index + 1;
        }
      };

      Tokenizer.prototype._stateBeforeComment = function (c) {
        if (c === '-') {
          this._state = IN_COMMENT;
          this._sectionStart = this._index + 1;
        } else {
          this._state = IN_DECLARATION;
        }
      };

      Tokenizer.prototype._stateInComment = function (c) {
        if (c === '-') this._state = AFTER_COMMENT_1;
      };

      Tokenizer.prototype._stateAfterComment1 = function (c) {
        if (c === '-') {
          this._state = AFTER_COMMENT_2;
        } else {
          this._state = IN_COMMENT;
        }
      };

      Tokenizer.prototype._stateAfterComment2 = function (c) {
        if (c === '>') {
          //remove 2 trailing chars
          this._cbs.oncomment(this._buffer.substring(this._sectionStart, this._index - 2));
          this._state = TEXT;
          this._sectionStart = this._index + 1;
        } else if (c !== '-') {
          this._state = IN_COMMENT;
        }
        // else: stay in AFTER_COMMENT_2 (`--->`)
      };

      Tokenizer.prototype._stateBeforeCdata1 = ifElseState('C', BEFORE_CDATA_2, IN_DECLARATION);
      Tokenizer.prototype._stateBeforeCdata2 = ifElseState('D', BEFORE_CDATA_3, IN_DECLARATION);
      Tokenizer.prototype._stateBeforeCdata3 = ifElseState('A', BEFORE_CDATA_4, IN_DECLARATION);
      Tokenizer.prototype._stateBeforeCdata4 = ifElseState('T', BEFORE_CDATA_5, IN_DECLARATION);
      Tokenizer.prototype._stateBeforeCdata5 = ifElseState('A', BEFORE_CDATA_6, IN_DECLARATION);

      Tokenizer.prototype._stateBeforeCdata6 = function (c) {
        if (c === '[') {
          this._state = IN_CDATA;
          this._sectionStart = this._index + 1;
        } else {
          this._state = IN_DECLARATION;
          this._index--;
        }
      };

      Tokenizer.prototype._stateInCdata = function (c) {
        if (c === ']') this._state = AFTER_CDATA_1;
      };

      Tokenizer.prototype._stateAfterCdata1 = characterState(']', AFTER_CDATA_2);

      Tokenizer.prototype._stateAfterCdata2 = function (c) {
        if (c === '>') {
          //remove 2 trailing chars
          this._cbs.oncdata(this._buffer.substring(this._sectionStart, this._index - 2));
          this._state = TEXT;
          this._sectionStart = this._index + 1;
        } else if (c !== ']') {
          this._state = IN_CDATA;
        }
        //else: stay in AFTER_CDATA_2 (`]]]>`)
      };

      Tokenizer.prototype._stateBeforeSpecial = function (c) {
        if (c === 'c' || c === 'C') {
          this._state = BEFORE_SCRIPT_1;
        } else if (c === 't' || c === 'T') {
          this._state = BEFORE_STYLE_1;
        } else {
          this._state = IN_TAG_NAME;
          this._index--; //consume the token again
        }
      };

      Tokenizer.prototype._stateBeforeSpecialEnd = function (c) {
        if (this._special === SPECIAL_SCRIPT && (c === 'c' || c === 'C')) {
          this._state = AFTER_SCRIPT_1;
        } else if (this._special === SPECIAL_STYLE && (c === 't' || c === 'T')) {
          this._state = AFTER_STYLE_1;
        } else this._state = TEXT;
      };

      Tokenizer.prototype._stateBeforeScript1 = consumeSpecialNameChar('R', BEFORE_SCRIPT_2);
      Tokenizer.prototype._stateBeforeScript2 = consumeSpecialNameChar('I', BEFORE_SCRIPT_3);
      Tokenizer.prototype._stateBeforeScript3 = consumeSpecialNameChar('P', BEFORE_SCRIPT_4);
      Tokenizer.prototype._stateBeforeScript4 = consumeSpecialNameChar('T', BEFORE_SCRIPT_5);

      Tokenizer.prototype._stateBeforeScript5 = function (c) {
        if (c === '/' || c === '>' || whitespace(c)) {
          this._special = SPECIAL_SCRIPT;
        }
        this._state = IN_TAG_NAME;
        this._index--; //consume the token again
      };

      Tokenizer.prototype._stateAfterScript1 = ifElseState('R', AFTER_SCRIPT_2, TEXT);
      Tokenizer.prototype._stateAfterScript2 = ifElseState('I', AFTER_SCRIPT_3, TEXT);
      Tokenizer.prototype._stateAfterScript3 = ifElseState('P', AFTER_SCRIPT_4, TEXT);
      Tokenizer.prototype._stateAfterScript4 = ifElseState('T', AFTER_SCRIPT_5, TEXT);

      Tokenizer.prototype._stateAfterScript5 = function (c) {
        if (c === '>' || whitespace(c)) {
          this._special = SPECIAL_NONE;
          this._state = IN_CLOSING_TAG_NAME;
          this._sectionStart = this._index - 6;
          this._index--; //reconsume the token
        } else this._state = TEXT;
      };

      Tokenizer.prototype._stateBeforeStyle1 = consumeSpecialNameChar('Y', BEFORE_STYLE_2);
      Tokenizer.prototype._stateBeforeStyle2 = consumeSpecialNameChar('L', BEFORE_STYLE_3);
      Tokenizer.prototype._stateBeforeStyle3 = consumeSpecialNameChar('E', BEFORE_STYLE_4);

      Tokenizer.prototype._stateBeforeStyle4 = function (c) {
        if (c === '/' || c === '>' || whitespace(c)) {
          this._special = SPECIAL_STYLE;
        }
        this._state = IN_TAG_NAME;
        this._index--; //consume the token again
      };

      Tokenizer.prototype._stateAfterStyle1 = ifElseState('Y', AFTER_STYLE_2, TEXT);
      Tokenizer.prototype._stateAfterStyle2 = ifElseState('L', AFTER_STYLE_3, TEXT);
      Tokenizer.prototype._stateAfterStyle3 = ifElseState('E', AFTER_STYLE_4, TEXT);

      Tokenizer.prototype._stateAfterStyle4 = function (c) {
        if (c === '>' || whitespace(c)) {
          this._special = SPECIAL_NONE;
          this._state = IN_CLOSING_TAG_NAME;
          this._sectionStart = this._index - 5;
          this._index--; //reconsume the token
        } else this._state = TEXT;
      };

      Tokenizer.prototype._stateBeforeEntity = ifElseState(
        '#',
        BEFORE_NUMERIC_ENTITY,
        IN_NAMED_ENTITY
      );
      Tokenizer.prototype._stateBeforeNumericEntity = ifElseState(
        'X',
        IN_HEX_ENTITY,
        IN_NUMERIC_ENTITY
      );

      //for entities terminated with a semicolon
      Tokenizer.prototype._parseNamedEntityStrict = function () {
        //offset = 1
        if (this._sectionStart + 1 < this._index) {
          var entity = this._buffer.substring(this._sectionStart + 1, this._index),
            map = this._xmlMode ? xmlMap : entityMap;

          if (map.hasOwnProperty(entity)) {
            this._emitPartial(map[entity]);
            this._sectionStart = this._index + 1;
          }
        }
      };

      //parses legacy entities (without trailing semicolon)
      Tokenizer.prototype._parseLegacyEntity = function () {
        var start = this._sectionStart + 1,
          limit = this._index - start;

        if (limit > 6) limit = 6; //the max length of legacy entities is 6

        while (limit >= 2) {
          //the min length of legacy entities is 2
          var entity = this._buffer.substr(start, limit);

          if (legacyMap.hasOwnProperty(entity)) {
            this._emitPartial(legacyMap[entity]);
            this._sectionStart += limit + 1;
            return;
          } else {
            limit--;
          }
        }
      };

      Tokenizer.prototype._stateInNamedEntity = function (c) {
        if (c === ';') {
          this._parseNamedEntityStrict();
          if (this._sectionStart + 1 < this._index && !this._xmlMode) {
            this._parseLegacyEntity();
          }
          this._state = this._baseState;
        } else if ((c < 'a' || c > 'z') && (c < 'A' || c > 'Z') && (c < '0' || c > '9')) {
          if (this._xmlMode);
          else if (this._sectionStart + 1 === this._index);
          else if (this._baseState !== TEXT) {
            if (c !== '=') {
              this._parseNamedEntityStrict();
            }
          } else {
            this._parseLegacyEntity();
          }

          this._state = this._baseState;
          this._index--;
        }
      };

      Tokenizer.prototype._decodeNumericEntity = function (offset, base) {
        var sectionStart = this._sectionStart + offset;

        if (sectionStart !== this._index) {
          //parse entity
          var entity = this._buffer.substring(sectionStart, this._index);
          var parsed = parseInt(entity, base);

          this._emitPartial(decodeCodePoint(parsed));
          this._sectionStart = this._index;
        } else {
          this._sectionStart--;
        }

        this._state = this._baseState;
      };

      Tokenizer.prototype._stateInNumericEntity = function (c) {
        if (c === ';') {
          this._decodeNumericEntity(2, 10);
          this._sectionStart++;
        } else if (c < '0' || c > '9') {
          if (!this._xmlMode) {
            this._decodeNumericEntity(2, 10);
          } else {
            this._state = this._baseState;
          }
          this._index--;
        }
      };

      Tokenizer.prototype._stateInHexEntity = function (c) {
        if (c === ';') {
          this._decodeNumericEntity(3, 16);
          this._sectionStart++;
        } else if ((c < 'a' || c > 'f') && (c < 'A' || c > 'F') && (c < '0' || c > '9')) {
          if (!this._xmlMode) {
            this._decodeNumericEntity(3, 16);
          } else {
            this._state = this._baseState;
          }
          this._index--;
        }
      };

      Tokenizer.prototype._cleanup = function () {
        if (this._sectionStart < 0) {
          this._buffer = '';
          this._bufferOffset += this._index;
          this._index = 0;
        } else if (this._running) {
          if (this._state === TEXT) {
            if (this._sectionStart !== this._index) {
              this._cbs.ontext(this._buffer.substr(this._sectionStart));
            }
            this._buffer = '';
            this._bufferOffset += this._index;
            this._index = 0;
          } else if (this._sectionStart === this._index) {
            //the section just started
            this._buffer = '';
            this._bufferOffset += this._index;
            this._index = 0;
          } else {
            //remove everything unnecessary
            this._buffer = this._buffer.substr(this._sectionStart);
            this._index -= this._sectionStart;
            this._bufferOffset += this._sectionStart;
          }

          this._sectionStart = 0;
        }
      };

      //TODO make events conditional
      Tokenizer.prototype.write = function (chunk) {
        if (this._ended) this._cbs.onerror(Error('.write() after done!'));

        this._buffer += chunk;
        this._parse();
      };

      Tokenizer.prototype._parse = function () {
        while (this._index < this._buffer.length && this._running) {
          var c = this._buffer.charAt(this._index);
          if (this._state === TEXT) {
            this._stateText(c);
          } else if (this._state === BEFORE_TAG_NAME) {
            this._stateBeforeTagName(c);
          } else if (this._state === IN_TAG_NAME) {
            this._stateInTagName(c);
          } else if (this._state === BEFORE_CLOSING_TAG_NAME) {
            this._stateBeforeCloseingTagName(c);
          } else if (this._state === IN_CLOSING_TAG_NAME) {
            this._stateInCloseingTagName(c);
          } else if (this._state === AFTER_CLOSING_TAG_NAME) {
            this._stateAfterCloseingTagName(c);
          } else if (this._state === IN_SELF_CLOSING_TAG) {
            this._stateInSelfClosingTag(c);
          } else if (this._state === BEFORE_ATTRIBUTE_NAME) {

          /*
           *	attributes
           */
            this._stateBeforeAttributeName(c);
          } else if (this._state === IN_ATTRIBUTE_NAME) {
            this._stateInAttributeName(c);
          } else if (this._state === AFTER_ATTRIBUTE_NAME) {
            this._stateAfterAttributeName(c);
          } else if (this._state === BEFORE_ATTRIBUTE_VALUE) {
            this._stateBeforeAttributeValue(c);
          } else if (this._state === IN_ATTRIBUTE_VALUE_DQ) {
            this._stateInAttributeValueDoubleQuotes(c);
          } else if (this._state === IN_ATTRIBUTE_VALUE_SQ) {
            this._stateInAttributeValueSingleQuotes(c);
          } else if (this._state === IN_ATTRIBUTE_VALUE_NQ) {
            this._stateInAttributeValueNoQuotes(c);
          } else if (this._state === BEFORE_DECLARATION) {

          /*
           *	declarations
           */
            this._stateBeforeDeclaration(c);
          } else if (this._state === IN_DECLARATION) {
            this._stateInDeclaration(c);
          } else if (this._state === IN_PROCESSING_INSTRUCTION) {

          /*
           *	processing instructions
           */
            this._stateInProcessingInstruction(c);
          } else if (this._state === BEFORE_COMMENT) {

          /*
           *	comments
           */
            this._stateBeforeComment(c);
          } else if (this._state === IN_COMMENT) {
            this._stateInComment(c);
          } else if (this._state === AFTER_COMMENT_1) {
            this._stateAfterComment1(c);
          } else if (this._state === AFTER_COMMENT_2) {
            this._stateAfterComment2(c);
          } else if (this._state === BEFORE_CDATA_1) {

          /*
           *	cdata
           */
            this._stateBeforeCdata1(c);
          } else if (this._state === BEFORE_CDATA_2) {
            this._stateBeforeCdata2(c);
          } else if (this._state === BEFORE_CDATA_3) {
            this._stateBeforeCdata3(c);
          } else if (this._state === BEFORE_CDATA_4) {
            this._stateBeforeCdata4(c);
          } else if (this._state === BEFORE_CDATA_5) {
            this._stateBeforeCdata5(c);
          } else if (this._state === BEFORE_CDATA_6) {
            this._stateBeforeCdata6(c);
          } else if (this._state === IN_CDATA) {
            this._stateInCdata(c);
          } else if (this._state === AFTER_CDATA_1) {
            this._stateAfterCdata1(c);
          } else if (this._state === AFTER_CDATA_2) {
            this._stateAfterCdata2(c);
          } else if (this._state === BEFORE_SPECIAL) {

          /*
           * special tags
           */
            this._stateBeforeSpecial(c);
          } else if (this._state === BEFORE_SPECIAL_END) {
            this._stateBeforeSpecialEnd(c);
          } else if (this._state === BEFORE_SCRIPT_1) {

          /*
           * script
           */
            this._stateBeforeScript1(c);
          } else if (this._state === BEFORE_SCRIPT_2) {
            this._stateBeforeScript2(c);
          } else if (this._state === BEFORE_SCRIPT_3) {
            this._stateBeforeScript3(c);
          } else if (this._state === BEFORE_SCRIPT_4) {
            this._stateBeforeScript4(c);
          } else if (this._state === BEFORE_SCRIPT_5) {
            this._stateBeforeScript5(c);
          } else if (this._state === AFTER_SCRIPT_1) {
            this._stateAfterScript1(c);
          } else if (this._state === AFTER_SCRIPT_2) {
            this._stateAfterScript2(c);
          } else if (this._state === AFTER_SCRIPT_3) {
            this._stateAfterScript3(c);
          } else if (this._state === AFTER_SCRIPT_4) {
            this._stateAfterScript4(c);
          } else if (this._state === AFTER_SCRIPT_5) {
            this._stateAfterScript5(c);
          } else if (this._state === BEFORE_STYLE_1) {

          /*
           * style
           */
            this._stateBeforeStyle1(c);
          } else if (this._state === BEFORE_STYLE_2) {
            this._stateBeforeStyle2(c);
          } else if (this._state === BEFORE_STYLE_3) {
            this._stateBeforeStyle3(c);
          } else if (this._state === BEFORE_STYLE_4) {
            this._stateBeforeStyle4(c);
          } else if (this._state === AFTER_STYLE_1) {
            this._stateAfterStyle1(c);
          } else if (this._state === AFTER_STYLE_2) {
            this._stateAfterStyle2(c);
          } else if (this._state === AFTER_STYLE_3) {
            this._stateAfterStyle3(c);
          } else if (this._state === AFTER_STYLE_4) {
            this._stateAfterStyle4(c);
          } else if (this._state === BEFORE_ENTITY) {

          /*
           * entities
           */
            this._stateBeforeEntity(c);
          } else if (this._state === BEFORE_NUMERIC_ENTITY) {
            this._stateBeforeNumericEntity(c);
          } else if (this._state === IN_NAMED_ENTITY) {
            this._stateInNamedEntity(c);
          } else if (this._state === IN_NUMERIC_ENTITY) {
            this._stateInNumericEntity(c);
          } else if (this._state === IN_HEX_ENTITY) {
            this._stateInHexEntity(c);
          } else {
            this._cbs.onerror(Error('unknown _state'), this._state);
          }

          this._index++;
        }

        this._cleanup();
      };

      Tokenizer.prototype.pause = function () {
        this._running = false;
      };
      Tokenizer.prototype.resume = function () {
        this._running = true;

        if (this._index < this._buffer.length) {
          this._parse();
        }
        if (this._ended) {
          this._finish();
        }
      };

      Tokenizer.prototype.end = function (chunk) {
        if (this._ended) this._cbs.onerror(Error('.end() after done!'));
        if (chunk) this.write(chunk);

        this._ended = true;

        if (this._running) this._finish();
      };

      Tokenizer.prototype._finish = function () {
        //if there is remaining data, emit it in a reasonable way
        if (this._sectionStart < this._index) {
          this._handleTrailingData();
        }

        this._cbs.onend();
      };

      Tokenizer.prototype._handleTrailingData = function () {
        var data = this._buffer.substr(this._sectionStart);

        if (
          this._state === IN_CDATA ||
          this._state === AFTER_CDATA_1 ||
          this._state === AFTER_CDATA_2
        ) {
          this._cbs.oncdata(data);
        } else if (
          this._state === IN_COMMENT ||
          this._state === AFTER_COMMENT_1 ||
          this._state === AFTER_COMMENT_2
        ) {
          this._cbs.oncomment(data);
        } else if (this._state === IN_NAMED_ENTITY && !this._xmlMode) {
          this._parseLegacyEntity();
          if (this._sectionStart < this._index) {
            this._state = this._baseState;
            this._handleTrailingData();
          }
        } else if (this._state === IN_NUMERIC_ENTITY && !this._xmlMode) {
          this._decodeNumericEntity(2, 10);
          if (this._sectionStart < this._index) {
            this._state = this._baseState;
            this._handleTrailingData();
          }
        } else if (this._state === IN_HEX_ENTITY && !this._xmlMode) {
          this._decodeNumericEntity(3, 16);
          if (this._sectionStart < this._index) {
            this._state = this._baseState;
            this._handleTrailingData();
          }
        } else if (
          this._state !== IN_TAG_NAME &&
          this._state !== BEFORE_ATTRIBUTE_NAME &&
          this._state !== BEFORE_ATTRIBUTE_VALUE &&
          this._state !== AFTER_ATTRIBUTE_NAME &&
          this._state !== IN_ATTRIBUTE_NAME &&
          this._state !== IN_ATTRIBUTE_VALUE_SQ &&
          this._state !== IN_ATTRIBUTE_VALUE_DQ &&
          this._state !== IN_ATTRIBUTE_VALUE_NQ &&
          this._state !== IN_CLOSING_TAG_NAME
        ) {
          this._cbs.ontext(data);
        }
        //else, ignore remaining data
        //TODO add a way to remove current tag
      };

      Tokenizer.prototype.reset = function () {
        Tokenizer.call(
          this,
          { xmlMode: this._xmlMode, decodeEntities: this._decodeEntities },
          this._cbs
        );
      };

      Tokenizer.prototype.getAbsoluteIndex = function () {
        return this._bufferOffset + this._index;
      };

      Tokenizer.prototype._getSection = function () {
        return this._buffer.substring(this._sectionStart, this._index);
      };

      Tokenizer.prototype._emitToken = function (name) {
        this._cbs[name](this._getSection());
        this._sectionStart = -1;
      };

      Tokenizer.prototype._emitPartial = function (value) {
        if (this._baseState !== TEXT) {
          this._cbs.onattribdata(value); //TODO implement the new event
        } else {
          this._cbs.ontext(value);
        }
      };

      /***/
    },
    /* 265 */
    /***/ function (module, exports, __webpack_require__) {
      module.exports = Stream;

      var Parser = __webpack_require__(263),
        WritableStream = __webpack_require__(126).Writable || __webpack_require__(796).Writable,
        StringDecoder = __webpack_require__(209).StringDecoder,
        Buffer = __webpack_require__(43).Buffer;

      function Stream(cbs, options) {
        var parser = (this._parser = new Parser(cbs, options));
        var decoder = (this._decoder = new StringDecoder());

        WritableStream.call(this, { decodeStrings: false });

        this.once('finish', function () {
          parser.end(decoder.end());
        });
      }

      __webpack_require__(40)(Stream, WritableStream);

      WritableStream.prototype._write = function (chunk, encoding, cb) {
        if (chunk instanceof Buffer) chunk = this._decoder.write(chunk);
        this._parser.write(chunk);
        cb();
      };

      /***/
    },
    /* 266 */
    /***/ function (module, exports) {
      var toString = {}.toString;

      module.exports =
        Array.isArray ||
        function (arr) {
          return toString.call(arr) == '[object Array]';
        };

      /***/
    },
    /* 267 */
    /***/ function (module, __webpack_exports__, __webpack_require__) {
      'use strict';
      /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__root_js__ = __webpack_require__(635);

      /** Built-in value references. */
      var Symbol = __WEBPACK_IMPORTED_MODULE_0__root_js__['a' /* default */].Symbol;

      /* harmony default export */ __webpack_exports__['a'] = Symbol;

      /***/
    },
    /* 268 */
    /***/ function (module, exports, __webpack_require__) {
      /* WEBPACK VAR INJECTION */ (function (module, global) {
        var __WEBPACK_AMD_DEFINE_RESULT__;
        /*!
         * Platform.js <https://mths.be/platform>
         * Copyright 2014-2016 Benjamin Tan <https://demoneaux.github.io/>
         * Copyright 2011-2013 John-David Dalton <http://allyoucanleet.com/>
         * Available under MIT license <https://mths.be/mit>
         */
        (function () {
          'use strict';

          /** Used to determine if values are of the language type `Object`. */
          var objectTypes = {
            function: true,
            object: true,
          };

          /** Used as a reference to the global object. */
          var root = (objectTypes[typeof window] && window) || this;

          /** Backup possible global object. */
          var oldRoot = root;

          /** Detect free variable `exports`. */
          var freeExports = objectTypes[typeof exports] && exports;

          /** Detect free variable `module`. */
          var freeModule = objectTypes[typeof module] && module && !module.nodeType && module;

          /** Detect free variable `global` from Node.js or Browserified code and use it as `root`. */
          var freeGlobal = freeExports && freeModule && typeof global == 'object' && global;
          if (
            freeGlobal &&
            (freeGlobal.global === freeGlobal ||
              freeGlobal.window === freeGlobal ||
              freeGlobal.self === freeGlobal)
          ) {
            root = freeGlobal;
          }

          /**
           * Used as the maximum length of an array-like object.
           * See the [ES6 spec](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-tolength)
           * for more details.
           */
          var maxSafeInteger = Math.pow(2, 53) - 1;

          /** Regular expression to detect Opera. */
          var reOpera = /\bOpera/;

          /** Possible global object. */
          var thisBinding = this;

          /** Used for native method references. */
          var objectProto = Object.prototype;

          /** Used to check for own properties of an object. */
          var hasOwnProperty = objectProto.hasOwnProperty;

          /** Used to resolve the internal `[[Class]]` of values. */
          var toString = objectProto.toString;

          /*--------------------------------------------------------------------------*/

          /**
           * Capitalizes a string value.
           *
           * @private
           * @param {string} string The string to capitalize.
           * @returns {string} The capitalized string.
           */
          function capitalize(string) {
            string = String(string);
            return string.charAt(0).toUpperCase() + string.slice(1);
          }

          /**
           * A utility function to clean up the OS name.
           *
           * @private
           * @param {string} os The OS name to clean up.
           * @param {string} [pattern] A `RegExp` pattern matching the OS name.
           * @param {string} [label] A label for the OS.
           */
          function cleanupOS(os, pattern, label) {
            // Platform tokens are defined at:
            // http://msdn.microsoft.com/en-us/library/ms537503(VS.85).aspx
            // http://web.archive.org/web/20081122053950/http://msdn.microsoft.com/en-us/library/ms537503(VS.85).aspx
            var data = {
              '10.0': '10',
              6.4: '10 Technical Preview',
              6.3: '8.1',
              6.2: '8',
              6.1: 'Server 2008 R2 / 7',
              '6.0': 'Server 2008 / Vista',
              5.2: 'Server 2003 / XP 64-bit',
              5.1: 'XP',
              5.01: '2000 SP1',
              '5.0': '2000',
              '4.0': 'NT',
              '4.90': 'ME',
            };
            // Detect Windows version from platform tokens.
            if (
              pattern &&
              label &&
              /^Win/i.test(os) &&
              !/^Windows Phone /i.test(os) &&
              (data = data[/[\d.]+$/.exec(os)])
            ) {
              os = 'Windows ' + data;
            }
            // Correct character case and cleanup string.
            os = String(os);

            if (pattern && label) {
              os = os.replace(RegExp(pattern, 'i'), label);
            }

            os = format(
              os
                .replace(/ ce$/i, ' CE')
                .replace(/\bhpw/i, 'web')
                .replace(/\bMacintosh\b/, 'Mac OS')
                .replace(/_PowerPC\b/i, ' OS')
                .replace(/\b(OS X) [^ \d]+/i, '$1')
                .replace(/\bMac (OS X)\b/, '$1')
                .replace(/\/(\d)/, ' $1')
                .replace(/_/g, '.')
                .replace(/(?: BePC|[ .]*fc[ \d.]+)$/i, '')
                .replace(/\bx86\.64\b/gi, 'x86_64')
                .replace(/\b(Windows Phone) OS\b/, '$1')
                .replace(/\b(Chrome OS \w+) [\d.]+\b/, '$1')
                .split(' on ')[0]
            );

            return os;
          }

          /**
           * An iteration utility for arrays and objects.
           *
           * @private
           * @param {Array|Object} object The object to iterate over.
           * @param {Function} callback The function called per iteration.
           */
          function each(object, callback) {
            var index = -1,
              length = object ? object.length : 0;

            if (typeof length == 'number' && length > -1 && length <= maxSafeInteger) {
              while (++index < length) {
                callback(object[index], index, object);
              }
            } else {
              forOwn(object, callback);
            }
          }

          /**
           * Trim and conditionally capitalize string values.
           *
           * @private
           * @param {string} string The string to format.
           * @returns {string} The formatted string.
           */
          function format(string) {
            string = trim(string);
            return /^(?:webOS|i(?:OS|P))/.test(string) ? string : capitalize(string);
          }

          /**
           * Iterates over an object's own properties, executing the `callback` for each.
           *
           * @private
           * @param {Object} object The object to iterate over.
           * @param {Function} callback The function executed per own property.
           */
          function forOwn(object, callback) {
            for (var key in object) {
              if (hasOwnProperty.call(object, key)) {
                callback(object[key], key, object);
              }
            }
          }

          /**
           * Gets the internal `[[Class]]` of a value.
           *
           * @private
           * @param {*} value The value.
           * @returns {string} The `[[Class]]`.
           */
          function getClassOf(value) {
            return value == null ? capitalize(value) : toString.call(value).slice(8, -1);
          }

          /**
           * Host objects can return type values that are different from their actual
           * data type. The objects we are concerned with usually return non-primitive
           * types of "object", "function", or "unknown".
           *
           * @private
           * @param {*} object The owner of the property.
           * @param {string} property The property to check.
           * @returns {boolean} Returns `true` if the property value is a non-primitive, else `false`.
           */
          function isHostType(object, property) {
            var type = object != null ? typeof object[property] : 'number';
            return (
              !/^(?:boolean|number|string|undefined)$/.test(type) &&
              (type == 'object' ? !!object[property] : true)
            );
          }

          /**
           * Prepares a string for use in a `RegExp` by making hyphens and spaces optional.
           *
           * @private
           * @param {string} string The string to qualify.
           * @returns {string} The qualified string.
           */
          function qualify(string) {
            return String(string).replace(/([ -])(?!$)/g, '$1?');
          }

          /**
           * A bare-bones `Array#reduce` like utility function.
           *
           * @private
           * @param {Array} array The array to iterate over.
           * @param {Function} callback The function called per iteration.
           * @returns {*} The accumulated result.
           */
          function reduce(array, callback) {
            var accumulator = null;
            each(array, function (value, index) {
              accumulator = callback(accumulator, value, index, array);
            });
            return accumulator;
          }

          /**
           * Removes leading and trailing whitespace from a string.
           *
           * @private
           * @param {string} string The string to trim.
           * @returns {string} The trimmed string.
           */
          function trim(string) {
            return String(string).replace(/^ +| +$/g, '');
          }

          /*--------------------------------------------------------------------------*/

          /**
           * Creates a new platform object.
           *
           * @memberOf platform
           * @param {Object|string} [ua=navigator.userAgent] The user agent string or
           *  context object.
           * @returns {Object} A platform object.
           */
          function parse(ua) {
            /** The environment context object. */
            var context = root;

            /** Used to flag when a custom context is provided. */
            var isCustomContext = ua && typeof ua == 'object' && getClassOf(ua) != 'String';

            // Juggle arguments.
            if (isCustomContext) {
              context = ua;
              ua = null;
            }

            /** Browser navigator object. */
            var nav = context.navigator || {};

            /** Browser user agent string. */
            var userAgent = nav.userAgent || '';

            ua || (ua = userAgent);

            /** Used to flag when `thisBinding` is the [ModuleScope]. */
            var isModuleScope = isCustomContext || thisBinding == oldRoot;

            /** Used to detect if browser is like Chrome. */
            var likeChrome = isCustomContext
              ? !!nav.likeChrome
              : /\bChrome\b/.test(ua) && !/internal|\n/i.test(toString.toString());

            /** Internal `[[Class]]` value shortcuts. */
            var objectClass = 'Object',
              airRuntimeClass = isCustomContext ? objectClass : 'ScriptBridgingProxyObject',
              enviroClass = isCustomContext ? objectClass : 'Environment',
              javaClass =
                isCustomContext && context.java ? 'JavaPackage' : getClassOf(context.java),
              phantomClass = isCustomContext ? objectClass : 'RuntimeObject';

            /** Detect Java environments. */
            var java = /\bJava/.test(javaClass) && context.java;

            /** Detect Rhino. */
            var rhino = java && getClassOf(context.environment) == enviroClass;

            /** A character to represent alpha. */
            var alpha = java ? 'a' : '\u03b1';

            /** A character to represent beta. */
            var beta = java ? 'b' : '\u03b2';

            /** Browser document object. */
            var doc = context.document || {};

            /**
             * Detect Opera browser (Presto-based).
             * http://www.howtocreate.co.uk/operaStuff/operaObject.html
             * http://dev.opera.com/articles/view/opera-mini-web-content-authoring-guidelines/#operamini
             */
            var opera = context.operamini || context.opera;

            /** Opera `[[Class]]`. */
            var operaClass = reOpera.test(
              (operaClass = isCustomContext && opera ? opera['[[Class]]'] : getClassOf(opera))
            )
              ? operaClass
              : (opera = null);

            /*------------------------------------------------------------------------*/

            /** Temporary variable used over the script's lifetime. */
            var data;

            /** The CPU architecture. */
            var arch = ua;

            /** Platform description array. */
            var description = [];

            /** Platform alpha/beta indicator. */
            var prerelease = null;

            /** A flag to indicate that environment features should be used to resolve the platform. */
            var useFeatures = ua == userAgent;

            /** The browser/environment version. */
            var version =
              useFeatures && opera && typeof opera.version == 'function' && opera.version();

            /** A flag to indicate if the OS ends with "/ Version" */
            var isSpecialCasedOS;

            /* Detectable layout engines (order is important). */
            var layout = getLayout([
              { label: 'EdgeHTML', pattern: 'Edge' },
              'Trident',
              { label: 'WebKit', pattern: 'AppleWebKit' },
              'iCab',
              'Presto',
              'NetFront',
              'Tasman',
              'KHTML',
              'Gecko',
            ]);

            /* Detectable browser names (order is important). */
            var name = getName([
              'Adobe AIR',
              'Arora',
              'Avant Browser',
              'Breach',
              'Camino',
              'Electron',
              'Epiphany',
              'Fennec',
              'Flock',
              'Galeon',
              'GreenBrowser',
              'iCab',
              'Iceweasel',
              'K-Meleon',
              'Konqueror',
              'Lunascape',
              'Maxthon',
              { label: 'Microsoft Edge', pattern: 'Edge' },
              'Midori',
              'Nook Browser',
              'PaleMoon',
              'PhantomJS',
              'Raven',
              'Rekonq',
              'RockMelt',
              { label: 'Samsung Internet', pattern: 'SamsungBrowser' },
              'SeaMonkey',
              { label: 'Silk', pattern: '(?:Cloud9|Silk-Accelerated)' },
              'Sleipnir',
              'SlimBrowser',
              { label: 'SRWare Iron', pattern: 'Iron' },
              'Sunrise',
              'Swiftfox',
              'Waterfox',
              'WebPositive',
              'Opera Mini',
              { label: 'Opera Mini', pattern: 'OPiOS' },
              'Opera',
              { label: 'Opera', pattern: 'OPR' },
              'Chrome',
              { label: 'Chrome Mobile', pattern: '(?:CriOS|CrMo)' },
              { label: 'Firefox', pattern: '(?:Firefox|Minefield)' },
              { label: 'Firefox for iOS', pattern: 'FxiOS' },
              { label: 'IE', pattern: 'IEMobile' },
              { label: 'IE', pattern: 'MSIE' },
              'Safari',
            ]);

            /* Detectable products (order is important). */
            var product = getProduct([
              { label: 'BlackBerry', pattern: 'BB10' },
              'BlackBerry',
              { label: 'Galaxy S', pattern: 'GT-I9000' },
              { label: 'Galaxy S2', pattern: 'GT-I9100' },
              { label: 'Galaxy S3', pattern: 'GT-I9300' },
              { label: 'Galaxy S4', pattern: 'GT-I9500' },
              { label: 'Galaxy S5', pattern: 'SM-G900' },
              { label: 'Galaxy S6', pattern: 'SM-G920' },
              { label: 'Galaxy S6 Edge', pattern: 'SM-G925' },
              { label: 'Galaxy S7', pattern: 'SM-G930' },
              { label: 'Galaxy S7 Edge', pattern: 'SM-G935' },
              'Google TV',
              'Lumia',
              'iPad',
              'iPod',
              'iPhone',
              'Kindle',
              { label: 'Kindle Fire', pattern: '(?:Cloud9|Silk-Accelerated)' },
              'Nexus',
              'Nook',
              'PlayBook',
              'PlayStation Vita',
              'PlayStation',
              'TouchPad',
              'Transformer',
              { label: 'Wii U', pattern: 'WiiU' },
              'Wii',
              'Xbox One',
              { label: 'Xbox 360', pattern: 'Xbox' },
              'Xoom',
            ]);

            /* Detectable manufacturers. */
            var manufacturer = getManufacturer({
              Apple: { iPad: 1, iPhone: 1, iPod: 1 },
              Archos: {},
              Amazon: { Kindle: 1, 'Kindle Fire': 1 },
              Asus: { Transformer: 1 },
              'Barnes & Noble': { Nook: 1 },
              BlackBerry: { PlayBook: 1 },
              Google: { 'Google TV': 1, Nexus: 1 },
              HP: { TouchPad: 1 },
              HTC: {},
              LG: {},
              Microsoft: { Xbox: 1, 'Xbox One': 1 },
              Motorola: { Xoom: 1 },
              Nintendo: { 'Wii U': 1, Wii: 1 },
              Nokia: { Lumia: 1 },
              Samsung: { 'Galaxy S': 1, 'Galaxy S2': 1, 'Galaxy S3': 1, 'Galaxy S4': 1 },
              Sony: { PlayStation: 1, 'PlayStation Vita': 1 },
            });

            /* Detectable operating systems (order is important). */
            var os = getOS([
              'Windows Phone',
              'Android',
              'CentOS',
              { label: 'Chrome OS', pattern: 'CrOS' },
              'Debian',
              'Fedora',
              'FreeBSD',
              'Gentoo',
              'Haiku',
              'Kubuntu',
              'Linux Mint',
              'OpenBSD',
              'Red Hat',
              'SuSE',
              'Ubuntu',
              'Xubuntu',
              'Cygwin',
              'Symbian OS',
              'hpwOS',
              'webOS ',
              'webOS',
              'Tablet OS',
              'Tizen',
              'Linux',
              'Mac OS X',
              'Macintosh',
              'Mac',
              'Windows 98;',
              'Windows ',
            ]);

            /*------------------------------------------------------------------------*/

            /**
             * Picks the layout engine from an array of guesses.
             *
             * @private
             * @param {Array} guesses An array of guesses.
             * @returns {null|string} The detected layout engine.
             */
            function getLayout(guesses) {
              return reduce(guesses, function (result, guess) {
                return (
                  result ||
                  (RegExp('\\b' + (guess.pattern || qualify(guess)) + '\\b', 'i').exec(ua) &&
                    (guess.label || guess))
                );
              });
            }

            /**
             * Picks the manufacturer from an array of guesses.
             *
             * @private
             * @param {Array} guesses An object of guesses.
             * @returns {null|string} The detected manufacturer.
             */
            function getManufacturer(guesses) {
              return reduce(guesses, function (result, value, key) {
                // Lookup the manufacturer by product or scan the UA for the manufacturer.
                return (
                  result ||
                  ((value[product] ||
                    value[/^[a-z]+(?: +[a-z]+\b)*/i.exec(product)] ||
                    RegExp('\\b' + qualify(key) + '(?:\\b|\\w*\\d)', 'i').exec(ua)) &&
                    key)
                );
              });
            }

            /**
             * Picks the browser name from an array of guesses.
             *
             * @private
             * @param {Array} guesses An array of guesses.
             * @returns {null|string} The detected browser name.
             */
            function getName(guesses) {
              return reduce(guesses, function (result, guess) {
                return (
                  result ||
                  (RegExp('\\b' + (guess.pattern || qualify(guess)) + '\\b', 'i').exec(ua) &&
                    (guess.label || guess))
                );
              });
            }

            /**
             * Picks the OS name from an array of guesses.
             *
             * @private
             * @param {Array} guesses An array of guesses.
             * @returns {null|string} The detected OS name.
             */
            function getOS(guesses) {
              return reduce(guesses, function (result, guess) {
                var pattern = guess.pattern || qualify(guess);
                if (
                  !result &&
                  (result = RegExp('\\b' + pattern + '(?:/[\\d.]+|[ \\w.]*)', 'i').exec(ua))
                ) {
                  result = cleanupOS(result, pattern, guess.label || guess);
                }
                return result;
              });
            }

            /**
             * Picks the product name from an array of guesses.
             *
             * @private
             * @param {Array} guesses An array of guesses.
             * @returns {null|string} The detected product name.
             */
            function getProduct(guesses) {
              return reduce(guesses, function (result, guess) {
                var pattern = guess.pattern || qualify(guess);
                if (
                  !result &&
                  (result =
                    RegExp('\\b' + pattern + ' *\\d+[.\\w_]*', 'i').exec(ua) ||
                    RegExp('\\b' + pattern + ' *\\w+-[\\w]*', 'i').exec(ua) ||
                    RegExp(
                      '\\b' + pattern + '(?:; *(?:[a-z]+[_-])?[a-z]+\\d+|[^ ();-]*)',
                      'i'
                    ).exec(ua))
                ) {
                  // Split by forward slash and append product version if needed.
                  if (
                    (result = String(
                      guess.label && !RegExp(pattern, 'i').test(guess.label) ? guess.label : result
                    ).split('/'))[1] &&
                    !/[\d.]+/.test(result[0])
                  ) {
                    result[0] += ' ' + result[1];
                  }
                  // Correct character case and cleanup string.
                  guess = guess.label || guess;
                  result = format(
                    result[0]
                      .replace(RegExp(pattern, 'i'), guess)
                      .replace(RegExp('; *(?:' + guess + '[_-])?', 'i'), ' ')
                      .replace(RegExp('(' + guess + ')[-_.]?(\\w)', 'i'), '$1 $2')
                  );
                }
                return result;
              });
            }

            /**
             * Resolves the version using an array of UA patterns.
             *
             * @private
             * @param {Array} patterns An array of UA patterns.
             * @returns {null|string} The detected version.
             */
            function getVersion(patterns) {
              return reduce(patterns, function (result, pattern) {
                return (
                  result ||
                  (RegExp(
                    pattern + '(?:-[\\d.]+/|(?: for [\\w-]+)?[ /-])([\\d.]+[^ ();/_-]*)',
                    'i'
                  ).exec(ua) || 0)[1] ||
                  null
                );
              });
            }

            /**
             * Returns `platform.description` when the platform object is coerced to a string.
             *
             * @name toString
             * @memberOf platform
             * @returns {string} Returns `platform.description` if available, else an empty string.
             */
            function toStringPlatform() {
              return this.description || '';
            }

            /*------------------------------------------------------------------------*/

            // Convert layout to an array so we can add extra details.
            layout && (layout = [layout]);

            // Detect product names that contain their manufacturer's name.
            if (manufacturer && !product) {
              product = getProduct([manufacturer]);
            }
            // Clean up Google TV.
            if ((data = /\bGoogle TV\b/.exec(product))) {
              product = data[0];
            }
            // Detect simulators.
            if (/\bSimulator\b/i.test(ua)) {
              product = (product ? product + ' ' : '') + 'Simulator';
            }
            // Detect Opera Mini 8+ running in Turbo/Uncompressed mode on iOS.
            if (name == 'Opera Mini' && /\bOPiOS\b/.test(ua)) {
              description.push('running in Turbo/Uncompressed mode');
            }
            // Detect IE Mobile 11.
            if (name == 'IE' && /\blike iPhone OS\b/.test(ua)) {
              data = parse(ua.replace(/like iPhone OS/, ''));
              manufacturer = data.manufacturer;
              product = data.product;
            }
            // Detect iOS.
            else if (/^iP/.test(product)) {
              name || (name = 'Safari');
              os =
                'iOS' + ((data = / OS ([\d_]+)/i.exec(ua)) ? ' ' + data[1].replace(/_/g, '.') : '');
            }
            // Detect Kubuntu.
            else if (name == 'Konqueror' && !/buntu/i.test(os)) {
              os = 'Kubuntu';
            }
            // Detect Android browsers.
            else if (
              (manufacturer &&
                manufacturer != 'Google' &&
                ((/Chrome/.test(name) && !/\bMobile Safari\b/i.test(ua)) ||
                  /\bVita\b/.test(product))) ||
              (/\bAndroid\b/.test(os) && /^Chrome/.test(name) && /\bVersion\//i.test(ua))
            ) {
              name = 'Android Browser';
              os = /\bAndroid\b/.test(os) ? os : 'Android';
            }
            // Detect Silk desktop/accelerated modes.
            else if (name == 'Silk') {
              if (!/\bMobi/i.test(ua)) {
                os = 'Android';
                description.unshift('desktop mode');
              }
              if (/Accelerated *= *true/i.test(ua)) {
                description.unshift('accelerated');
              }
            }
            // Detect PaleMoon identifying as Firefox.
            else if (name == 'PaleMoon' && (data = /\bFirefox\/([\d.]+)\b/.exec(ua))) {
              description.push('identifying as Firefox ' + data[1]);
            }
            // Detect Firefox OS and products running Firefox.
            else if (name == 'Firefox' && (data = /\b(Mobile|Tablet|TV)\b/i.exec(ua))) {
              os || (os = 'Firefox OS');
              product || (product = data[1]);
            }
            // Detect false positives for Firefox/Safari.
            else if (
              !name ||
              (data = !/\bMinefield\b/i.test(ua) && /\b(?:Firefox|Safari)\b/.exec(name))
            ) {
              // Escape the `/` for Firefox 1.
              if (
                name &&
                !product &&
                /[\/,]|^[^(]+?\)/.test(ua.slice(ua.indexOf(data + '/') + 8))
              ) {
                // Clear name of false positives.
                name = null;
              }
              // Reassign a generic name.
              if (
                (data = product || manufacturer || os) &&
                (product || manufacturer || /\b(?:Android|Symbian OS|Tablet OS|webOS)\b/.test(os))
              ) {
                name = /[a-z]+(?: Hat)?/i.exec(/\bAndroid\b/.test(os) ? os : data) + ' Browser';
              }
            }
            // Add Chrome version to description for Electron.
            else if (name == 'Electron' && (data = (/\bChrome\/([\d.]+)\b/.exec(ua) || 0)[1])) {
              description.push('Chromium ' + data);
            }
            // Detect non-Opera (Presto-based) versions (order is important).
            if (!version) {
              version = getVersion([
                '(?:Cloud9|CriOS|CrMo|Edge|FxiOS|IEMobile|Iron|Opera ?Mini|OPiOS|OPR|Raven|SamsungBrowser|Silk(?!/[\\d.]+$))',
                'Version',
                qualify(name),
                '(?:Firefox|Minefield|NetFront)',
              ]);
            }
            // Detect stubborn layout engines.
            if (
              (data =
                (layout == 'iCab' && parseFloat(version) > 3 && 'WebKit') ||
                (/\bOpera\b/.test(name) && (/\bOPR\b/.test(ua) ? 'Blink' : 'Presto')) ||
                (/\b(?:Midori|Nook|Safari)\b/i.test(ua) &&
                  !/^(?:Trident|EdgeHTML)$/.test(layout) &&
                  'WebKit') ||
                (!layout && /\bMSIE\b/i.test(ua) && (os == 'Mac OS' ? 'Tasman' : 'Trident')) ||
                (layout == 'WebKit' && /\bPlayStation\b(?! Vita\b)/i.test(name) && 'NetFront'))
            ) {
              layout = [data];
            }
            // Detect Windows Phone 7 desktop mode.
            if (name == 'IE' && (data = (/; *(?:XBLWP|ZuneWP)(\d+)/i.exec(ua) || 0)[1])) {
              name += ' Mobile';
              os = 'Windows Phone ' + (/\+$/.test(data) ? data : data + '.x');
              description.unshift('desktop mode');
            }
            // Detect Windows Phone 8.x desktop mode.
            else if (/\bWPDesktop\b/i.test(ua)) {
              name = 'IE Mobile';
              os = 'Windows Phone 8.x';
              description.unshift('desktop mode');
              version || (version = (/\brv:([\d.]+)/.exec(ua) || 0)[1]);
            }
            // Detect IE 11 identifying as other browsers.
            else if (name != 'IE' && layout == 'Trident' && (data = /\brv:([\d.]+)/.exec(ua))) {
              if (name) {
                description.push('identifying as ' + name + (version ? ' ' + version : ''));
              }
              name = 'IE';
              version = data[1];
            }
            // Leverage environment features.
            if (useFeatures) {
              // Detect server-side environments.
              // Rhino has a global function while others have a global object.
              if (isHostType(context, 'global')) {
                if (java) {
                  data = java.lang.System;
                  arch = data.getProperty('os.arch');
                  os = os || data.getProperty('os.name') + ' ' + data.getProperty('os.version');
                }
                if (
                  isModuleScope &&
                  isHostType(context, 'system') &&
                  (data = [context.system])[0]
                ) {
                  os || (os = data[0].os || null);
                  try {
                    data[1] = context.require('ringo/engine').version;
                    version = data[1].join('.');
                    name = 'RingoJS';
                  } catch (e) {
                    if (data[0].global.system == context.system) {
                      name = 'Narwhal';
                    }
                  }
                } else if (
                  typeof context.process == 'object' &&
                  !context.process.browser &&
                  (data = context.process)
                ) {
                  if (typeof data.versions == 'object') {
                    if (typeof data.versions.electron == 'string') {
                      description.push('Node ' + data.versions.node);
                      name = 'Electron';
                      version = data.versions.electron;
                    } else if (typeof data.versions.nw == 'string') {
                      description.push('Chromium ' + version, 'Node ' + data.versions.node);
                      name = 'NW.js';
                      version = data.versions.nw;
                    }
                  } else {
                    name = 'Node.js';
                    arch = data.arch;
                    os = data.platform;
                    version = /[\d.]+/.exec(data.version);
                    version = version ? version[0] : 'unknown';
                  }
                } else if (rhino) {
                  name = 'Rhino';
                }
              }
              // Detect Adobe AIR.
              else if (getClassOf((data = context.runtime)) == airRuntimeClass) {
                name = 'Adobe AIR';
                os = data.flash.system.Capabilities.os;
              }
              // Detect PhantomJS.
              else if (getClassOf((data = context.phantom)) == phantomClass) {
                name = 'PhantomJS';
                version =
                  (data = data.version || null) && data.major + '.' + data.minor + '.' + data.patch;
              }
              // Detect IE compatibility modes.
              else if (
                typeof doc.documentMode == 'number' &&
                (data = /\bTrident\/(\d+)/i.exec(ua))
              ) {
                // We're in compatibility mode when the Trident version + 4 doesn't
                // equal the document mode.
                version = [version, doc.documentMode];
                if ((data = +data[1] + 4) != version[1]) {
                  description.push('IE ' + version[1] + ' mode');
                  layout && (layout[1] = '');
                  version[1] = data;
                }
                version = name == 'IE' ? String(version[1].toFixed(1)) : version[0];
              }
              // Detect IE 11 masking as other browsers.
              else if (typeof doc.documentMode == 'number' && /^(?:Chrome|Firefox)\b/.test(name)) {
                description.push('masking as ' + name + ' ' + version);
                name = 'IE';
                version = '11.0';
                layout = ['Trident'];
                os = 'Windows';
              }
              os = os && format(os);
            }
            // Detect prerelease phases.
            if (
              version &&
              (data =
                /(?:[ab]|dp|pre|[ab]\d+pre)(?:\d+\+?)?$/i.exec(version) ||
                /(?:alpha|beta)(?: ?\d)?/i.exec(ua + ';' + (useFeatures && nav.appMinorVersion)) ||
                (/\bMinefield\b/i.test(ua) && 'a'))
            ) {
              prerelease = /b/i.test(data) ? 'beta' : 'alpha';
              version =
                version.replace(RegExp(data + '\\+?$'), '') +
                (prerelease == 'beta' ? beta : alpha) +
                (/\d+\+?/.exec(data) || '');
            }
            // Detect Firefox Mobile.
            if (name == 'Fennec' || (name == 'Firefox' && /\b(?:Android|Firefox OS)\b/.test(os))) {
              name = 'Firefox Mobile';
            }
            // Obscure Maxthon's unreliable version.
            else if (name == 'Maxthon' && version) {
              version = version.replace(/\.[\d.]+/, '.x');
            }
            // Detect Xbox 360 and Xbox One.
            else if (/\bXbox\b/i.test(product)) {
              if (product == 'Xbox 360') {
                os = null;
              }
              if (product == 'Xbox 360' && /\bIEMobile\b/.test(ua)) {
                description.unshift('mobile mode');
              }
            }
            // Add mobile postfix.
            else if (
              (/^(?:Chrome|IE|Opera)$/.test(name) ||
                (name && !product && !/Browser|Mobi/.test(name))) &&
              (os == 'Windows CE' || /Mobi/i.test(ua))
            ) {
              name += ' Mobile';
            }
            // Detect IE platform preview.
            else if (name == 'IE' && useFeatures) {
              try {
                if (context.external === null) {
                  description.unshift('platform preview');
                }
              } catch (e) {
                description.unshift('embedded');
              }
            }
            // Detect BlackBerry OS version.
            // http://docs.blackberry.com/en/developers/deliverables/18169/HTTP_headers_sent_by_BB_Browser_1234911_11.jsp
            else if (
              (/\bBlackBerry\b/.test(product) || /\bBB10\b/.test(ua)) &&
              (data =
                (RegExp(product.replace(/ +/g, ' *') + '/([.\\d]+)', 'i').exec(ua) || 0)[1] ||
                version)
            ) {
              data = [data, /BB10/.test(ua)];
              os =
                (data[1] ? ((product = null), (manufacturer = 'BlackBerry')) : 'Device Software') +
                ' ' +
                data[0];
              version = null;
            }
            // Detect Opera identifying/masking itself as another browser.
            // http://www.opera.com/support/kb/view/843/
            else if (
              this != forOwn &&
              product != 'Wii' &&
              ((useFeatures && opera) ||
                (/Opera/.test(name) && /\b(?:MSIE|Firefox)\b/i.test(ua)) ||
                (name == 'Firefox' && /\bOS X (?:\d+\.){2,}/.test(os)) ||
                (name == 'IE' &&
                  ((os && !/^Win/.test(os) && version > 5.5) ||
                    (/\bWindows XP\b/.test(os) && version > 8) ||
                    (version == 8 && !/\bTrident\b/.test(ua))))) &&
              !reOpera.test((data = parse.call(forOwn, ua.replace(reOpera, '') + ';'))) &&
              data.name
            ) {
              // When "identifying", the UA contains both Opera and the other browser's name.
              data = 'ing as ' + data.name + ((data = data.version) ? ' ' + data : '');
              if (reOpera.test(name)) {
                if (/\bIE\b/.test(data) && os == 'Mac OS') {
                  os = null;
                }
                data = 'identify' + data;
              }
              // When "masking", the UA contains only the other browser's name.
              else {
                data = 'mask' + data;
                if (operaClass) {
                  name = format(operaClass.replace(/([a-z])([A-Z])/g, '$1 $2'));
                } else {
                  name = 'Opera';
                }
                if (/\bIE\b/.test(data)) {
                  os = null;
                }
                if (!useFeatures) {
                  version = null;
                }
              }
              layout = ['Presto'];
              description.push(data);
            }
            // Detect WebKit Nightly and approximate Chrome/Safari versions.
            if ((data = (/\bAppleWebKit\/([\d.]+\+?)/i.exec(ua) || 0)[1])) {
              // Correct build number for numeric comparison.
              // (e.g. "532.5" becomes "532.05")
              data = [parseFloat(data.replace(/\.(\d)$/, '.0$1')), data];
              // Nightly builds are postfixed with a "+".
              if (name == 'Safari' && data[1].slice(-1) == '+') {
                name = 'WebKit Nightly';
                prerelease = 'alpha';
                version = data[1].slice(0, -1);
              }
              // Clear incorrect browser versions.
              else if (
                version == data[1] ||
                version == (data[2] = (/\bSafari\/([\d.]+\+?)/i.exec(ua) || 0)[1])
              ) {
                version = null;
              }
              // Use the full Chrome version when available.
              data[1] = (/\bChrome\/([\d.]+)/i.exec(ua) || 0)[1];
              // Detect Blink layout engine.
              if (
                data[0] == 537.36 &&
                data[2] == 537.36 &&
                parseFloat(data[1]) >= 28 &&
                layout == 'WebKit'
              ) {
                layout = ['Blink'];
              }
              // Detect JavaScriptCore.
              // http://stackoverflow.com/questions/6768474/how-can-i-detect-which-javascript-engine-v8-or-jsc-is-used-at-runtime-in-androi
              if (!useFeatures || (!likeChrome && !data[1])) {
                layout && (layout[1] = 'like Safari');
                data =
                  ((data = data[0]),
                  data < 400
                    ? 1
                    : data < 500
                    ? 2
                    : data < 526
                    ? 3
                    : data < 533
                    ? 4
                    : data < 534
                    ? '4+'
                    : data < 535
                    ? 5
                    : data < 537
                    ? 6
                    : data < 538
                    ? 7
                    : data < 601
                    ? 8
                    : '8');
              } else {
                layout && (layout[1] = 'like Chrome');
                data =
                  data[1] ||
                  ((data = data[0]),
                  data < 530
                    ? 1
                    : data < 532
                    ? 2
                    : data < 532.05
                    ? 3
                    : data < 533
                    ? 4
                    : data < 534.03
                    ? 5
                    : data < 534.07
                    ? 6
                    : data < 534.1
                    ? 7
                    : data < 534.13
                    ? 8
                    : data < 534.16
                    ? 9
                    : data < 534.24
                    ? 10
                    : data < 534.3
                    ? 11
                    : data < 535.01
                    ? 12
                    : data < 535.02
                    ? '13+'
                    : data < 535.07
                    ? 15
                    : data < 535.11
                    ? 16
                    : data < 535.19
                    ? 17
                    : data < 536.05
                    ? 18
                    : data < 536.1
                    ? 19
                    : data < 537.01
                    ? 20
                    : data < 537.11
                    ? '21+'
                    : data < 537.13
                    ? 23
                    : data < 537.18
                    ? 24
                    : data < 537.24
                    ? 25
                    : data < 537.36
                    ? 26
                    : layout != 'Blink'
                    ? '27'
                    : '28');
              }
              // Add the postfix of ".x" or "+" for approximate versions.
              layout &&
                (layout[1] +=
                  ' ' + (data += typeof data == 'number' ? '.x' : /[.+]/.test(data) ? '' : '+'));
              // Obscure version for some Safari 1-2 releases.
              if (name == 'Safari' && (!version || parseInt(version) > 45)) {
                version = data;
              }
            }
            // Detect Opera desktop modes.
            if (name == 'Opera' && (data = /\bzbov|zvav$/.exec(os))) {
              name += ' ';
              description.unshift('desktop mode');
              if (data == 'zvav') {
                name += 'Mini';
                version = null;
              } else {
                name += 'Mobile';
              }
              os = os.replace(RegExp(' *' + data + '$'), '');
            }
            // Detect Chrome desktop mode.
            else if (name == 'Safari' && /\bChrome\b/.exec(layout && layout[1])) {
              description.unshift('desktop mode');
              name = 'Chrome Mobile';
              version = null;

              if (/\bOS X\b/.test(os)) {
                manufacturer = 'Apple';
                os = 'iOS 4.3+';
              } else {
                os = null;
              }
            }
            // Strip incorrect OS versions.
            if (
              version &&
              version.indexOf((data = /[\d.]+$/.exec(os))) == 0 &&
              ua.indexOf('/' + data + '-') > -1
            ) {
              os = trim(os.replace(data, ''));
            }
            // Add layout engine.
            if (
              layout &&
              !/\b(?:Avant|Nook)\b/.test(name) &&
              (/Browser|Lunascape|Maxthon/.test(name) ||
                (name != 'Safari' && /^iOS/.test(os) && /\bSafari\b/.test(layout[1])) ||
                (/^(?:Adobe|Arora|Breach|Midori|Opera|Phantom|Rekonq|Rock|Samsung Internet|Sleipnir|Web)/.test(
                  name
                ) &&
                  layout[1]))
            ) {
              // Don't add layout details to description if they are falsey.
              (data = layout[layout.length - 1]) && description.push(data);
            }
            // Combine contextual information.
            if (description.length) {
              description = ['(' + description.join('; ') + ')'];
            }
            // Append manufacturer to description.
            if (manufacturer && product && product.indexOf(manufacturer) < 0) {
              description.push('on ' + manufacturer);
            }
            // Append product to description.
            if (product) {
              description.push(
                (/^on /.test(description[description.length - 1]) ? '' : 'on ') + product
              );
            }
            // Parse the OS into an object.
            if (os) {
              data = / ([\d.+]+)$/.exec(os);
              isSpecialCasedOS = data && os.charAt(os.length - data[0].length - 1) == '/';
              os = {
                architecture: 32,
                family: data && !isSpecialCasedOS ? os.replace(data[0], '') : os,
                version: data ? data[1] : null,
                toString: function () {
                  var version = this.version;
                  return (
                    this.family +
                    (version && !isSpecialCasedOS ? ' ' + version : '') +
                    (this.architecture == 64 ? ' 64-bit' : '')
                  );
                },
              };
            }
            // Add browser/OS architecture.
            if ((data = /\b(?:AMD|IA|Win|WOW|x86_|x)64\b/i.exec(arch)) && !/\bi686\b/i.test(arch)) {
              if (os) {
                os.architecture = 64;
                os.family = os.family.replace(RegExp(' *' + data), '');
              }
              if (
                name &&
                (/\bWOW64\b/i.test(ua) ||
                  (useFeatures &&
                    /\w(?:86|32)$/.test(nav.cpuClass || nav.platform) &&
                    !/\bWin64; x64\b/i.test(ua)))
              ) {
                description.unshift('32-bit');
              }
            }
            // Chrome 39 and above on OS X is always 64-bit.
            else if (
              os &&
              /^OS X/.test(os.family) &&
              name == 'Chrome' &&
              parseFloat(version) >= 39
            ) {
              os.architecture = 64;
            }

            ua || (ua = null);

            /*------------------------------------------------------------------------*/

            /**
             * The platform object.
             *
             * @name platform
             * @type Object
             */
            var platform = {};

            /**
             * The platform description.
             *
             * @memberOf platform
             * @type string|null
             */
            platform.description = ua;

            /**
             * The name of the browser's layout engine.
             *
             * The list of common layout engines include:
             * "Blink", "EdgeHTML", "Gecko", "Trident" and "WebKit"
             *
             * @memberOf platform
             * @type string|null
             */
            platform.layout = layout && layout[0];

            /**
             * The name of the product's manufacturer.
             *
             * The list of manufacturers include:
             * "Apple", "Archos", "Amazon", "Asus", "Barnes & Noble", "BlackBerry",
             * "Google", "HP", "HTC", "LG", "Microsoft", "Motorola", "Nintendo",
             * "Nokia", "Samsung" and "Sony"
             *
             * @memberOf platform
             * @type string|null
             */
            platform.manufacturer = manufacturer;

            /**
             * The name of the browser/environment.
             *
             * The list of common browser names include:
             * "Chrome", "Electron", "Firefox", "Firefox for iOS", "IE",
             * "Microsoft Edge", "PhantomJS", "Safari", "SeaMonkey", "Silk",
             * "Opera Mini" and "Opera"
             *
             * Mobile versions of some browsers have "Mobile" appended to their name:
             * eg. "Chrome Mobile", "Firefox Mobile", "IE Mobile" and "Opera Mobile"
             *
             * @memberOf platform
             * @type string|null
             */
            platform.name = name;

            /**
             * The alpha/beta release indicator.
             *
             * @memberOf platform
             * @type string|null
             */
            platform.prerelease = prerelease;

            /**
             * The name of the product hosting the browser.
             *
             * The list of common products include:
             *
             * "BlackBerry", "Galaxy S4", "Lumia", "iPad", "iPod", "iPhone", "Kindle",
             * "Kindle Fire", "Nexus", "Nook", "PlayBook", "TouchPad" and "Transformer"
             *
             * @memberOf platform
             * @type string|null
             */
            platform.product = product;

            /**
             * The browser's user agent string.
             *
             * @memberOf platform
             * @type string|null
             */
            platform.ua = ua;

            /**
             * The browser/environment version.
             *
             * @memberOf platform
             * @type string|null
             */
            platform.version = name && version;

            /**
             * The name of the operating system.
             *
             * @memberOf platform
             * @type Object
             */
            platform.os = os || {
              /**
               * The CPU architecture the OS is built for.
               *
               * @memberOf platform.os
               * @type number|null
               */
              architecture: null,

              /**
               * The family of the OS.
               *
               * Common values include:
               * "Windows", "Windows Server 2008 R2 / 7", "Windows Server 2008 / Vista",
               * "Windows XP", "OS X", "Ubuntu", "Debian", "Fedora", "Red Hat", "SuSE",
               * "Android", "iOS" and "Windows Phone"
               *
               * @memberOf platform.os
               * @type string|null
               */
              family: null,

              /**
               * The version of the OS.
               *
               * @memberOf platform.os
               * @type string|null
               */
              version: null,

              /**
               * Returns the OS string.
               *
               * @memberOf platform.os
               * @returns {string} The OS string.
               */
              toString: function () {
                return 'null';
              },
            };

            platform.parse = parse;
            platform.toString = toStringPlatform;

            if (platform.version) {
              description.unshift(version);
            }
            if (platform.name) {
              description.unshift(name);
            }
            if (
              os &&
              name &&
              !(os == String(os).split(' ')[0] && (os == name.split(' ')[0] || product))
            ) {
              description.push(product ? '(' + os + ')' : 'on ' + os);
            }
            if (description.length) {
              platform.description = description.join(' ');
            }
            return platform;
          }

          /*--------------------------------------------------------------------------*/

          // Export platform.
          var platform = parse();

          // Some AMD build optimizers, like r.js, check for condition patterns like the following:
          if (true) {
            // Expose platform on the global object to prevent errors when platform is
            // loaded by a script tag in the presence of an AMD loader.
            // See http://requirejs.org/docs/errors.html#mismatch for more details.
            root.platform = platform;

            // Define as an anonymous module so platform can be aliased through path mapping.
            !((__WEBPACK_AMD_DEFINE_RESULT__ = function () {
              return platform;
            }.call(exports, __webpack_require__, exports, module)),
            __WEBPACK_AMD_DEFINE_RESULT__ !== undefined &&
              (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
          }
          // Check for `exports` after `define` in case a build optimizer adds an `exports` object.
          else if (freeExports && freeModule) {
            // Export for CommonJS support.
            forOwn(platform, function (value, key) {
              freeExports[key] = value;
            });
          } else {
            // Export to the global object.
            root.platform = platform;
          }
        }.call(this));

        /* WEBPACK VAR INJECTION */
      }.call(exports, __webpack_require__(127)(module), __webpack_require__(20)));

      /***/
    },
    /* 269 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';

      exports.__esModule = true;

      var _supportsColor = __webpack_require__(798);

      var _supportsColor2 = _interopRequireDefault(_supportsColor);

      var _chalk = __webpack_require__(321);

      var _chalk2 = _interopRequireDefault(_chalk);

      var _terminalHighlight = __webpack_require__(647);

      var _terminalHighlight2 = _interopRequireDefault(_terminalHighlight);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
          throw new TypeError('Cannot call a class as a function');
        }
      }

      /**
       * The CSS parser throws this error for broken CSS.
       *
       * Custom parsers can throw this error for broken custom syntax using
       * the {@link Node#error} method.
       *
       * PostCSS will use the input source map to detect the original error location.
       * If you wrote a Sass file, compiled it to CSS and then parsed it with PostCSS,
       * PostCSS will show the original position in the Sass file.
       *
       * If you need the position in the PostCSS input
       * (e.g., to debug the previous compiler), use `error.input.file`.
       *
       * @example
       * // Catching and checking syntax error
       * try {
       *   postcss.parse('a{')
       * } catch (error) {
       *   if ( error.name === 'CssSyntaxError' ) {
       *     error //=> CssSyntaxError
       *   }
       * }
       *
       * @example
       * // Raising error from plugin
       * throw node.error('Unknown variable', { plugin: 'postcss-vars' });
       */
      var CssSyntaxError = (function () {
        /**
         * @param {string} message  - error message
         * @param {number} [line]   - source line of the error
         * @param {number} [column] - source column of the error
         * @param {string} [source] - source code of the broken file
         * @param {string} [file]   - absolute path to the broken file
         * @param {string} [plugin] - PostCSS plugin name, if error came from plugin
         */
        function CssSyntaxError(message, line, column, source, file, plugin) {
          _classCallCheck(this, CssSyntaxError);

          /**
           * @member {string} - Always equal to `'CssSyntaxError'`. You should
           *                    always check error type
           *                    by `error.name === 'CssSyntaxError'` instead of
           *                    `error instanceof CssSyntaxError`, because
           *                    npm could have several PostCSS versions.
           *
           * @example
           * if ( error.name === 'CssSyntaxError' ) {
           *   error //=> CssSyntaxError
           * }
           */
          this.name = 'CssSyntaxError';
          /**
           * @member {string} - Error message.
           *
           * @example
           * error.message //=> 'Unclosed block'
           */
          this.reason = message;

          if (file) {
            /**
             * @member {string} - Absolute path to the broken file.
             *
             * @example
             * error.file       //=> 'a.sass'
             * error.input.file //=> 'a.css'
             */
            this.file = file;
          }
          if (source) {
            /**
             * @member {string} - Source code of the broken file.
             *
             * @example
             * error.source       //=> 'a { b {} }'
             * error.input.column //=> 'a b { }'
             */
            this.source = source;
          }
          if (plugin) {
            /**
             * @member {string} - Plugin name, if error came from plugin.
             *
             * @example
             * error.plugin //=> 'postcss-vars'
             */
            this.plugin = plugin;
          }
          if (typeof line !== 'undefined' && typeof column !== 'undefined') {
            /**
             * @member {number} - Source line of the error.
             *
             * @example
             * error.line       //=> 2
             * error.input.line //=> 4
             */
            this.line = line;
            /**
             * @member {number} - Source column of the error.
             *
             * @example
             * error.column       //=> 1
             * error.input.column //=> 4
             */
            this.column = column;
          }

          this.setMessage();

          if (Error.captureStackTrace) {
            Error.captureStackTrace(this, CssSyntaxError);
          }
        }

        CssSyntaxError.prototype.setMessage = function setMessage() {
          /**
           * @member {string} - Full error text in the GNU error format
           *                    with plugin, file, line and column.
           *
           * @example
           * error.message //=> 'a.css:1:1: Unclosed block'
           */
          this.message = this.plugin ? this.plugin + ': ' : '';
          this.message += this.file ? this.file : '<css input>';
          if (typeof this.line !== 'undefined') {
            this.message += ':' + this.line + ':' + this.column;
          }
          this.message += ': ' + this.reason;
        };

        /**
         * Returns a few lines of CSS source that caused the error.
         *
         * If the CSS has an input source map without `sourceContent`,
         * this method will return an empty string.
         *
         * @param {boolean} [color] whether arrow will be colored red by terminal
         *                          color codes. By default, PostCSS will detect
         *                          color support by `process.stdout.isTTY`
         *                          and `process.env.NODE_DISABLE_COLORS`.
         *
         * @example
         * error.showSourceCode() //=> "  4 | }
         *                        //      5 | a {
         *                        //    > 6 |   bad
         *                        //        |   ^
         *                        //      7 | }
         *                        //      8 | b {"
         *
         * @return {string} few lines of CSS source that caused the error
         */

        CssSyntaxError.prototype.showSourceCode = function showSourceCode(color) {
          var _this = this;

          if (!this.source) return '';

          var css = this.source;
          if (typeof color === 'undefined') color = _supportsColor2.default;
          if (color) css = (0, _terminalHighlight2.default)(css);

          var lines = css.split(/\r?\n/);
          var start = Math.max(this.line - 3, 0);
          var end = Math.min(this.line + 2, lines.length);

          var maxWidth = String(end).length;

          function mark(text) {
            if (color && _chalk2.default.red) {
              return _chalk2.default.red.bold(text);
            } else {
              return text;
            }
          }
          function aside(text) {
            if (color && _chalk2.default.gray) {
              return _chalk2.default.gray(text);
            } else {
              return text;
            }
          }

          return lines
            .slice(start, end)
            .map(function (line, index) {
              var number = start + 1 + index;
              var gutter = ' ' + (' ' + number).slice(-maxWidth) + ' | ';
              if (number === _this.line) {
                var spacing =
                  aside(gutter.replace(/\d/g, ' ')) +
                  line.slice(0, _this.column - 1).replace(/[^\t]/g, ' ');
                return mark('>') + aside(gutter) + line + '\n ' + spacing + mark('^');
              } else {
                return ' ' + aside(gutter) + line;
              }
            })
            .join('\n');
        };

        /**
         * Returns error position, message and source code of the broken part.
         *
         * @example
         * error.toString() //=> "CssSyntaxError: app.css:1:1: Unclosed block
         *                  //    > 1 | a {
         *                  //        | ^"
         *
         * @return {string} error position, message and source code
         */

        CssSyntaxError.prototype.toString = function toString() {
          var code = this.showSourceCode();
          if (code) {
            code = '\n\n' + code + '\n';
          }
          return this.name + ': ' + this.message + code;
        };

        /**
         * @memberof CssSyntaxError#
         * @member {Input} input - Input object with PostCSS internal information
         *                         about input file. If input has source map
         *                         from previous tool, PostCSS will use origin
         *                         (for example, Sass) source. You can use this
         *                         object to get PostCSS input source.
         *
         * @example
         * error.input.file //=> 'a.css'
         * error.file       //=> 'a.sass'
         */

        return CssSyntaxError;
      })();

      exports.default = CssSyntaxError;
      module.exports = exports['default'];
      //# sourceMappingURL=data:application/json;charset=utf8;base64,

      /***/
    },
    /* 270 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';

      exports.__esModule = true;

      var _createClass = (function () {
        function defineProperties(target, props) {
          for (var i = 0; i < props.length; i++) {
            var descriptor = props[i];
            descriptor.enumerable = descriptor.enumerable || false;
            descriptor.configurable = true;
            if ('value' in descriptor) descriptor.writable = true;
            Object.defineProperty(target, descriptor.key, descriptor);
          }
        }
        return function (Constructor, protoProps, staticProps) {
          if (protoProps) defineProperties(Constructor.prototype, protoProps);
          if (staticProps) defineProperties(Constructor, staticProps);
          return Constructor;
        };
      })();

      var _cssSyntaxError = __webpack_require__(269);

      var _cssSyntaxError2 = _interopRequireDefault(_cssSyntaxError);

      var _previousMap = __webpack_require__(645);

      var _previousMap2 = _interopRequireDefault(_previousMap);

      var _path = __webpack_require__(175);

      var _path2 = _interopRequireDefault(_path);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
          throw new TypeError('Cannot call a class as a function');
        }
      }

      var sequence = 0;

      /**
       * Represents the source CSS.
       *
       * @example
       * const root  = postcss.parse(css, { from: file });
       * const input = root.source.input;
       */

      var Input = (function () {
        /**
         * @param {string} css    - input CSS source
         * @param {object} [opts] - {@link Processor#process} options
         */
        function Input(css) {
          var opts = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

          _classCallCheck(this, Input);

          /**
           * @member {string} - input CSS source
           *
           * @example
           * const input = postcss.parse('a{}', { from: file }).input;
           * input.css //=> "a{}";
           */
          this.css = css.toString();

          if (this.css[0] === '\uFEFF' || this.css[0] === '\uFFFE') {
            this.css = this.css.slice(1);
          }

          if (opts.from) {
            if (/^\w+:\/\//.test(opts.from)) {
              /**
               * @member {string} - The absolute path to the CSS source file
               *                    defined with the `from` option.
               *
               * @example
               * const root = postcss.parse(css, { from: 'a.css' });
               * root.source.input.file //=> '/home/ai/a.css'
               */
              this.file = opts.from;
            } else {
              this.file = _path2.default.resolve(opts.from);
            }
          }

          var map = new _previousMap2.default(this.css, opts);
          if (map.text) {
            /**
             * @member {PreviousMap} - The input source map passed from
             *                         a compilation step before PostCSS
             *                         (for example, from Sass compiler).
             *
             * @example
             * root.source.input.map.consumer().sources //=> ['a.sass']
             */
            this.map = map;
            var file = map.consumer().file;
            if (!this.file && file) this.file = this.mapResolve(file);
          }

          if (!this.file) {
            sequence += 1;
            /**
             * @member {string} - The unique ID of the CSS source. It will be
             *                    created if `from` option is not provided
             *                    (because PostCSS does not know the file path).
             *
             * @example
             * const root = postcss.parse(css);
             * root.source.input.file //=> undefined
             * root.source.input.id   //=> "<input css 1>"
             */
            this.id = '<input css ' + sequence + '>';
          }
          if (this.map) this.map.file = this.from;
        }

        Input.prototype.error = function error(message, line, column) {
          var opts = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};

          var result = void 0;
          var origin = this.origin(line, column);
          if (origin) {
            result = new _cssSyntaxError2.default(
              message,
              origin.line,
              origin.column,
              origin.source,
              origin.file,
              opts.plugin
            );
          } else {
            result = new _cssSyntaxError2.default(
              message,
              line,
              column,
              this.css,
              this.file,
              opts.plugin
            );
          }

          result.input = { line: line, column: column, source: this.css };
          if (this.file) result.input.file = this.file;

          return result;
        };

        /**
         * Reads the input source map and returns a symbol position
         * in the input source (e.g., in a Sass file that was compiled
         * to CSS before being passed to PostCSS).
         *
         * @param {number} line   - line in input CSS
         * @param {number} column - column in input CSS
         *
         * @return {filePosition} position in input source
         *
         * @example
         * root.source.input.origin(1, 1) //=> { file: 'a.css', line: 3, column: 1 }
         */

        Input.prototype.origin = function origin(line, column) {
          if (!this.map) return false;
          var consumer = this.map.consumer();

          var from = consumer.originalPositionFor({ line: line, column: column });
          if (!from.source) return false;

          var result = {
            file: this.mapResolve(from.source),
            line: from.line,
            column: from.column,
          };

          var source = consumer.sourceContentFor(from.source);
          if (source) result.source = source;

          return result;
        };

        Input.prototype.mapResolve = function mapResolve(file) {
          if (/^\w+:\/\//.test(file)) {
            return file;
          } else {
            return _path2.default.resolve(this.map.consumer().sourceRoot || '.', file);
          }
        };

        /**
         * The CSS source identifier. Contains {@link Input#file} if the user
         * set the `from` option, or {@link Input#id} if they did not.
         * @type {string}
         *
         * @example
         * const root = postcss.parse(css, { from: 'a.css' });
         * root.source.input.from //=> "/home/ai/a.css"
         *
         * const root = postcss.parse(css);
         * root.source.input.from //=> "<input css 1>"
         */

        _createClass(Input, [
          {
            key: 'from',
            get: function get() {
              return this.file || this.id;
            },
          },
        ]);

        return Input;
      })();

      exports.default = Input;

      /**
       * @typedef  {object} filePosition
       * @property {string} file   - path to file
       * @property {number} line   - source line in file
       * @property {number} column - source column in file
       */

      module.exports = exports['default'];
      //# sourceMappingURL=data:application/json;charset=utf8;base64,

      /***/
    },
    /* 271 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';

      exports.__esModule = true;

      var _createClass = (function () {
        function defineProperties(target, props) {
          for (var i = 0; i < props.length; i++) {
            var descriptor = props[i];
            descriptor.enumerable = descriptor.enumerable || false;
            descriptor.configurable = true;
            if ('value' in descriptor) descriptor.writable = true;
            Object.defineProperty(target, descriptor.key, descriptor);
          }
        }
        return function (Constructor, protoProps, staticProps) {
          if (protoProps) defineProperties(Constructor.prototype, protoProps);
          if (staticProps) defineProperties(Constructor, staticProps);
          return Constructor;
        };
      })();

      var _typeof =
        typeof Symbol === 'function' && typeof Symbol.iterator === 'symbol'
          ? function (obj) {
              return typeof obj;
            }
          : function (obj) {
              return obj &&
                typeof Symbol === 'function' &&
                obj.constructor === Symbol &&
                obj !== Symbol.prototype
                ? 'symbol'
                : typeof obj;
            };

      var _mapGenerator = __webpack_require__(642);

      var _mapGenerator2 = _interopRequireDefault(_mapGenerator);

      var _stringify2 = __webpack_require__(182);

      var _stringify3 = _interopRequireDefault(_stringify2);

      var _result = __webpack_require__(646);

      var _result2 = _interopRequireDefault(_result);

      var _parse = __webpack_require__(180);

      var _parse2 = _interopRequireDefault(_parse);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
          throw new TypeError('Cannot call a class as a function');
        }
      }

      function isPromise(obj) {
        return (
          (typeof obj === 'undefined' ? 'undefined' : _typeof(obj)) === 'object' &&
          typeof obj.then === 'function'
        );
      }

      /**
       * A Promise proxy for the result of PostCSS transformations.
       *
       * A `LazyResult` instance is returned by {@link Processor#process}.
       *
       * @example
       * const lazy = postcss([cssnext]).process(css);
       */

      var LazyResult = (function () {
        function LazyResult(processor, css, opts) {
          _classCallCheck(this, LazyResult);

          this.stringified = false;
          this.processed = false;

          var root = void 0;
          if (
            (typeof css === 'undefined' ? 'undefined' : _typeof(css)) === 'object' &&
            css.type === 'root'
          ) {
            root = css;
          } else if (css instanceof LazyResult || css instanceof _result2.default) {
            root = css.root;
            if (css.map) {
              if (typeof opts.map === 'undefined') opts.map = {};
              if (!opts.map.inline) opts.map.inline = false;
              opts.map.prev = css.map;
            }
          } else {
            var parser = _parse2.default;
            if (opts.syntax) parser = opts.syntax.parse;
            if (opts.parser) parser = opts.parser;
            if (parser.parse) parser = parser.parse;

            try {
              root = parser(css, opts);
            } catch (error) {
              this.error = error;
            }
          }

          this.result = new _result2.default(processor, root, opts);
        }

        /**
         * Returns a {@link Processor} instance, which will be used
         * for CSS transformations.
         * @type {Processor}
         */

        /**
         * Processes input CSS through synchronous plugins
         * and calls {@link Result#warnings()}.
         *
         * @return {Warning[]} warnings from plugins
         */
        LazyResult.prototype.warnings = function warnings() {
          return this.sync().warnings();
        };

        /**
         * Alias for the {@link LazyResult#css} property.
         *
         * @example
         * lazy + '' === lazy.css;
         *
         * @return {string} output CSS
         */

        LazyResult.prototype.toString = function toString() {
          return this.css;
        };

        /**
         * Processes input CSS through synchronous and asynchronous plugins
         * and calls `onFulfilled` with a Result instance. If a plugin throws
         * an error, the `onRejected` callback will be executed.
         *
         * It implements standard Promise API.
         *
         * @param {onFulfilled} onFulfilled - callback will be executed
         *                                    when all plugins will finish work
         * @param {onRejected}  onRejected  - callback will be executed on any error
         *
         * @return {Promise} Promise API to make queue
         *
         * @example
         * postcss([cssnext]).process(css).then(result => {
         *   console.log(result.css);
         * });
         */

        LazyResult.prototype.then = function then(onFulfilled, onRejected) {
          return this.async().then(onFulfilled, onRejected);
        };

        /**
         * Processes input CSS through synchronous and asynchronous plugins
         * and calls onRejected for each error thrown in any plugin.
         *
         * It implements standard Promise API.
         *
         * @param {onRejected} onRejected - callback will be executed on any error
         *
         * @return {Promise} Promise API to make queue
         *
         * @example
         * postcss([cssnext]).process(css).then(result => {
         *   console.log(result.css);
         * }).catch(error => {
         *   console.error(error);
         * });
         */

        LazyResult.prototype.catch = function _catch(onRejected) {
          return this.async().catch(onRejected);
        };

        LazyResult.prototype.handleError = function handleError(error, plugin) {
          try {
            this.error = error;
            if (error.name === 'CssSyntaxError' && !error.plugin) {
              error.plugin = plugin.postcssPlugin;
              error.setMessage();
            } else if (plugin.postcssVersion) {
              var pluginName = plugin.postcssPlugin;
              var pluginVer = plugin.postcssVersion;
              var runtimeVer = this.result.processor.version;
              var a = pluginVer.split('.');
              var b = runtimeVer.split('.');

              if (a[0] !== b[0] || parseInt(a[1]) > parseInt(b[1])) {
                console.error(
                  'Unknown error from PostCSS plugin. ' +
                    'Your current PostCSS version ' +
                    'is ' +
                    runtimeVer +
                    ', but ' +
                    pluginName +
                    ' ' +
                    'uses ' +
                    pluginVer +
                    '. Perhaps this is ' +
                    'the source of the error below.'
                );
              }
            }
          } catch (err) {
            if (console && console.error) console.error(err);
          }
        };

        LazyResult.prototype.asyncTick = function asyncTick(resolve, reject) {
          var _this = this;

          if (this.plugin >= this.processor.plugins.length) {
            this.processed = true;
            return resolve();
          }

          try {
            var plugin = this.processor.plugins[this.plugin];
            var promise = this.run(plugin);
            this.plugin += 1;

            if (isPromise(promise)) {
              promise
                .then(function () {
                  _this.asyncTick(resolve, reject);
                })
                .catch(function (error) {
                  _this.handleError(error, plugin);
                  _this.processed = true;
                  reject(error);
                });
            } else {
              this.asyncTick(resolve, reject);
            }
          } catch (error) {
            this.processed = true;
            reject(error);
          }
        };

        LazyResult.prototype.async = function async() {
          var _this2 = this;

          if (this.processed) {
            return new Promise(function (resolve, reject) {
              if (_this2.error) {
                reject(_this2.error);
              } else {
                resolve(_this2.stringify());
              }
            });
          }
          if (this.processing) {
            return this.processing;
          }

          this.processing = new Promise(function (resolve, reject) {
            if (_this2.error) return reject(_this2.error);
            _this2.plugin = 0;
            _this2.asyncTick(resolve, reject);
          }).then(function () {
            _this2.processed = true;
            return _this2.stringify();
          });

          return this.processing;
        };

        LazyResult.prototype.sync = function sync() {
          if (this.processed) return this.result;
          this.processed = true;

          if (this.processing) {
            throw new Error('Use process(css).then(cb) to work with async plugins');
          }

          if (this.error) throw this.error;

          for (
            var _iterator = this.result.processor.plugins,
              _isArray = Array.isArray(_iterator),
              _i = 0,
              _iterator = _isArray ? _iterator : _iterator[Symbol.iterator]();
            ;

          ) {
            var _ref;

            if (_isArray) {
              if (_i >= _iterator.length) break;
              _ref = _iterator[_i++];
            } else {
              _i = _iterator.next();
              if (_i.done) break;
              _ref = _i.value;
            }

            var plugin = _ref;

            var promise = this.run(plugin);
            if (isPromise(promise)) {
              throw new Error('Use process(css).then(cb) to work with async plugins');
            }
          }

          return this.result;
        };

        LazyResult.prototype.run = function run(plugin) {
          this.result.lastPlugin = plugin;

          try {
            return plugin(this.result.root, this.result);
          } catch (error) {
            this.handleError(error, plugin);
            throw error;
          }
        };

        LazyResult.prototype.stringify = function stringify() {
          if (this.stringified) return this.result;
          this.stringified = true;

          this.sync();

          var opts = this.result.opts;
          var str = _stringify3.default;
          if (opts.syntax) str = opts.syntax.stringify;
          if (opts.stringifier) str = opts.stringifier;
          if (str.stringify) str = str.stringify;

          var map = new _mapGenerator2.default(str, this.result.root, this.result.opts);
          var data = map.generate();
          this.result.css = data[0];
          this.result.map = data[1];

          return this.result;
        };

        _createClass(LazyResult, [
          {
            key: 'processor',
            get: function get() {
              return this.result.processor;
            },

            /**
             * Options from the {@link Processor#process} call.
             * @type {processOptions}
             */
          },
          {
            key: 'opts',
            get: function get() {
              return this.result.opts;
            },

            /**
             * Processes input CSS through synchronous plugins, converts `Root`
             * to a CSS string and returns {@link Result#css}.
             *
             * This property will only work with synchronous plugins.
             * If the processor contains any asynchronous plugins
             * it will throw an error. This is why this method is only
             * for debug purpose, you should always use {@link LazyResult#then}.
             *
             * @type {string}
             * @see Result#css
             */
          },
          {
            key: 'css',
            get: function get() {
              return this.stringify().css;
            },

            /**
             * An alias for the `css` property. Use it with syntaxes
             * that generate non-CSS output.
             *
             * This property will only work with synchronous plugins.
             * If the processor contains any asynchronous plugins
             * it will throw an error. This is why this method is only
             * for debug purpose, you should always use {@link LazyResult#then}.
             *
             * @type {string}
             * @see Result#content
             */
          },
          {
            key: 'content',
            get: function get() {
              return this.stringify().content;
            },

            /**
             * Processes input CSS through synchronous plugins
             * and returns {@link Result#map}.
             *
             * This property will only work with synchronous plugins.
             * If the processor contains any asynchronous plugins
             * it will throw an error. This is why this method is only
             * for debug purpose, you should always use {@link LazyResult#then}.
             *
             * @type {SourceMapGenerator}
             * @see Result#map
             */
          },
          {
            key: 'map',
            get: function get() {
              return this.stringify().map;
            },

            /**
             * Processes input CSS through synchronous plugins
             * and returns {@link Result#root}.
             *
             * This property will only work with synchronous plugins. If the processor
             * contains any asynchronous plugins it will throw an error.
             *
             * This is why this method is only for debug purpose,
             * you should always use {@link LazyResult#then}.
             *
             * @type {Root}
             * @see Result#root
             */
          },
          {
            key: 'root',
            get: function get() {
              return this.sync().root;
            },

            /**
             * Processes input CSS through synchronous plugins
             * and returns {@link Result#messages}.
             *
             * This property will only work with synchronous plugins. If the processor
             * contains any asynchronous plugins it will throw an error.
             *
             * This is why this method is only for debug purpose,
             * you should always use {@link LazyResult#then}.
             *
             * @type {Message[]}
             * @see Result#messages
             */
          },
          {
            key: 'messages',
            get: function get() {
              return this.sync().messages;
            },
          },
        ]);

        return LazyResult;
      })();

      exports.default = LazyResult;

      /**
       * @callback onFulfilled
       * @param {Result} result
       */

      /**
       * @callback onRejected
       * @param {Error} error
       */

      module.exports = exports['default'];
      //# sourceMappingURL=data:application/json;charset=utf8;base64,

      /***/
    },
    /* 272 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';

      exports.__esModule = true;
      /**
       * Contains helpers for safely splitting lists of CSS values,
       * preserving parentheses and quotes.
       *
       * @example
       * const list = postcss.list;
       *
       * @namespace list
       */
      var list = {
        split: function split(string, separators, last) {
          var array = [];
          var current = '';
          var split = false;

          var func = 0;
          var quote = false;
          var escape = false;

          for (var i = 0; i < string.length; i++) {
            var letter = string[i];

            if (quote) {
              if (escape) {
                escape = false;
              } else if (letter === '\\') {
                escape = true;
              } else if (letter === quote) {
                quote = false;
              }
            } else if (letter === '"' || letter === "'") {
              quote = letter;
            } else if (letter === '(') {
              func += 1;
            } else if (letter === ')') {
              if (func > 0) func -= 1;
            } else if (func === 0) {
              if (separators.indexOf(letter) !== -1) split = true;
            }

            if (split) {
              if (current !== '') array.push(current.trim());
              current = '';
              split = false;
            } else {
              current += letter;
            }
          }

          if (last || current !== '') array.push(current.trim());
          return array;
        },

        /**
         * Safely splits space-separated values (such as those for `background`,
         * `border-radius`, and other shorthand properties).
         *
         * @param {string} string - space-separated values
         *
         * @return {string[]} split values
         *
         * @example
         * postcss.list.space('1px calc(10% + 1px)') //=> ['1px', 'calc(10% + 1px)']
         */
        space: function space(string) {
          var spaces = [' ', '\n', '\t'];
          return list.split(string, spaces);
        },

        /**
         * Safely splits comma-separated values (such as those for `transition-*`
         * and `background` properties).
         *
         * @param {string} string - comma-separated values
         *
         * @return {string[]} split values
         *
         * @example
         * postcss.list.comma('black, linear-gradient(white, black)')
         * //=> ['black', 'linear-gradient(white, black)']
         */
        comma: function comma(string) {
          var comma = ',';
          return list.split(string, [comma], true);
        },
      };

      exports.default = list;
      module.exports = exports['default'];
      //# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxpc3QuZXM2Il0sIm5hbWVzIjpbImxpc3QiLCJzcGxpdCIsInN0cmluZyIsInNlcGFyYXRvcnMiLCJsYXN0IiwiYXJyYXkiLCJjdXJyZW50IiwiZnVuYyIsInF1b3RlIiwiZXNjYXBlIiwiaSIsImxlbmd0aCIsImxldHRlciIsImluZGV4T2YiLCJwdXNoIiwidHJpbSIsInNwYWNlIiwic3BhY2VzIiwiY29tbWEiXSwibWFwcGluZ3MiOiI7OztBQUFBOzs7Ozs7Ozs7QUFTQSxJQUFJQSxPQUFPO0FBRVBDLFNBRk8saUJBRURDLE1BRkMsRUFFT0MsVUFGUCxFQUVtQkMsSUFGbkIsRUFFeUI7QUFDNUIsWUFBSUMsUUFBVSxFQUFkO0FBQ0EsWUFBSUMsVUFBVSxFQUFkO0FBQ0EsWUFBSUwsUUFBVSxLQUFkOztBQUVBLFlBQUlNLE9BQVUsQ0FBZDtBQUNBLFlBQUlDLFFBQVUsS0FBZDtBQUNBLFlBQUlDLFNBQVUsS0FBZDs7QUFFQSxhQUFNLElBQUlDLElBQUksQ0FBZCxFQUFpQkEsSUFBSVIsT0FBT1MsTUFBNUIsRUFBb0NELEdBQXBDLEVBQTBDO0FBQ3RDLGdCQUFJRSxTQUFTVixPQUFPUSxDQUFQLENBQWI7O0FBRUEsZ0JBQUtGLEtBQUwsRUFBYTtBQUNULG9CQUFLQyxNQUFMLEVBQWM7QUFDVkEsNkJBQVMsS0FBVDtBQUNILGlCQUZELE1BRU8sSUFBS0csV0FBVyxJQUFoQixFQUF1QjtBQUMxQkgsNkJBQVMsSUFBVDtBQUNILGlCQUZNLE1BRUEsSUFBS0csV0FBV0osS0FBaEIsRUFBd0I7QUFDM0JBLDRCQUFRLEtBQVI7QUFDSDtBQUNKLGFBUkQsTUFRTyxJQUFLSSxXQUFXLEdBQVgsSUFBa0JBLFdBQVcsSUFBbEMsRUFBeUM7QUFDNUNKLHdCQUFRSSxNQUFSO0FBQ0gsYUFGTSxNQUVBLElBQUtBLFdBQVcsR0FBaEIsRUFBc0I7QUFDekJMLHdCQUFRLENBQVI7QUFDSCxhQUZNLE1BRUEsSUFBS0ssV0FBVyxHQUFoQixFQUFzQjtBQUN6QixvQkFBS0wsT0FBTyxDQUFaLEVBQWdCQSxRQUFRLENBQVI7QUFDbkIsYUFGTSxNQUVBLElBQUtBLFNBQVMsQ0FBZCxFQUFrQjtBQUNyQixvQkFBS0osV0FBV1UsT0FBWCxDQUFtQkQsTUFBbkIsTUFBK0IsQ0FBQyxDQUFyQyxFQUF5Q1gsUUFBUSxJQUFSO0FBQzVDOztBQUVELGdCQUFLQSxLQUFMLEVBQWE7QUFDVCxvQkFBS0ssWUFBWSxFQUFqQixFQUFzQkQsTUFBTVMsSUFBTixDQUFXUixRQUFRUyxJQUFSLEVBQVg7QUFDdEJULDBCQUFVLEVBQVY7QUFDQUwsd0JBQVUsS0FBVjtBQUNILGFBSkQsTUFJTztBQUNISywyQkFBV00sTUFBWDtBQUNIO0FBQ0o7O0FBRUQsWUFBS1IsUUFBUUUsWUFBWSxFQUF6QixFQUE4QkQsTUFBTVMsSUFBTixDQUFXUixRQUFRUyxJQUFSLEVBQVg7QUFDOUIsZUFBT1YsS0FBUDtBQUNILEtBM0NNOzs7QUE2Q1A7Ozs7Ozs7Ozs7O0FBV0FXLFNBeERPLGlCQXdERGQsTUF4REMsRUF3RE87QUFDVixZQUFJZSxTQUFTLENBQUMsR0FBRCxFQUFNLElBQU4sRUFBWSxJQUFaLENBQWI7QUFDQSxlQUFPakIsS0FBS0MsS0FBTCxDQUFXQyxNQUFYLEVBQW1CZSxNQUFuQixDQUFQO0FBQ0gsS0EzRE07OztBQTZEUDs7Ozs7Ozs7Ozs7O0FBWUFDLFNBekVPLGlCQXlFRGhCLE1BekVDLEVBeUVPO0FBQ1YsWUFBSWdCLFFBQVEsR0FBWjtBQUNBLGVBQU9sQixLQUFLQyxLQUFMLENBQVdDLE1BQVgsRUFBbUIsQ0FBQ2dCLEtBQUQsQ0FBbkIsRUFBNEIsSUFBNUIsQ0FBUDtBQUNIO0FBNUVNLENBQVg7O2tCQWdGZWxCLEkiLCJmaWxlIjoibGlzdC5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQ29udGFpbnMgaGVscGVycyBmb3Igc2FmZWx5IHNwbGl0dGluZyBsaXN0cyBvZiBDU1MgdmFsdWVzLFxuICogcHJlc2VydmluZyBwYXJlbnRoZXNlcyBhbmQgcXVvdGVzLlxuICpcbiAqIEBleGFtcGxlXG4gKiBjb25zdCBsaXN0ID0gcG9zdGNzcy5saXN0O1xuICpcbiAqIEBuYW1lc3BhY2UgbGlzdFxuICovXG5sZXQgbGlzdCA9IHtcblxuICAgIHNwbGl0KHN0cmluZywgc2VwYXJhdG9ycywgbGFzdCkge1xuICAgICAgICBsZXQgYXJyYXkgICA9IFtdO1xuICAgICAgICBsZXQgY3VycmVudCA9ICcnO1xuICAgICAgICBsZXQgc3BsaXQgICA9IGZhbHNlO1xuXG4gICAgICAgIGxldCBmdW5jICAgID0gMDtcbiAgICAgICAgbGV0IHF1b3RlICAgPSBmYWxzZTtcbiAgICAgICAgbGV0IGVzY2FwZSAgPSBmYWxzZTtcblxuICAgICAgICBmb3IgKCBsZXQgaSA9IDA7IGkgPCBzdHJpbmcubGVuZ3RoOyBpKysgKSB7XG4gICAgICAgICAgICBsZXQgbGV0dGVyID0gc3RyaW5nW2ldO1xuXG4gICAgICAgICAgICBpZiAoIHF1b3RlICkge1xuICAgICAgICAgICAgICAgIGlmICggZXNjYXBlICkge1xuICAgICAgICAgICAgICAgICAgICBlc2NhcGUgPSBmYWxzZTtcbiAgICAgICAgICAgICAgICB9IGVsc2UgaWYgKCBsZXR0ZXIgPT09ICdcXFxcJyApIHtcbiAgICAgICAgICAgICAgICAgICAgZXNjYXBlID0gdHJ1ZTtcbiAgICAgICAgICAgICAgICB9IGVsc2UgaWYgKCBsZXR0ZXIgPT09IHF1b3RlICkge1xuICAgICAgICAgICAgICAgICAgICBxdW90ZSA9IGZhbHNlO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0gZWxzZSBpZiAoIGxldHRlciA9PT0gJ1wiJyB8fCBsZXR0ZXIgPT09ICdcXCcnICkge1xuICAgICAgICAgICAgICAgIHF1b3RlID0gbGV0dGVyO1xuICAgICAgICAgICAgfSBlbHNlIGlmICggbGV0dGVyID09PSAnKCcgKSB7XG4gICAgICAgICAgICAgICAgZnVuYyArPSAxO1xuICAgICAgICAgICAgfSBlbHNlIGlmICggbGV0dGVyID09PSAnKScgKSB7XG4gICAgICAgICAgICAgICAgaWYgKCBmdW5jID4gMCApIGZ1bmMgLT0gMTtcbiAgICAgICAgICAgIH0gZWxzZSBpZiAoIGZ1bmMgPT09IDAgKSB7XG4gICAgICAgICAgICAgICAgaWYgKCBzZXBhcmF0b3JzLmluZGV4T2YobGV0dGVyKSAhPT0gLTEgKSBzcGxpdCA9IHRydWU7XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIGlmICggc3BsaXQgKSB7XG4gICAgICAgICAgICAgICAgaWYgKCBjdXJyZW50ICE9PSAnJyApIGFycmF5LnB1c2goY3VycmVudC50cmltKCkpO1xuICAgICAgICAgICAgICAgIGN1cnJlbnQgPSAnJztcbiAgICAgICAgICAgICAgICBzcGxpdCAgID0gZmFsc2U7XG4gICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgIGN1cnJlbnQgKz0gbGV0dGVyO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG5cbiAgICAgICAgaWYgKCBsYXN0IHx8IGN1cnJlbnQgIT09ICcnICkgYXJyYXkucHVzaChjdXJyZW50LnRyaW0oKSk7XG4gICAgICAgIHJldHVybiBhcnJheTtcbiAgICB9LFxuXG4gICAgLyoqXG4gICAgICogU2FmZWx5IHNwbGl0cyBzcGFjZS1zZXBhcmF0ZWQgdmFsdWVzIChzdWNoIGFzIHRob3NlIGZvciBgYmFja2dyb3VuZGAsXG4gICAgICogYGJvcmRlci1yYWRpdXNgLCBhbmQgb3RoZXIgc2hvcnRoYW5kIHByb3BlcnRpZXMpLlxuICAgICAqXG4gICAgICogQHBhcmFtIHtzdHJpbmd9IHN0cmluZyAtIHNwYWNlLXNlcGFyYXRlZCB2YWx1ZXNcbiAgICAgKlxuICAgICAqIEByZXR1cm4ge3N0cmluZ1tdfSBzcGxpdCB2YWx1ZXNcbiAgICAgKlxuICAgICAqIEBleGFtcGxlXG4gICAgICogcG9zdGNzcy5saXN0LnNwYWNlKCcxcHggY2FsYygxMCUgKyAxcHgpJykgLy89PiBbJzFweCcsICdjYWxjKDEwJSArIDFweCknXVxuICAgICAqL1xuICAgIHNwYWNlKHN0cmluZykge1xuICAgICAgICBsZXQgc3BhY2VzID0gWycgJywgJ1xcbicsICdcXHQnXTtcbiAgICAgICAgcmV0dXJuIGxpc3Quc3BsaXQoc3RyaW5nLCBzcGFjZXMpO1xuICAgIH0sXG5cbiAgICAvKipcbiAgICAgKiBTYWZlbHkgc3BsaXRzIGNvbW1hLXNlcGFyYXRlZCB2YWx1ZXMgKHN1Y2ggYXMgdGhvc2UgZm9yIGB0cmFuc2l0aW9uLSpgXG4gICAgICogYW5kIGBiYWNrZ3JvdW5kYCBwcm9wZXJ0aWVzKS5cbiAgICAgKlxuICAgICAqIEBwYXJhbSB7c3RyaW5nfSBzdHJpbmcgLSBjb21tYS1zZXBhcmF0ZWQgdmFsdWVzXG4gICAgICpcbiAgICAgKiBAcmV0dXJuIHtzdHJpbmdbXX0gc3BsaXQgdmFsdWVzXG4gICAgICpcbiAgICAgKiBAZXhhbXBsZVxuICAgICAqIHBvc3Rjc3MubGlzdC5jb21tYSgnYmxhY2ssIGxpbmVhci1ncmFkaWVudCh3aGl0ZSwgYmxhY2spJylcbiAgICAgKiAvLz0+IFsnYmxhY2snLCAnbGluZWFyLWdyYWRpZW50KHdoaXRlLCBibGFjayknXVxuICAgICAqL1xuICAgIGNvbW1hKHN0cmluZykge1xuICAgICAgICBsZXQgY29tbWEgPSAnLCc7XG4gICAgICAgIHJldHVybiBsaXN0LnNwbGl0KHN0cmluZywgW2NvbW1hXSwgdHJ1ZSk7XG4gICAgfVxuXG59O1xuXG5leHBvcnQgZGVmYXVsdCBsaXN0O1xuIl19

      /***/
    },
    /* 273 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';

      exports.__esModule = true;

      var _typeof =
        typeof Symbol === 'function' && typeof Symbol.iterator === 'symbol'
          ? function (obj) {
              return typeof obj;
            }
          : function (obj) {
              return obj &&
                typeof Symbol === 'function' &&
                obj.constructor === Symbol &&
                obj !== Symbol.prototype
                ? 'symbol'
                : typeof obj;
            };

      var _lazyResult = __webpack_require__(271);

      var _lazyResult2 = _interopRequireDefault(_lazyResult);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
          throw new TypeError('Cannot call a class as a function');
        }
      }

      /**
       * Contains plugins to process CSS. Create one `Processor` instance,
       * initialize its plugins, and then use that instance on numerous CSS files.
       *
       * @example
       * const processor = postcss([autoprefixer, precss]);
       * processor.process(css1).then(result => console.log(result.css));
       * processor.process(css2).then(result => console.log(result.css));
       */
      var Processor = (function () {
        /**
         * @param {Array.<Plugin|pluginFunction>|Processor} plugins - PostCSS
         *        plugins. See {@link Processor#use} for plugin format.
         */
        function Processor() {
          var plugins = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];

          _classCallCheck(this, Processor);

          /**
           * @member {string} - Current PostCSS version.
           *
           * @example
           * if ( result.processor.version.split('.')[0] !== '6' ) {
           *   throw new Error('This plugin works only with PostCSS 6');
           * }
           */
          this.version = '6.0.14';
          /**
           * @member {pluginFunction[]} - Plugins added to this processor.
           *
           * @example
           * const processor = postcss([autoprefixer, precss]);
           * processor.plugins.length //=> 2
           */
          this.plugins = this.normalize(plugins);
        }

        /**
         * Adds a plugin to be used as a CSS processor.
         *
         * PostCSS plugin can be in 4 formats:
         * * A plugin created by {@link postcss.plugin} method.
         * * A function. PostCSS will pass the function a @{link Root}
         *   as the first argument and current {@link Result} instance
         *   as the second.
         * * An object with a `postcss` method. PostCSS will use that method
         *   as described in #2.
         * * Another {@link Processor} instance. PostCSS will copy plugins
         *   from that instance into this one.
         *
         * Plugins can also be added by passing them as arguments when creating
         * a `postcss` instance (see [`postcss(plugins)`]).
         *
         * Asynchronous plugins should return a `Promise` instance.
         *
         * @param {Plugin|pluginFunction|Processor} plugin - PostCSS plugin
         *                                                   or {@link Processor}
         *                                                   with plugins
         *
         * @example
         * const processor = postcss()
         *   .use(autoprefixer)
         *   .use(precss);
         *
         * @return {Processes} current processor to make methods chain
         */

        Processor.prototype.use = function use(plugin) {
          this.plugins = this.plugins.concat(this.normalize([plugin]));
          return this;
        };

        /**
         * Parses source CSS and returns a {@link LazyResult} Promise proxy.
         * Because some plugins can be asynchronous it doesn’t make
         * any transformations. Transformations will be applied
         * in the {@link LazyResult} methods.
         *
         * @param {string|toString|Result} css - String with input CSS or
         *                                       any object with a `toString()`
         *                                       method, like a Buffer.
         *                                       Optionally, send a {@link Result}
         *                                       instance and the processor will
         *                                       take the {@link Root} from it.
         * @param {processOptions} [opts]      - options
         *
         * @return {LazyResult} Promise proxy
         *
         * @example
         * processor.process(css, { from: 'a.css', to: 'a.out.css' })
         *   .then(result => {
         *      console.log(result.css);
         *   });
         */

        Processor.prototype.process = function process(css) {
          var opts = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

          return new _lazyResult2.default(this, css, opts);
        };

        Processor.prototype.normalize = function normalize(plugins) {
          var normalized = [];
          for (
            var _iterator = plugins,
              _isArray = Array.isArray(_iterator),
              _i = 0,
              _iterator = _isArray ? _iterator : _iterator[Symbol.iterator]();
            ;

          ) {
            var _ref;

            if (_isArray) {
              if (_i >= _iterator.length) break;
              _ref = _iterator[_i++];
            } else {
              _i = _iterator.next();
              if (_i.done) break;
              _ref = _i.value;
            }

            var i = _ref;

            if (i.postcss) i = i.postcss;

            if (
              (typeof i === 'undefined' ? 'undefined' : _typeof(i)) === 'object' &&
              Array.isArray(i.plugins)
            ) {
              normalized = normalized.concat(i.plugins);
            } else if (typeof i === 'function') {
              normalized.push(i);
            } else if (
              (typeof i === 'undefined' ? 'undefined' : _typeof(i)) === 'object' &&
              (i.parse || i.stringify)
            ) {
              throw new Error(
                'PostCSS syntaxes cannot be used as plugins. ' +
                  'Instead, please use one of the ' +
                  'syntax/parser/stringifier options as ' +
                  'outlined in your PostCSS ' +
                  'runner documentation.'
              );
            } else {
              throw new Error(i + ' is not a PostCSS plugin');
            }
          }
          return normalized;
        };

        return Processor;
      })();

      exports.default = Processor;

      /**
       * @callback builder
       * @param {string} part          - part of generated CSS connected to this node
       * @param {Node}   node          - AST node
       * @param {"start"|"end"} [type] - node’s part type
       */

      /**
       * @callback parser
       *
       * @param {string|toString} css   - string with input CSS or any object
       *                                  with toString() method, like a Buffer
       * @param {processOptions} [opts] - options with only `from` and `map` keys
       *
       * @return {Root} PostCSS AST
       */

      /**
       * @callback stringifier
       *
       * @param {Node} node       - start node for stringifing. Usually {@link Root}.
       * @param {builder} builder - function to concatenate CSS from node’s parts
       *                            or generate string and source map
       *
       * @return {void}
       */

      /**
       * @typedef {object} syntax
       * @property {parser} parse          - function to generate AST by string
       * @property {stringifier} stringify - function to generate string by AST
       */

      /**
       * @typedef {object} toString
       * @property {function} toString
       */

      /**
       * @callback pluginFunction
       * @param {Root} root     - parsed input CSS
       * @param {Result} result - result to set warnings or check other plugins
       */

      /**
       * @typedef {object} Plugin
       * @property {function} postcss - PostCSS plugin function
       */

      /**
       * @typedef {object} processOptions
       * @property {string} from             - the path of the CSS source file.
       *                                       You should always set `from`,
       *                                       because it is used in source map
       *                                       generation and syntax error messages.
       * @property {string} to               - the path where you’ll put the output
       *                                       CSS file. You should always set `to`
       *                                       to generate correct source maps.
       * @property {parser} parser           - function to generate AST by string
       * @property {stringifier} stringifier - class to generate string by AST
       * @property {syntax} syntax           - object with `parse` and `stringify`
       * @property {object} map              - source map options
       * @property {boolean} map.inline                    - does source map should
       *                                                     be embedded in the output
       *                                                     CSS as a base64-encoded
       *                                                     comment
       * @property {string|object|false|function} map.prev - source map content
       *                                                     from a previous
       *                                                     processing step
       *                                                     (for example, Sass).
       *                                                     PostCSS will try to find
       *                                                     previous map
       *                                                     automatically, so you
       *                                                     could disable it by
       *                                                     `false` value.
       * @property {boolean} map.sourcesContent            - does PostCSS should set
       *                                                     the origin content to map
       * @property {string|false} map.annotation           - does PostCSS should set
       *                                                     annotation comment to map
       * @property {string} map.from                       - override `from` in map’s
       *                                                     `sources`
       */

      module.exports = exports['default'];
      //# sourceMappingURL=data:application/json;charset=utf8;base64,

      /***/
    },
    /* 274 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';

      exports.__esModule = true;

      function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
          throw new TypeError('Cannot call a class as a function');
        }
      }

      var defaultRaw = {
        colon: ': ',
        indent: '    ',
        beforeDecl: '\n',
        beforeRule: '\n',
        beforeOpen: ' ',
        beforeClose: '\n',
        beforeComment: '\n',
        after: '\n',
        emptyBody: '',
        commentLeft: ' ',
        commentRight: ' ',
      };

      function capitalize(str) {
        return str[0].toUpperCase() + str.slice(1);
      }

      var Stringifier = (function () {
        function Stringifier(builder) {
          _classCallCheck(this, Stringifier);

          this.builder = builder;
        }

        Stringifier.prototype.stringify = function stringify(node, semicolon) {
          this[node.type](node, semicolon);
        };

        Stringifier.prototype.root = function root(node) {
          this.body(node);
          if (node.raws.after) this.builder(node.raws.after);
        };

        Stringifier.prototype.comment = function comment(node) {
          var left = this.raw(node, 'left', 'commentLeft');
          var right = this.raw(node, 'right', 'commentRight');
          this.builder('/*' + left + node.text + right + '*/', node);
        };

        Stringifier.prototype.decl = function decl(node, semicolon) {
          var between = this.raw(node, 'between', 'colon');
          var string = node.prop + between + this.rawValue(node, 'value');

          if (node.important) {
            string += node.raws.important || ' !important';
          }

          if (semicolon) string += ';';
          this.builder(string, node);
        };

        Stringifier.prototype.rule = function rule(node) {
          this.block(node, this.rawValue(node, 'selector'));
          if (node.raws.ownSemicolon) {
            this.builder(node.raws.ownSemicolon, node, 'end');
          }
        };

        Stringifier.prototype.atrule = function atrule(node, semicolon) {
          var name = '@' + node.name;
          var params = node.params ? this.rawValue(node, 'params') : '';

          if (typeof node.raws.afterName !== 'undefined') {
            name += node.raws.afterName;
          } else if (params) {
            name += ' ';
          }

          if (node.nodes) {
            this.block(node, name + params);
          } else {
            var end = (node.raws.between || '') + (semicolon ? ';' : '');
            this.builder(name + params + end, node);
          }
        };

        Stringifier.prototype.body = function body(node) {
          var last = node.nodes.length - 1;
          while (last > 0) {
            if (node.nodes[last].type !== 'comment') break;
            last -= 1;
          }

          var semicolon = this.raw(node, 'semicolon');
          for (var i = 0; i < node.nodes.length; i++) {
            var child = node.nodes[i];
            var before = this.raw(child, 'before');
            if (before) this.builder(before);
            this.stringify(child, last !== i || semicolon);
          }
        };

        Stringifier.prototype.block = function block(node, start) {
          var between = this.raw(node, 'between', 'beforeOpen');
          this.builder(start + between + '{', node, 'start');

          var after = void 0;
          if (node.nodes && node.nodes.length) {
            this.body(node);
            after = this.raw(node, 'after');
          } else {
            after = this.raw(node, 'after', 'emptyBody');
          }

          if (after) this.builder(after);
          this.builder('}', node, 'end');
        };

        Stringifier.prototype.raw = function raw(node, own, detect) {
          var value = void 0;
          if (!detect) detect = own;

          // Already had
          if (own) {
            value = node.raws[own];
            if (typeof value !== 'undefined') return value;
          }

          var parent = node.parent;

          // Hack for first rule in CSS
          if (detect === 'before') {
            if (!parent || (parent.type === 'root' && parent.first === node)) {
              return '';
            }
          }

          // Floating child without parent
          if (!parent) return defaultRaw[detect];

          // Detect style by other nodes
          var root = node.root();
          if (!root.rawCache) root.rawCache = {};
          if (typeof root.rawCache[detect] !== 'undefined') {
            return root.rawCache[detect];
          }

          if (detect === 'before' || detect === 'after') {
            return this.beforeAfter(node, detect);
          } else {
            var method = 'raw' + capitalize(detect);
            if (this[method]) {
              value = this[method](root, node);
            } else {
              root.walk(function (i) {
                value = i.raws[own];
                if (typeof value !== 'undefined') return false;
              });
            }
          }

          if (typeof value === 'undefined') value = defaultRaw[detect];

          root.rawCache[detect] = value;
          return value;
        };

        Stringifier.prototype.rawSemicolon = function rawSemicolon(root) {
          var value = void 0;
          root.walk(function (i) {
            if (i.nodes && i.nodes.length && i.last.type === 'decl') {
              value = i.raws.semicolon;
              if (typeof value !== 'undefined') return false;
            }
          });
          return value;
        };

        Stringifier.prototype.rawEmptyBody = function rawEmptyBody(root) {
          var value = void 0;
          root.walk(function (i) {
            if (i.nodes && i.nodes.length === 0) {
              value = i.raws.after;
              if (typeof value !== 'undefined') return false;
            }
          });
          return value;
        };

        Stringifier.prototype.rawIndent = function rawIndent(root) {
          if (root.raws.indent) return root.raws.indent;
          var value = void 0;
          root.walk(function (i) {
            var p = i.parent;
            if (p && p !== root && p.parent && p.parent === root) {
              if (typeof i.raws.before !== 'undefined') {
                var parts = i.raws.before.split('\n');
                value = parts[parts.length - 1];
                value = value.replace(/[^\s]/g, '');
                return false;
              }
            }
          });
          return value;
        };

        Stringifier.prototype.rawBeforeComment = function rawBeforeComment(root, node) {
          var value = void 0;
          root.walkComments(function (i) {
            if (typeof i.raws.before !== 'undefined') {
              value = i.raws.before;
              if (value.indexOf('\n') !== -1) {
                value = value.replace(/[^\n]+$/, '');
              }
              return false;
            }
          });
          if (typeof value === 'undefined') {
            value = this.raw(node, null, 'beforeDecl');
          } else if (value) {
            value = value.replace(/[^\s]/g, '');
          }
          return value;
        };

        Stringifier.prototype.rawBeforeDecl = function rawBeforeDecl(root, node) {
          var value = void 0;
          root.walkDecls(function (i) {
            if (typeof i.raws.before !== 'undefined') {
              value = i.raws.before;
              if (value.indexOf('\n') !== -1) {
                value = value.replace(/[^\n]+$/, '');
              }
              return false;
            }
          });
          if (typeof value === 'undefined') {
            value = this.raw(node, null, 'beforeRule');
          } else if (value) {
            value = value.replace(/[^\s]/g, '');
          }
          return value;
        };

        Stringifier.prototype.rawBeforeRule = function rawBeforeRule(root) {
          var value = void 0;
          root.walk(function (i) {
            if (i.nodes && (i.parent !== root || root.first !== i)) {
              if (typeof i.raws.before !== 'undefined') {
                value = i.raws.before;
                if (value.indexOf('\n') !== -1) {
                  value = value.replace(/[^\n]+$/, '');
                }
                return false;
              }
            }
          });
          if (value) value = value.replace(/[^\s]/g, '');
          return value;
        };

        Stringifier.prototype.rawBeforeClose = function rawBeforeClose(root) {
          var value = void 0;
          root.walk(function (i) {
            if (i.nodes && i.nodes.length > 0) {
              if (typeof i.raws.after !== 'undefined') {
                value = i.raws.after;
                if (value.indexOf('\n') !== -1) {
                  value = value.replace(/[^\n]+$/, '');
                }
                return false;
              }
            }
          });
          if (value) value = value.replace(/[^\s]/g, '');
          return value;
        };

        Stringifier.prototype.rawBeforeOpen = function rawBeforeOpen(root) {
          var value = void 0;
          root.walk(function (i) {
            if (i.type !== 'decl') {
              value = i.raws.between;
              if (typeof value !== 'undefined') return false;
            }
          });
          return value;
        };

        Stringifier.prototype.rawColon = function rawColon(root) {
          var value = void 0;
          root.walkDecls(function (i) {
            if (typeof i.raws.between !== 'undefined') {
              value = i.raws.between.replace(/[^\s:]/g, '');
              return false;
            }
          });
          return value;
        };

        Stringifier.prototype.beforeAfter = function beforeAfter(node, detect) {
          var value = void 0;
          if (node.type === 'decl') {
            value = this.raw(node, null, 'beforeDecl');
          } else if (node.type === 'comment') {
            value = this.raw(node, null, 'beforeComment');
          } else if (detect === 'before') {
            value = this.raw(node, null, 'beforeRule');
          } else {
            value = this.raw(node, null, 'beforeClose');
          }

          var buf = node.parent;
          var depth = 0;
          while (buf && buf.type !== 'root') {
            depth += 1;
            buf = buf.parent;
          }

          if (value.indexOf('\n') !== -1) {
            var indent = this.raw(node, null, 'indent');
            if (indent.length) {
              for (var step = 0; step < depth; step++) {
                value += indent;
              }
            }
          }

          return value;
        };

        Stringifier.prototype.rawValue = function rawValue(node, prop) {
          var value = node[prop];
          var raw = node.raws[prop];
          if (raw && raw.value === value) {
            return raw.raw;
          } else {
            return value;
          }
        };

        return Stringifier;
      })();

      exports.default = Stringifier;
      module.exports = exports['default'];
      //# sourceMappingURL=data:application/json;charset=utf8;base64,

      /***/
    },
    /* 275 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';

      exports.__esModule = true;
      exports.default = tokenizer;
      var SINGLE_QUOTE = 39;
      var DOUBLE_QUOTE = 34;
      var BACKSLASH = 92;
      var SLASH = 47;
      var NEWLINE = 10;
      var SPACE = 32;
      var FEED = 12;
      var TAB = 9;
      var CR = 13;
      var OPEN_SQUARE = 91;
      var CLOSE_SQUARE = 93;
      var OPEN_PARENTHESES = 40;
      var CLOSE_PARENTHESES = 41;
      var OPEN_CURLY = 123;
      var CLOSE_CURLY = 125;
      var SEMICOLON = 59;
      var ASTERISK = 42;
      var COLON = 58;
      var AT = 64;

      var RE_AT_END = /[ \n\t\r\f\{\(\)'"\\;/\[\]#]/g;
      var RE_WORD_END = /[ \n\t\r\f\(\)\{\}:;@!'"\\\]\[#]|\/(?=\*)/g;
      var RE_BAD_BRACKET = /.[\\\/\("'\n]/;
      var RE_HEX_ESCAPE = /[a-f0-9]/i;

      function tokenizer(input) {
        var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

        var css = input.css.valueOf();
        var ignore = options.ignoreErrors;

        var code = void 0,
          next = void 0,
          quote = void 0,
          lines = void 0,
          last = void 0,
          content = void 0,
          escape = void 0,
          nextLine = void 0,
          nextOffset = void 0,
          escaped = void 0,
          escapePos = void 0,
          prev = void 0,
          n = void 0,
          currentToken = void 0;

        var length = css.length;
        var offset = -1;
        var line = 1;
        var pos = 0;
        var buffer = [];
        var returned = [];

        function unclosed(what) {
          throw input.error('Unclosed ' + what, line, pos - offset);
        }

        function endOfFile() {
          return returned.length === 0 && pos >= length;
        }

        function nextToken() {
          if (returned.length) return returned.pop();
          if (pos >= length) return;

          code = css.charCodeAt(pos);
          if (
            code === NEWLINE ||
            code === FEED ||
            (code === CR && css.charCodeAt(pos + 1) !== NEWLINE)
          ) {
            offset = pos;
            line += 1;
          }

          switch (code) {
            case NEWLINE:
            case SPACE:
            case TAB:
            case CR:
            case FEED:
              next = pos;
              do {
                next += 1;
                code = css.charCodeAt(next);
                if (code === NEWLINE) {
                  offset = next;
                  line += 1;
                }
              } while (
                code === SPACE ||
                code === NEWLINE ||
                code === TAB ||
                code === CR ||
                code === FEED
              );

              currentToken = ['space', css.slice(pos, next)];
              pos = next - 1;
              break;

            case OPEN_SQUARE:
              currentToken = ['[', '[', line, pos - offset];
              break;

            case CLOSE_SQUARE:
              currentToken = [']', ']', line, pos - offset];
              break;

            case OPEN_CURLY:
              currentToken = ['{', '{', line, pos - offset];
              break;

            case CLOSE_CURLY:
              currentToken = ['}', '}', line, pos - offset];
              break;

            case COLON:
              currentToken = [':', ':', line, pos - offset];
              break;

            case SEMICOLON:
              currentToken = [';', ';', line, pos - offset];
              break;

            case OPEN_PARENTHESES:
              prev = buffer.length ? buffer.pop()[1] : '';
              n = css.charCodeAt(pos + 1);
              if (
                prev === 'url' &&
                n !== SINGLE_QUOTE &&
                n !== DOUBLE_QUOTE &&
                n !== SPACE &&
                n !== NEWLINE &&
                n !== TAB &&
                n !== FEED &&
                n !== CR
              ) {
                next = pos;
                do {
                  escaped = false;
                  next = css.indexOf(')', next + 1);
                  if (next === -1) {
                    if (ignore) {
                      next = pos;
                      break;
                    } else {
                      unclosed('bracket');
                    }
                  }
                  escapePos = next;
                  while (css.charCodeAt(escapePos - 1) === BACKSLASH) {
                    escapePos -= 1;
                    escaped = !escaped;
                  }
                } while (escaped);

                currentToken = [
                  'brackets',
                  css.slice(pos, next + 1),
                  line,
                  pos - offset,
                  line,
                  next - offset,
                ];

                pos = next;
              } else {
                next = css.indexOf(')', pos + 1);
                content = css.slice(pos, next + 1);

                if (next === -1 || RE_BAD_BRACKET.test(content)) {
                  currentToken = ['(', '(', line, pos - offset];
                } else {
                  currentToken = ['brackets', content, line, pos - offset, line, next - offset];
                  pos = next;
                }
              }

              break;

            case CLOSE_PARENTHESES:
              currentToken = [')', ')', line, pos - offset];
              break;

            case SINGLE_QUOTE:
            case DOUBLE_QUOTE:
              quote = code === SINGLE_QUOTE ? "'" : '"';
              next = pos;
              do {
                escaped = false;
                next = css.indexOf(quote, next + 1);
                if (next === -1) {
                  if (ignore) {
                    next = pos + 1;
                    break;
                  } else {
                    unclosed('string');
                  }
                }
                escapePos = next;
                while (css.charCodeAt(escapePos - 1) === BACKSLASH) {
                  escapePos -= 1;
                  escaped = !escaped;
                }
              } while (escaped);

              content = css.slice(pos, next + 1);
              lines = content.split('\n');
              last = lines.length - 1;

              if (last > 0) {
                nextLine = line + last;
                nextOffset = next - lines[last].length;
              } else {
                nextLine = line;
                nextOffset = offset;
              }

              currentToken = [
                'string',
                css.slice(pos, next + 1),
                line,
                pos - offset,
                nextLine,
                next - nextOffset,
              ];

              offset = nextOffset;
              line = nextLine;
              pos = next;
              break;

            case AT:
              RE_AT_END.lastIndex = pos + 1;
              RE_AT_END.test(css);
              if (RE_AT_END.lastIndex === 0) {
                next = css.length - 1;
              } else {
                next = RE_AT_END.lastIndex - 2;
              }

              currentToken = [
                'at-word',
                css.slice(pos, next + 1),
                line,
                pos - offset,
                line,
                next - offset,
              ];

              pos = next;
              break;

            case BACKSLASH:
              next = pos;
              escape = true;
              while (css.charCodeAt(next + 1) === BACKSLASH) {
                next += 1;
                escape = !escape;
              }
              code = css.charCodeAt(next + 1);
              if (
                escape &&
                code !== SLASH &&
                code !== SPACE &&
                code !== NEWLINE &&
                code !== TAB &&
                code !== CR &&
                code !== FEED
              ) {
                next += 1;
                if (RE_HEX_ESCAPE.test(css.charAt(next))) {
                  while (RE_HEX_ESCAPE.test(css.charAt(next + 1))) {
                    next += 1;
                  }
                  if (css.charCodeAt(next + 1) === SPACE) {
                    next += 1;
                  }
                }
              }

              currentToken = [
                'word',
                css.slice(pos, next + 1),
                line,
                pos - offset,
                line,
                next - offset,
              ];

              pos = next;
              break;

            default:
              if (code === SLASH && css.charCodeAt(pos + 1) === ASTERISK) {
                next = css.indexOf('*/', pos + 2) + 1;
                if (next === 0) {
                  if (ignore) {
                    next = css.length;
                  } else {
                    unclosed('comment');
                  }
                }

                content = css.slice(pos, next + 1);
                lines = content.split('\n');
                last = lines.length - 1;

                if (last > 0) {
                  nextLine = line + last;
                  nextOffset = next - lines[last].length;
                } else {
                  nextLine = line;
                  nextOffset = offset;
                }

                currentToken = [
                  'comment',
                  content,
                  line,
                  pos - offset,
                  nextLine,
                  next - nextOffset,
                ];

                offset = nextOffset;
                line = nextLine;
                pos = next;
              } else {
                RE_WORD_END.lastIndex = pos + 1;
                RE_WORD_END.test(css);
                if (RE_WORD_END.lastIndex === 0) {
                  next = css.length - 1;
                } else {
                  next = RE_WORD_END.lastIndex - 2;
                }

                currentToken = [
                  'word',
                  css.slice(pos, next + 1),
                  line,
                  pos - offset,
                  line,
                  next - offset,
                ];

                buffer.push(currentToken);

                pos = next;
              }

              break;
          }

          pos++;
          return currentToken;
        }

        function back(token) {
          returned.push(token);
        }

        return {
          back: back,
          nextToken: nextToken,
          endOfFile: endOfFile,
        };
      }
      module.exports = exports['default'];
      //# sourceMappingURL=data:application/json;charset=utf8;base64,

      /***/
    },
    /* 276 */
    /***/ function (module, exports, __webpack_require__) {
      /* -*- Mode: js; js-indent-level: 2; -*- */
      /*
       * Copyright 2011 Mozilla Foundation and contributors
       * Licensed under the New BSD license. See LICENSE or:
       * http://opensource.org/licenses/BSD-3-Clause
       */

      var util = __webpack_require__(96);
      var has = Object.prototype.hasOwnProperty;
      var hasNativeMap = typeof Map !== 'undefined';

      /**
       * A data structure which is a combination of an array and a set. Adding a new
       * member is O(1), testing for membership is O(1), and finding the index of an
       * element is O(1). Removing elements from the set is not supported. Only
       * strings are supported for membership.
       */
      function ArraySet() {
        this._array = [];
        this._set = hasNativeMap ? new Map() : Object.create(null);
      }

      /**
       * Static method for creating ArraySet instances from an existing array.
       */
      ArraySet.fromArray = function ArraySet_fromArray(aArray, aAllowDuplicates) {
        var set = new ArraySet();
        for (var i = 0, len = aArray.length; i < len; i++) {
          set.add(aArray[i], aAllowDuplicates);
        }
        return set;
      };

      /**
       * Return how many unique items are in this ArraySet. If duplicates have been
       * added, than those do not count towards the size.
       *
       * @returns Number
       */
      ArraySet.prototype.size = function ArraySet_size() {
        return hasNativeMap ? this._set.size : Object.getOwnPropertyNames(this._set).length;
      };

      /**
       * Add the given string to this set.
       *
       * @param String aStr
       */
      ArraySet.prototype.add = function ArraySet_add(aStr, aAllowDuplicates) {
        var sStr = hasNativeMap ? aStr : util.toSetString(aStr);
        var isDuplicate = hasNativeMap ? this.has(aStr) : has.call(this._set, sStr);
        var idx = this._array.length;
        if (!isDuplicate || aAllowDuplicates) {
          this._array.push(aStr);
        }
        if (!isDuplicate) {
          if (hasNativeMap) {
            this._set.set(aStr, idx);
          } else {
            this._set[sStr] = idx;
          }
        }
      };

      /**
       * Is the given string a member of this set?
       *
       * @param String aStr
       */
      ArraySet.prototype.has = function ArraySet_has(aStr) {
        if (hasNativeMap) {
          return this._set.has(aStr);
        } else {
          var sStr = util.toSetString(aStr);
          return has.call(this._set, sStr);
        }
      };

      /**
       * What is the index of the given string in the array?
       *
       * @param String aStr
       */
      ArraySet.prototype.indexOf = function ArraySet_indexOf(aStr) {
        if (hasNativeMap) {
          var idx = this._set.get(aStr);
          if (idx >= 0) {
            return idx;
          }
        } else {
          var sStr = util.toSetString(aStr);
          if (has.call(this._set, sStr)) {
            return this._set[sStr];
          }
        }

        throw new Error('"' + aStr + '" is not in the set.');
      };

      /**
       * What is the element at the given index?
       *
       * @param Number aIdx
       */
      ArraySet.prototype.at = function ArraySet_at(aIdx) {
        if (aIdx >= 0 && aIdx < this._array.length) {
          return this._array[aIdx];
        }
        throw new Error('No element indexed by ' + aIdx);
      };

      /**
       * Returns the array representation of this set (which has the proper indices
       * indicated by indexOf). Note that this is a copy of the internal array used
       * for storing the members so that no one can mess with internal state.
       */
      ArraySet.prototype.toArray = function ArraySet_toArray() {
        return this._array.slice();
      };

      exports.ArraySet = ArraySet;

      /***/
    },
    /* 277 */
    /***/ function (module, exports, __webpack_require__) {
      /* -*- Mode: js; js-indent-level: 2; -*- */
      /*
       * Copyright 2011 Mozilla Foundation and contributors
       * Licensed under the New BSD license. See LICENSE or:
       * http://opensource.org/licenses/BSD-3-Clause
       *
       * Based on the Base 64 VLQ implementation in Closure Compiler:
       * https://code.google.com/p/closure-compiler/source/browse/trunk/src/com/google/debugging/sourcemap/Base64VLQ.java
       *
       * Copyright 2011 The Closure Compiler Authors. All rights reserved.
       * Redistribution and use in source and binary forms, with or without
       * modification, are permitted provided that the following conditions are
       * met:
       *
       *  * Redistributions of source code must retain the above copyright
       *    notice, this list of conditions and the following disclaimer.
       *  * Redistributions in binary form must reproduce the above
       *    copyright notice, this list of conditions and the following
       *    disclaimer in the documentation and/or other materials provided
       *    with the distribution.
       *  * Neither the name of Google Inc. nor the names of its
       *    contributors may be used to endorse or promote products derived
       *    from this software without specific prior written permission.
       *
       * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
       * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
       * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
       * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
       * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
       * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
       * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
       * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
       * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
       * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
       * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
       */

      var base64 = __webpack_require__(651);

      // A single base 64 digit can contain 6 bits of data. For the base 64 variable
      // length quantities we use in the source map spec, the first bit is the sign,
      // the next four bits are the actual value, and the 6th bit is the
      // continuation bit. The continuation bit tells us whether there are more
      // digits in this value following this digit.
      //
      //   Continuation
      //   |    Sign
      //   |    |
      //   V    V
      //   101011

      var VLQ_BASE_SHIFT = 5;

      // binary: 100000
      var VLQ_BASE = 1 << VLQ_BASE_SHIFT;

      // binary: 011111
      var VLQ_BASE_MASK = VLQ_BASE - 1;

      // binary: 100000
      var VLQ_CONTINUATION_BIT = VLQ_BASE;

      /**
       * Converts from a two-complement value to a value where the sign bit is
       * placed in the least significant bit.  For example, as decimals:
       *   1 becomes 2 (10 binary), -1 becomes 3 (11 binary)
       *   2 becomes 4 (100 binary), -2 becomes 5 (101 binary)
       */
      function toVLQSigned(aValue) {
        return aValue < 0 ? (-aValue << 1) + 1 : (aValue << 1) + 0;
      }

      /**
       * Converts to a two-complement value from a value where the sign bit is
       * placed in the least significant bit.  For example, as decimals:
       *   2 (10 binary) becomes 1, 3 (11 binary) becomes -1
       *   4 (100 binary) becomes 2, 5 (101 binary) becomes -2
       */
      function fromVLQSigned(aValue) {
        var isNegative = (aValue & 1) === 1;
        var shifted = aValue >> 1;
        return isNegative ? -shifted : shifted;
      }

      /**
       * Returns the base 64 VLQ encoded value.
       */
      exports.encode = function base64VLQ_encode(aValue) {
        var encoded = '';
        var digit;

        var vlq = toVLQSigned(aValue);

        do {
          digit = vlq & VLQ_BASE_MASK;
          vlq >>>= VLQ_BASE_SHIFT;
          if (vlq > 0) {
            // There are still more digits in this value, so we must make sure the
            // continuation bit is marked.
            digit |= VLQ_CONTINUATION_BIT;
          }
          encoded += base64.encode(digit);
        } while (vlq > 0);

        return encoded;
      };

      /**
       * Decodes the next base 64 VLQ value from the given string and returns the
       * value and the rest of the string via the out parameter.
       */
      exports.decode = function base64VLQ_decode(aStr, aIndex, aOutParam) {
        var strLen = aStr.length;
        var result = 0;
        var shift = 0;
        var continuation, digit;

        do {
          if (aIndex >= strLen) {
            throw new Error('Expected more digits in base 64 VLQ value.');
          }

          digit = base64.decode(aStr.charCodeAt(aIndex++));
          if (digit === -1) {
            throw new Error('Invalid base64 digit: ' + aStr.charAt(aIndex - 1));
          }

          continuation = !!(digit & VLQ_CONTINUATION_BIT);
          digit &= VLQ_BASE_MASK;
          result = result + (digit << shift);
          shift += VLQ_BASE_SHIFT;
        } while (continuation);

        aOutParam.value = fromVLQSigned(result);
        aOutParam.rest = aIndex;
      };

      /***/
    },
    /* 278 */
    /***/ function (module, exports, __webpack_require__) {
      /* -*- Mode: js; js-indent-level: 2; -*- */
      /*
       * Copyright 2011 Mozilla Foundation and contributors
       * Licensed under the New BSD license. See LICENSE or:
       * http://opensource.org/licenses/BSD-3-Clause
       */

      var base64VLQ = __webpack_require__(277);
      var util = __webpack_require__(96);
      var ArraySet = __webpack_require__(276).ArraySet;
      var MappingList = __webpack_require__(653).MappingList;

      /**
       * An instance of the SourceMapGenerator represents a source map which is
       * being built incrementally. You may pass an object with the following
       * properties:
       *
       *   - file: The filename of the generated source.
       *   - sourceRoot: A root for all relative URLs in this source map.
       */
      function SourceMapGenerator(aArgs) {
        if (!aArgs) {
          aArgs = {};
        }
        this._file = util.getArg(aArgs, 'file', null);
        this._sourceRoot = util.getArg(aArgs, 'sourceRoot', null);
        this._skipValidation = util.getArg(aArgs, 'skipValidation', false);
        this._sources = new ArraySet();
        this._names = new ArraySet();
        this._mappings = new MappingList();
        this._sourcesContents = null;
      }

      SourceMapGenerator.prototype._version = 3;

      /**
       * Creates a new SourceMapGenerator based on a SourceMapConsumer
       *
       * @param aSourceMapConsumer The SourceMap.
       */
      SourceMapGenerator.fromSourceMap = function SourceMapGenerator_fromSourceMap(
        aSourceMapConsumer
      ) {
        var sourceRoot = aSourceMapConsumer.sourceRoot;
        var generator = new SourceMapGenerator({
          file: aSourceMapConsumer.file,
          sourceRoot: sourceRoot,
        });
        aSourceMapConsumer.eachMapping(function (mapping) {
          var newMapping = {
            generated: {
              line: mapping.generatedLine,
              column: mapping.generatedColumn,
            },
          };

          if (mapping.source != null) {
            newMapping.source = mapping.source;
            if (sourceRoot != null) {
              newMapping.source = util.relative(sourceRoot, newMapping.source);
            }

            newMapping.original = {
              line: mapping.originalLine,
              column: mapping.originalColumn,
            };

            if (mapping.name != null) {
              newMapping.name = mapping.name;
            }
          }

          generator.addMapping(newMapping);
        });
        aSourceMapConsumer.sources.forEach(function (sourceFile) {
          var sourceRelative = sourceFile;
          if (sourceRoot !== null) {
            sourceRelative = util.relative(sourceRoot, sourceFile);
          }

          if (!generator._sources.has(sourceRelative)) {
            generator._sources.add(sourceRelative);
          }

          var content = aSourceMapConsumer.sourceContentFor(sourceFile);
          if (content != null) {
            generator.setSourceContent(sourceFile, content);
          }
        });
        return generator;
      };

      /**
       * Add a single mapping from original source line and column to the generated
       * source's line and column for this source map being created. The mapping
       * object should have the following properties:
       *
       *   - generated: An object with the generated line and column positions.
       *   - original: An object with the original line and column positions.
       *   - source: The original source file (relative to the sourceRoot).
       *   - name: An optional original token name for this mapping.
       */
      SourceMapGenerator.prototype.addMapping = function SourceMapGenerator_addMapping(aArgs) {
        var generated = util.getArg(aArgs, 'generated');
        var original = util.getArg(aArgs, 'original', null);
        var source = util.getArg(aArgs, 'source', null);
        var name = util.getArg(aArgs, 'name', null);

        if (!this._skipValidation) {
          this._validateMapping(generated, original, source, name);
        }

        if (source != null) {
          source = String(source);
          if (!this._sources.has(source)) {
            this._sources.add(source);
          }
        }

        if (name != null) {
          name = String(name);
          if (!this._names.has(name)) {
            this._names.add(name);
          }
        }

        this._mappings.add({
          generatedLine: generated.line,
          generatedColumn: generated.column,
          originalLine: original != null && original.line,
          originalColumn: original != null && original.column,
          source: source,
          name: name,
        });
      };

      /**
       * Set the source content for a source file.
       */
      SourceMapGenerator.prototype.setSourceContent = function SourceMapGenerator_setSourceContent(
        aSourceFile,
        aSourceContent
      ) {
        var source = aSourceFile;
        if (this._sourceRoot != null) {
          source = util.relative(this._sourceRoot, source);
        }

        if (aSourceContent != null) {
          // Add the source content to the _sourcesContents map.
          // Create a new _sourcesContents map if the property is null.
          if (!this._sourcesContents) {
            this._sourcesContents = Object.create(null);
          }
          this._sourcesContents[util.toSetString(source)] = aSourceContent;
        } else if (this._sourcesContents) {
          // Remove the source file from the _sourcesContents map.
          // If the _sourcesContents map is empty, set the property to null.
          delete this._sourcesContents[util.toSetString(source)];
          if (Object.keys(this._sourcesContents).length === 0) {
            this._sourcesContents = null;
          }
        }
      };

      /**
       * Applies the mappings of a sub-source-map for a specific source file to the
       * source map being generated. Each mapping to the supplied source file is
       * rewritten using the supplied source map. Note: The resolution for the
       * resulting mappings is the minimium of this map and the supplied map.
       *
       * @param aSourceMapConsumer The source map to be applied.
       * @param aSourceFile Optional. The filename of the source file.
       *        If omitted, SourceMapConsumer's file property will be used.
       * @param aSourceMapPath Optional. The dirname of the path to the source map
       *        to be applied. If relative, it is relative to the SourceMapConsumer.
       *        This parameter is needed when the two source maps aren't in the same
       *        directory, and the source map to be applied contains relative source
       *        paths. If so, those relative source paths need to be rewritten
       *        relative to the SourceMapGenerator.
       */
      SourceMapGenerator.prototype.applySourceMap = function SourceMapGenerator_applySourceMap(
        aSourceMapConsumer,
        aSourceFile,
        aSourceMapPath
      ) {
        var sourceFile = aSourceFile;
        // If aSourceFile is omitted, we will use the file property of the SourceMap
        if (aSourceFile == null) {
          if (aSourceMapConsumer.file == null) {
            throw new Error(
              'SourceMapGenerator.prototype.applySourceMap requires either an explicit source file, ' +
                'or the source map\'s "file" property. Both were omitted.'
            );
          }
          sourceFile = aSourceMapConsumer.file;
        }
        var sourceRoot = this._sourceRoot;
        // Make "sourceFile" relative if an absolute Url is passed.
        if (sourceRoot != null) {
          sourceFile = util.relative(sourceRoot, sourceFile);
        }
        // Applying the SourceMap can add and remove items from the sources and
        // the names array.
        var newSources = new ArraySet();
        var newNames = new ArraySet();

        // Find mappings for the "sourceFile"
        this._mappings.unsortedForEach(function (mapping) {
          if (mapping.source === sourceFile && mapping.originalLine != null) {
            // Check if it can be mapped by the source map, then update the mapping.
            var original = aSourceMapConsumer.originalPositionFor({
              line: mapping.originalLine,
              column: mapping.originalColumn,
            });
            if (original.source != null) {
              // Copy mapping
              mapping.source = original.source;
              if (aSourceMapPath != null) {
                mapping.source = util.join(aSourceMapPath, mapping.source);
              }
              if (sourceRoot != null) {
                mapping.source = util.relative(sourceRoot, mapping.source);
              }
              mapping.originalLine = original.line;
              mapping.originalColumn = original.column;
              if (original.name != null) {
                mapping.name = original.name;
              }
            }
          }

          var source = mapping.source;
          if (source != null && !newSources.has(source)) {
            newSources.add(source);
          }

          var name = mapping.name;
          if (name != null && !newNames.has(name)) {
            newNames.add(name);
          }
        }, this);
        this._sources = newSources;
        this._names = newNames;

        // Copy sourcesContents of applied map.
        aSourceMapConsumer.sources.forEach(function (sourceFile) {
          var content = aSourceMapConsumer.sourceContentFor(sourceFile);
          if (content != null) {
            if (aSourceMapPath != null) {
              sourceFile = util.join(aSourceMapPath, sourceFile);
            }
            if (sourceRoot != null) {
              sourceFile = util.relative(sourceRoot, sourceFile);
            }
            this.setSourceContent(sourceFile, content);
          }
        }, this);
      };

      /**
       * A mapping can have one of the three levels of data:
       *
       *   1. Just the generated position.
       *   2. The Generated position, original position, and original source.
       *   3. Generated and original position, original source, as well as a name
       *      token.
       *
       * To maintain consistency, we validate that any new mapping being added falls
       * in to one of these categories.
       */
      SourceMapGenerator.prototype._validateMapping = function SourceMapGenerator_validateMapping(
        aGenerated,
        aOriginal,
        aSource,
        aName
      ) {
        // When aOriginal is truthy but has empty values for .line and .column,
        // it is most likely a programmer error. In this case we throw a very
        // specific error message to try to guide them the right way.
        // For example: https://github.com/Polymer/polymer-bundler/pull/519
        if (
          aOriginal &&
          typeof aOriginal.line !== 'number' &&
          typeof aOriginal.column !== 'number'
        ) {
          throw new Error(
            'original.line and original.column are not numbers -- you probably meant to omit ' +
              'the original mapping entirely and only map the generated position. If so, pass ' +
              'null for the original mapping instead of an object with empty or null values.'
          );
        }

        if (
          aGenerated &&
          'line' in aGenerated &&
          'column' in aGenerated &&
          aGenerated.line > 0 &&
          aGenerated.column >= 0 &&
          !aOriginal &&
          !aSource &&
          !aName
        ) {
          // Case 1.
          return;
        } else if (
          aGenerated &&
          'line' in aGenerated &&
          'column' in aGenerated &&
          aOriginal &&
          'line' in aOriginal &&
          'column' in aOriginal &&
          aGenerated.line > 0 &&
          aGenerated.column >= 0 &&
          aOriginal.line > 0 &&
          aOriginal.column >= 0 &&
          aSource
        ) {
          // Cases 2 and 3.
          return;
        } else {
          throw new Error(
            'Invalid mapping: ' +
              JSON.stringify({
                generated: aGenerated,
                source: aSource,
                original: aOriginal,
                name: aName,
              })
          );
        }
      };

      /**
       * Serialize the accumulated mappings in to the stream of base 64 VLQs
       * specified by the source map format.
       */
      SourceMapGenerator.prototype._serializeMappings = function SourceMapGenerator_serializeMappings() {
        var previousGeneratedColumn = 0;
        var previousGeneratedLine = 1;
        var previousOriginalColumn = 0;
        var previousOriginalLine = 0;
        var previousName = 0;
        var previousSource = 0;
        var result = '';
        var next;
        var mapping;
        var nameIdx;
        var sourceIdx;

        var mappings = this._mappings.toArray();
        for (var i = 0, len = mappings.length; i < len; i++) {
          mapping = mappings[i];
          next = '';

          if (mapping.generatedLine !== previousGeneratedLine) {
            previousGeneratedColumn = 0;
            while (mapping.generatedLine !== previousGeneratedLine) {
              next += ';';
              previousGeneratedLine++;
            }
          } else {
            if (i > 0) {
              if (!util.compareByGeneratedPositionsInflated(mapping, mappings[i - 1])) {
                continue;
              }
              next += ',';
            }
          }

          next += base64VLQ.encode(mapping.generatedColumn - previousGeneratedColumn);
          previousGeneratedColumn = mapping.generatedColumn;

          if (mapping.source != null) {
            sourceIdx = this._sources.indexOf(mapping.source);
            next += base64VLQ.encode(sourceIdx - previousSource);
            previousSource = sourceIdx;

            // lines are stored 0-based in SourceMap spec version 3
            next += base64VLQ.encode(mapping.originalLine - 1 - previousOriginalLine);
            previousOriginalLine = mapping.originalLine - 1;

            next += base64VLQ.encode(mapping.originalColumn - previousOriginalColumn);
            previousOriginalColumn = mapping.originalColumn;

            if (mapping.name != null) {
              nameIdx = this._names.indexOf(mapping.name);
              next += base64VLQ.encode(nameIdx - previousName);
              previousName = nameIdx;
            }
          }

          result += next;
        }

        return result;
      };

      SourceMapGenerator.prototype._generateSourcesContent = function SourceMapGenerator_generateSourcesContent(
        aSources,
        aSourceRoot
      ) {
        return aSources.map(function (source) {
          if (!this._sourcesContents) {
            return null;
          }
          if (aSourceRoot != null) {
            source = util.relative(aSourceRoot, source);
          }
          var key = util.toSetString(source);
          return Object.prototype.hasOwnProperty.call(this._sourcesContents, key)
            ? this._sourcesContents[key]
            : null;
        }, this);
      };

      /**
       * Externalize the source map.
       */
      SourceMapGenerator.prototype.toJSON = function SourceMapGenerator_toJSON() {
        var map = {
          version: this._version,
          sources: this._sources.toArray(),
          names: this._names.toArray(),
          mappings: this._serializeMappings(),
        };
        if (this._file != null) {
          map.file = this._file;
        }
        if (this._sourceRoot != null) {
          map.sourceRoot = this._sourceRoot;
        }
        if (this._sourcesContents) {
          map.sourcesContent = this._generateSourcesContent(map.sources, map.sourceRoot);
        }

        return map;
      };

      /**
       * Render the source map being generated to a string.
       */
      SourceMapGenerator.prototype.toString = function SourceMapGenerator_toString() {
        return JSON.stringify(this.toJSON());
      };

      exports.SourceMapGenerator = SourceMapGenerator;

      /***/
    },
    /* 279 */
    /***/ function (module, exports, __webpack_require__) {
      /*
       * Copyright 2009-2011 Mozilla Foundation and contributors
       * Licensed under the New BSD license. See LICENSE.txt or:
       * http://opensource.org/licenses/BSD-3-Clause
       */
      exports.SourceMapGenerator = __webpack_require__(278).SourceMapGenerator;
      exports.SourceMapConsumer = __webpack_require__(655).SourceMapConsumer;
      exports.SourceNode = __webpack_require__(656).SourceNode;

      /***/
    },
    /* 280 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';

      module.exports = __webpack_require__(674);

      /***/
    },
    /* 281 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';
      /**
       * Copyright 2013-present, Facebook, Inc.
       * All rights reserved.
       *
       * This source code is licensed under the BSD-style license found in the
       * LICENSE file in the root directory of this source tree. An additional grant
       * of patent rights can be found in the PATENTS file in the same directory.
       *
       */

      /**
       * CSS properties which accept numbers but are not in units of "px".
       */

      var isUnitlessNumber = {
        animationIterationCount: true,
        borderImageOutset: true,
        borderImageSlice: true,
        borderImageWidth: true,
        boxFlex: true,
        boxFlexGroup: true,
        boxOrdinalGroup: true,
        columnCount: true,
        flex: true,
        flexGrow: true,
        flexPositive: true,
        flexShrink: true,
        flexNegative: true,
        flexOrder: true,
        gridRow: true,
        gridColumn: true,
        fontWeight: true,
        lineClamp: true,
        lineHeight: true,
        opacity: true,
        order: true,
        orphans: true,
        tabSize: true,
        widows: true,
        zIndex: true,
        zoom: true,

        // SVG-related properties
        fillOpacity: true,
        floodOpacity: true,
        stopOpacity: true,
        strokeDasharray: true,
        strokeDashoffset: true,
        strokeMiterlimit: true,
        strokeOpacity: true,
        strokeWidth: true,
      };

      /**
       * @param {string} prefix vendor-specific prefix, eg: Webkit
       * @param {string} key style name, eg: transitionDuration
       * @return {string} style name prefixed with `prefix`, properly camelCased, eg:
       * WebkitTransitionDuration
       */
      function prefixKey(prefix, key) {
        return prefix + key.charAt(0).toUpperCase() + key.substring(1);
      }

      /**
       * Support style names that may come passed in prefixed by adding permutations
       * of vendor prefixes.
       */
      var prefixes = ['Webkit', 'ms', 'Moz', 'O'];

      // Using Object.keys here, or else the vanilla for-in loop makes IE8 go into an
      // infinite loop, because it iterates over the newly added props too.
      Object.keys(isUnitlessNumber).forEach(function (prop) {
        prefixes.forEach(function (prefix) {
          isUnitlessNumber[prefixKey(prefix, prop)] = isUnitlessNumber[prop];
        });
      });

      /**
       * Most style properties can be unset by doing .style[prop] = '' but IE8
       * doesn't like doing that with shorthand properties so for the properties that
       * IE8 breaks on, which are listed here, we instead unset each of the
       * individual properties. See http://bugs.jquery.com/ticket/12385.
       * The 4-value 'clock' properties like margin, padding, border-width seem to
       * behave without any problems. Curiously, list-style works too without any
       * special prodding.
       */
      var shorthandPropertyExpansions = {
        background: {
          backgroundAttachment: true,
          backgroundColor: true,
          backgroundImage: true,
          backgroundPositionX: true,
          backgroundPositionY: true,
          backgroundRepeat: true,
        },
        backgroundPosition: {
          backgroundPositionX: true,
          backgroundPositionY: true,
        },
        border: {
          borderWidth: true,
          borderStyle: true,
          borderColor: true,
        },
        borderBottom: {
          borderBottomWidth: true,
          borderBottomStyle: true,
          borderBottomColor: true,
        },
        borderLeft: {
          borderLeftWidth: true,
          borderLeftStyle: true,
          borderLeftColor: true,
        },
        borderRight: {
          borderRightWidth: true,
          borderRightStyle: true,
          borderRightColor: true,
        },
        borderTop: {
          borderTopWidth: true,
          borderTopStyle: true,
          borderTopColor: true,
        },
        font: {
          fontStyle: true,
          fontVariant: true,
          fontWeight: true,
          fontSize: true,
          lineHeight: true,
          fontFamily: true,
        },
        outline: {
          outlineWidth: true,
          outlineStyle: true,
          outlineColor: true,
        },
      };

      var CSSProperty = {
        isUnitlessNumber: isUnitlessNumber,
        shorthandPropertyExpansions: shorthandPropertyExpansions,
      };

      module.exports = CSSProperty;

      /***/
    },
    /* 282 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';
      /* WEBPACK VAR INJECTION */ (function (process) {
        /**
         * Copyright 2013-present, Facebook, Inc.
         * All rights reserved.
         *
         * This source code is licensed under the BSD-style license found in the
         * LICENSE file in the root directory of this source tree. An additional grant
         * of patent rights can be found in the PATENTS file in the same directory.
         *
         *
         */

        var _prodInvariant = __webpack_require__(8);

        function _classCallCheck(instance, Constructor) {
          if (!(instance instanceof Constructor)) {
            throw new TypeError('Cannot call a class as a function');
          }
        }

        var PooledClass = __webpack_require__(68);

        var invariant = __webpack_require__(2);

        /**
         * A specialized pseudo-event module to help keep track of components waiting to
         * be notified when their DOM representations are available for use.
         *
         * This implements `PooledClass`, so you should never need to instantiate this.
         * Instead, use `CallbackQueue.getPooled()`.
         *
         * @class ReactMountReady
         * @implements PooledClass
         * @internal
         */

        var CallbackQueue = (function () {
          function CallbackQueue(arg) {
            _classCallCheck(this, CallbackQueue);

            this._callbacks = null;
            this._contexts = null;
            this._arg = arg;
          }

          /**
           * Enqueues a callback to be invoked when `notifyAll` is invoked.
           *
           * @param {function} callback Invoked when `notifyAll` is invoked.
           * @param {?object} context Context to call `callback` with.
           * @internal
           */

          CallbackQueue.prototype.enqueue = function enqueue(callback, context) {
            this._callbacks = this._callbacks || [];
            this._callbacks.push(callback);
            this._contexts = this._contexts || [];
            this._contexts.push(context);
          };

          /**
           * Invokes all enqueued callbacks and clears the queue. This is invoked after
           * the DOM representation of a component has been created or updated.
           *
           * @internal
           */

          CallbackQueue.prototype.notifyAll = function notifyAll() {
            var callbacks = this._callbacks;
            var contexts = this._contexts;
            var arg = this._arg;
            if (callbacks && contexts) {
              !(callbacks.length === contexts.length)
                ? process.env.NODE_ENV !== 'production'
                  ? invariant(false, 'Mismatched list of contexts in callback queue')
                  : _prodInvariant('24')
                : void 0;
              this._callbacks = null;
              this._contexts = null;
              for (var i = 0; i < callbacks.length; i++) {
                callbacks[i].call(contexts[i], arg);
              }
              callbacks.length = 0;
              contexts.length = 0;
            }
          };

          CallbackQueue.prototype.checkpoint = function checkpoint() {
            return this._callbacks ? this._callbacks.length : 0;
          };

          CallbackQueue.prototype.rollback = function rollback(len) {
            if (this._callbacks && this._contexts) {
              this._callbacks.length = len;
              this._contexts.length = len;
            }
          };

          /**
           * Resets the internal queue.
           *
           * @internal
           */

          CallbackQueue.prototype.reset = function reset() {
            this._callbacks = null;
            this._contexts = null;
          };

          /**
           * `PooledClass` looks for this.
           */

          CallbackQueue.prototype.destructor = function destructor() {
            this.reset();
          };

          return CallbackQueue;
        })();

        module.exports = PooledClass.addPoolingTo(CallbackQueue);
        /* WEBPACK VAR INJECTION */
      }.call(exports, __webpack_require__(1)));

      /***/
    },
    /* 283 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';
      /* WEBPACK VAR INJECTION */ (function (process) {
        /**
         * Copyright 2013-present, Facebook, Inc.
         * All rights reserved.
         *
         * This source code is licensed under the BSD-style license found in the
         * LICENSE file in the root directory of this source tree. An additional grant
         * of patent rights can be found in the PATENTS file in the same directory.
         *
         */

        var DOMProperty = __webpack_require__(53);
        var ReactDOMComponentTree = __webpack_require__(15);
        var ReactInstrumentation = __webpack_require__(32);

        var quoteAttributeValueForBrowser = __webpack_require__(730);
        var warning = __webpack_require__(3);

        var VALID_ATTRIBUTE_NAME_REGEX = new RegExp(
          '^[' +
            DOMProperty.ATTRIBUTE_NAME_START_CHAR +
            '][' +
            DOMProperty.ATTRIBUTE_NAME_CHAR +
            ']*$'
        );
        var illegalAttributeNameCache = {};
        var validatedAttributeNameCache = {};

        function isAttributeNameSafe(attributeName) {
          if (validatedAttributeNameCache.hasOwnProperty(attributeName)) {
            return true;
          }
          if (illegalAttributeNameCache.hasOwnProperty(attributeName)) {
            return false;
          }
          if (VALID_ATTRIBUTE_NAME_REGEX.test(attributeName)) {
            validatedAttributeNameCache[attributeName] = true;
            return true;
          }
          illegalAttributeNameCache[attributeName] = true;
          process.env.NODE_ENV !== 'production'
            ? warning(false, 'Invalid attribute name: `%s`', attributeName)
            : void 0;
          return false;
        }

        function shouldIgnoreValue(propertyInfo, value) {
          return (
            value == null ||
            (propertyInfo.hasBooleanValue && !value) ||
            (propertyInfo.hasNumericValue && isNaN(value)) ||
            (propertyInfo.hasPositiveNumericValue && value < 1) ||
            (propertyInfo.hasOverloadedBooleanValue && value === false)
          );
        }

        /**
         * Operations for dealing with DOM properties.
         */
        var DOMPropertyOperations = {
          /**
           * Creates markup for the ID property.
           *
           * @param {string} id Unescaped ID.
           * @return {string} Markup string.
           */
          createMarkupForID: function (id) {
            return DOMProperty.ID_ATTRIBUTE_NAME + '=' + quoteAttributeValueForBrowser(id);
          },

          setAttributeForID: function (node, id) {
            node.setAttribute(DOMProperty.ID_ATTRIBUTE_NAME, id);
          },

          createMarkupForRoot: function () {
            return DOMProperty.ROOT_ATTRIBUTE_NAME + '=""';
          },

          setAttributeForRoot: function (node) {
            node.setAttribute(DOMProperty.ROOT_ATTRIBUTE_NAME, '');
          },

          /**
           * Creates markup for a property.
           *
           * @param {string} name
           * @param {*} value
           * @return {?string} Markup string, or null if the property was invalid.
           */
          createMarkupForProperty: function (name, value) {
            var propertyInfo = DOMProperty.properties.hasOwnProperty(name)
              ? DOMProperty.properties[name]
              : null;
            if (propertyInfo) {
              if (shouldIgnoreValue(propertyInfo, value)) {
                return '';
              }
              var attributeName = propertyInfo.attributeName;
              if (
                propertyInfo.hasBooleanValue ||
                (propertyInfo.hasOverloadedBooleanValue && value === true)
              ) {
                return attributeName + '=""';
              }
              return attributeName + '=' + quoteAttributeValueForBrowser(value);
            } else if (DOMProperty.isCustomAttribute(name)) {
              if (value == null) {
                return '';
              }
              return name + '=' + quoteAttributeValueForBrowser(value);
            }
            return null;
          },

          /**
           * Creates markup for a custom property.
           *
           * @param {string} name
           * @param {*} value
           * @return {string} Markup string, or empty string if the property was invalid.
           */
          createMarkupForCustomAttribute: function (name, value) {
            if (!isAttributeNameSafe(name) || value == null) {
              return '';
            }
            return name + '=' + quoteAttributeValueForBrowser(value);
          },

          /**
           * Sets the value for a property on a node.
           *
           * @param {DOMElement} node
           * @param {string} name
           * @param {*} value
           */
          setValueForProperty: function (node, name, value) {
            var propertyInfo = DOMProperty.properties.hasOwnProperty(name)
              ? DOMProperty.properties[name]
              : null;
            if (propertyInfo) {
              var mutationMethod = propertyInfo.mutationMethod;
              if (mutationMethod) {
                mutationMethod(node, value);
              } else if (shouldIgnoreValue(propertyInfo, value)) {
                this.deleteValueForProperty(node, name);
                return;
              } else if (propertyInfo.mustUseProperty) {
                // Contrary to `setAttribute`, object properties are properly
                // `toString`ed by IE8/9.
                node[propertyInfo.propertyName] = value;
              } else {
                var attributeName = propertyInfo.attributeName;
                var namespace = propertyInfo.attributeNamespace;
                // `setAttribute` with objects becomes only `[object]` in IE8/9,
                // ('' + value) makes it output the correct toString()-value.
                if (namespace) {
                  node.setAttributeNS(namespace, attributeName, '' + value);
                } else if (
                  propertyInfo.hasBooleanValue ||
                  (propertyInfo.hasOverloadedBooleanValue && value === true)
                ) {
                  node.setAttribute(attributeName, '');
                } else {
                  node.setAttribute(attributeName, '' + value);
                }
              }
            } else if (DOMProperty.isCustomAttribute(name)) {
              DOMPropertyOperations.setValueForAttribute(node, name, value);
              return;
            }

            if (process.env.NODE_ENV !== 'production') {
              var payload = {};
              payload[name] = value;
              ReactInstrumentation.debugTool.onHostOperation({
                instanceID: ReactDOMComponentTree.getInstanceFromNode(node)._debugID,
                type: 'update attribute',
                payload: payload,
              });
            }
          },

          setValueForAttribute: function (node, name, value) {
            if (!isAttributeNameSafe(name)) {
              return;
            }
            if (value == null) {
              node.removeAttribute(name);
            } else {
              node.setAttribute(name, '' + value);
            }

            if (process.env.NODE_ENV !== 'production') {
              var payload = {};
              payload[name] = value;
              ReactInstrumentation.debugTool.onHostOperation({
                instanceID: ReactDOMComponentTree.getInstanceFromNode(node)._debugID,
                type: 'update attribute',
                payload: payload,
              });
            }
          },

          /**
           * Deletes an attributes from a node.
           *
           * @param {DOMElement} node
           * @param {string} name
           */
          deleteValueForAttribute: function (node, name) {
            node.removeAttribute(name);
            if (process.env.NODE_ENV !== 'production') {
              ReactInstrumentation.debugTool.onHostOperation({
                instanceID: ReactDOMComponentTree.getInstanceFromNode(node)._debugID,
                type: 'remove attribute',
                payload: name,
              });
            }
          },

          /**
           * Deletes the value for a property on a node.
           *
           * @param {DOMElement} node
           * @param {string} name
           */
          deleteValueForProperty: function (node, name) {
            var propertyInfo = DOMProperty.properties.hasOwnProperty(name)
              ? DOMProperty.properties[name]
              : null;
            if (propertyInfo) {
              var mutationMethod = propertyInfo.mutationMethod;
              if (mutationMethod) {
                mutationMethod(node, undefined);
              } else if (propertyInfo.mustUseProperty) {
                var propName = propertyInfo.propertyName;
                if (propertyInfo.hasBooleanValue) {
                  node[propName] = false;
                } else {
                  node[propName] = '';
                }
              } else {
                node.removeAttribute(propertyInfo.attributeName);
              }
            } else if (DOMProperty.isCustomAttribute(name)) {
              node.removeAttribute(name);
            }

            if (process.env.NODE_ENV !== 'production') {
              ReactInstrumentation.debugTool.onHostOperation({
                instanceID: ReactDOMComponentTree.getInstanceFromNode(node)._debugID,
                type: 'remove attribute',
                payload: name,
              });
            }
          },
        };

        module.exports = DOMPropertyOperations;
        /* WEBPACK VAR INJECTION */
      }.call(exports, __webpack_require__(1)));

      /***/
    },
    /* 284 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';
      /**
       * Copyright 2015-present, Facebook, Inc.
       * All rights reserved.
       *
       * This source code is licensed under the BSD-style license found in the
       * LICENSE file in the root directory of this source tree. An additional grant
       * of patent rights can be found in the PATENTS file in the same directory.
       *
       */

      var ReactDOMComponentFlags = {
        hasCachedChildNodes: 1 << 0,
      };

      module.exports = ReactDOMComponentFlags;

      /***/
    },
    /* 285 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';
      /* WEBPACK VAR INJECTION */ (function (process) {
        /**
         * Copyright 2013-present, Facebook, Inc.
         * All rights reserved.
         *
         * This source code is licensed under the BSD-style license found in the
         * LICENSE file in the root directory of this source tree. An additional grant
         * of patent rights can be found in the PATENTS file in the same directory.
         *
         */

        var _assign = __webpack_require__(12);

        var LinkedValueUtils = __webpack_require__(189);
        var ReactDOMComponentTree = __webpack_require__(15);
        var ReactUpdates = __webpack_require__(41);

        var warning = __webpack_require__(3);

        var didWarnValueLink = false;
        var didWarnValueDefaultValue = false;

        function updateOptionsIfPendingUpdateAndMounted() {
          if (this._rootNodeID && this._wrapperState.pendingUpdate) {
            this._wrapperState.pendingUpdate = false;

            var props = this._currentElement.props;
            var value = LinkedValueUtils.getValue(props);

            if (value != null) {
              updateOptions(this, Boolean(props.multiple), value);
            }
          }
        }

        function getDeclarationErrorAddendum(owner) {
          if (owner) {
            var name = owner.getName();
            if (name) {
              return ' Check the render method of `' + name + '`.';
            }
          }
          return '';
        }

        var valuePropNames = ['value', 'defaultValue'];

        /**
         * Validation function for `value` and `defaultValue`.
         * @private
         */
        function checkSelectPropTypes(inst, props) {
          var owner = inst._currentElement._owner;
          LinkedValueUtils.checkPropTypes('select', props, owner);

          if (props.valueLink !== undefined && !didWarnValueLink) {
            process.env.NODE_ENV !== 'production'
              ? warning(
                  false,
                  '`valueLink` prop on `select` is deprecated; set `value` and `onChange` instead.'
                )
              : void 0;
            didWarnValueLink = true;
          }

          for (var i = 0; i < valuePropNames.length; i++) {
            var propName = valuePropNames[i];
            if (props[propName] == null) {
              continue;
            }
            var isArray = Array.isArray(props[propName]);
            if (props.multiple && !isArray) {
              process.env.NODE_ENV !== 'production'
                ? warning(
                    false,
                    'The `%s` prop supplied to <select> must be an array if ' +
                      '`multiple` is true.%s',
                    propName,
                    getDeclarationErrorAddendum(owner)
                  )
                : void 0;
            } else if (!props.multiple && isArray) {
              process.env.NODE_ENV !== 'production'
                ? warning(
                    false,
                    'The `%s` prop supplied to <select> must be a scalar ' +
                      'value if `multiple` is false.%s',
                    propName,
                    getDeclarationErrorAddendum(owner)
                  )
                : void 0;
            }
          }
        }

        /**
         * @param {ReactDOMComponent} inst
         * @param {boolean} multiple
         * @param {*} propValue A stringable (with `multiple`, a list of stringables).
         * @private
         */
        function updateOptions(inst, multiple, propValue) {
          var selectedValue, i;
          var options = ReactDOMComponentTree.getNodeFromInstance(inst).options;

          if (multiple) {
            selectedValue = {};
            for (i = 0; i < propValue.length; i++) {
              selectedValue['' + propValue[i]] = true;
            }
            for (i = 0; i < options.length; i++) {
              var selected = selectedValue.hasOwnProperty(options[i].value);
              if (options[i].selected !== selected) {
                options[i].selected = selected;
              }
            }
          } else {
            // Do not set `select.value` as exact behavior isn't consistent across all
            // browsers for all cases.
            selectedValue = '' + propValue;
            for (i = 0; i < options.length; i++) {
              if (options[i].value === selectedValue) {
                options[i].selected = true;
                return;
              }
            }
            if (options.length) {
              options[0].selected = true;
            }
          }
        }

        /**
         * Implements a <select> host component that allows optionally setting the
         * props `value` and `defaultValue`. If `multiple` is false, the prop must be a
         * stringable. If `multiple` is true, the prop must be an array of stringables.
         *
         * If `value` is not supplied (or null/undefined), user actions that change the
         * selected option will trigger updates to the rendered options.
         *
         * If it is supplied (and not null/undefined), the rendered options will not
         * update in response to user actions. Instead, the `value` prop must change in
         * order for the rendered options to update.
         *
         * If `defaultValue` is provided, any options with the supplied values will be
         * selected.
         */
        var ReactDOMSelect = {
          getHostProps: function (inst, props) {
            return _assign({}, props, {
              onChange: inst._wrapperState.onChange,
              value: undefined,
            });
          },

          mountWrapper: function (inst, props) {
            if (process.env.NODE_ENV !== 'production') {
              checkSelectPropTypes(inst, props);
            }

            var value = LinkedValueUtils.getValue(props);
            inst._wrapperState = {
              pendingUpdate: false,
              initialValue: value != null ? value : props.defaultValue,
              listeners: null,
              onChange: _handleChange.bind(inst),
              wasMultiple: Boolean(props.multiple),
            };

            if (
              props.value !== undefined &&
              props.defaultValue !== undefined &&
              !didWarnValueDefaultValue
            ) {
              process.env.NODE_ENV !== 'production'
                ? warning(
                    false,
                    'Select elements must be either controlled or uncontrolled ' +
                      '(specify either the value prop, or the defaultValue prop, but not ' +
                      'both). Decide between using a controlled or uncontrolled select ' +
                      'element and remove one of these props. More info: ' +
                      'https://fb.me/react-controlled-components'
                  )
                : void 0;
              didWarnValueDefaultValue = true;
            }
          },

          getSelectValueContext: function (inst) {
            // ReactDOMOption looks at this initial value so the initial generated
            // markup has correct `selected` attributes
            return inst._wrapperState.initialValue;
          },

          postUpdateWrapper: function (inst) {
            var props = inst._currentElement.props;

            // After the initial mount, we control selected-ness manually so don't pass
            // this value down
            inst._wrapperState.initialValue = undefined;

            var wasMultiple = inst._wrapperState.wasMultiple;
            inst._wrapperState.wasMultiple = Boolean(props.multiple);

            var value = LinkedValueUtils.getValue(props);
            if (value != null) {
              inst._wrapperState.pendingUpdate = false;
              updateOptions(inst, Boolean(props.multiple), value);
            } else if (wasMultiple !== Boolean(props.multiple)) {
              // For simplicity, reapply `defaultValue` if `multiple` is toggled.
              if (props.defaultValue != null) {
                updateOptions(inst, Boolean(props.multiple), props.defaultValue);
              } else {
                // Revert the select back to its default unselected state.
                updateOptions(inst, Boolean(props.multiple), props.multiple ? [] : '');
              }
            }
          },
        };

        function _handleChange(event) {
          var props = this._currentElement.props;
          var returnValue = LinkedValueUtils.executeOnChange(props, event);

          if (this._rootNodeID) {
            this._wrapperState.pendingUpdate = true;
          }
          ReactUpdates.asap(updateOptionsIfPendingUpdateAndMounted, this);
          return returnValue;
        }

        module.exports = ReactDOMSelect;
        /* WEBPACK VAR INJECTION */
      }.call(exports, __webpack_require__(1)));

      /***/
    },
    /* 286 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';
      /**
       * Copyright 2014-present, Facebook, Inc.
       * All rights reserved.
       *
       * This source code is licensed under the BSD-style license found in the
       * LICENSE file in the root directory of this source tree. An additional grant
       * of patent rights can be found in the PATENTS file in the same directory.
       *
       */

      var emptyComponentFactory;

      var ReactEmptyComponentInjection = {
        injectEmptyComponentFactory: function (factory) {
          emptyComponentFactory = factory;
        },
      };

      var ReactEmptyComponent = {
        create: function (instantiate) {
          return emptyComponentFactory(instantiate);
        },
      };

      ReactEmptyComponent.injection = ReactEmptyComponentInjection;

      module.exports = ReactEmptyComponent;

      /***/
    },
    /* 287 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';
      /**
       * Copyright 2013-present, Facebook, Inc.
       * All rights reserved.
       *
       * This source code is licensed under the BSD-style license found in the
       * LICENSE file in the root directory of this source tree. An additional grant
       * of patent rights can be found in the PATENTS file in the same directory.
       *
       *
       */

      var ReactFeatureFlags = {
        // When true, call console.time() before and .timeEnd() after each top-level
        // render (both initial renders and updates). Useful when looking at prod-mode
        // timeline profiles in Chrome, for example.
        logTopLevelRenders: false,
      };

      module.exports = ReactFeatureFlags;

      /***/
    },
    /* 288 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';
      /* WEBPACK VAR INJECTION */ (function (process) {
        /**
         * Copyright 2014-present, Facebook, Inc.
         * All rights reserved.
         *
         * This source code is licensed under the BSD-style license found in the
         * LICENSE file in the root directory of this source tree. An additional grant
         * of patent rights can be found in the PATENTS file in the same directory.
         *
         */

        var _prodInvariant = __webpack_require__(8);

        var invariant = __webpack_require__(2);

        var genericComponentClass = null;
        var textComponentClass = null;

        var ReactHostComponentInjection = {
          // This accepts a class that receives the tag string. This is a catch all
          // that can render any kind of tag.
          injectGenericComponentClass: function (componentClass) {
            genericComponentClass = componentClass;
          },
          // This accepts a text component class that takes the text string to be
          // rendered as props.
          injectTextComponentClass: function (componentClass) {
            textComponentClass = componentClass;
          },
        };

        /**
         * Get a host internal component class for a specific tag.
         *
         * @param {ReactElement} element The element to create.
         * @return {function} The internal class constructor function.
         */
        function createInternalComponent(element) {
          !genericComponentClass
            ? process.env.NODE_ENV !== 'production'
              ? invariant(false, 'There is no registered component for the tag %s', element.type)
              : _prodInvariant('111', element.type)
            : void 0;
          return new genericComponentClass(element);
        }

        /**
         * @param {ReactText} text
         * @return {ReactComponent}
         */
        function createInstanceForText(text) {
          return new textComponentClass(text);
        }

        /**
         * @param {ReactComponent} component
         * @return {boolean}
         */
        function isTextComponent(component) {
          return component instanceof textComponentClass;
        }

        var ReactHostComponent = {
          createInternalComponent: createInternalComponent,
          createInstanceForText: createInstanceForText,
          isTextComponent: isTextComponent,
          injection: ReactHostComponentInjection,
        };

        module.exports = ReactHostComponent;
        /* WEBPACK VAR INJECTION */
      }.call(exports, __webpack_require__(1)));

      /***/
    },
    /* 289 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';
      /**
       * Copyright 2013-present, Facebook, Inc.
       * All rights reserved.
       *
       * This source code is licensed under the BSD-style license found in the
       * LICENSE file in the root directory of this source tree. An additional grant
       * of patent rights can be found in the PATENTS file in the same directory.
       *
       */

      var ReactDOMSelection = __webpack_require__(684);

      var containsNode = __webpack_require__(609);
      var focusNode = __webpack_require__(261);
      var getActiveElement = __webpack_require__(262);

      function isInDocument(node) {
        return containsNode(document.documentElement, node);
      }

      /**
       * @ReactInputSelection: React input selection module. Based on Selection.js,
       * but modified to be suitable for react and has a couple of bug fixes (doesn't
       * assume buttons have range selections allowed).
       * Input selection module for React.
       */
      var ReactInputSelection = {
        hasSelectionCapabilities: function (elem) {
          var nodeName = elem && elem.nodeName && elem.nodeName.toLowerCase();
          return (
            nodeName &&
            ((nodeName === 'input' && elem.type === 'text') ||
              nodeName === 'textarea' ||
              elem.contentEditable === 'true')
          );
        },

        getSelectionInformation: function () {
          var focusedElem = getActiveElement();
          return {
            focusedElem: focusedElem,
            selectionRange: ReactInputSelection.hasSelectionCapabilities(focusedElem)
              ? ReactInputSelection.getSelection(focusedElem)
              : null,
          };
        },

        /**
         * @restoreSelection: If any selection information was potentially lost,
         * restore it. This is useful when performing operations that could remove dom
         * nodes and place them back in, resulting in focus being lost.
         */
        restoreSelection: function (priorSelectionInformation) {
          var curFocusedElem = getActiveElement();
          var priorFocusedElem = priorSelectionInformation.focusedElem;
          var priorSelectionRange = priorSelectionInformation.selectionRange;
          if (curFocusedElem !== priorFocusedElem && isInDocument(priorFocusedElem)) {
            if (ReactInputSelection.hasSelectionCapabilities(priorFocusedElem)) {
              ReactInputSelection.setSelection(priorFocusedElem, priorSelectionRange);
            }
            focusNode(priorFocusedElem);
          }
        },

        /**
         * @getSelection: Gets the selection bounds of a focused textarea, input or
         * contentEditable node.
         * -@input: Look up selection bounds of this input
         * -@return {start: selectionStart, end: selectionEnd}
         */
        getSelection: function (input) {
          var selection;

          if ('selectionStart' in input) {
            // Modern browser with input or textarea.
            selection = {
              start: input.selectionStart,
              end: input.selectionEnd,
            };
          } else if (
            document.selection &&
            input.nodeName &&
            input.nodeName.toLowerCase() === 'input'
          ) {
            // IE8 input.
            var range = document.selection.createRange();
            // There can only be one selection per document in IE, so it must
            // be in our element.
            if (range.parentElement() === input) {
              selection = {
                start: -range.moveStart('character', -input.value.length),
                end: -range.moveEnd('character', -input.value.length),
              };
            }
          } else {
            // Content editable or old IE textarea.
            selection = ReactDOMSelection.getOffsets(input);
          }

          return selection || { start: 0, end: 0 };
        },

        /**
         * @setSelection: Sets the selection bounds of a textarea or input and focuses
         * the input.
         * -@input     Set selection bounds of this input or textarea
         * -@offsets   Object of same form that is returned from get*
         */
        setSelection: function (input, offsets) {
          var start = offsets.start;
          var end = offsets.end;
          if (end === undefined) {
            end = start;
          }

          if ('selectionStart' in input) {
            input.selectionStart = start;
            input.selectionEnd = Math.min(end, input.value.length);
          } else if (
            document.selection &&
            input.nodeName &&
            input.nodeName.toLowerCase() === 'input'
          ) {
            var range = input.createTextRange();
            range.collapse(true);
            range.moveStart('character', start);
            range.moveEnd('character', end - start);
            range.select();
          } else {
            ReactDOMSelection.setOffsets(input, offsets);
          }
        },
      };

      module.exports = ReactInputSelection;

      /***/
    },
    /* 290 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';
      /* WEBPACK VAR INJECTION */ (function (process) {
        /**
         * Copyright 2013-present, Facebook, Inc.
         * All rights reserved.
         *
         * This source code is licensed under the BSD-style license found in the
         * LICENSE file in the root directory of this source tree. An additional grant
         * of patent rights can be found in the PATENTS file in the same directory.
         *
         */

        var _prodInvariant = __webpack_require__(8);

        var DOMLazyTree = __webpack_require__(83);
        var DOMProperty = __webpack_require__(53);
        var React = __webpack_require__(85);
        var ReactBrowserEventEmitter = __webpack_require__(121);
        var ReactCurrentOwner = __webpack_require__(42);
        var ReactDOMComponentTree = __webpack_require__(15);
        var ReactDOMContainerInfo = __webpack_require__(676);
        var ReactDOMFeatureFlags = __webpack_require__(678);
        var ReactFeatureFlags = __webpack_require__(287);
        var ReactInstanceMap = __webpack_require__(99);
        var ReactInstrumentation = __webpack_require__(32);
        var ReactMarkupChecksum = __webpack_require__(698);
        var ReactReconciler = __webpack_require__(84);
        var ReactUpdateQueue = __webpack_require__(192);
        var ReactUpdates = __webpack_require__(41);

        var emptyObject = __webpack_require__(94);
        var instantiateReactComponent = __webpack_require__(298);
        var invariant = __webpack_require__(2);
        var setInnerHTML = __webpack_require__(125);
        var shouldUpdateReactComponent = __webpack_require__(198);
        var warning = __webpack_require__(3);

        var ATTR_NAME = DOMProperty.ID_ATTRIBUTE_NAME;
        var ROOT_ATTR_NAME = DOMProperty.ROOT_ATTRIBUTE_NAME;

        var ELEMENT_NODE_TYPE = 1;
        var DOC_NODE_TYPE = 9;
        var DOCUMENT_FRAGMENT_NODE_TYPE = 11;

        var instancesByReactRootID = {};

        /**
         * Finds the index of the first character
         * that's not common between the two given strings.
         *
         * @return {number} the index of the character where the strings diverge
         */
        function firstDifferenceIndex(string1, string2) {
          var minLen = Math.min(string1.length, string2.length);
          for (var i = 0; i < minLen; i++) {
            if (string1.charAt(i) !== string2.charAt(i)) {
              return i;
            }
          }
          return string1.length === string2.length ? -1 : minLen;
        }

        /**
         * @param {DOMElement|DOMDocument} container DOM element that may contain
         * a React component
         * @return {?*} DOM element that may have the reactRoot ID, or null.
         */
        function getReactRootElementInContainer(container) {
          if (!container) {
            return null;
          }

          if (container.nodeType === DOC_NODE_TYPE) {
            return container.documentElement;
          } else {
            return container.firstChild;
          }
        }

        function internalGetID(node) {
          // If node is something like a window, document, or text node, none of
          // which support attributes or a .getAttribute method, gracefully return
          // the empty string, as if the attribute were missing.
          return (node.getAttribute && node.getAttribute(ATTR_NAME)) || '';
        }

        /**
         * Mounts this component and inserts it into the DOM.
         *
         * @param {ReactComponent} componentInstance The instance to mount.
         * @param {DOMElement} container DOM element to mount into.
         * @param {ReactReconcileTransaction} transaction
         * @param {boolean} shouldReuseMarkup If true, do not insert markup
         */
        function mountComponentIntoNode(
          wrapperInstance,
          container,
          transaction,
          shouldReuseMarkup,
          context
        ) {
          var markerName;
          if (ReactFeatureFlags.logTopLevelRenders) {
            var wrappedElement = wrapperInstance._currentElement.props.child;
            var type = wrappedElement.type;
            markerName =
              'React mount: ' + (typeof type === 'string' ? type : type.displayName || type.name);
            console.time(markerName);
          }

          var markup = ReactReconciler.mountComponent(
            wrapperInstance,
            transaction,
            null,
            ReactDOMContainerInfo(wrapperInstance, container),
            context,
            0 /* parentDebugID */
          );

          if (markerName) {
            console.timeEnd(markerName);
          }

          wrapperInstance._renderedComponent._topLevelWrapper = wrapperInstance;
          ReactMount._mountImageIntoNode(
            markup,
            container,
            wrapperInstance,
            shouldReuseMarkup,
            transaction
          );
        }

        /**
         * Batched mount.
         *
         * @param {ReactComponent} componentInstance The instance to mount.
         * @param {DOMElement} container DOM element to mount into.
         * @param {boolean} shouldReuseMarkup If true, do not insert markup
         */
        function batchedMountComponentIntoNode(
          componentInstance,
          container,
          shouldReuseMarkup,
          context
        ) {
          var transaction = ReactUpdates.ReactReconcileTransaction.getPooled(
            /* useCreateElement */
            !shouldReuseMarkup && ReactDOMFeatureFlags.useCreateElement
          );
          transaction.perform(
            mountComponentIntoNode,
            null,
            componentInstance,
            container,
            transaction,
            shouldReuseMarkup,
            context
          );
          ReactUpdates.ReactReconcileTransaction.release(transaction);
        }

        /**
         * Unmounts a component and removes it from the DOM.
         *
         * @param {ReactComponent} instance React component instance.
         * @param {DOMElement} container DOM element to unmount from.
         * @final
         * @internal
         * @see {ReactMount.unmountComponentAtNode}
         */
        function unmountComponentFromNode(instance, container, safely) {
          if (process.env.NODE_ENV !== 'production') {
            ReactInstrumentation.debugTool.onBeginFlush();
          }
          ReactReconciler.unmountComponent(instance, safely);
          if (process.env.NODE_ENV !== 'production') {
            ReactInstrumentation.debugTool.onEndFlush();
          }

          if (container.nodeType === DOC_NODE_TYPE) {
            container = container.documentElement;
          }

          // http://jsperf.com/emptying-a-node
          while (container.lastChild) {
            container.removeChild(container.lastChild);
          }
        }

        /**
         * True if the supplied DOM node has a direct React-rendered child that is
         * not a React root element. Useful for warning in `render`,
         * `unmountComponentAtNode`, etc.
         *
         * @param {?DOMElement} node The candidate DOM node.
         * @return {boolean} True if the DOM element contains a direct child that was
         * rendered by React but is not a root element.
         * @internal
         */
        function hasNonRootReactChild(container) {
          var rootEl = getReactRootElementInContainer(container);
          if (rootEl) {
            var inst = ReactDOMComponentTree.getInstanceFromNode(rootEl);
            return !!(inst && inst._hostParent);
          }
        }

        /**
         * True if the supplied DOM node is a React DOM element and
         * it has been rendered by another copy of React.
         *
         * @param {?DOMElement} node The candidate DOM node.
         * @return {boolean} True if the DOM has been rendered by another copy of React
         * @internal
         */
        function nodeIsRenderedByOtherInstance(container) {
          var rootEl = getReactRootElementInContainer(container);
          return !!(
            rootEl &&
            isReactNode(rootEl) &&
            !ReactDOMComponentTree.getInstanceFromNode(rootEl)
          );
        }

        /**
         * True if the supplied DOM node is a valid node element.
         *
         * @param {?DOMElement} node The candidate DOM node.
         * @return {boolean} True if the DOM is a valid DOM node.
         * @internal
         */
        function isValidContainer(node) {
          return !!(
            node &&
            (node.nodeType === ELEMENT_NODE_TYPE ||
              node.nodeType === DOC_NODE_TYPE ||
              node.nodeType === DOCUMENT_FRAGMENT_NODE_TYPE)
          );
        }

        /**
         * True if the supplied DOM node is a valid React node element.
         *
         * @param {?DOMElement} node The candidate DOM node.
         * @return {boolean} True if the DOM is a valid React DOM node.
         * @internal
         */
        function isReactNode(node) {
          return (
            isValidContainer(node) &&
            (node.hasAttribute(ROOT_ATTR_NAME) || node.hasAttribute(ATTR_NAME))
          );
        }

        function getHostRootInstanceInContainer(container) {
          var rootEl = getReactRootElementInContainer(container);
          var prevHostInstance = rootEl && ReactDOMComponentTree.getInstanceFromNode(rootEl);
          return prevHostInstance && !prevHostInstance._hostParent ? prevHostInstance : null;
        }

        function getTopLevelWrapperInContainer(container) {
          var root = getHostRootInstanceInContainer(container);
          return root ? root._hostContainerInfo._topLevelWrapper : null;
        }

        /**
         * Temporary (?) hack so that we can store all top-level pending updates on
         * composites instead of having to worry about different types of components
         * here.
         */
        var topLevelRootCounter = 1;
        var TopLevelWrapper = function () {
          this.rootID = topLevelRootCounter++;
        };
        TopLevelWrapper.prototype.isReactComponent = {};
        if (process.env.NODE_ENV !== 'production') {
          TopLevelWrapper.displayName = 'TopLevelWrapper';
        }
        TopLevelWrapper.prototype.render = function () {
          return this.props.child;
        };
        TopLevelWrapper.isReactTopLevelWrapper = true;

        /**
         * Mounting is the process of initializing a React component by creating its
         * representative DOM elements and inserting them into a supplied `container`.
         * Any prior content inside `container` is destroyed in the process.
         *
         *   ReactMount.render(
         *     component,
         *     document.getElementById('container')
         *   );
         *
         *   <div id="container">                   <-- Supplied `container`.
         *     <div data-reactid=".3">              <-- Rendered reactRoot of React
         *       // ...                                 component.
         *     </div>
         *   </div>
         *
         * Inside of `container`, the first element rendered is the "reactRoot".
         */
        var ReactMount = {
          TopLevelWrapper: TopLevelWrapper,

          /**
           * Used by devtools. The keys are not important.
           */
          _instancesByReactRootID: instancesByReactRootID,

          /**
           * This is a hook provided to support rendering React components while
           * ensuring that the apparent scroll position of its `container` does not
           * change.
           *
           * @param {DOMElement} container The `container` being rendered into.
           * @param {function} renderCallback This must be called once to do the render.
           */
          scrollMonitor: function (container, renderCallback) {
            renderCallback();
          },

          /**
           * Take a component that's already mounted into the DOM and replace its props
           * @param {ReactComponent} prevComponent component instance already in the DOM
           * @param {ReactElement} nextElement component instance to render
           * @param {DOMElement} container container to render into
           * @param {?function} callback function triggered on completion
           */
          _updateRootComponent: function (
            prevComponent,
            nextElement,
            nextContext,
            container,
            callback
          ) {
            ReactMount.scrollMonitor(container, function () {
              ReactUpdateQueue.enqueueElementInternal(prevComponent, nextElement, nextContext);
              if (callback) {
                ReactUpdateQueue.enqueueCallbackInternal(prevComponent, callback);
              }
            });

            return prevComponent;
          },

          /**
           * Render a new component into the DOM. Hooked by hooks!
           *
           * @param {ReactElement} nextElement element to render
           * @param {DOMElement} container container to render into
           * @param {boolean} shouldReuseMarkup if we should skip the markup insertion
           * @return {ReactComponent} nextComponent
           */
          _renderNewRootComponent: function (nextElement, container, shouldReuseMarkup, context) {
            // Various parts of our code (such as ReactCompositeComponent's
            // _renderValidatedComponent) assume that calls to render aren't nested;
            // verify that that's the case.
            process.env.NODE_ENV !== 'production'
              ? warning(
                  ReactCurrentOwner.current == null,
                  '_renderNewRootComponent(): Render methods should be a pure function ' +
                    'of props and state; triggering nested component updates from ' +
                    'render is not allowed. If necessary, trigger nested updates in ' +
                    'componentDidUpdate. Check the render method of %s.',
                  (ReactCurrentOwner.current && ReactCurrentOwner.current.getName()) ||
                    'ReactCompositeComponent'
                )
              : void 0;

            !isValidContainer(container)
              ? process.env.NODE_ENV !== 'production'
                ? invariant(
                    false,
                    '_registerComponent(...): Target container is not a DOM element.'
                  )
                : _prodInvariant('37')
              : void 0;

            ReactBrowserEventEmitter.ensureScrollValueMonitoring();
            var componentInstance = instantiateReactComponent(nextElement, false);

            // The initial render is synchronous but any updates that happen during
            // rendering, in componentWillMount or componentDidMount, will be batched
            // according to the current batching strategy.

            ReactUpdates.batchedUpdates(
              batchedMountComponentIntoNode,
              componentInstance,
              container,
              shouldReuseMarkup,
              context
            );

            var wrapperID = componentInstance._instance.rootID;
            instancesByReactRootID[wrapperID] = componentInstance;

            return componentInstance;
          },

          /**
           * Renders a React component into the DOM in the supplied `container`.
           *
           * If the React component was previously rendered into `container`, this will
           * perform an update on it and only mutate the DOM as necessary to reflect the
           * latest React component.
           *
           * @param {ReactComponent} parentComponent The conceptual parent of this render tree.
           * @param {ReactElement} nextElement Component element to render.
           * @param {DOMElement} container DOM element to render into.
           * @param {?function} callback function triggered on completion
           * @return {ReactComponent} Component instance rendered in `container`.
           */
          renderSubtreeIntoContainer: function (parentComponent, nextElement, container, callback) {
            !(parentComponent != null && ReactInstanceMap.has(parentComponent))
              ? process.env.NODE_ENV !== 'production'
                ? invariant(false, 'parentComponent must be a valid React Component')
                : _prodInvariant('38')
              : void 0;
            return ReactMount._renderSubtreeIntoContainer(
              parentComponent,
              nextElement,
              container,
              callback
            );
          },

          _renderSubtreeIntoContainer: function (
            parentComponent,
            nextElement,
            container,
            callback
          ) {
            ReactUpdateQueue.validateCallback(callback, 'ReactDOM.render');
            !React.isValidElement(nextElement)
              ? process.env.NODE_ENV !== 'production'
                ? invariant(
                    false,
                    'ReactDOM.render(): Invalid component element.%s',
                    typeof nextElement === 'string'
                      ? " Instead of passing a string like 'div', pass " +
                          "React.createElement('div') or <div />."
                      : typeof nextElement === 'function'
                      ? ' Instead of passing a class like Foo, pass ' +
                        'React.createElement(Foo) or <Foo />.'
                      : // Check if it quacks like an element
                      nextElement != null && nextElement.props !== undefined
                      ? ' This may be caused by unintentionally loading two independent ' +
                        'copies of React.'
                      : ''
                  )
                : _prodInvariant(
                    '39',
                    typeof nextElement === 'string'
                      ? " Instead of passing a string like 'div', pass " +
                          "React.createElement('div') or <div />."
                      : typeof nextElement === 'function'
                      ? ' Instead of passing a class like Foo, pass ' +
                        'React.createElement(Foo) or <Foo />.'
                      : nextElement != null && nextElement.props !== undefined
                      ? ' This may be caused by unintentionally loading two independent ' +
                        'copies of React.'
                      : ''
                  )
              : void 0;

            process.env.NODE_ENV !== 'production'
              ? warning(
                  !container || !container.tagName || container.tagName.toUpperCase() !== 'BODY',
                  'render(): Rendering components directly into document.body is ' +
                    'discouraged, since its children are often manipulated by third-party ' +
                    'scripts and browser extensions. This may lead to subtle ' +
                    'reconciliation issues. Try rendering into a container element created ' +
                    'for your app.'
                )
              : void 0;

            var nextWrappedElement = React.createElement(TopLevelWrapper, { child: nextElement });

            var nextContext;
            if (parentComponent) {
              var parentInst = ReactInstanceMap.get(parentComponent);
              nextContext = parentInst._processChildContext(parentInst._context);
            } else {
              nextContext = emptyObject;
            }

            var prevComponent = getTopLevelWrapperInContainer(container);

            if (prevComponent) {
              var prevWrappedElement = prevComponent._currentElement;
              var prevElement = prevWrappedElement.props.child;
              if (shouldUpdateReactComponent(prevElement, nextElement)) {
                var publicInst = prevComponent._renderedComponent.getPublicInstance();
                var updatedCallback =
                  callback &&
                  function () {
                    callback.call(publicInst);
                  };
                ReactMount._updateRootComponent(
                  prevComponent,
                  nextWrappedElement,
                  nextContext,
                  container,
                  updatedCallback
                );
                return publicInst;
              } else {
                ReactMount.unmountComponentAtNode(container);
              }
            }

            var reactRootElement = getReactRootElementInContainer(container);
            var containerHasReactMarkup = reactRootElement && !!internalGetID(reactRootElement);
            var containerHasNonRootReactChild = hasNonRootReactChild(container);

            if (process.env.NODE_ENV !== 'production') {
              process.env.NODE_ENV !== 'production'
                ? warning(
                    !containerHasNonRootReactChild,
                    'render(...): Replacing React-rendered children with a new root ' +
                      'component. If you intended to update the children of this node, ' +
                      'you should instead have the existing children update their state ' +
                      'and render the new components instead of calling ReactDOM.render.'
                  )
                : void 0;

              if (!containerHasReactMarkup || reactRootElement.nextSibling) {
                var rootElementSibling = reactRootElement;
                while (rootElementSibling) {
                  if (internalGetID(rootElementSibling)) {
                    process.env.NODE_ENV !== 'production'
                      ? warning(
                          false,
                          'render(): Target node has markup rendered by React, but there ' +
                            'are unrelated nodes as well. This is most commonly caused by ' +
                            'white-space inserted around server-rendered markup.'
                        )
                      : void 0;
                    break;
                  }
                  rootElementSibling = rootElementSibling.nextSibling;
                }
              }
            }

            var shouldReuseMarkup =
              containerHasReactMarkup && !prevComponent && !containerHasNonRootReactChild;
            var component = ReactMount._renderNewRootComponent(
              nextWrappedElement,
              container,
              shouldReuseMarkup,
              nextContext
            )._renderedComponent.getPublicInstance();
            if (callback) {
              callback.call(component);
            }
            return component;
          },

          /**
           * Renders a React component into the DOM in the supplied `container`.
           * See https://facebook.github.io/react/docs/top-level-api.html#reactdom.render
           *
           * If the React component was previously rendered into `container`, this will
           * perform an update on it and only mutate the DOM as necessary to reflect the
           * latest React component.
           *
           * @param {ReactElement} nextElement Component element to render.
           * @param {DOMElement} container DOM element to render into.
           * @param {?function} callback function triggered on completion
           * @return {ReactComponent} Component instance rendered in `container`.
           */
          render: function (nextElement, container, callback) {
            return ReactMount._renderSubtreeIntoContainer(null, nextElement, container, callback);
          },

          /**
           * Unmounts and destroys the React component rendered in the `container`.
           * See https://facebook.github.io/react/docs/top-level-api.html#reactdom.unmountcomponentatnode
           *
           * @param {DOMElement} container DOM element containing a React component.
           * @return {boolean} True if a component was found in and unmounted from
           *                   `container`
           */
          unmountComponentAtNode: function (container) {
            // Various parts of our code (such as ReactCompositeComponent's
            // _renderValidatedComponent) assume that calls to render aren't nested;
            // verify that that's the case. (Strictly speaking, unmounting won't cause a
            // render but we still don't expect to be in a render call here.)
            process.env.NODE_ENV !== 'production'
              ? warning(
                  ReactCurrentOwner.current == null,
                  'unmountComponentAtNode(): Render methods should be a pure function ' +
                    'of props and state; triggering nested component updates from render ' +
                    'is not allowed. If necessary, trigger nested updates in ' +
                    'componentDidUpdate. Check the render method of %s.',
                  (ReactCurrentOwner.current && ReactCurrentOwner.current.getName()) ||
                    'ReactCompositeComponent'
                )
              : void 0;

            !isValidContainer(container)
              ? process.env.NODE_ENV !== 'production'
                ? invariant(
                    false,
                    'unmountComponentAtNode(...): Target container is not a DOM element.'
                  )
                : _prodInvariant('40')
              : void 0;

            if (process.env.NODE_ENV !== 'production') {
              process.env.NODE_ENV !== 'production'
                ? warning(
                    !nodeIsRenderedByOtherInstance(container),
                    "unmountComponentAtNode(): The node you're attempting to unmount " +
                      'was rendered by another copy of React.'
                  )
                : void 0;
            }

            var prevComponent = getTopLevelWrapperInContainer(container);
            if (!prevComponent) {
              // Check if the node being unmounted was rendered by React, but isn't a
              // root node.
              var containerHasNonRootReactChild = hasNonRootReactChild(container);

              // Check if the container itself is a React root node.
              var isContainerReactRoot =
                container.nodeType === 1 && container.hasAttribute(ROOT_ATTR_NAME);

              if (process.env.NODE_ENV !== 'production') {
                process.env.NODE_ENV !== 'production'
                  ? warning(
                      !containerHasNonRootReactChild,
                      "unmountComponentAtNode(): The node you're attempting to unmount " +
                        'was rendered by React and is not a top-level container. %s',
                      isContainerReactRoot
                        ? 'You may have accidentally passed in a React root node instead ' +
                            'of its container.'
                        : 'Instead, have the parent component update its state and ' +
                            'rerender in order to remove this component.'
                    )
                  : void 0;
              }

              return false;
            }
            delete instancesByReactRootID[prevComponent._instance.rootID];
            ReactUpdates.batchedUpdates(unmountComponentFromNode, prevComponent, container, false);
            return true;
          },

          _mountImageIntoNode: function (
            markup,
            container,
            instance,
            shouldReuseMarkup,
            transaction
          ) {
            !isValidContainer(container)
              ? process.env.NODE_ENV !== 'production'
                ? invariant(false, 'mountComponentIntoNode(...): Target container is not valid.')
                : _prodInvariant('41')
              : void 0;

            if (shouldReuseMarkup) {
              var rootElement = getReactRootElementInContainer(container);
              if (ReactMarkupChecksum.canReuseMarkup(markup, rootElement)) {
                ReactDOMComponentTree.precacheNode(instance, rootElement);
                return;
              } else {
                var checksum = rootElement.getAttribute(ReactMarkupChecksum.CHECKSUM_ATTR_NAME);
                rootElement.removeAttribute(ReactMarkupChecksum.CHECKSUM_ATTR_NAME);

                var rootMarkup = rootElement.outerHTML;
                rootElement.setAttribute(ReactMarkupChecksum.CHECKSUM_ATTR_NAME, checksum);

                var normalizedMarkup = markup;
                if (process.env.NODE_ENV !== 'production') {
                  // because rootMarkup is retrieved from the DOM, various normalizations
                  // will have occurred which will not be present in `markup`. Here,
                  // insert markup into a <div> or <iframe> depending on the container
                  // type to perform the same normalizations before comparing.
                  var normalizer;
                  if (container.nodeType === ELEMENT_NODE_TYPE) {
                    normalizer = document.createElement('div');
                    normalizer.innerHTML = markup;
                    normalizedMarkup = normalizer.innerHTML;
                  } else {
                    normalizer = document.createElement('iframe');
                    document.body.appendChild(normalizer);
                    normalizer.contentDocument.write(markup);
                    normalizedMarkup = normalizer.contentDocument.documentElement.outerHTML;
                    document.body.removeChild(normalizer);
                  }
                }

                var diffIndex = firstDifferenceIndex(normalizedMarkup, rootMarkup);
                var difference =
                  ' (client) ' +
                  normalizedMarkup.substring(diffIndex - 20, diffIndex + 20) +
                  '\n (server) ' +
                  rootMarkup.substring(diffIndex - 20, diffIndex + 20);

                !(container.nodeType !== DOC_NODE_TYPE)
                  ? process.env.NODE_ENV !== 'production'
                    ? invariant(
                        false,
                        "You're trying to render a component to the document using server rendering but the checksum was invalid. This usually means you rendered a different component type or props on the client from the one on the server, or your render() methods are impure. React cannot handle this case due to cross-browser quirks by rendering at the document root. You should look for environment dependent code in your components and ensure the props are the same client and server side:\n%s",
                        difference
                      )
                    : _prodInvariant('42', difference)
                  : void 0;

                if (process.env.NODE_ENV !== 'production') {
                  process.env.NODE_ENV !== 'production'
                    ? warning(
                        false,
                        'React attempted to reuse markup in a container but the ' +
                          'checksum was invalid. This generally means that you are ' +
                          'using server rendering and the markup generated on the ' +
                          'server was not what the client was expecting. React injected ' +
                          'new markup to compensate which works but you have lost many ' +
                          'of the benefits of server rendering. Instead, figure out ' +
                          'why the markup being generated is different on the client ' +
                          'or server:\n%s',
                        difference
                      )
                    : void 0;
                }
              }
            }

            !(container.nodeType !== DOC_NODE_TYPE)
              ? process.env.NODE_ENV !== 'production'
                ? invariant(
                    false,
                    "You're trying to render a component to the document but you didn't use server rendering. We can't do this without using server rendering due to cross-browser quirks. See ReactDOMServer.renderToString() for server rendering."
                  )
                : _prodInvariant('43')
              : void 0;

            if (transaction.useCreateElement) {
              while (container.lastChild) {
                container.removeChild(container.lastChild);
              }
              DOMLazyTree.insertTreeBefore(container, markup, null);
            } else {
              setInnerHTML(container, markup);
              ReactDOMComponentTree.precacheNode(instance, container.firstChild);
            }

            if (process.env.NODE_ENV !== 'production') {
              var hostNode = ReactDOMComponentTree.getInstanceFromNode(container.firstChild);
              if (hostNode._debugID !== 0) {
                ReactInstrumentation.debugTool.onHostOperation({
                  instanceID: hostNode._debugID,
                  type: 'mount',
                  payload: markup.toString(),
                });
              }
            }
          },
        };

        module.exports = ReactMount;
        /* WEBPACK VAR INJECTION */
      }.call(exports, __webpack_require__(1)));

      /***/
    },
    /* 291 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';
      /* WEBPACK VAR INJECTION */ (function (process) {
        /**
         * Copyright 2013-present, Facebook, Inc.
         * All rights reserved.
         *
         * This source code is licensed under the BSD-style license found in the
         * LICENSE file in the root directory of this source tree. An additional grant
         * of patent rights can be found in the PATENTS file in the same directory.
         *
         *
         */

        var _prodInvariant = __webpack_require__(8);

        var React = __webpack_require__(85);

        var invariant = __webpack_require__(2);

        var ReactNodeTypes = {
          HOST: 0,
          COMPOSITE: 1,
          EMPTY: 2,

          getType: function (node) {
            if (node === null || node === false) {
              return ReactNodeTypes.EMPTY;
            } else if (React.isValidElement(node)) {
              if (typeof node.type === 'function') {
                return ReactNodeTypes.COMPOSITE;
              } else {
                return ReactNodeTypes.HOST;
              }
            }
            true
              ? process.env.NODE_ENV !== 'production'
                ? invariant(false, 'Unexpected node: %s', node)
                : _prodInvariant('26', node)
              : void 0;
          },
        };

        module.exports = ReactNodeTypes;
        /* WEBPACK VAR INJECTION */
      }.call(exports, __webpack_require__(1)));

      /***/
    },
    /* 292 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';
      /**
       * Copyright 2013-present, Facebook, Inc.
       * All rights reserved.
       *
       * This source code is licensed under the BSD-style license found in the
       * LICENSE file in the root directory of this source tree. An additional grant
       * of patent rights can be found in the PATENTS file in the same directory.
       *
       *
       */

      var ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';

      module.exports = ReactPropTypesSecret;

      /***/
    },
    /* 293 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';
      /**
       * Copyright 2013-present, Facebook, Inc.
       * All rights reserved.
       *
       * This source code is licensed under the BSD-style license found in the
       * LICENSE file in the root directory of this source tree. An additional grant
       * of patent rights can be found in the PATENTS file in the same directory.
       *
       */

      var ViewportMetrics = {
        currentScrollLeft: 0,

        currentScrollTop: 0,

        refreshScrollValues: function (scrollPosition) {
          ViewportMetrics.currentScrollLeft = scrollPosition.x;
          ViewportMetrics.currentScrollTop = scrollPosition.y;
        },
      };

      module.exports = ViewportMetrics;

      /***/
    },
    /* 294 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';
      /* WEBPACK VAR INJECTION */ (function (process) {
        /**
         * Copyright 2014-present, Facebook, Inc.
         * All rights reserved.
         *
         * This source code is licensed under the BSD-style license found in the
         * LICENSE file in the root directory of this source tree. An additional grant
         * of patent rights can be found in the PATENTS file in the same directory.
         *
         *
         */

        var _prodInvariant = __webpack_require__(8);

        var invariant = __webpack_require__(2);

        /**
         * Accumulates items that must not be null or undefined into the first one. This
         * is used to conserve memory by avoiding array allocations, and thus sacrifices
         * API cleanness. Since `current` can be null before being passed in and not
         * null after this function, make sure to assign it back to `current`:
         *
         * `a = accumulateInto(a, b);`
         *
         * This API should be sparingly used. Try `accumulate` for something cleaner.
         *
         * @return {*|array<*>} An accumulation of items.
         */

        function accumulateInto(current, next) {
          !(next != null)
            ? process.env.NODE_ENV !== 'production'
              ? invariant(
                  false,
                  'accumulateInto(...): Accumulated items must not be null or undefined.'
                )
              : _prodInvariant('30')
            : void 0;

          if (current == null) {
            return next;
          }

          // Both are not empty. Warning: Never call x.concat(y) when you are not
          // certain that x is an Array (x could be a string with concat method).
          if (Array.isArray(current)) {
            if (Array.isArray(next)) {
              current.push.apply(current, next);
              return current;
            }
            current.push(next);
            return current;
          }

          if (Array.isArray(next)) {
            // A bit too dangerous to mutate `next`.
            return [current].concat(next);
          }

          return [current, next];
        }

        module.exports = accumulateInto;
        /* WEBPACK VAR INJECTION */
      }.call(exports, __webpack_require__(1)));

      /***/
    },
    /* 295 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';
      /**
       * Copyright 2013-present, Facebook, Inc.
       * All rights reserved.
       *
       * This source code is licensed under the BSD-style license found in the
       * LICENSE file in the root directory of this source tree. An additional grant
       * of patent rights can be found in the PATENTS file in the same directory.
       *
       *
       */

      /**
       * @param {array} arr an "accumulation" of items which is either an Array or
       * a single item. Useful when paired with the `accumulate` module. This is a
       * simple utility that allows us to reason about a collection of items, but
       * handling the case when there is exactly one item (and we do not need to
       * allocate an array).
       */

      function forEachAccumulated(arr, cb, scope) {
        if (Array.isArray(arr)) {
          arr.forEach(cb, scope);
        } else if (arr) {
          cb.call(scope, arr);
        }
      }

      module.exports = forEachAccumulated;

      /***/
    },
    /* 296 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';
      /**
       * Copyright 2013-present, Facebook, Inc.
       * All rights reserved.
       *
       * This source code is licensed under the BSD-style license found in the
       * LICENSE file in the root directory of this source tree. An additional grant
       * of patent rights can be found in the PATENTS file in the same directory.
       *
       */

      var ReactNodeTypes = __webpack_require__(291);

      function getHostComponentFromComposite(inst) {
        var type;

        while ((type = inst._renderedNodeType) === ReactNodeTypes.COMPOSITE) {
          inst = inst._renderedComponent;
        }

        if (type === ReactNodeTypes.HOST) {
          return inst._renderedComponent;
        } else if (type === ReactNodeTypes.EMPTY) {
          return null;
        }
      }

      module.exports = getHostComponentFromComposite;

      /***/
    },
    /* 297 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';
      /**
       * Copyright 2013-present, Facebook, Inc.
       * All rights reserved.
       *
       * This source code is licensed under the BSD-style license found in the
       * LICENSE file in the root directory of this source tree. An additional grant
       * of patent rights can be found in the PATENTS file in the same directory.
       *
       */

      var ExecutionEnvironment = __webpack_require__(18);

      var contentKey = null;

      /**
       * Gets the key used to access text content on a DOM node.
       *
       * @return {?string} Key used to access text content.
       * @internal
       */
      function getTextContentAccessor() {
        if (!contentKey && ExecutionEnvironment.canUseDOM) {
          // Prefer textContent to innerText because many browsers support both but
          // SVG <text> elements don't support innerText even when <div> does.
          contentKey = 'textContent' in document.documentElement ? 'textContent' : 'innerText';
        }
        return contentKey;
      }

      module.exports = getTextContentAccessor;

      /***/
    },
    /* 298 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';
      /* WEBPACK VAR INJECTION */ (function (process) {
        /**
         * Copyright 2013-present, Facebook, Inc.
         * All rights reserved.
         *
         * This source code is licensed under the BSD-style license found in the
         * LICENSE file in the root directory of this source tree. An additional grant
         * of patent rights can be found in the PATENTS file in the same directory.
         *
         */

        var _prodInvariant = __webpack_require__(8),
          _assign = __webpack_require__(12);

        var ReactCompositeComponent = __webpack_require__(673);
        var ReactEmptyComponent = __webpack_require__(286);
        var ReactHostComponent = __webpack_require__(288);

        var getNextDebugID = __webpack_require__(727);
        var invariant = __webpack_require__(2);
        var warning = __webpack_require__(3);

        // To avoid a cyclic dependency, we create the final class in this module
        var ReactCompositeComponentWrapper = function (element) {
          this.construct(element);
        };
        _assign(ReactCompositeComponentWrapper.prototype, ReactCompositeComponent, {
          _instantiateReactComponent: instantiateReactComponent,
        });

        function getDeclarationErrorAddendum(owner) {
          if (owner) {
            var name = owner.getName();
            if (name) {
              return ' Check the render method of `' + name + '`.';
            }
          }
          return '';
        }

        /**
         * Check if the type reference is a known internal type. I.e. not a user
         * provided composite type.
         *
         * @param {function} type
         * @return {boolean} Returns true if this is a valid internal type.
         */
        function isInternalComponentType(type) {
          return (
            typeof type === 'function' &&
            typeof type.prototype !== 'undefined' &&
            typeof type.prototype.mountComponent === 'function' &&
            typeof type.prototype.receiveComponent === 'function'
          );
        }

        /**
         * Given a ReactNode, create an instance that will actually be mounted.
         *
         * @param {ReactNode} node
         * @param {boolean} shouldHaveDebugID
         * @return {object} A new instance of the element's constructor.
         * @protected
         */
        function instantiateReactComponent(node, shouldHaveDebugID) {
          var instance;

          if (node === null || node === false) {
            instance = ReactEmptyComponent.create(instantiateReactComponent);
          } else if (typeof node === 'object') {
            var element = node;
            var type = element.type;
            if (typeof type !== 'function' && typeof type !== 'string') {
              var info = '';
              if (process.env.NODE_ENV !== 'production') {
                if (
                  type === undefined ||
                  (typeof type === 'object' && type !== null && Object.keys(type).length === 0)
                ) {
                  info +=
                    ' You likely forgot to export your component from the file ' +
                    "it's defined in.";
                }
              }
              info += getDeclarationErrorAddendum(element._owner);
              true
                ? process.env.NODE_ENV !== 'production'
                  ? invariant(
                      false,
                      'Element type is invalid: expected a string (for built-in components) or a class/function (for composite components) but got: %s.%s',
                      type == null ? type : typeof type,
                      info
                    )
                  : _prodInvariant('130', type == null ? type : typeof type, info)
                : void 0;
            }

            // Special case string values
            if (typeof element.type === 'string') {
              instance = ReactHostComponent.createInternalComponent(element);
            } else if (isInternalComponentType(element.type)) {
              // This is temporarily available for custom components that are not string
              // representations. I.e. ART. Once those are updated to use the string
              // representation, we can drop this code path.
              instance = new element.type(element);

              // We renamed this. Allow the old name for compat. :(
              if (!instance.getHostNode) {
                instance.getHostNode = instance.getNativeNode;
              }
            } else {
              instance = new ReactCompositeComponentWrapper(element);
            }
          } else if (typeof node === 'string' || typeof node === 'number') {
            instance = ReactHostComponent.createInstanceForText(node);
          } else {
            true
              ? process.env.NODE_ENV !== 'production'
                ? invariant(false, 'Encountered invalid React node of type %s', typeof node)
                : _prodInvariant('131', typeof node)
              : void 0;
          }

          if (process.env.NODE_ENV !== 'production') {
            process.env.NODE_ENV !== 'production'
              ? warning(
                  typeof instance.mountComponent === 'function' &&
                    typeof instance.receiveComponent === 'function' &&
                    typeof instance.getHostNode === 'function' &&
                    typeof instance.unmountComponent === 'function',
                  'Only React Components can be mounted.'
                )
              : void 0;
          }

          // These two fields are used by the DOM and ART diffing algorithms
          // respectively. Instead of using expandos on components, we should be
          // storing the state needed by the diffing algorithms elsewhere.
          instance._mountIndex = 0;
          instance._mountImage = null;

          if (process.env.NODE_ENV !== 'production') {
            instance._debugID = shouldHaveDebugID ? getNextDebugID() : 0;
          }

          // Internal instances should fully constructed at this point, so they should
          // not get any new fields added to them at this point.
          if (process.env.NODE_ENV !== 'production') {
            if (Object.preventExtensions) {
              Object.preventExtensions(instance);
            }
          }

          return instance;
        }

        module.exports = instantiateReactComponent;
        /* WEBPACK VAR INJECTION */
      }.call(exports, __webpack_require__(1)));

      /***/
    },
    /* 299 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';
      /**
       * Copyright 2013-present, Facebook, Inc.
       * All rights reserved.
       *
       * This source code is licensed under the BSD-style license found in the
       * LICENSE file in the root directory of this source tree. An additional grant
       * of patent rights can be found in the PATENTS file in the same directory.
       *
       *
       */

      /**
       * @see http://www.whatwg.org/specs/web-apps/current-work/multipage/the-input-element.html#input-type-attr-summary
       */

      var supportedInputTypes = {
        color: true,
        date: true,
        datetime: true,
        'datetime-local': true,
        email: true,
        month: true,
        number: true,
        password: true,
        range: true,
        search: true,
        tel: true,
        text: true,
        time: true,
        url: true,
        week: true,
      };

      function isTextInputElement(elem) {
        var nodeName = elem && elem.nodeName && elem.nodeName.toLowerCase();

        if (nodeName === 'input') {
          return !!supportedInputTypes[elem.type];
        }

        if (nodeName === 'textarea') {
          return true;
        }

        return false;
      }

      module.exports = isTextInputElement;

      /***/
    },
    /* 300 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';
      /**
       * Copyright 2013-present, Facebook, Inc.
       * All rights reserved.
       *
       * This source code is licensed under the BSD-style license found in the
       * LICENSE file in the root directory of this source tree. An additional grant
       * of patent rights can be found in the PATENTS file in the same directory.
       *
       */

      var ExecutionEnvironment = __webpack_require__(18);
      var escapeTextContentForBrowser = __webpack_require__(124);
      var setInnerHTML = __webpack_require__(125);

      /**
       * Set the textContent property of a node, ensuring that whitespace is preserved
       * even in IE8. innerText is a poor substitute for textContent and, among many
       * issues, inserts <br> instead of the literal newline chars. innerHTML behaves
       * as it should.
       *
       * @param {DOMElement} node
       * @param {string} text
       * @internal
       */
      var setTextContent = function (node, text) {
        if (text) {
          var firstChild = node.firstChild;

          if (firstChild && firstChild === node.lastChild && firstChild.nodeType === 3) {
            firstChild.nodeValue = text;
            return;
          }
        }
        node.textContent = text;
      };

      if (ExecutionEnvironment.canUseDOM) {
        if (!('textContent' in document.documentElement)) {
          setTextContent = function (node, text) {
            if (node.nodeType === 3) {
              node.nodeValue = text;
              return;
            }
            setInnerHTML(node, escapeTextContentForBrowser(text));
          };
        }
      }

      module.exports = setTextContent;

      /***/
    },
    /* 301 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';
      /* WEBPACK VAR INJECTION */ (function (process) {
        /**
         * Copyright 2013-present, Facebook, Inc.
         * All rights reserved.
         *
         * This source code is licensed under the BSD-style license found in the
         * LICENSE file in the root directory of this source tree. An additional grant
         * of patent rights can be found in the PATENTS file in the same directory.
         *
         */

        var _prodInvariant = __webpack_require__(8);

        var ReactCurrentOwner = __webpack_require__(42);
        var REACT_ELEMENT_TYPE = __webpack_require__(692);

        var getIteratorFn = __webpack_require__(726);
        var invariant = __webpack_require__(2);
        var KeyEscapeUtils = __webpack_require__(188);
        var warning = __webpack_require__(3);

        var SEPARATOR = '.';
        var SUBSEPARATOR = ':';

        /**
         * This is inlined from ReactElement since this file is shared between
         * isomorphic and renderers. We could extract this to a
         *
         */

        /**
         * TODO: Test that a single child and an array with one item have the same key
         * pattern.
         */

        var didWarnAboutMaps = false;

        /**
         * Generate a key string that identifies a component within a set.
         *
         * @param {*} component A component that could contain a manual key.
         * @param {number} index Index that is used if a manual key is not provided.
         * @return {string}
         */
        function getComponentKey(component, index) {
          // Do some typechecking here since we call this blindly. We want to ensure
          // that we don't block potential future ES APIs.
          if (component && typeof component === 'object' && component.key != null) {
            // Explicit key
            return KeyEscapeUtils.escape(component.key);
          }
          // Implicit key determined by the index in the set
          return index.toString(36);
        }

        /**
         * @param {?*} children Children tree container.
         * @param {!string} nameSoFar Name of the key path so far.
         * @param {!function} callback Callback to invoke with each child found.
         * @param {?*} traverseContext Used to pass information throughout the traversal
         * process.
         * @return {!number} The number of children in this subtree.
         */
        function traverseAllChildrenImpl(children, nameSoFar, callback, traverseContext) {
          var type = typeof children;

          if (type === 'undefined' || type === 'boolean') {
            // All of the above are perceived as null.
            children = null;
          }

          if (
            children === null ||
            type === 'string' ||
            type === 'number' ||
            // The following is inlined from ReactElement. This means we can optimize
            // some checks. React Fiber also inlines this logic for similar purposes.
            (type === 'object' && children.$$typeof === REACT_ELEMENT_TYPE)
          ) {
            callback(
              traverseContext,
              children,
              // If it's the only child, treat the name as if it was wrapped in an array
              // so that it's consistent if the number of children grows.
              nameSoFar === '' ? SEPARATOR + getComponentKey(children, 0) : nameSoFar
            );
            return 1;
          }

          var child;
          var nextName;
          var subtreeCount = 0; // Count of children found in the current subtree.
          var nextNamePrefix = nameSoFar === '' ? SEPARATOR : nameSoFar + SUBSEPARATOR;

          if (Array.isArray(children)) {
            for (var i = 0; i < children.length; i++) {
              child = children[i];
              nextName = nextNamePrefix + getComponentKey(child, i);
              subtreeCount += traverseAllChildrenImpl(child, nextName, callback, traverseContext);
            }
          } else {
            var iteratorFn = getIteratorFn(children);
            if (iteratorFn) {
              var iterator = iteratorFn.call(children);
              var step;
              if (iteratorFn !== children.entries) {
                var ii = 0;
                while (!(step = iterator.next()).done) {
                  child = step.value;
                  nextName = nextNamePrefix + getComponentKey(child, ii++);
                  subtreeCount += traverseAllChildrenImpl(
                    child,
                    nextName,
                    callback,
                    traverseContext
                  );
                }
              } else {
                if (process.env.NODE_ENV !== 'production') {
                  var mapsAsChildrenAddendum = '';
                  if (ReactCurrentOwner.current) {
                    var mapsAsChildrenOwnerName = ReactCurrentOwner.current.getName();
                    if (mapsAsChildrenOwnerName) {
                      mapsAsChildrenAddendum =
                        ' Check the render method of `' + mapsAsChildrenOwnerName + '`.';
                    }
                  }
                  process.env.NODE_ENV !== 'production'
                    ? warning(
                        didWarnAboutMaps,
                        'Using Maps as children is not yet fully supported. It is an ' +
                          'experimental feature that might be removed. Convert it to a ' +
                          'sequence / iterable of keyed ReactElements instead.%s',
                        mapsAsChildrenAddendum
                      )
                    : void 0;
                  didWarnAboutMaps = true;
                }
                // Iterator will provide entry [k,v] tuples rather than values.
                while (!(step = iterator.next()).done) {
                  var entry = step.value;
                  if (entry) {
                    child = entry[1];
                    nextName =
                      nextNamePrefix +
                      KeyEscapeUtils.escape(entry[0]) +
                      SUBSEPARATOR +
                      getComponentKey(child, 0);
                    subtreeCount += traverseAllChildrenImpl(
                      child,
                      nextName,
                      callback,
                      traverseContext
                    );
                  }
                }
              }
            } else if (type === 'object') {
              var addendum = '';
              if (process.env.NODE_ENV !== 'production') {
                addendum =
                  ' If you meant to render a collection of children, use an array ' +
                  'instead or wrap the object using createFragment(object) from the ' +
                  'React add-ons.';
                if (children._isReactElement) {
                  addendum =
                    " It looks like you're using an element created by a different " +
                    'version of React. Make sure to use only one copy of React.';
                }
                if (ReactCurrentOwner.current) {
                  var name = ReactCurrentOwner.current.getName();
                  if (name) {
                    addendum += ' Check the render method of `' + name + '`.';
                  }
                }
              }
              var childrenString = String(children);
              true
                ? process.env.NODE_ENV !== 'production'
                  ? invariant(
                      false,
                      'Objects are not valid as a React child (found: %s).%s',
                      childrenString === '[object Object]'
                        ? 'object with keys {' + Object.keys(children).join(', ') + '}'
                        : childrenString,
                      addendum
                    )
                  : _prodInvariant(
                      '31',
                      childrenString === '[object Object]'
                        ? 'object with keys {' + Object.keys(children).join(', ') + '}'
                        : childrenString,
                      addendum
                    )
                : void 0;
            }
          }

          return subtreeCount;
        }

        /**
         * Traverses children that are typically specified as `props.children`, but
         * might also be specified through attributes:
         *
         * - `traverseAllChildren(this.props.children, ...)`
         * - `traverseAllChildren(this.props.leftPanelChildren, ...)`
         *
         * The `traverseContext` is an optional argument that is passed through the
         * entire traversal. It can be used to store accumulations or anything else that
         * the callback might find relevant.
         *
         * @param {?*} children Children tree object.
         * @param {!function} callback To invoke upon traversing each child.
         * @param {?*} traverseContext Context for traversal.
         * @return {!number} The number of children in this subtree.
         */
        function traverseAllChildren(children, callback, traverseContext) {
          if (children == null) {
            return 0;
          }

          return traverseAllChildrenImpl(children, '', callback, traverseContext);
        }

        module.exports = traverseAllChildren;
        /* WEBPACK VAR INJECTION */
      }.call(exports, __webpack_require__(1)));

      /***/
    },
    /* 302 */
    /***/ function (module, __webpack_exports__, __webpack_require__) {
      'use strict';
      /* WEBPACK VAR INJECTION */ (function (process) {
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_hoist_non_react_statics__ = __webpack_require__(
          621
        );
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_hoist_non_react_statics___default = __webpack_require__.n(
          __WEBPACK_IMPORTED_MODULE_0_hoist_non_react_statics__
        );
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_invariant__ = __webpack_require__(627);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_invariant___default = __webpack_require__.n(
          __WEBPACK_IMPORTED_MODULE_1_invariant__
        );
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_react__ = __webpack_require__(4);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_react___default = __webpack_require__.n(
          __WEBPACK_IMPORTED_MODULE_2_react__
        );
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__utils_Subscription__ = __webpack_require__(
          304
        );
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__utils_storeShape__ = __webpack_require__(
          305
        );
        /* harmony export (immutable) */ __webpack_exports__['a'] = connectAdvanced;
        var _extends =
          Object.assign ||
          function (target) {
            for (var i = 1; i < arguments.length; i++) {
              var source = arguments[i];
              for (var key in source) {
                if (Object.prototype.hasOwnProperty.call(source, key)) {
                  target[key] = source[key];
                }
              }
            }
            return target;
          };

        function _classCallCheck(instance, Constructor) {
          if (!(instance instanceof Constructor)) {
            throw new TypeError('Cannot call a class as a function');
          }
        }

        function _possibleConstructorReturn(self, call) {
          if (!self) {
            throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
          }
          return call && (typeof call === 'object' || typeof call === 'function') ? call : self;
        }

        function _inherits(subClass, superClass) {
          if (typeof superClass !== 'function' && superClass !== null) {
            throw new TypeError(
              'Super expression must either be null or a function, not ' + typeof superClass
            );
          }
          subClass.prototype = Object.create(superClass && superClass.prototype, {
            constructor: { value: subClass, enumerable: false, writable: true, configurable: true },
          });
          if (superClass)
            Object.setPrototypeOf
              ? Object.setPrototypeOf(subClass, superClass)
              : (subClass.__proto__ = superClass);
        }

        function _objectWithoutProperties(obj, keys) {
          var target = {};
          for (var i in obj) {
            if (keys.indexOf(i) >= 0) continue;
            if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;
            target[i] = obj[i];
          }
          return target;
        }

        var hotReloadingVersion = 0;
        function connectAdvanced(
          /*
  selectorFactory is a func that is responsible for returning the selector function used to
  compute new props from state, props, and dispatch. For example:
     export default connectAdvanced((dispatch, options) => (state, props) => ({
      thing: state.things[props.thingId],
      saveThing: fields => dispatch(actionCreators.saveThing(props.thingId, fields)),
    }))(YourComponent)
   Access to dispatch is provided to the factory so selectorFactories can bind actionCreators
  outside of their selector as an optimization. Options passed to connectAdvanced are passed to
  the selectorFactory, along with displayName and WrappedComponent, as the second argument.
   Note that selectorFactory is responsible for all caching/memoization of inbound and outbound
  props. Do not use connectAdvanced directly without memoizing results between calls to your
  selector, otherwise the Connect component will re-render on every state or props change.
*/
          selectorFactory
        ) {
          var _contextTypes, _childContextTypes;

          var _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},
            _ref$getDisplayName = _ref.getDisplayName,
            getDisplayName =
              _ref$getDisplayName === undefined
                ? function (name) {
                    return 'ConnectAdvanced(' + name + ')';
                  }
                : _ref$getDisplayName,
            _ref$methodName = _ref.methodName,
            methodName = _ref$methodName === undefined ? 'connectAdvanced' : _ref$methodName,
            _ref$renderCountProp = _ref.renderCountProp,
            renderCountProp = _ref$renderCountProp === undefined ? undefined : _ref$renderCountProp,
            _ref$shouldHandleStat = _ref.shouldHandleStateChanges,
            shouldHandleStateChanges =
              _ref$shouldHandleStat === undefined ? true : _ref$shouldHandleStat,
            _ref$storeKey = _ref.storeKey,
            storeKey = _ref$storeKey === undefined ? 'store' : _ref$storeKey,
            _ref$withRef = _ref.withRef,
            withRef = _ref$withRef === undefined ? false : _ref$withRef,
            connectOptions = _objectWithoutProperties(_ref, [
              'getDisplayName',
              'methodName',
              'renderCountProp',
              'shouldHandleStateChanges',
              'storeKey',
              'withRef',
            ]);

          var subscriptionKey = storeKey + 'Subscription';
          var version = hotReloadingVersion++;

          var contextTypes =
            ((_contextTypes = {}),
            (_contextTypes[storeKey] =
              __WEBPACK_IMPORTED_MODULE_4__utils_storeShape__['a' /* default */]),
            (_contextTypes[subscriptionKey] = __WEBPACK_IMPORTED_MODULE_2_react__[
              'PropTypes'
            ].instanceOf(__WEBPACK_IMPORTED_MODULE_3__utils_Subscription__['a' /* default */])),
            _contextTypes);
          var childContextTypes =
            ((_childContextTypes = {}),
            (_childContextTypes[subscriptionKey] = __WEBPACK_IMPORTED_MODULE_2_react__[
              'PropTypes'
            ].instanceOf(__WEBPACK_IMPORTED_MODULE_3__utils_Subscription__['a' /* default */])),
            _childContextTypes);

          return function wrapWithConnect(WrappedComponent) {
            __WEBPACK_IMPORTED_MODULE_1_invariant___default()(
              typeof WrappedComponent == 'function',
              'You must pass a component to the function returned by ' +
                ('connect. Instead received ' + WrappedComponent)
            );

            var wrappedComponentName =
              WrappedComponent.displayName || WrappedComponent.name || 'Component';

            var displayName = getDisplayName(wrappedComponentName);

            var selectorFactoryOptions = _extends({}, connectOptions, {
              getDisplayName: getDisplayName,
              methodName: methodName,
              renderCountProp: renderCountProp,
              shouldHandleStateChanges: shouldHandleStateChanges,
              storeKey: storeKey,
              withRef: withRef,
              displayName: displayName,
              wrappedComponentName: wrappedComponentName,
              WrappedComponent: WrappedComponent,
            });

            var Connect = (function (_Component) {
              _inherits(Connect, _Component);

              function Connect(props, context) {
                _classCallCheck(this, Connect);

                var _this = _possibleConstructorReturn(this, _Component.call(this, props, context));

                _this.version = version;
                _this.state = {};
                _this.renderCount = 0;
                _this.store = _this.props[storeKey] || _this.context[storeKey];
                _this.parentSub = props[subscriptionKey] || context[subscriptionKey];

                _this.setWrappedInstance = _this.setWrappedInstance.bind(_this);

                __WEBPACK_IMPORTED_MODULE_1_invariant___default()(
                  _this.store,
                  'Could not find "' +
                    storeKey +
                    '" in either the context or ' +
                    ('props of "' + displayName + '". ') +
                    'Either wrap the root component in a <Provider>, ' +
                    ('or explicitly pass "' + storeKey + '" as a prop to "' + displayName + '".')
                );

                // make sure `getState` is properly bound in order to avoid breaking
                // custom store implementations that rely on the store's context
                _this.getState = _this.store.getState.bind(_this.store);

                _this.initSelector();
                _this.initSubscription();
                return _this;
              }

              Connect.prototype.getChildContext = function getChildContext() {
                var _ref2;

                return (
                  (_ref2 = {}),
                  (_ref2[subscriptionKey] = this.subscription || this.parentSub),
                  _ref2
                );
              };

              Connect.prototype.componentDidMount = function componentDidMount() {
                if (!shouldHandleStateChanges) return;

                // componentWillMount fires during server side rendering, but componentDidMount and
                // componentWillUnmount do not. Because of this, trySubscribe happens during ...didMount.
                // Otherwise, unsubscription would never take place during SSR, causing a memory leak.
                // To handle the case where a child component may have triggered a state change by
                // dispatching an action in its componentWillMount, we have to re-run the select and maybe
                // re-render.
                this.subscription.trySubscribe();
                this.selector.run(this.props);
                if (this.selector.shouldComponentUpdate) this.forceUpdate();
              };

              Connect.prototype.componentWillReceiveProps = function componentWillReceiveProps(
                nextProps
              ) {
                this.selector.run(nextProps);
              };

              Connect.prototype.shouldComponentUpdate = function shouldComponentUpdate() {
                return this.selector.shouldComponentUpdate;
              };

              Connect.prototype.componentWillUnmount = function componentWillUnmount() {
                if (this.subscription) this.subscription.tryUnsubscribe();
                // these are just to guard against extra memory leakage if a parent element doesn't
                // dereference this instance properly, such as an async callback that never finishes
                this.subscription = null;
                this.store = null;
                this.parentSub = null;
                this.selector.run = function () {};
              };

              Connect.prototype.getWrappedInstance = function getWrappedInstance() {
                __WEBPACK_IMPORTED_MODULE_1_invariant___default()(
                  withRef,
                  'To access the wrapped instance, you need to specify ' +
                    ('{ withRef: true } in the options argument of the ' + methodName + '() call.')
                );
                return this.wrappedInstance;
              };

              Connect.prototype.setWrappedInstance = function setWrappedInstance(ref) {
                this.wrappedInstance = ref;
              };

              Connect.prototype.initSelector = function initSelector() {
                var dispatch = this.store.dispatch;
                var getState = this.getState;

                var sourceSelector = selectorFactory(dispatch, selectorFactoryOptions);

                // wrap the selector in an object that tracks its results between runs
                var selector = (this.selector = {
                  shouldComponentUpdate: true,
                  props: sourceSelector(getState(), this.props),
                  run: function runComponentSelector(props) {
                    try {
                      var nextProps = sourceSelector(getState(), props);
                      if (selector.error || nextProps !== selector.props) {
                        selector.shouldComponentUpdate = true;
                        selector.props = nextProps;
                        selector.error = null;
                      }
                    } catch (error) {
                      selector.shouldComponentUpdate = true;
                      selector.error = error;
                    }
                  },
                });
              };

              Connect.prototype.initSubscription = function initSubscription() {
                var _this2 = this;

                if (shouldHandleStateChanges) {
                  (function () {
                    var subscription = (_this2.subscription = new __WEBPACK_IMPORTED_MODULE_3__utils_Subscription__[
                      'a' /* default */
                    ](_this2.store, _this2.parentSub));
                    var dummyState = {};

                    subscription.onStateChange = function onStateChange() {
                      this.selector.run(this.props);

                      if (!this.selector.shouldComponentUpdate) {
                        subscription.notifyNestedSubs();
                      } else {
                        this.componentDidUpdate = function componentDidUpdate() {
                          this.componentDidUpdate = undefined;
                          subscription.notifyNestedSubs();
                        };

                        this.setState(dummyState);
                      }
                    }.bind(_this2);
                  })();
                }
              };

              Connect.prototype.isSubscribed = function isSubscribed() {
                return Boolean(this.subscription) && this.subscription.isSubscribed();
              };

              Connect.prototype.addExtraProps = function addExtraProps(props) {
                if (!withRef && !renderCountProp) return props;
                // make a shallow copy so that fields added don't leak to the original selector.
                // this is especially important for 'ref' since that's a reference back to the component
                // instance. a singleton memoized selector would then be holding a reference to the
                // instance, preventing the instance from being garbage collected, and that would be bad
                var withExtras = _extends({}, props);
                if (withRef) withExtras.ref = this.setWrappedInstance;
                if (renderCountProp) withExtras[renderCountProp] = this.renderCount++;
                return withExtras;
              };

              Connect.prototype.render = function render() {
                var selector = this.selector;
                selector.shouldComponentUpdate = false;

                if (selector.error) {
                  throw selector.error;
                } else {
                  return __webpack_require__.i(
                    __WEBPACK_IMPORTED_MODULE_2_react__['createElement']
                  )(WrappedComponent, this.addExtraProps(selector.props));
                }
              };

              return Connect;
            })(__WEBPACK_IMPORTED_MODULE_2_react__['Component']);

            Connect.WrappedComponent = WrappedComponent;
            Connect.displayName = displayName;
            Connect.childContextTypes = childContextTypes;
            Connect.contextTypes = contextTypes;
            Connect.propTypes = contextTypes;

            if (process.env.NODE_ENV !== 'production') {
              Connect.prototype.componentWillUpdate = function componentWillUpdate() {
                // We are hot reloading!
                if (this.version !== version) {
                  this.version = version;
                  this.initSelector();

                  if (this.subscription) this.subscription.tryUnsubscribe();
                  this.initSubscription();
                  if (shouldHandleStateChanges) this.subscription.trySubscribe();
                }
              };
            }

            return __WEBPACK_IMPORTED_MODULE_0_hoist_non_react_statics___default()(
              Connect,
              WrappedComponent
            );
          };
        }
        /* WEBPACK VAR INJECTION */
      }.call(__webpack_exports__, __webpack_require__(1)));

      /***/
    },
    /* 303 */
    /***/ function (module, __webpack_exports__, __webpack_require__) {
      'use strict';
      /* WEBPACK VAR INJECTION */ (function (process) {
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__utils_verifyPlainObject__ = __webpack_require__(
          306
        );
        /* harmony export (immutable) */ __webpack_exports__['b'] = wrapMapToPropsConstant;
        /* unused harmony export getDependsOnOwnProps */
        /* harmony export (immutable) */ __webpack_exports__['a'] = wrapMapToPropsFunc;

        function wrapMapToPropsConstant(getConstant) {
          return function initConstantSelector(dispatch, options) {
            var constant = getConstant(dispatch, options);

            function constantSelector() {
              return constant;
            }
            constantSelector.dependsOnOwnProps = false;
            return constantSelector;
          };
        }

        // dependsOnOwnProps is used by createMapToPropsProxy to determine whether to pass props as args
        // to the mapToProps function being wrapped. It is also used by makePurePropsSelector to determine
        // whether mapToProps needs to be invoked when props have changed.
        //
        // A length of one signals that mapToProps does not depend on props from the parent component.
        // A length of zero is assumed to mean mapToProps is getting args via arguments or ...args and
        // therefore not reporting its length accurately..
        function getDependsOnOwnProps(mapToProps) {
          return mapToProps.dependsOnOwnProps !== null && mapToProps.dependsOnOwnProps !== undefined
            ? Boolean(mapToProps.dependsOnOwnProps)
            : mapToProps.length !== 1;
        }

        // Used by whenMapStateToPropsIsFunction and whenMapDispatchToPropsIsFunction,
        // this function wraps mapToProps in a proxy function which does several things:
        //
        //  * Detects whether the mapToProps function being called depends on props, which
        //    is used by selectorFactory to decide if it should reinvoke on props changes.
        //
        //  * On first call, handles mapToProps if returns another function, and treats that
        //    new function as the true mapToProps for subsequent calls.
        //
        //  * On first call, verifies the first result is a plain object, in order to warn
        //    the developer that their mapToProps function is not returning a valid result.
        //
        function wrapMapToPropsFunc(mapToProps, methodName) {
          return function initProxySelector(dispatch, _ref) {
            var displayName = _ref.displayName;

            var proxy = function mapToPropsProxy(stateOrDispatch, ownProps) {
              return proxy.dependsOnOwnProps
                ? proxy.mapToProps(stateOrDispatch, ownProps)
                : proxy.mapToProps(stateOrDispatch);
            };

            proxy.dependsOnOwnProps = getDependsOnOwnProps(mapToProps);

            proxy.mapToProps = function detectFactoryAndVerify(stateOrDispatch, ownProps) {
              proxy.mapToProps = mapToProps;
              var props = proxy(stateOrDispatch, ownProps);

              if (typeof props === 'function') {
                proxy.mapToProps = props;
                proxy.dependsOnOwnProps = getDependsOnOwnProps(props);
                props = proxy(stateOrDispatch, ownProps);
              }

              if (process.env.NODE_ENV !== 'production')
                __webpack_require__.i(
                  __WEBPACK_IMPORTED_MODULE_0__utils_verifyPlainObject__['a' /* default */]
                )(props, displayName, methodName);

              return props;
            };

            return proxy;
          };
        }
        /* WEBPACK VAR INJECTION */
      }.call(__webpack_exports__, __webpack_require__(1)));

      /***/
    },
    /* 304 */
    /***/ function (module, __webpack_exports__, __webpack_require__) {
      'use strict';
      /* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, 'a', function () {
        return Subscription;
      });
      function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
          throw new TypeError('Cannot call a class as a function');
        }
      }

      // encapsulates the subscription logic for connecting a component to the redux store, as
      // well as nesting subscriptions of descendant components, so that we can ensure the
      // ancestor components re-render before descendants

      var CLEARED = null;
      var nullListeners = {
        notify: function notify() {},
      };

      function createListenerCollection() {
        // the current/next pattern is copied from redux's createStore code.
        // TODO: refactor+expose that code to be reusable here?
        var current = [];
        var next = [];

        return {
          clear: function clear() {
            next = CLEARED;
            current = CLEARED;
          },
          notify: function notify() {
            var listeners = (current = next);
            for (var i = 0; i < listeners.length; i++) {
              listeners[i]();
            }
          },
          subscribe: function subscribe(listener) {
            var isSubscribed = true;
            if (next === current) next = current.slice();
            next.push(listener);

            return function unsubscribe() {
              if (!isSubscribed || current === CLEARED) return;
              isSubscribed = false;

              if (next === current) next = current.slice();
              next.splice(next.indexOf(listener), 1);
            };
          },
        };
      }

      var Subscription = (function () {
        function Subscription(store, parentSub) {
          _classCallCheck(this, Subscription);

          this.store = store;
          this.parentSub = parentSub;
          this.unsubscribe = null;
          this.listeners = nullListeners;
        }

        Subscription.prototype.addNestedSub = function addNestedSub(listener) {
          this.trySubscribe();
          return this.listeners.subscribe(listener);
        };

        Subscription.prototype.notifyNestedSubs = function notifyNestedSubs() {
          this.listeners.notify();
        };

        Subscription.prototype.isSubscribed = function isSubscribed() {
          return Boolean(this.unsubscribe);
        };

        Subscription.prototype.trySubscribe = function trySubscribe() {
          if (!this.unsubscribe) {
            // this.onStateChange is set by connectAdvanced.initSubscription()
            this.unsubscribe = this.parentSub
              ? this.parentSub.addNestedSub(this.onStateChange)
              : this.store.subscribe(this.onStateChange);

            this.listeners = createListenerCollection();
          }
        };

        Subscription.prototype.tryUnsubscribe = function tryUnsubscribe() {
          if (this.unsubscribe) {
            this.unsubscribe();
            this.unsubscribe = null;
            this.listeners.clear();
            this.listeners = nullListeners;
          }
        };

        return Subscription;
      })();

      /***/
    },
    /* 305 */
    /***/ function (module, __webpack_exports__, __webpack_require__) {
      'use strict';
      /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react__ = __webpack_require__(4);
      /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react___default = __webpack_require__.n(
        __WEBPACK_IMPORTED_MODULE_0_react__
      );

      /* harmony default export */ __webpack_exports__['a'] = __WEBPACK_IMPORTED_MODULE_0_react__[
        'PropTypes'
      ].shape({
        subscribe: __WEBPACK_IMPORTED_MODULE_0_react__['PropTypes'].func.isRequired,
        dispatch: __WEBPACK_IMPORTED_MODULE_0_react__['PropTypes'].func.isRequired,
        getState: __WEBPACK_IMPORTED_MODULE_0_react__['PropTypes'].func.isRequired,
      });

      /***/
    },
    /* 306 */
    /***/ function (module, __webpack_exports__, __webpack_require__) {
      'use strict';
      /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_lodash_es_isPlainObject__ = __webpack_require__(
        174
      );
      /* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__warning__ = __webpack_require__(200);
      /* harmony export (immutable) */ __webpack_exports__['a'] = verifyPlainObject;

      function verifyPlainObject(value, displayName, methodName) {
        if (
          !__webpack_require__.i(
            __WEBPACK_IMPORTED_MODULE_0_lodash_es_isPlainObject__['a' /* default */]
          )(value)
        ) {
          __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_1__warning__['a' /* default */])(
            methodName +
              '() in ' +
              displayName +
              ' must return a plain object. Instead received ' +
              value +
              '.'
          );
        }
      }

      /***/
    },
    /* 307 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      var _stripDiacritics = __webpack_require__(309);

      var _stripDiacritics2 = _interopRequireDefault(_stripDiacritics);

      function filterOptions(options, filterValue, excludeOptions, props) {
        var _this = this;

        if (props.ignoreAccents) {
          filterValue = (0, _stripDiacritics2['default'])(filterValue);
        }

        if (props.ignoreCase) {
          filterValue = filterValue.toLowerCase();
        }

        if (excludeOptions)
          excludeOptions = excludeOptions.map(function (i) {
            return i[props.valueKey];
          });

        return options.filter(function (option) {
          if (excludeOptions && excludeOptions.indexOf(option[props.valueKey]) > -1) return false;
          if (props.filterOption) return props.filterOption.call(_this, option, filterValue);
          if (!filterValue) return true;
          var valueTest = String(option[props.valueKey]);
          var labelTest = String(option[props.labelKey]);
          if (props.ignoreAccents) {
            if (props.matchProp !== 'label')
              valueTest = (0, _stripDiacritics2['default'])(valueTest);
            if (props.matchProp !== 'value')
              labelTest = (0, _stripDiacritics2['default'])(labelTest);
          }
          if (props.ignoreCase) {
            if (props.matchProp !== 'label') valueTest = valueTest.toLowerCase();
            if (props.matchProp !== 'value') labelTest = labelTest.toLowerCase();
          }
          return props.matchPos === 'start'
            ? (props.matchProp !== 'label' &&
                valueTest.substr(0, filterValue.length) === filterValue) ||
                (props.matchProp !== 'value' &&
                  labelTest.substr(0, filterValue.length) === filterValue)
            : (props.matchProp !== 'label' && valueTest.indexOf(filterValue) >= 0) ||
                (props.matchProp !== 'value' && labelTest.indexOf(filterValue) >= 0);
        });
      }

      module.exports = filterOptions;

      /***/
    },
    /* 308 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      var _classnames = __webpack_require__(72);

      var _classnames2 = _interopRequireDefault(_classnames);

      var _react = __webpack_require__(4);

      var _react2 = _interopRequireDefault(_react);

      function menuRenderer(_ref) {
        var focusedOption = _ref.focusedOption;
        var instancePrefix = _ref.instancePrefix;
        var labelKey = _ref.labelKey;
        var onFocus = _ref.onFocus;
        var onSelect = _ref.onSelect;
        var optionClassName = _ref.optionClassName;
        var optionComponent = _ref.optionComponent;
        var optionRenderer = _ref.optionRenderer;
        var options = _ref.options;
        var valueArray = _ref.valueArray;
        var valueKey = _ref.valueKey;
        var onOptionRef = _ref.onOptionRef;

        var Option = optionComponent;

        return options.map(function (option, i) {
          var isSelected = valueArray && valueArray.indexOf(option) > -1;
          var isFocused = option === focusedOption;
          var optionClass = (0, _classnames2['default'])(optionClassName, {
            'Select-option': true,
            'is-selected': isSelected,
            'is-focused': isFocused,
            'is-disabled': option.disabled,
          });

          return _react2['default'].createElement(
            Option,
            {
              className: optionClass,
              instancePrefix: instancePrefix,
              isDisabled: option.disabled,
              isFocused: isFocused,
              isSelected: isSelected,
              key: 'option-' + i + '-' + option[valueKey],
              onFocus: onFocus,
              onSelect: onSelect,
              option: option,
              optionIndex: i,
              ref: function (ref) {
                onOptionRef(ref, isFocused);
              },
            },
            optionRenderer(option, i)
          );
        });
      }

      module.exports = menuRenderer;

      /***/
    },
    /* 309 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';

      var map = [
        {
          base: 'A',
          letters: /[\u0041\u24B6\uFF21\u00C0\u00C1\u00C2\u1EA6\u1EA4\u1EAA\u1EA8\u00C3\u0100\u0102\u1EB0\u1EAE\u1EB4\u1EB2\u0226\u01E0\u00C4\u01DE\u1EA2\u00C5\u01FA\u01CD\u0200\u0202\u1EA0\u1EAC\u1EB6\u1E00\u0104\u023A\u2C6F]/g,
        },
        { base: 'AA', letters: /[\uA732]/g },
        { base: 'AE', letters: /[\u00C6\u01FC\u01E2]/g },
        { base: 'AO', letters: /[\uA734]/g },
        { base: 'AU', letters: /[\uA736]/g },
        { base: 'AV', letters: /[\uA738\uA73A]/g },
        { base: 'AY', letters: /[\uA73C]/g },
        { base: 'B', letters: /[\u0042\u24B7\uFF22\u1E02\u1E04\u1E06\u0243\u0182\u0181]/g },
        {
          base: 'C',
          letters: /[\u0043\u24B8\uFF23\u0106\u0108\u010A\u010C\u00C7\u1E08\u0187\u023B\uA73E]/g,
        },
        {
          base: 'D',
          letters: /[\u0044\u24B9\uFF24\u1E0A\u010E\u1E0C\u1E10\u1E12\u1E0E\u0110\u018B\u018A\u0189\uA779]/g,
        },
        { base: 'DZ', letters: /[\u01F1\u01C4]/g },
        { base: 'Dz', letters: /[\u01F2\u01C5]/g },
        {
          base: 'E',
          letters: /[\u0045\u24BA\uFF25\u00C8\u00C9\u00CA\u1EC0\u1EBE\u1EC4\u1EC2\u1EBC\u0112\u1E14\u1E16\u0114\u0116\u00CB\u1EBA\u011A\u0204\u0206\u1EB8\u1EC6\u0228\u1E1C\u0118\u1E18\u1E1A\u0190\u018E]/g,
        },
        { base: 'F', letters: /[\u0046\u24BB\uFF26\u1E1E\u0191\uA77B]/g },
        {
          base: 'G',
          letters: /[\u0047\u24BC\uFF27\u01F4\u011C\u1E20\u011E\u0120\u01E6\u0122\u01E4\u0193\uA7A0\uA77D\uA77E]/g,
        },
        {
          base: 'H',
          letters: /[\u0048\u24BD\uFF28\u0124\u1E22\u1E26\u021E\u1E24\u1E28\u1E2A\u0126\u2C67\u2C75\uA78D]/g,
        },
        {
          base: 'I',
          letters: /[\u0049\u24BE\uFF29\u00CC\u00CD\u00CE\u0128\u012A\u012C\u0130\u00CF\u1E2E\u1EC8\u01CF\u0208\u020A\u1ECA\u012E\u1E2C\u0197]/g,
        },
        { base: 'J', letters: /[\u004A\u24BF\uFF2A\u0134\u0248]/g },
        {
          base: 'K',
          letters: /[\u004B\u24C0\uFF2B\u1E30\u01E8\u1E32\u0136\u1E34\u0198\u2C69\uA740\uA742\uA744\uA7A2]/g,
        },
        {
          base: 'L',
          letters: /[\u004C\u24C1\uFF2C\u013F\u0139\u013D\u1E36\u1E38\u013B\u1E3C\u1E3A\u0141\u023D\u2C62\u2C60\uA748\uA746\uA780]/g,
        },
        { base: 'LJ', letters: /[\u01C7]/g },
        { base: 'Lj', letters: /[\u01C8]/g },
        { base: 'M', letters: /[\u004D\u24C2\uFF2D\u1E3E\u1E40\u1E42\u2C6E\u019C]/g },
        {
          base: 'N',
          letters: /[\u004E\u24C3\uFF2E\u01F8\u0143\u00D1\u1E44\u0147\u1E46\u0145\u1E4A\u1E48\u0220\u019D\uA790\uA7A4]/g,
        },
        { base: 'NJ', letters: /[\u01CA]/g },
        { base: 'Nj', letters: /[\u01CB]/g },
        {
          base: 'O',
          letters: /[\u004F\u24C4\uFF2F\u00D2\u00D3\u00D4\u1ED2\u1ED0\u1ED6\u1ED4\u00D5\u1E4C\u022C\u1E4E\u014C\u1E50\u1E52\u014E\u022E\u0230\u00D6\u022A\u1ECE\u0150\u01D1\u020C\u020E\u01A0\u1EDC\u1EDA\u1EE0\u1EDE\u1EE2\u1ECC\u1ED8\u01EA\u01EC\u00D8\u01FE\u0186\u019F\uA74A\uA74C]/g,
        },
        { base: 'OI', letters: /[\u01A2]/g },
        { base: 'OO', letters: /[\uA74E]/g },
        { base: 'OU', letters: /[\u0222]/g },
        { base: 'P', letters: /[\u0050\u24C5\uFF30\u1E54\u1E56\u01A4\u2C63\uA750\uA752\uA754]/g },
        { base: 'Q', letters: /[\u0051\u24C6\uFF31\uA756\uA758\u024A]/g },
        {
          base: 'R',
          letters: /[\u0052\u24C7\uFF32\u0154\u1E58\u0158\u0210\u0212\u1E5A\u1E5C\u0156\u1E5E\u024C\u2C64\uA75A\uA7A6\uA782]/g,
        },
        {
          base: 'S',
          letters: /[\u0053\u24C8\uFF33\u1E9E\u015A\u1E64\u015C\u1E60\u0160\u1E66\u1E62\u1E68\u0218\u015E\u2C7E\uA7A8\uA784]/g,
        },
        {
          base: 'T',
          letters: /[\u0054\u24C9\uFF34\u1E6A\u0164\u1E6C\u021A\u0162\u1E70\u1E6E\u0166\u01AC\u01AE\u023E\uA786]/g,
        },
        { base: 'TZ', letters: /[\uA728]/g },
        {
          base: 'U',
          letters: /[\u0055\u24CA\uFF35\u00D9\u00DA\u00DB\u0168\u1E78\u016A\u1E7A\u016C\u00DC\u01DB\u01D7\u01D5\u01D9\u1EE6\u016E\u0170\u01D3\u0214\u0216\u01AF\u1EEA\u1EE8\u1EEE\u1EEC\u1EF0\u1EE4\u1E72\u0172\u1E76\u1E74\u0244]/g,
        },
        { base: 'V', letters: /[\u0056\u24CB\uFF36\u1E7C\u1E7E\u01B2\uA75E\u0245]/g },
        { base: 'VY', letters: /[\uA760]/g },
        { base: 'W', letters: /[\u0057\u24CC\uFF37\u1E80\u1E82\u0174\u1E86\u1E84\u1E88\u2C72]/g },
        { base: 'X', letters: /[\u0058\u24CD\uFF38\u1E8A\u1E8C]/g },
        {
          base: 'Y',
          letters: /[\u0059\u24CE\uFF39\u1EF2\u00DD\u0176\u1EF8\u0232\u1E8E\u0178\u1EF6\u1EF4\u01B3\u024E\u1EFE]/g,
        },
        {
          base: 'Z',
          letters: /[\u005A\u24CF\uFF3A\u0179\u1E90\u017B\u017D\u1E92\u1E94\u01B5\u0224\u2C7F\u2C6B\uA762]/g,
        },
        {
          base: 'a',
          letters: /[\u0061\u24D0\uFF41\u1E9A\u00E0\u00E1\u00E2\u1EA7\u1EA5\u1EAB\u1EA9\u00E3\u0101\u0103\u1EB1\u1EAF\u1EB5\u1EB3\u0227\u01E1\u00E4\u01DF\u1EA3\u00E5\u01FB\u01CE\u0201\u0203\u1EA1\u1EAD\u1EB7\u1E01\u0105\u2C65\u0250]/g,
        },
        { base: 'aa', letters: /[\uA733]/g },
        { base: 'ae', letters: /[\u00E6\u01FD\u01E3]/g },
        { base: 'ao', letters: /[\uA735]/g },
        { base: 'au', letters: /[\uA737]/g },
        { base: 'av', letters: /[\uA739\uA73B]/g },
        { base: 'ay', letters: /[\uA73D]/g },
        { base: 'b', letters: /[\u0062\u24D1\uFF42\u1E03\u1E05\u1E07\u0180\u0183\u0253]/g },
        {
          base: 'c',
          letters: /[\u0063\u24D2\uFF43\u0107\u0109\u010B\u010D\u00E7\u1E09\u0188\u023C\uA73F\u2184]/g,
        },
        {
          base: 'd',
          letters: /[\u0064\u24D3\uFF44\u1E0B\u010F\u1E0D\u1E11\u1E13\u1E0F\u0111\u018C\u0256\u0257\uA77A]/g,
        },
        { base: 'dz', letters: /[\u01F3\u01C6]/g },
        {
          base: 'e',
          letters: /[\u0065\u24D4\uFF45\u00E8\u00E9\u00EA\u1EC1\u1EBF\u1EC5\u1EC3\u1EBD\u0113\u1E15\u1E17\u0115\u0117\u00EB\u1EBB\u011B\u0205\u0207\u1EB9\u1EC7\u0229\u1E1D\u0119\u1E19\u1E1B\u0247\u025B\u01DD]/g,
        },
        { base: 'f', letters: /[\u0066\u24D5\uFF46\u1E1F\u0192\uA77C]/g },
        {
          base: 'g',
          letters: /[\u0067\u24D6\uFF47\u01F5\u011D\u1E21\u011F\u0121\u01E7\u0123\u01E5\u0260\uA7A1\u1D79\uA77F]/g,
        },
        {
          base: 'h',
          letters: /[\u0068\u24D7\uFF48\u0125\u1E23\u1E27\u021F\u1E25\u1E29\u1E2B\u1E96\u0127\u2C68\u2C76\u0265]/g,
        },
        { base: 'hv', letters: /[\u0195]/g },
        {
          base: 'i',
          letters: /[\u0069\u24D8\uFF49\u00EC\u00ED\u00EE\u0129\u012B\u012D\u00EF\u1E2F\u1EC9\u01D0\u0209\u020B\u1ECB\u012F\u1E2D\u0268\u0131]/g,
        },
        { base: 'j', letters: /[\u006A\u24D9\uFF4A\u0135\u01F0\u0249]/g },
        {
          base: 'k',
          letters: /[\u006B\u24DA\uFF4B\u1E31\u01E9\u1E33\u0137\u1E35\u0199\u2C6A\uA741\uA743\uA745\uA7A3]/g,
        },
        {
          base: 'l',
          letters: /[\u006C\u24DB\uFF4C\u0140\u013A\u013E\u1E37\u1E39\u013C\u1E3D\u1E3B\u017F\u0142\u019A\u026B\u2C61\uA749\uA781\uA747]/g,
        },
        { base: 'lj', letters: /[\u01C9]/g },
        { base: 'm', letters: /[\u006D\u24DC\uFF4D\u1E3F\u1E41\u1E43\u0271\u026F]/g },
        {
          base: 'n',
          letters: /[\u006E\u24DD\uFF4E\u01F9\u0144\u00F1\u1E45\u0148\u1E47\u0146\u1E4B\u1E49\u019E\u0272\u0149\uA791\uA7A5]/g,
        },
        { base: 'nj', letters: /[\u01CC]/g },
        {
          base: 'o',
          letters: /[\u006F\u24DE\uFF4F\u00F2\u00F3\u00F4\u1ED3\u1ED1\u1ED7\u1ED5\u00F5\u1E4D\u022D\u1E4F\u014D\u1E51\u1E53\u014F\u022F\u0231\u00F6\u022B\u1ECF\u0151\u01D2\u020D\u020F\u01A1\u1EDD\u1EDB\u1EE1\u1EDF\u1EE3\u1ECD\u1ED9\u01EB\u01ED\u00F8\u01FF\u0254\uA74B\uA74D\u0275]/g,
        },
        { base: 'oi', letters: /[\u01A3]/g },
        { base: 'ou', letters: /[\u0223]/g },
        { base: 'oo', letters: /[\uA74F]/g },
        { base: 'p', letters: /[\u0070\u24DF\uFF50\u1E55\u1E57\u01A5\u1D7D\uA751\uA753\uA755]/g },
        { base: 'q', letters: /[\u0071\u24E0\uFF51\u024B\uA757\uA759]/g },
        {
          base: 'r',
          letters: /[\u0072\u24E1\uFF52\u0155\u1E59\u0159\u0211\u0213\u1E5B\u1E5D\u0157\u1E5F\u024D\u027D\uA75B\uA7A7\uA783]/g,
        },
        {
          base: 's',
          letters: /[\u0073\u24E2\uFF53\u00DF\u015B\u1E65\u015D\u1E61\u0161\u1E67\u1E63\u1E69\u0219\u015F\u023F\uA7A9\uA785\u1E9B]/g,
        },
        {
          base: 't',
          letters: /[\u0074\u24E3\uFF54\u1E6B\u1E97\u0165\u1E6D\u021B\u0163\u1E71\u1E6F\u0167\u01AD\u0288\u2C66\uA787]/g,
        },
        { base: 'tz', letters: /[\uA729]/g },
        {
          base: 'u',
          letters: /[\u0075\u24E4\uFF55\u00F9\u00FA\u00FB\u0169\u1E79\u016B\u1E7B\u016D\u00FC\u01DC\u01D8\u01D6\u01DA\u1EE7\u016F\u0171\u01D4\u0215\u0217\u01B0\u1EEB\u1EE9\u1EEF\u1EED\u1EF1\u1EE5\u1E73\u0173\u1E77\u1E75\u0289]/g,
        },
        { base: 'v', letters: /[\u0076\u24E5\uFF56\u1E7D\u1E7F\u028B\uA75F\u028C]/g },
        { base: 'vy', letters: /[\uA761]/g },
        {
          base: 'w',
          letters: /[\u0077\u24E6\uFF57\u1E81\u1E83\u0175\u1E87\u1E85\u1E98\u1E89\u2C73]/g,
        },
        { base: 'x', letters: /[\u0078\u24E7\uFF58\u1E8B\u1E8D]/g },
        {
          base: 'y',
          letters: /[\u0079\u24E8\uFF59\u1EF3\u00FD\u0177\u1EF9\u0233\u1E8F\u00FF\u1EF7\u1E99\u1EF5\u01B4\u024F\u1EFF]/g,
        },
        {
          base: 'z',
          letters: /[\u007A\u24E9\uFF5A\u017A\u1E91\u017C\u017E\u1E93\u1E95\u01B6\u0225\u0240\u2C6C\uA763]/g,
        },
      ];

      module.exports = function stripDiacritics(str) {
        for (var i = 0; i < map.length; i++) {
          str = str.replace(map[i].letters, map[i].base);
        }
        return str;
      };

      /***/
    },
    /* 310 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true,
      });
      exports.email = email;
      exports.twitter = twitter;
      exports.telegram = telegram;
      exports.whatsapp = whatsapp;
      exports.facebook = facebook;
      exports.googlePlus = googlePlus;
      exports.linkedin = linkedin;
      exports.pinterest = pinterest;
      exports.vk = vk;
      exports.ok = ok;
      exports.reddit = reddit;

      var _assert = __webpack_require__(323);

      var _assert2 = _interopRequireDefault(_assert);

      var _utils = __webpack_require__(201);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      /* eslint-disable prefer-template */
      function email(subject, body) {
        (0, _assert2.default)(subject, 'email.subject');
        (0, _assert2.default)(body, 'email.body');

        return 'mailto:' + (0, _utils.objectToGetParams)({ subject: subject, body: body });
      }

      function twitter(url, _ref) {
        var title = _ref.title,
          via = _ref.via,
          _ref$hashtags = _ref.hashtags,
          hashtags = _ref$hashtags === undefined ? [] : _ref$hashtags;

        (0, _assert2.default)(url, 'twitter.url');
        (0, _assert2.default)(Array.isArray(hashtags), 'twitter.hashtags is not an array');

        return (
          'https://twitter.com/share' +
          (0, _utils.objectToGetParams)({
            url: url,
            text: title,
            via: via,
            hashtags: hashtags.join(','),
          })
        );
      }

      function telegram(url, _ref2) {
        var title = _ref2.title;

        (0, _assert2.default)(url, 'telegram.url');
        return (
          'https://telegram.me/share/' +
          (0, _utils.objectToGetParams)({
            url: url,
            text: title,
          })
        );
      }

      function whatsapp(url, _ref3) {
        var title = _ref3.title,
          separator = _ref3.separator;

        (0, _assert2.default)(url, 'whatsapp.url');
        return (
          'whatsapp://send' +
          (0, _utils.objectToGetParams)({
            text: title + separator + url,
          })
        );
      }

      function facebook(url, _ref4) {
        var title = _ref4.title,
          description = _ref4.description,
          picture = _ref4.picture,
          hashtag = _ref4.hashtag;

        (0, _assert2.default)(url, 'facebook.url');

        return (
          'https://www.facebook.com/sharer/sharer.php' +
          (0, _utils.objectToGetParams)({
            u: url,
            title: title,
            description: description,
            picture: picture,
            hashtag: hashtag,
          })
        );
      }

      function googlePlus(url) {
        (0, _assert2.default)(url, 'googlePlus.url');

        return 'https://plus.google.com/share' + (0, _utils.objectToGetParams)({ url: url });
      }

      function linkedin(url, _ref5) {
        var title = _ref5.title,
          description = _ref5.description;

        (0, _assert2.default)(url, 'linkedin.url');

        return (
          'https://linkedin.com/shareArticle' +
          (0, _utils.objectToGetParams)({
            url: url,
            title: title,
            summary: description,
          })
        );
      }

      function pinterest(url, _ref6) {
        var media = _ref6.media,
          description = _ref6.description;

        (0, _assert2.default)(url, 'pinterest.url');
        (0, _assert2.default)(media, 'pinterest.media');

        return (
          'https://pinterest.com/pin/create/button/' +
          (0, _utils.objectToGetParams)({
            url: url,
            media: media,
            description: description,
          })
        );
      }

      function vk(url, _ref7) {
        var title = _ref7.title,
          description = _ref7.description,
          image = _ref7.image;

        (0, _assert2.default)(url, 'vk.url');

        return (
          'https://vk.com/share.php' +
          (0, _utils.objectToGetParams)({
            url: url,
            title: title,
            description: description,
            image: image,
          })
        );
      }

      function ok(url, _ref8) {
        var title = _ref8.title,
          description = _ref8.description,
          image = _ref8.image;

        (0, _assert2.default)(url, 'ok.url');

        return (
          'https://connect.ok.ru/offer' +
          (0, _utils.objectToGetParams)({
            url: url,
            title: title,
            description: description,
            imageUrl: image,
          })
        );
      }

      function reddit(url, _ref9) {
        var title = _ref9.title;

        (0, _assert2.default)(url, 'reddit.url');

        return (
          'https://www.reddit.com/submit' +
          (0, _utils.objectToGetParams)({
            url: url,
            title: title,
          })
        );
      }

      /***/
    },
    /* 311 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';
      /**
       * Copyright 2014-present, Facebook, Inc.
       * All rights reserved.
       *
       * This source code is licensed under the BSD-style license found in the
       * LICENSE file in the root directory of this source tree. An additional grant
       * of patent rights can be found in the PATENTS file in the same directory.
       *
       *
       */

      // The Symbol used to tag the ReactElement type. If there is no native Symbol
      // nor polyfill, then a plain number is used for performance.

      var REACT_ELEMENT_TYPE =
        (typeof Symbol === 'function' && Symbol['for'] && Symbol['for']('react.element')) || 0xeac7;

      module.exports = REACT_ELEMENT_TYPE;

      /***/
    },
    /* 312 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';
      /* WEBPACK VAR INJECTION */ (function (process) {
        /**
         * Copyright 2014-present, Facebook, Inc.
         * All rights reserved.
         *
         * This source code is licensed under the BSD-style license found in the
         * LICENSE file in the root directory of this source tree. An additional grant
         * of patent rights can be found in the PATENTS file in the same directory.
         *
         */

        /**
         * ReactElementValidator provides a wrapper around a element factory
         * which validates the props passed to the element. This is intended to be
         * used only in DEV and could be replaced by a static type checker for languages
         * that support it.
         */

        var ReactCurrentOwner = __webpack_require__(42);
        var ReactComponentTreeHook = __webpack_require__(29);
        var ReactElement = __webpack_require__(69);

        var checkReactTypeSpec = __webpack_require__(765);

        var canDefineProperty = __webpack_require__(205);
        var getIteratorFn = __webpack_require__(206);
        var warning = __webpack_require__(3);

        function getDeclarationErrorAddendum() {
          if (ReactCurrentOwner.current) {
            var name = ReactCurrentOwner.current.getName();
            if (name) {
              return ' Check the render method of `' + name + '`.';
            }
          }
          return '';
        }

        /**
         * Warn if there's no key explicitly set on dynamic arrays of children or
         * object keys are not valid. This allows us to keep track of children between
         * updates.
         */
        var ownerHasKeyUseWarning = {};

        function getCurrentComponentErrorInfo(parentType) {
          var info = getDeclarationErrorAddendum();

          if (!info) {
            var parentName =
              typeof parentType === 'string'
                ? parentType
                : parentType.displayName || parentType.name;
            if (parentName) {
              info = ' Check the top-level render call using <' + parentName + '>.';
            }
          }
          return info;
        }

        /**
         * Warn if the element doesn't have an explicit key assigned to it.
         * This element is in an array. The array could grow and shrink or be
         * reordered. All children that haven't already been validated are required to
         * have a "key" property assigned to it. Error statuses are cached so a warning
         * will only be shown once.
         *
         * @internal
         * @param {ReactElement} element Element that requires a key.
         * @param {*} parentType element's parent's type.
         */
        function validateExplicitKey(element, parentType) {
          if (!element._store || element._store.validated || element.key != null) {
            return;
          }
          element._store.validated = true;

          var memoizer = ownerHasKeyUseWarning.uniqueKey || (ownerHasKeyUseWarning.uniqueKey = {});

          var currentComponentErrorInfo = getCurrentComponentErrorInfo(parentType);
          if (memoizer[currentComponentErrorInfo]) {
            return;
          }
          memoizer[currentComponentErrorInfo] = true;

          // Usually the current owner is the offender, but if it accepts children as a
          // property, it may be the creator of the child that's responsible for
          // assigning it a key.
          var childOwner = '';
          if (element && element._owner && element._owner !== ReactCurrentOwner.current) {
            // Give the component that originally created this child.
            childOwner = ' It was passed a child from ' + element._owner.getName() + '.';
          }

          process.env.NODE_ENV !== 'production'
            ? warning(
                false,
                'Each child in an array or iterator should have a unique "key" prop.' +
                  '%s%s See https://fb.me/react-warning-keys for more information.%s',
                currentComponentErrorInfo,
                childOwner,
                ReactComponentTreeHook.getCurrentStackAddendum(element)
              )
            : void 0;
        }

        /**
         * Ensure that every element either is passed in a static location, in an
         * array with an explicit keys property defined, or in an object literal
         * with valid key property.
         *
         * @internal
         * @param {ReactNode} node Statically passed child of any type.
         * @param {*} parentType node's parent's type.
         */
        function validateChildKeys(node, parentType) {
          if (typeof node !== 'object') {
            return;
          }
          if (Array.isArray(node)) {
            for (var i = 0; i < node.length; i++) {
              var child = node[i];
              if (ReactElement.isValidElement(child)) {
                validateExplicitKey(child, parentType);
              }
            }
          } else if (ReactElement.isValidElement(node)) {
            // This element was passed in a valid location.
            if (node._store) {
              node._store.validated = true;
            }
          } else if (node) {
            var iteratorFn = getIteratorFn(node);
            // Entry iterators provide implicit keys.
            if (iteratorFn) {
              if (iteratorFn !== node.entries) {
                var iterator = iteratorFn.call(node);
                var step;
                while (!(step = iterator.next()).done) {
                  if (ReactElement.isValidElement(step.value)) {
                    validateExplicitKey(step.value, parentType);
                  }
                }
              }
            }
          }
        }

        /**
         * Given an element, validate that its props follow the propTypes definition,
         * provided by the type.
         *
         * @param {ReactElement} element
         */
        function validatePropTypes(element) {
          var componentClass = element.type;
          if (typeof componentClass !== 'function') {
            return;
          }
          var name = componentClass.displayName || componentClass.name;
          if (componentClass.propTypes) {
            checkReactTypeSpec(
              componentClass.propTypes,
              element.props,
              'prop',
              name,
              element,
              null
            );
          }
          if (typeof componentClass.getDefaultProps === 'function') {
            process.env.NODE_ENV !== 'production'
              ? warning(
                  componentClass.getDefaultProps.isReactClassApproved,
                  'getDefaultProps is only used on classic React.createClass ' +
                    'definitions. Use a static property named `defaultProps` instead.'
                )
              : void 0;
          }
        }

        var ReactElementValidator = {
          createElement: function (type, props, children) {
            var validType = typeof type === 'string' || typeof type === 'function';
            // We warn in this case but don't throw. We expect the element creation to
            // succeed and there will likely be errors in render.
            if (!validType) {
              if (typeof type !== 'function' && typeof type !== 'string') {
                var info = '';
                if (
                  type === undefined ||
                  (typeof type === 'object' && type !== null && Object.keys(type).length === 0)
                ) {
                  info +=
                    ' You likely forgot to export your component from the file ' +
                    "it's defined in.";
                }
                info += getDeclarationErrorAddendum();
                process.env.NODE_ENV !== 'production'
                  ? warning(
                      false,
                      'React.createElement: type is invalid -- expected a string (for ' +
                        'built-in components) or a class/function (for composite ' +
                        'components) but got: %s.%s',
                      type == null ? type : typeof type,
                      info
                    )
                  : void 0;
              }
            }

            var element = ReactElement.createElement.apply(this, arguments);

            // The result can be nullish if a mock or a custom function is used.
            // TODO: Drop this when these are no longer allowed as the type argument.
            if (element == null) {
              return element;
            }

            // Skip key warning if the type isn't valid since our key validation logic
            // doesn't expect a non-string/function type and can throw confusing errors.
            // We don't want exception behavior to differ between dev and prod.
            // (Rendering will throw with a helpful message and as soon as the type is
            // fixed, the key warnings will appear.)
            if (validType) {
              for (var i = 2; i < arguments.length; i++) {
                validateChildKeys(arguments[i], type);
              }
            }

            validatePropTypes(element);

            return element;
          },

          createFactory: function (type) {
            var validatedFactory = ReactElementValidator.createElement.bind(null, type);
            // Legacy hook TODO: Warn if this is accessed
            validatedFactory.type = type;

            if (process.env.NODE_ENV !== 'production') {
              if (canDefineProperty) {
                Object.defineProperty(validatedFactory, 'type', {
                  enumerable: false,
                  get: function () {
                    process.env.NODE_ENV !== 'production'
                      ? warning(
                          false,
                          'Factory.type is deprecated. Access the class directly ' +
                            'before passing it to createFactory.'
                        )
                      : void 0;
                    Object.defineProperty(this, 'type', {
                      value: type,
                    });
                    return type;
                  },
                });
              }
            }

            return validatedFactory;
          },

          cloneElement: function (element, props, children) {
            var newElement = ReactElement.cloneElement.apply(this, arguments);
            for (var i = 2; i < arguments.length; i++) {
              validateChildKeys(arguments[i], newElement.type);
            }
            validatePropTypes(newElement);
            return newElement;
          },
        };

        module.exports = ReactElementValidator;
        /* WEBPACK VAR INJECTION */
      }.call(exports, __webpack_require__(1)));

      /***/
    },
    /* 313 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';
      /**
       * Copyright 2013-present, Facebook, Inc.
       * All rights reserved.
       *
       * This source code is licensed under the BSD-style license found in the
       * LICENSE file in the root directory of this source tree. An additional grant
       * of patent rights can be found in the PATENTS file in the same directory.
       *
       *
       */

      var ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';

      module.exports = ReactPropTypesSecret;

      /***/
    },
    /* 314 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';
      // a passthrough stream.
      // basically just the most minimal sort of Transform stream.
      // Every written chunk gets output as-is.

      module.exports = PassThrough;

      var Transform = __webpack_require__(207);

      /*<replacement>*/
      var util = __webpack_require__(91);
      util.inherits = __webpack_require__(40);
      /*</replacement>*/

      util.inherits(PassThrough, Transform);

      function PassThrough(options) {
        if (!(this instanceof PassThrough)) return new PassThrough(options);

        Transform.call(this, options);
      }

      PassThrough.prototype._transform = function (chunk, encoding, cb) {
        cb(null, chunk);
      };

      /***/
    },
    /* 315 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';
      /* WEBPACK VAR INJECTION */ (function (process) {
        module.exports = Readable;

        /*<replacement>*/
        var processNextTick = __webpack_require__(183);
        /*</replacement>*/

        /*<replacement>*/
        var isArray = __webpack_require__(266);
        /*</replacement>*/

        /*<replacement>*/
        var Duplex;
        /*</replacement>*/

        Readable.ReadableState = ReadableState;

        /*<replacement>*/
        var EE = __webpack_require__(93).EventEmitter;

        var EElistenerCount = function (emitter, type) {
          return emitter.listeners(type).length;
        };
        /*</replacement>*/

        /*<replacement>*/
        var Stream;
        (function () {
          try {
            Stream = __webpack_require__(126);
          } catch (_) {
          } finally {
            if (!Stream) Stream = __webpack_require__(93).EventEmitter;
          }
        })();
        /*</replacement>*/

        var Buffer = __webpack_require__(43).Buffer;
        /*<replacement>*/
        var bufferShim = __webpack_require__(131);
        /*</replacement>*/

        /*<replacement>*/
        var util = __webpack_require__(91);
        util.inherits = __webpack_require__(40);
        /*</replacement>*/

        /*<replacement>*/
        var debugUtil = __webpack_require__(799);
        var debug = void 0;
        if (debugUtil && debugUtil.debuglog) {
          debug = debugUtil.debuglog('stream');
        } else {
          debug = function () {};
        }
        /*</replacement>*/

        var BufferList = __webpack_require__(769);
        var StringDecoder;

        util.inherits(Readable, Stream);

        function prependListener(emitter, event, fn) {
          // Sadly this is not cacheable as some libraries bundle their own
          // event emitter implementation with them.
          if (typeof emitter.prependListener === 'function') {
            return emitter.prependListener(event, fn);
          } else {
            // This is a hack to make sure that our error handler is attached before any
            // userland ones.  NEVER DO THIS. This is here only because this code needs
            // to continue to work with older versions of Node.js that do not include
            // the prependListener() method. The goal is to eventually remove this hack.
            if (!emitter._events || !emitter._events[event]) emitter.on(event, fn);
            else if (isArray(emitter._events[event])) emitter._events[event].unshift(fn);
            else emitter._events[event] = [fn, emitter._events[event]];
          }
        }

        function ReadableState(options, stream) {
          Duplex = Duplex || __webpack_require__(71);

          options = options || {};

          // object stream flag. Used to make read(n) ignore n and to
          // make all the buffer merging and length checks go away
          this.objectMode = !!options.objectMode;

          if (stream instanceof Duplex)
            this.objectMode = this.objectMode || !!options.readableObjectMode;

          // the point at which it stops calling _read() to fill the buffer
          // Note: 0 is a valid value, means "don't call _read preemptively ever"
          var hwm = options.highWaterMark;
          var defaultHwm = this.objectMode ? 16 : 16 * 1024;
          this.highWaterMark = hwm || hwm === 0 ? hwm : defaultHwm;

          // cast to ints.
          this.highWaterMark = ~~this.highWaterMark;

          // A linked list is used to store data chunks instead of an array because the
          // linked list can remove elements from the beginning faster than
          // array.shift()
          this.buffer = new BufferList();
          this.length = 0;
          this.pipes = null;
          this.pipesCount = 0;
          this.flowing = null;
          this.ended = false;
          this.endEmitted = false;
          this.reading = false;

          // a flag to be able to tell if the onwrite cb is called immediately,
          // or on a later tick.  We set this to true at first, because any
          // actions that shouldn't happen until "later" should generally also
          // not happen before the first write call.
          this.sync = true;

          // whenever we return null, then we set a flag to say
          // that we're awaiting a 'readable' event emission.
          this.needReadable = false;
          this.emittedReadable = false;
          this.readableListening = false;
          this.resumeScheduled = false;

          // Crypto is kind of old and crusty.  Historically, its default string
          // encoding is 'binary' so we have to make this configurable.
          // Everything else in the universe uses 'utf8', though.
          this.defaultEncoding = options.defaultEncoding || 'utf8';

          // when piping, we only care about 'readable' events that happen
          // after read()ing all the bytes and not getting any pushback.
          this.ranOut = false;

          // the number of writers that are awaiting a drain event in .pipe()s
          this.awaitDrain = 0;

          // if true, a maybeReadMore has been scheduled
          this.readingMore = false;

          this.decoder = null;
          this.encoding = null;
          if (options.encoding) {
            if (!StringDecoder) StringDecoder = __webpack_require__(209).StringDecoder;
            this.decoder = new StringDecoder(options.encoding);
            this.encoding = options.encoding;
          }
        }

        function Readable(options) {
          Duplex = Duplex || __webpack_require__(71);

          if (!(this instanceof Readable)) return new Readable(options);

          this._readableState = new ReadableState(options, this);

          // legacy
          this.readable = true;

          if (options && typeof options.read === 'function') this._read = options.read;

          Stream.call(this);
        }

        // Manually shove something into the read() buffer.
        // This returns true if the highWaterMark has not been hit yet,
        // similar to how Writable.write() returns true if you should
        // write() some more.
        Readable.prototype.push = function (chunk, encoding) {
          var state = this._readableState;

          if (!state.objectMode && typeof chunk === 'string') {
            encoding = encoding || state.defaultEncoding;
            if (encoding !== state.encoding) {
              chunk = bufferShim.from(chunk, encoding);
              encoding = '';
            }
          }

          return readableAddChunk(this, state, chunk, encoding, false);
        };

        // Unshift should *always* be something directly out of read()
        Readable.prototype.unshift = function (chunk) {
          var state = this._readableState;
          return readableAddChunk(this, state, chunk, '', true);
        };

        Readable.prototype.isPaused = function () {
          return this._readableState.flowing === false;
        };

        function readableAddChunk(stream, state, chunk, encoding, addToFront) {
          var er = chunkInvalid(state, chunk);
          if (er) {
            stream.emit('error', er);
          } else if (chunk === null) {
            state.reading = false;
            onEofChunk(stream, state);
          } else if (state.objectMode || (chunk && chunk.length > 0)) {
            if (state.ended && !addToFront) {
              var e = new Error('stream.push() after EOF');
              stream.emit('error', e);
            } else if (state.endEmitted && addToFront) {
              var _e = new Error('stream.unshift() after end event');
              stream.emit('error', _e);
            } else {
              var skipAdd;
              if (state.decoder && !addToFront && !encoding) {
                chunk = state.decoder.write(chunk);
                skipAdd = !state.objectMode && chunk.length === 0;
              }

              if (!addToFront) state.reading = false;

              // Don't add to the buffer if we've decoded to an empty string chunk and
              // we're not in object mode
              if (!skipAdd) {
                // if we want the data now, just emit it.
                if (state.flowing && state.length === 0 && !state.sync) {
                  stream.emit('data', chunk);
                  stream.read(0);
                } else {
                  // update the buffer info.
                  state.length += state.objectMode ? 1 : chunk.length;
                  if (addToFront) state.buffer.unshift(chunk);
                  else state.buffer.push(chunk);

                  if (state.needReadable) emitReadable(stream);
                }
              }

              maybeReadMore(stream, state);
            }
          } else if (!addToFront) {
            state.reading = false;
          }

          return needMoreData(state);
        }

        // if it's past the high water mark, we can push in some more.
        // Also, if we have no data yet, we can stand some
        // more bytes.  This is to work around cases where hwm=0,
        // such as the repl.  Also, if the push() triggered a
        // readable event, and the user called read(largeNumber) such that
        // needReadable was set, then we ought to push more, so that another
        // 'readable' event will be triggered.
        function needMoreData(state) {
          return (
            !state.ended &&
            (state.needReadable || state.length < state.highWaterMark || state.length === 0)
          );
        }

        // backwards compatibility.
        Readable.prototype.setEncoding = function (enc) {
          if (!StringDecoder) StringDecoder = __webpack_require__(209).StringDecoder;
          this._readableState.decoder = new StringDecoder(enc);
          this._readableState.encoding = enc;
          return this;
        };

        // Don't raise the hwm > 8MB
        var MAX_HWM = 0x800000;
        function computeNewHighWaterMark(n) {
          if (n >= MAX_HWM) {
            n = MAX_HWM;
          } else {
            // Get the next highest power of 2 to prevent increasing hwm excessively in
            // tiny amounts
            n--;
            n |= n >>> 1;
            n |= n >>> 2;
            n |= n >>> 4;
            n |= n >>> 8;
            n |= n >>> 16;
            n++;
          }
          return n;
        }

        // This function is designed to be inlinable, so please take care when making
        // changes to the function body.
        function howMuchToRead(n, state) {
          if (n <= 0 || (state.length === 0 && state.ended)) return 0;
          if (state.objectMode) return 1;
          if (n !== n) {
            // Only flow one buffer at a time
            if (state.flowing && state.length) return state.buffer.head.data.length;
            else return state.length;
          }
          // If we're asking for more than the current hwm, then raise the hwm.
          if (n > state.highWaterMark) state.highWaterMark = computeNewHighWaterMark(n);
          if (n <= state.length) return n;
          // Don't have enough
          if (!state.ended) {
            state.needReadable = true;
            return 0;
          }
          return state.length;
        }

        // you can override either this method, or the async _read(n) below.
        Readable.prototype.read = function (n) {
          debug('read', n);
          n = parseInt(n, 10);
          var state = this._readableState;
          var nOrig = n;

          if (n !== 0) state.emittedReadable = false;

          // if we're doing read(0) to trigger a readable event, but we
          // already have a bunch of data in the buffer, then just trigger
          // the 'readable' event and move on.
          if (
            n === 0 &&
            state.needReadable &&
            (state.length >= state.highWaterMark || state.ended)
          ) {
            debug('read: emitReadable', state.length, state.ended);
            if (state.length === 0 && state.ended) endReadable(this);
            else emitReadable(this);
            return null;
          }

          n = howMuchToRead(n, state);

          // if we've ended, and we're now clear, then finish it up.
          if (n === 0 && state.ended) {
            if (state.length === 0) endReadable(this);
            return null;
          }

          // All the actual chunk generation logic needs to be
          // *below* the call to _read.  The reason is that in certain
          // synthetic stream cases, such as passthrough streams, _read
          // may be a completely synchronous operation which may change
          // the state of the read buffer, providing enough data when
          // before there was *not* enough.
          //
          // So, the steps are:
          // 1. Figure out what the state of things will be after we do
          // a read from the buffer.
          //
          // 2. If that resulting state will trigger a _read, then call _read.
          // Note that this may be asynchronous, or synchronous.  Yes, it is
          // deeply ugly to write APIs this way, but that still doesn't mean
          // that the Readable class should behave improperly, as streams are
          // designed to be sync/async agnostic.
          // Take note if the _read call is sync or async (ie, if the read call
          // has returned yet), so that we know whether or not it's safe to emit
          // 'readable' etc.
          //
          // 3. Actually pull the requested chunks out of the buffer and return.

          // if we need a readable event, then we need to do some reading.
          var doRead = state.needReadable;
          debug('need readable', doRead);

          // if we currently have less than the highWaterMark, then also read some
          if (state.length === 0 || state.length - n < state.highWaterMark) {
            doRead = true;
            debug('length less than watermark', doRead);
          }

          // however, if we've ended, then there's no point, and if we're already
          // reading, then it's unnecessary.
          if (state.ended || state.reading) {
            doRead = false;
            debug('reading or ended', doRead);
          } else if (doRead) {
            debug('do read');
            state.reading = true;
            state.sync = true;
            // if the length is currently zero, then we *need* a readable event.
            if (state.length === 0) state.needReadable = true;
            // call internal read method
            this._read(state.highWaterMark);
            state.sync = false;
            // If _read pushed data synchronously, then `reading` will be false,
            // and we need to re-evaluate how much data we can return to the user.
            if (!state.reading) n = howMuchToRead(nOrig, state);
          }

          var ret;
          if (n > 0) ret = fromList(n, state);
          else ret = null;

          if (ret === null) {
            state.needReadable = true;
            n = 0;
          } else {
            state.length -= n;
          }

          if (state.length === 0) {
            // If we have nothing in the buffer, then we want to know
            // as soon as we *do* get something into the buffer.
            if (!state.ended) state.needReadable = true;

            // If we tried to read() past the EOF, then emit end on the next tick.
            if (nOrig !== n && state.ended) endReadable(this);
          }

          if (ret !== null) this.emit('data', ret);

          return ret;
        };

        function chunkInvalid(state, chunk) {
          var er = null;
          if (
            !Buffer.isBuffer(chunk) &&
            typeof chunk !== 'string' &&
            chunk !== null &&
            chunk !== undefined &&
            !state.objectMode
          ) {
            er = new TypeError('Invalid non-string/buffer chunk');
          }
          return er;
        }

        function onEofChunk(stream, state) {
          if (state.ended) return;
          if (state.decoder) {
            var chunk = state.decoder.end();
            if (chunk && chunk.length) {
              state.buffer.push(chunk);
              state.length += state.objectMode ? 1 : chunk.length;
            }
          }
          state.ended = true;

          // emit 'readable' now to make sure it gets picked up.
          emitReadable(stream);
        }

        // Don't emit readable right away in sync mode, because this can trigger
        // another read() call => stack overflow.  This way, it might trigger
        // a nextTick recursion warning, but that's not so bad.
        function emitReadable(stream) {
          var state = stream._readableState;
          state.needReadable = false;
          if (!state.emittedReadable) {
            debug('emitReadable', state.flowing);
            state.emittedReadable = true;
            if (state.sync) processNextTick(emitReadable_, stream);
            else emitReadable_(stream);
          }
        }

        function emitReadable_(stream) {
          debug('emit readable');
          stream.emit('readable');
          flow(stream);
        }

        // at this point, the user has presumably seen the 'readable' event,
        // and called read() to consume some data.  that may have triggered
        // in turn another _read(n) call, in which case reading = true if
        // it's in progress.
        // However, if we're not ended, or reading, and the length < hwm,
        // then go ahead and try to read some more preemptively.
        function maybeReadMore(stream, state) {
          if (!state.readingMore) {
            state.readingMore = true;
            processNextTick(maybeReadMore_, stream, state);
          }
        }

        function maybeReadMore_(stream, state) {
          var len = state.length;
          while (
            !state.reading &&
            !state.flowing &&
            !state.ended &&
            state.length < state.highWaterMark
          ) {
            debug('maybeReadMore read 0');
            stream.read(0);
            if (len === state.length)
              // didn't get any data, stop spinning.
              break;
            else len = state.length;
          }
          state.readingMore = false;
        }

        // abstract method.  to be overridden in specific implementation classes.
        // call cb(er, data) where data is <= n in length.
        // for virtual (non-string, non-buffer) streams, "length" is somewhat
        // arbitrary, and perhaps not very meaningful.
        Readable.prototype._read = function (n) {
          this.emit('error', new Error('_read() is not implemented'));
        };

        Readable.prototype.pipe = function (dest, pipeOpts) {
          var src = this;
          var state = this._readableState;

          switch (state.pipesCount) {
            case 0:
              state.pipes = dest;
              break;
            case 1:
              state.pipes = [state.pipes, dest];
              break;
            default:
              state.pipes.push(dest);
              break;
          }
          state.pipesCount += 1;
          debug('pipe count=%d opts=%j', state.pipesCount, pipeOpts);

          var doEnd =
            (!pipeOpts || pipeOpts.end !== false) &&
            dest !== process.stdout &&
            dest !== process.stderr;

          var endFn = doEnd ? onend : cleanup;
          if (state.endEmitted) processNextTick(endFn);
          else src.once('end', endFn);

          dest.on('unpipe', onunpipe);
          function onunpipe(readable) {
            debug('onunpipe');
            if (readable === src) {
              cleanup();
            }
          }

          function onend() {
            debug('onend');
            dest.end();
          }

          // when the dest drains, it reduces the awaitDrain counter
          // on the source.  This would be more elegant with a .once()
          // handler in flow(), but adding and removing repeatedly is
          // too slow.
          var ondrain = pipeOnDrain(src);
          dest.on('drain', ondrain);

          var cleanedUp = false;
          function cleanup() {
            debug('cleanup');
            // cleanup event handlers once the pipe is broken
            dest.removeListener('close', onclose);
            dest.removeListener('finish', onfinish);
            dest.removeListener('drain', ondrain);
            dest.removeListener('error', onerror);
            dest.removeListener('unpipe', onunpipe);
            src.removeListener('end', onend);
            src.removeListener('end', cleanup);
            src.removeListener('data', ondata);

            cleanedUp = true;

            // if the reader is waiting for a drain event from this
            // specific writer, then it would cause it to never start
            // flowing again.
            // So, if this is awaiting a drain, then we just call it now.
            // If we don't know, then assume that we are waiting for one.
            if (state.awaitDrain && (!dest._writableState || dest._writableState.needDrain))
              ondrain();
          }

          // If the user pushes more data while we're writing to dest then we'll end up
          // in ondata again. However, we only want to increase awaitDrain once because
          // dest will only emit one 'drain' event for the multiple writes.
          // => Introduce a guard on increasing awaitDrain.
          var increasedAwaitDrain = false;
          src.on('data', ondata);
          function ondata(chunk) {
            debug('ondata');
            increasedAwaitDrain = false;
            var ret = dest.write(chunk);
            if (false === ret && !increasedAwaitDrain) {
              // If the user unpiped during `dest.write()`, it is possible
              // to get stuck in a permanently paused state if that write
              // also returned false.
              // => Check whether `dest` is still a piping destination.
              if (
                ((state.pipesCount === 1 && state.pipes === dest) ||
                  (state.pipesCount > 1 && indexOf(state.pipes, dest) !== -1)) &&
                !cleanedUp
              ) {
                debug('false write response, pause', src._readableState.awaitDrain);
                src._readableState.awaitDrain++;
                increasedAwaitDrain = true;
              }
              src.pause();
            }
          }

          // if the dest has an error, then stop piping into it.
          // however, don't suppress the throwing behavior for this.
          function onerror(er) {
            debug('onerror', er);
            unpipe();
            dest.removeListener('error', onerror);
            if (EElistenerCount(dest, 'error') === 0) dest.emit('error', er);
          }

          // Make sure our error handler is attached before userland ones.
          prependListener(dest, 'error', onerror);

          // Both close and finish should trigger unpipe, but only once.
          function onclose() {
            dest.removeListener('finish', onfinish);
            unpipe();
          }
          dest.once('close', onclose);
          function onfinish() {
            debug('onfinish');
            dest.removeListener('close', onclose);
            unpipe();
          }
          dest.once('finish', onfinish);

          function unpipe() {
            debug('unpipe');
            src.unpipe(dest);
          }

          // tell the dest that it's being piped to
          dest.emit('pipe', src);

          // start the flow if it hasn't been started already.
          if (!state.flowing) {
            debug('pipe resume');
            src.resume();
          }

          return dest;
        };

        function pipeOnDrain(src) {
          return function () {
            var state = src._readableState;
            debug('pipeOnDrain', state.awaitDrain);
            if (state.awaitDrain) state.awaitDrain--;
            if (state.awaitDrain === 0 && EElistenerCount(src, 'data')) {
              state.flowing = true;
              flow(src);
            }
          };
        }

        Readable.prototype.unpipe = function (dest) {
          var state = this._readableState;

          // if we're not piping anywhere, then do nothing.
          if (state.pipesCount === 0) return this;

          // just one destination.  most common case.
          if (state.pipesCount === 1) {
            // passed in one, but it's not the right one.
            if (dest && dest !== state.pipes) return this;

            if (!dest) dest = state.pipes;

            // got a match.
            state.pipes = null;
            state.pipesCount = 0;
            state.flowing = false;
            if (dest) dest.emit('unpipe', this);
            return this;
          }

          // slow case. multiple pipe destinations.

          if (!dest) {
            // remove all.
            var dests = state.pipes;
            var len = state.pipesCount;
            state.pipes = null;
            state.pipesCount = 0;
            state.flowing = false;

            for (var i = 0; i < len; i++) {
              dests[i].emit('unpipe', this);
            }
            return this;
          }

          // try to find the right one.
          var index = indexOf(state.pipes, dest);
          if (index === -1) return this;

          state.pipes.splice(index, 1);
          state.pipesCount -= 1;
          if (state.pipesCount === 1) state.pipes = state.pipes[0];

          dest.emit('unpipe', this);

          return this;
        };

        // set up data events if they are asked for
        // Ensure readable listeners eventually get something
        Readable.prototype.on = function (ev, fn) {
          var res = Stream.prototype.on.call(this, ev, fn);

          if (ev === 'data') {
            // Start flowing on next tick if stream isn't explicitly paused
            if (this._readableState.flowing !== false) this.resume();
          } else if (ev === 'readable') {
            var state = this._readableState;
            if (!state.endEmitted && !state.readableListening) {
              state.readableListening = state.needReadable = true;
              state.emittedReadable = false;
              if (!state.reading) {
                processNextTick(nReadingNextTick, this);
              } else if (state.length) {
                emitReadable(this, state);
              }
            }
          }

          return res;
        };
        Readable.prototype.addListener = Readable.prototype.on;

        function nReadingNextTick(self) {
          debug('readable nexttick read 0');
          self.read(0);
        }

        // pause() and resume() are remnants of the legacy readable stream API
        // If the user uses them, then switch into old mode.
        Readable.prototype.resume = function () {
          var state = this._readableState;
          if (!state.flowing) {
            debug('resume');
            state.flowing = true;
            resume(this, state);
          }
          return this;
        };

        function resume(stream, state) {
          if (!state.resumeScheduled) {
            state.resumeScheduled = true;
            processNextTick(resume_, stream, state);
          }
        }

        function resume_(stream, state) {
          if (!state.reading) {
            debug('resume read 0');
            stream.read(0);
          }

          state.resumeScheduled = false;
          state.awaitDrain = 0;
          stream.emit('resume');
          flow(stream);
          if (state.flowing && !state.reading) stream.read(0);
        }

        Readable.prototype.pause = function () {
          debug('call pause flowing=%j', this._readableState.flowing);
          if (false !== this._readableState.flowing) {
            debug('pause');
            this._readableState.flowing = false;
            this.emit('pause');
          }
          return this;
        };

        function flow(stream) {
          var state = stream._readableState;
          debug('flow', state.flowing);
          while (state.flowing && stream.read() !== null) {}
        }

        // wrap an old-style stream as the async data source.
        // This is *not* part of the readable stream interface.
        // It is an ugly unfortunate mess of history.
        Readable.prototype.wrap = function (stream) {
          var state = this._readableState;
          var paused = false;

          var self = this;
          stream.on('end', function () {
            debug('wrapped end');
            if (state.decoder && !state.ended) {
              var chunk = state.decoder.end();
              if (chunk && chunk.length) self.push(chunk);
            }

            self.push(null);
          });

          stream.on('data', function (chunk) {
            debug('wrapped data');
            if (state.decoder) chunk = state.decoder.write(chunk);

            // don't skip over falsy values in objectMode
            if (state.objectMode && (chunk === null || chunk === undefined)) return;
            else if (!state.objectMode && (!chunk || !chunk.length)) return;

            var ret = self.push(chunk);
            if (!ret) {
              paused = true;
              stream.pause();
            }
          });

          // proxy all the other methods.
          // important when wrapping filters and duplexes.
          for (var i in stream) {
            if (this[i] === undefined && typeof stream[i] === 'function') {
              this[i] = (function (method) {
                return function () {
                  return stream[method].apply(stream, arguments);
                };
              })(i);
            }
          }

          // proxy certain important events.
          var events = ['error', 'close', 'destroy', 'pause', 'resume'];
          forEach(events, function (ev) {
            stream.on(ev, self.emit.bind(self, ev));
          });

          // when we try to consume some more bytes, simply unpause the
          // underlying stream.
          self._read = function (n) {
            debug('wrapped _read', n);
            if (paused) {
              paused = false;
              stream.resume();
            }
          };

          return self;
        };

        // exposed for testing purposes only.
        Readable._fromList = fromList;

        // Pluck off n bytes from an array of buffers.
        // Length is the combined lengths of all the buffers in the list.
        // This function is designed to be inlinable, so please take care when making
        // changes to the function body.
        function fromList(n, state) {
          // nothing buffered
          if (state.length === 0) return null;

          var ret;
          if (state.objectMode) ret = state.buffer.shift();
          else if (!n || n >= state.length) {
            // read it all, truncate the list
            if (state.decoder) ret = state.buffer.join('');
            else if (state.buffer.length === 1) ret = state.buffer.head.data;
            else ret = state.buffer.concat(state.length);
            state.buffer.clear();
          } else {
            // read part of list
            ret = fromListPartial(n, state.buffer, state.decoder);
          }

          return ret;
        }

        // Extracts only enough buffered data to satisfy the amount requested.
        // This function is designed to be inlinable, so please take care when making
        // changes to the function body.
        function fromListPartial(n, list, hasStrings) {
          var ret;
          if (n < list.head.data.length) {
            // slice is the same for buffers and strings
            ret = list.head.data.slice(0, n);
            list.head.data = list.head.data.slice(n);
          } else if (n === list.head.data.length) {
            // first chunk is a perfect match
            ret = list.shift();
          } else {
            // result spans more than one buffer
            ret = hasStrings ? copyFromBufferString(n, list) : copyFromBuffer(n, list);
          }
          return ret;
        }

        // Copies a specified amount of characters from the list of buffered data
        // chunks.
        // This function is designed to be inlinable, so please take care when making
        // changes to the function body.
        function copyFromBufferString(n, list) {
          var p = list.head;
          var c = 1;
          var ret = p.data;
          n -= ret.length;
          while ((p = p.next)) {
            var str = p.data;
            var nb = n > str.length ? str.length : n;
            if (nb === str.length) ret += str;
            else ret += str.slice(0, n);
            n -= nb;
            if (n === 0) {
              if (nb === str.length) {
                ++c;
                if (p.next) list.head = p.next;
                else list.head = list.tail = null;
              } else {
                list.head = p;
                p.data = str.slice(nb);
              }
              break;
            }
            ++c;
          }
          list.length -= c;
          return ret;
        }

        // Copies a specified amount of bytes from the list of buffered data chunks.
        // This function is designed to be inlinable, so please take care when making
        // changes to the function body.
        function copyFromBuffer(n, list) {
          var ret = bufferShim.allocUnsafe(n);
          var p = list.head;
          var c = 1;
          p.data.copy(ret);
          n -= p.data.length;
          while ((p = p.next)) {
            var buf = p.data;
            var nb = n > buf.length ? buf.length : n;
            buf.copy(ret, ret.length - n, 0, nb);
            n -= nb;
            if (n === 0) {
              if (nb === buf.length) {
                ++c;
                if (p.next) list.head = p.next;
                else list.head = list.tail = null;
              } else {
                list.head = p;
                p.data = buf.slice(nb);
              }
              break;
            }
            ++c;
          }
          list.length -= c;
          return ret;
        }

        function endReadable(stream) {
          var state = stream._readableState;

          // If we get here before consuming all the bytes, then that is a
          // bug in node.  Should never happen.
          if (state.length > 0) throw new Error('"endReadable()" called on non-empty stream');

          if (!state.endEmitted) {
            state.ended = true;
            processNextTick(endReadableNT, state, stream);
          }
        }

        function endReadableNT(state, stream) {
          // Check that we didn't get one last unshift.
          if (!state.endEmitted && state.length === 0) {
            state.endEmitted = true;
            stream.readable = false;
            stream.emit('end');
          }
        }

        function forEach(xs, f) {
          for (var i = 0, l = xs.length; i < l; i++) {
            f(xs[i], i);
          }
        }

        function indexOf(xs, x) {
          for (var i = 0, l = xs.length; i < l; i++) {
            if (xs[i] === x) return i;
          }
          return -1;
        }
        /* WEBPACK VAR INJECTION */
      }.call(exports, __webpack_require__(1)));

      /***/
    },
    /* 316 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true,
      });

      exports.default = function (action) {
        return action && action.type === '@@redux/INIT'
          ? 'initialState argument passed to createStore'
          : 'previous state received by the reducer';
      };

      module.exports = exports['default'];
      //# sourceMappingURL=getStateName.js.map

      /***/
    },
    /* 317 */
    /***/ function (module, __webpack_exports__, __webpack_require__) {
      'use strict';
      /* harmony export (immutable) */ __webpack_exports__['a'] = compose;
      /**
       * Composes single-argument functions from right to left. The rightmost
       * function can take multiple arguments as it provides the signature for
       * the resulting composite function.
       *
       * @param {...Function} funcs The functions to compose.
       * @returns {Function} A function obtained by composing the argument functions
       * from right to left. For example, compose(f, g, h) is identical to doing
       * (...args) => f(g(h(...args))).
       */

      function compose() {
        for (var _len = arguments.length, funcs = Array(_len), _key = 0; _key < _len; _key++) {
          funcs[_key] = arguments[_key];
        }

        if (funcs.length === 0) {
          return function (arg) {
            return arg;
          };
        }

        if (funcs.length === 1) {
          return funcs[0];
        }

        var last = funcs[funcs.length - 1];
        var rest = funcs.slice(0, -1);
        return function () {
          return rest.reduceRight(function (composed, f) {
            return f(composed);
          }, last.apply(undefined, arguments));
        };
      }

      /***/
    },
    /* 318 */
    /***/ function (module, __webpack_exports__, __webpack_require__) {
      'use strict';
      /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_lodash_es_isPlainObject__ = __webpack_require__(
        174
      );
      /* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_symbol_observable__ = __webpack_require__(
        787
      );
      /* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_symbol_observable___default = __webpack_require__.n(
        __WEBPACK_IMPORTED_MODULE_1_symbol_observable__
      );
      /* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, 'b', function () {
        return ActionTypes;
      });
      /* harmony export (immutable) */ __webpack_exports__['a'] = createStore;

      /**
       * These are private action types reserved by Redux.
       * For any unknown actions, you must return the current state.
       * If the current state is undefined, you must return the initial state.
       * Do not reference these action types directly in your code.
       */
      var ActionTypes = {
        INIT: '@@redux/INIT',
      };

      /**
       * Creates a Redux store that holds the state tree.
       * The only way to change the data in the store is to call `dispatch()` on it.
       *
       * There should only be a single store in your app. To specify how different
       * parts of the state tree respond to actions, you may combine several reducers
       * into a single reducer function by using `combineReducers`.
       *
       * @param {Function} reducer A function that returns the next state tree, given
       * the current state tree and the action to handle.
       *
       * @param {any} [preloadedState] The initial state. You may optionally specify it
       * to hydrate the state from the server in universal apps, or to restore a
       * previously serialized user session.
       * If you use `combineReducers` to produce the root reducer function, this must be
       * an object with the same shape as `combineReducers` keys.
       *
       * @param {Function} enhancer The store enhancer. You may optionally specify it
       * to enhance the store with third-party capabilities such as middleware,
       * time travel, persistence, etc. The only store enhancer that ships with Redux
       * is `applyMiddleware()`.
       *
       * @returns {Store} A Redux store that lets you read the state, dispatch actions
       * and subscribe to changes.
       */
      function createStore(reducer, preloadedState, enhancer) {
        var _ref2;

        if (typeof preloadedState === 'function' && typeof enhancer === 'undefined') {
          enhancer = preloadedState;
          preloadedState = undefined;
        }

        if (typeof enhancer !== 'undefined') {
          if (typeof enhancer !== 'function') {
            throw new Error('Expected the enhancer to be a function.');
          }

          return enhancer(createStore)(reducer, preloadedState);
        }

        if (typeof reducer !== 'function') {
          throw new Error('Expected the reducer to be a function.');
        }

        var currentReducer = reducer;
        var currentState = preloadedState;
        var currentListeners = [];
        var nextListeners = currentListeners;
        var isDispatching = false;

        function ensureCanMutateNextListeners() {
          if (nextListeners === currentListeners) {
            nextListeners = currentListeners.slice();
          }
        }

        /**
         * Reads the state tree managed by the store.
         *
         * @returns {any} The current state tree of your application.
         */
        function getState() {
          return currentState;
        }

        /**
         * Adds a change listener. It will be called any time an action is dispatched,
         * and some part of the state tree may potentially have changed. You may then
         * call `getState()` to read the current state tree inside the callback.
         *
         * You may call `dispatch()` from a change listener, with the following
         * caveats:
         *
         * 1. The subscriptions are snapshotted just before every `dispatch()` call.
         * If you subscribe or unsubscribe while the listeners are being invoked, this
         * will not have any effect on the `dispatch()` that is currently in progress.
         * However, the next `dispatch()` call, whether nested or not, will use a more
         * recent snapshot of the subscription list.
         *
         * 2. The listener should not expect to see all state changes, as the state
         * might have been updated multiple times during a nested `dispatch()` before
         * the listener is called. It is, however, guaranteed that all subscribers
         * registered before the `dispatch()` started will be called with the latest
         * state by the time it exits.
         *
         * @param {Function} listener A callback to be invoked on every dispatch.
         * @returns {Function} A function to remove this change listener.
         */
        function subscribe(listener) {
          if (typeof listener !== 'function') {
            throw new Error('Expected listener to be a function.');
          }

          var isSubscribed = true;

          ensureCanMutateNextListeners();
          nextListeners.push(listener);

          return function unsubscribe() {
            if (!isSubscribed) {
              return;
            }

            isSubscribed = false;

            ensureCanMutateNextListeners();
            var index = nextListeners.indexOf(listener);
            nextListeners.splice(index, 1);
          };
        }

        /**
         * Dispatches an action. It is the only way to trigger a state change.
         *
         * The `reducer` function, used to create the store, will be called with the
         * current state tree and the given `action`. Its return value will
         * be considered the **next** state of the tree, and the change listeners
         * will be notified.
         *
         * The base implementation only supports plain object actions. If you want to
         * dispatch a Promise, an Observable, a thunk, or something else, you need to
         * wrap your store creating function into the corresponding middleware. For
         * example, see the documentation for the `redux-thunk` package. Even the
         * middleware will eventually dispatch plain object actions using this method.
         *
         * @param {Object} action A plain object representing “what changed”. It is
         * a good idea to keep actions serializable so you can record and replay user
         * sessions, or use the time travelling `redux-devtools`. An action must have
         * a `type` property which may not be `undefined`. It is a good idea to use
         * string constants for action types.
         *
         * @returns {Object} For convenience, the same action object you dispatched.
         *
         * Note that, if you use a custom middleware, it may wrap `dispatch()` to
         * return something else (for example, a Promise you can await).
         */
        function dispatch(action) {
          if (
            !__webpack_require__.i(
              __WEBPACK_IMPORTED_MODULE_0_lodash_es_isPlainObject__['a' /* default */]
            )(action)
          ) {
            throw new Error(
              'Actions must be plain objects. ' + 'Use custom middleware for async actions.'
            );
          }

          if (typeof action.type === 'undefined') {
            throw new Error(
              'Actions may not have an undefined "type" property. ' +
                'Have you misspelled a constant?'
            );
          }

          if (isDispatching) {
            throw new Error('Reducers may not dispatch actions.');
          }

          try {
            isDispatching = true;
            currentState = currentReducer(currentState, action);
          } finally {
            isDispatching = false;
          }

          var listeners = (currentListeners = nextListeners);
          for (var i = 0; i < listeners.length; i++) {
            listeners[i]();
          }

          return action;
        }

        /**
         * Replaces the reducer currently used by the store to calculate the state.
         *
         * You might need this if your app implements code splitting and you want to
         * load some of the reducers dynamically. You might also need this if you
         * implement a hot reloading mechanism for Redux.
         *
         * @param {Function} nextReducer The reducer for the store to use instead.
         * @returns {void}
         */
        function replaceReducer(nextReducer) {
          if (typeof nextReducer !== 'function') {
            throw new Error('Expected the nextReducer to be a function.');
          }

          currentReducer = nextReducer;
          dispatch({ type: ActionTypes.INIT });
        }

        /**
         * Interoperability point for observable/reactive libraries.
         * @returns {observable} A minimal observable of state changes.
         * For more information, see the observable proposal:
         * https://github.com/zenparsing/es-observable
         */
        function observable() {
          var _ref;

          var outerSubscribe = subscribe;
          return (
            (_ref = {
              /**
               * The minimal observable subscription method.
               * @param {Object} observer Any object that can be used as an observer.
               * The observer object should have a `next` method.
               * @returns {subscription} An object with an `unsubscribe` method that can
               * be used to unsubscribe the observable from the store, and prevent further
               * emission of values from the observable.
               */
              subscribe: function subscribe(observer) {
                if (typeof observer !== 'object') {
                  throw new TypeError('Expected the observer to be an object.');
                }

                function observeState() {
                  if (observer.next) {
                    observer.next(getState());
                  }
                }

                observeState();
                var unsubscribe = outerSubscribe(observeState);
                return { unsubscribe: unsubscribe };
              },
            }),
            (_ref[__WEBPACK_IMPORTED_MODULE_1_symbol_observable___default.a] = function () {
              return this;
            }),
            _ref
          );
        }

        // When a store is created, an "INIT" action is dispatched so that every
        // reducer returns their initial state. This effectively populates
        // the initial state tree.
        dispatch({ type: ActionTypes.INIT });

        return (
          (_ref2 = {
            dispatch: dispatch,
            subscribe: subscribe,
            getState: getState,
            replaceReducer: replaceReducer,
          }),
          (_ref2[__WEBPACK_IMPORTED_MODULE_1_symbol_observable___default.a] = observable),
          _ref2
        );
      }

      /***/
    },
    /* 319 */
    /***/ function (module, __webpack_exports__, __webpack_require__) {
      'use strict';
      /* WEBPACK VAR INJECTION */ (function (process) {
        Object.defineProperty(__webpack_exports__, '__esModule', { value: true });
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__createStore__ = __webpack_require__(
          318
        );
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__combineReducers__ = __webpack_require__(
          781
        );
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__bindActionCreators__ = __webpack_require__(
          780
        );
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__applyMiddleware__ = __webpack_require__(
          779
        );
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__compose__ = __webpack_require__(317);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__utils_warning__ = __webpack_require__(
          320
        );
        /* harmony reexport (binding) */ __webpack_require__.d(
          __webpack_exports__,
          'createStore',
          function () {
            return __WEBPACK_IMPORTED_MODULE_0__createStore__['a'];
          }
        );
        /* harmony reexport (binding) */ __webpack_require__.d(
          __webpack_exports__,
          'combineReducers',
          function () {
            return __WEBPACK_IMPORTED_MODULE_1__combineReducers__['a'];
          }
        );
        /* harmony reexport (binding) */ __webpack_require__.d(
          __webpack_exports__,
          'bindActionCreators',
          function () {
            return __WEBPACK_IMPORTED_MODULE_2__bindActionCreators__['a'];
          }
        );
        /* harmony reexport (binding) */ __webpack_require__.d(
          __webpack_exports__,
          'applyMiddleware',
          function () {
            return __WEBPACK_IMPORTED_MODULE_3__applyMiddleware__['a'];
          }
        );
        /* harmony reexport (binding) */ __webpack_require__.d(
          __webpack_exports__,
          'compose',
          function () {
            return __WEBPACK_IMPORTED_MODULE_4__compose__['a'];
          }
        );

        /*
         * This is a dummy function to check if the function name has been altered by minification.
         * If the function has been minified and NODE_ENV !== 'production', warn the user.
         */
        function isCrushed() {}

        if (
          process.env.NODE_ENV !== 'production' &&
          typeof isCrushed.name === 'string' &&
          isCrushed.name !== 'isCrushed'
        ) {
          __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_5__utils_warning__['a' /* default */])(
            "You are currently using minified code outside of NODE_ENV === 'production'. " +
              'This means that you are running a slower development build of Redux. ' +
              'You can use loose-envify (https://github.com/zertosh/loose-envify) for browserify ' +
              'or DefinePlugin for webpack (http://stackoverflow.com/questions/30030031) ' +
              'to ensure you have the correct code for your production build.'
          );
        }

        /* WEBPACK VAR INJECTION */
      }.call(__webpack_exports__, __webpack_require__(1)));

      /***/
    },
    /* 320 */
    /***/ function (module, __webpack_exports__, __webpack_require__) {
      'use strict';
      /* harmony export (immutable) */ __webpack_exports__['a'] = warning;
      /**
       * Prints a warning in the console if it exists.
       *
       * @param {String} message The warning message.
       * @returns {void}
       */
      function warning(message) {
        /* eslint-disable no-console */
        if (typeof console !== 'undefined' && typeof console.error === 'function') {
          console.error(message);
        }
        /* eslint-enable no-console */
        try {
          // This error was thrown as a convenience so that if you enable
          // "break on all exceptions" in your console,
          // it would pause the execution at this line.
          throw new Error(message);
          /* eslint-disable no-empty */
        } catch (e) {}
        /* eslint-enable no-empty */
      }

      /***/
    },
    /* 321 */
    /***/ function (module, exports) {
      /* (ignored) */
      /***/
    },
    /* 322 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';
      /* WEBPACK VAR INJECTION */ (function (global) {
        // there's 3 implementations written in increasing order of efficiency

        // 1 - no Set type is defined
        function uniqNoSet(arr) {
          var ret = [];

          for (var i = 0; i < arr.length; i++) {
            if (ret.indexOf(arr[i]) === -1) {
              ret.push(arr[i]);
            }
          }

          return ret;
        }

        // 2 - a simple Set type is defined
        function uniqSet(arr) {
          var seen = new Set();
          return arr.filter(function (el) {
            if (!seen.has(el)) {
              seen.add(el);
              return true;
            }

            return false;
          });
        }

        // 3 - a standard Set type is defined and it has a forEach method
        function uniqSetWithForEach(arr) {
          var ret = [];

          new Set(arr).forEach(function (el) {
            ret.push(el);
          });

          return ret;
        }

        // V8 currently has a broken implementation
        // https://github.com/joyent/node/issues/8449
        function doesForEachActuallyWork() {
          var ret = false;

          new Set([true]).forEach(function (el) {
            ret = el;
          });

          return ret === true;
        }

        if ('Set' in global) {
          if (typeof Set.prototype.forEach === 'function' && doesForEachActuallyWork()) {
            module.exports = uniqSetWithForEach;
          } else {
            module.exports = uniqSet;
          }
        } else {
          module.exports = uniqNoSet;
        }

        /* WEBPACK VAR INJECTION */
      }.call(exports, __webpack_require__(20)));

      /***/
    },
    /* 323 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';
      /* WEBPACK VAR INJECTION */ (function (global) {
        // compare and isBuffer taken from https://github.com/feross/buffer/blob/680e9e5e488f22aac27599a57dc844a6315928dd/index.js
        // original notice:

        /*!
         * The buffer module from node.js, for the browser.
         *
         * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>
         * @license  MIT
         */
        function compare(a, b) {
          if (a === b) {
            return 0;
          }

          var x = a.length;
          var y = b.length;

          for (var i = 0, len = Math.min(x, y); i < len; ++i) {
            if (a[i] !== b[i]) {
              x = a[i];
              y = b[i];
              break;
            }
          }

          if (x < y) {
            return -1;
          }
          if (y < x) {
            return 1;
          }
          return 0;
        }
        function isBuffer(b) {
          if (global.Buffer && typeof global.Buffer.isBuffer === 'function') {
            return global.Buffer.isBuffer(b);
          }
          return !!(b != null && b._isBuffer);
        }

        // based on node assert, original notice:

        // http://wiki.commonjs.org/wiki/Unit_Testing/1.0
        //
        // THIS IS NOT TESTED NOR LIKELY TO WORK OUTSIDE V8!
        //
        // Originally from narwhal.js (http://narwhaljs.org)
        // Copyright (c) 2009 Thomas Robinson <280north.com>
        //
        // Permission is hereby granted, free of charge, to any person obtaining a copy
        // of this software and associated documentation files (the 'Software'), to
        // deal in the Software without restriction, including without limitation the
        // rights to use, copy, modify, merge, publish, distribute, sublicense, and/or
        // sell copies of the Software, and to permit persons to whom the Software is
        // furnished to do so, subject to the following conditions:
        //
        // The above copyright notice and this permission notice shall be included in
        // all copies or substantial portions of the Software.
        //
        // THE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
        // IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
        // FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
        // AUTHORS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN
        // ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
        // WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.

        var util = __webpack_require__(794);
        var hasOwn = Object.prototype.hasOwnProperty;
        var pSlice = Array.prototype.slice;
        var functionsHaveNames = (function () {
          return function foo() {}.name === 'foo';
        })();
        function pToString(obj) {
          return Object.prototype.toString.call(obj);
        }
        function isView(arrbuf) {
          if (isBuffer(arrbuf)) {
            return false;
          }
          if (typeof global.ArrayBuffer !== 'function') {
            return false;
          }
          if (typeof ArrayBuffer.isView === 'function') {
            return ArrayBuffer.isView(arrbuf);
          }
          if (!arrbuf) {
            return false;
          }
          if (arrbuf instanceof DataView) {
            return true;
          }
          if (arrbuf.buffer && arrbuf.buffer instanceof ArrayBuffer) {
            return true;
          }
          return false;
        }
        // 1. The assert module provides functions that throw
        // AssertionError's when particular conditions are not met. The
        // assert module must conform to the following interface.

        var assert = (module.exports = ok);

        // 2. The AssertionError is defined in assert.
        // new assert.AssertionError({ message: message,
        //                             actual: actual,
        //                             expected: expected })

        var regex = /\s*function\s+([^\(\s]*)\s*/;
        // based on https://github.com/ljharb/function.prototype.name/blob/adeeeec8bfcc6068b187d7d9fb3d5bb1d3a30899/implementation.js
        function getName(func) {
          if (!util.isFunction(func)) {
            return;
          }
          if (functionsHaveNames) {
            return func.name;
          }
          var str = func.toString();
          var match = str.match(regex);
          return match && match[1];
        }
        assert.AssertionError = function AssertionError(options) {
          this.name = 'AssertionError';
          this.actual = options.actual;
          this.expected = options.expected;
          this.operator = options.operator;
          if (options.message) {
            this.message = options.message;
            this.generatedMessage = false;
          } else {
            this.message = getMessage(this);
            this.generatedMessage = true;
          }
          var stackStartFunction = options.stackStartFunction || fail;
          if (Error.captureStackTrace) {
            Error.captureStackTrace(this, stackStartFunction);
          } else {
            // non v8 browsers so we can have a stacktrace
            var err = new Error();
            if (err.stack) {
              var out = err.stack;

              // try to strip useless frames
              var fn_name = getName(stackStartFunction);
              var idx = out.indexOf('\n' + fn_name);
              if (idx >= 0) {
                // once we have located the function frame
                // we need to strip out everything before it (and its line)
                var next_line = out.indexOf('\n', idx + 1);
                out = out.substring(next_line + 1);
              }

              this.stack = out;
            }
          }
        };

        // assert.AssertionError instanceof Error
        util.inherits(assert.AssertionError, Error);

        function truncate(s, n) {
          if (typeof s === 'string') {
            return s.length < n ? s : s.slice(0, n);
          } else {
            return s;
          }
        }
        function inspect(something) {
          if (functionsHaveNames || !util.isFunction(something)) {
            return util.inspect(something);
          }
          var rawname = getName(something);
          var name = rawname ? ': ' + rawname : '';
          return '[Function' + name + ']';
        }
        function getMessage(self) {
          return (
            truncate(inspect(self.actual), 128) +
            ' ' +
            self.operator +
            ' ' +
            truncate(inspect(self.expected), 128)
          );
        }

        // At present only the three keys mentioned above are used and
        // understood by the spec. Implementations or sub modules can pass
        // other keys to the AssertionError's constructor - they will be
        // ignored.

        // 3. All of the following functions must throw an AssertionError
        // when a corresponding condition is not met, with a message that
        // may be undefined if not provided.  All assertion methods provide
        // both the actual and expected values to the assertion error for
        // display purposes.

        function fail(actual, expected, message, operator, stackStartFunction) {
          throw new assert.AssertionError({
            message: message,
            actual: actual,
            expected: expected,
            operator: operator,
            stackStartFunction: stackStartFunction,
          });
        }

        // EXTENSION! allows for well behaved errors defined elsewhere.
        assert.fail = fail;

        // 4. Pure assertion tests whether a value is truthy, as determined
        // by !!guard.
        // assert.ok(guard, message_opt);
        // This statement is equivalent to assert.equal(true, !!guard,
        // message_opt);. To test strictly for the value true, use
        // assert.strictEqual(true, guard, message_opt);.

        function ok(value, message) {
          if (!value) fail(value, true, message, '==', assert.ok);
        }
        assert.ok = ok;

        // 5. The equality assertion tests shallow, coercive equality with
        // ==.
        // assert.equal(actual, expected, message_opt);

        assert.equal = function equal(actual, expected, message) {
          if (actual != expected) fail(actual, expected, message, '==', assert.equal);
        };

        // 6. The non-equality assertion tests for whether two objects are not equal
        // with != assert.notEqual(actual, expected, message_opt);

        assert.notEqual = function notEqual(actual, expected, message) {
          if (actual == expected) {
            fail(actual, expected, message, '!=', assert.notEqual);
          }
        };

        // 7. The equivalence assertion tests a deep equality relation.
        // assert.deepEqual(actual, expected, message_opt);

        assert.deepEqual = function deepEqual(actual, expected, message) {
          if (!_deepEqual(actual, expected, false)) {
            fail(actual, expected, message, 'deepEqual', assert.deepEqual);
          }
        };

        assert.deepStrictEqual = function deepStrictEqual(actual, expected, message) {
          if (!_deepEqual(actual, expected, true)) {
            fail(actual, expected, message, 'deepStrictEqual', assert.deepStrictEqual);
          }
        };

        function _deepEqual(actual, expected, strict, memos) {
          // 7.1. All identical values are equivalent, as determined by ===.
          if (actual === expected) {
            return true;
          } else if (isBuffer(actual) && isBuffer(expected)) {
            return compare(actual, expected) === 0;

            // 7.2. If the expected value is a Date object, the actual value is
            // equivalent if it is also a Date object that refers to the same time.
          } else if (util.isDate(actual) && util.isDate(expected)) {
            return actual.getTime() === expected.getTime();

            // 7.3 If the expected value is a RegExp object, the actual value is
            // equivalent if it is also a RegExp object with the same source and
            // properties (`global`, `multiline`, `lastIndex`, `ignoreCase`).
          } else if (util.isRegExp(actual) && util.isRegExp(expected)) {
            return (
              actual.source === expected.source &&
              actual.global === expected.global &&
              actual.multiline === expected.multiline &&
              actual.lastIndex === expected.lastIndex &&
              actual.ignoreCase === expected.ignoreCase
            );

            // 7.4. Other pairs that do not both pass typeof value == 'object',
            // equivalence is determined by ==.
          } else if (
            (actual === null || typeof actual !== 'object') &&
            (expected === null || typeof expected !== 'object')
          ) {
            return strict ? actual === expected : actual == expected;

            // If both values are instances of typed arrays, wrap their underlying
            // ArrayBuffers in a Buffer each to increase performance
            // This optimization requires the arrays to have the same type as checked by
            // Object.prototype.toString (aka pToString). Never perform binary
            // comparisons for Float*Arrays, though, since e.g. +0 === -0 but their
            // bit patterns are not identical.
          } else if (
            isView(actual) &&
            isView(expected) &&
            pToString(actual) === pToString(expected) &&
            !(actual instanceof Float32Array || actual instanceof Float64Array)
          ) {
            return compare(new Uint8Array(actual.buffer), new Uint8Array(expected.buffer)) === 0;

            // 7.5 For all other Object pairs, including Array objects, equivalence is
            // determined by having the same number of owned properties (as verified
            // with Object.prototype.hasOwnProperty.call), the same set of keys
            // (although not necessarily the same order), equivalent values for every
            // corresponding key, and an identical 'prototype' property. Note: this
            // accounts for both named and indexed properties on Arrays.
          } else if (isBuffer(actual) !== isBuffer(expected)) {
            return false;
          } else {
            memos = memos || { actual: [], expected: [] };

            var actualIndex = memos.actual.indexOf(actual);
            if (actualIndex !== -1) {
              if (actualIndex === memos.expected.indexOf(expected)) {
                return true;
              }
            }

            memos.actual.push(actual);
            memos.expected.push(expected);

            return objEquiv(actual, expected, strict, memos);
          }
        }

        function isArguments(object) {
          return Object.prototype.toString.call(object) == '[object Arguments]';
        }

        function objEquiv(a, b, strict, actualVisitedObjects) {
          if (a === null || a === undefined || b === null || b === undefined) return false;
          // if one is a primitive, the other must be same
          if (util.isPrimitive(a) || util.isPrimitive(b)) return a === b;
          if (strict && Object.getPrototypeOf(a) !== Object.getPrototypeOf(b)) return false;
          var aIsArgs = isArguments(a);
          var bIsArgs = isArguments(b);
          if ((aIsArgs && !bIsArgs) || (!aIsArgs && bIsArgs)) return false;
          if (aIsArgs) {
            a = pSlice.call(a);
            b = pSlice.call(b);
            return _deepEqual(a, b, strict);
          }
          var ka = objectKeys(a);
          var kb = objectKeys(b);
          var key, i;
          // having the same number of owned properties (keys incorporates
          // hasOwnProperty)
          if (ka.length !== kb.length) return false;
          //the same set of keys (although not necessarily the same order),
          ka.sort();
          kb.sort();
          //~~~cheap key test
          for (i = ka.length - 1; i >= 0; i--) {
            if (ka[i] !== kb[i]) return false;
          }
          //equivalent values for every corresponding key, and
          //~~~possibly expensive deep test
          for (i = ka.length - 1; i >= 0; i--) {
            key = ka[i];
            if (!_deepEqual(a[key], b[key], strict, actualVisitedObjects)) return false;
          }
          return true;
        }

        // 8. The non-equivalence assertion tests for any deep inequality.
        // assert.notDeepEqual(actual, expected, message_opt);

        assert.notDeepEqual = function notDeepEqual(actual, expected, message) {
          if (_deepEqual(actual, expected, false)) {
            fail(actual, expected, message, 'notDeepEqual', assert.notDeepEqual);
          }
        };

        assert.notDeepStrictEqual = notDeepStrictEqual;
        function notDeepStrictEqual(actual, expected, message) {
          if (_deepEqual(actual, expected, true)) {
            fail(actual, expected, message, 'notDeepStrictEqual', notDeepStrictEqual);
          }
        }

        // 9. The strict equality assertion tests strict equality, as determined by ===.
        // assert.strictEqual(actual, expected, message_opt);

        assert.strictEqual = function strictEqual(actual, expected, message) {
          if (actual !== expected) {
            fail(actual, expected, message, '===', assert.strictEqual);
          }
        };

        // 10. The strict non-equality assertion tests for strict inequality, as
        // determined by !==.  assert.notStrictEqual(actual, expected, message_opt);

        assert.notStrictEqual = function notStrictEqual(actual, expected, message) {
          if (actual === expected) {
            fail(actual, expected, message, '!==', assert.notStrictEqual);
          }
        };

        function expectedException(actual, expected) {
          if (!actual || !expected) {
            return false;
          }

          if (Object.prototype.toString.call(expected) == '[object RegExp]') {
            return expected.test(actual);
          }

          try {
            if (actual instanceof expected) {
              return true;
            }
          } catch (e) {
            // Ignore.  The instanceof check doesn't work for arrow functions.
          }

          if (Error.isPrototypeOf(expected)) {
            return false;
          }

          return expected.call({}, actual) === true;
        }

        function _tryBlock(block) {
          var error;
          try {
            block();
          } catch (e) {
            error = e;
          }
          return error;
        }

        function _throws(shouldThrow, block, expected, message) {
          var actual;

          if (typeof block !== 'function') {
            throw new TypeError('"block" argument must be a function');
          }

          if (typeof expected === 'string') {
            message = expected;
            expected = null;
          }

          actual = _tryBlock(block);

          message =
            (expected && expected.name ? ' (' + expected.name + ').' : '.') +
            (message ? ' ' + message : '.');

          if (shouldThrow && !actual) {
            fail(actual, expected, 'Missing expected exception' + message);
          }

          var userProvidedMessage = typeof message === 'string';
          var isUnwantedException = !shouldThrow && util.isError(actual);
          var isUnexpectedException = !shouldThrow && actual && !expected;

          if (
            (isUnwantedException && userProvidedMessage && expectedException(actual, expected)) ||
            isUnexpectedException
          ) {
            fail(actual, expected, 'Got unwanted exception' + message);
          }

          if (
            (shouldThrow && actual && expected && !expectedException(actual, expected)) ||
            (!shouldThrow && actual)
          ) {
            throw actual;
          }
        }

        // 11. Expected to throw an error:
        // assert.throws(block, Error_opt, message_opt);

        assert.throws = function (block, /*optional*/ error, /*optional*/ message) {
          _throws(true, block, error, message);
        };

        // EXTENSION! This is annoying to write outside this module.
        assert.doesNotThrow = function (block, /*optional*/ error, /*optional*/ message) {
          _throws(false, block, error, message);
        };

        assert.ifError = function (err) {
          if (err) throw err;
        };

        var objectKeys =
          Object.keys ||
          function (obj) {
            var keys = [];
            for (var key in obj) {
              if (hasOwn.call(obj, key)) keys.push(key);
            }
            return keys;
          };

        /* WEBPACK VAR INJECTION */
      }.call(exports, __webpack_require__(20)));

      /***/
    },
    /* 324 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true,
      });

      var _createClass = (function () {
        function defineProperties(target, props) {
          for (var i = 0; i < props.length; i++) {
            var descriptor = props[i];
            descriptor.enumerable = descriptor.enumerable || false;
            descriptor.configurable = true;
            if ('value' in descriptor) descriptor.writable = true;
            Object.defineProperty(target, descriptor.key, descriptor);
          }
        }
        return function (Constructor, protoProps, staticProps) {
          if (protoProps) defineProperties(Constructor.prototype, protoProps);
          if (staticProps) defineProperties(Constructor, staticProps);
          return Constructor;
        };
      })();

      var _react = __webpack_require__(4);

      var _react2 = _interopRequireDefault(_react);

      var _reactLoadingSpinner = __webpack_require__(734);

      var _reactLoadingSpinner2 = _interopRequireDefault(_reactLoadingSpinner);

      var _productSelectorContainer = __webpack_require__(347);

      var _productSelectorContainer2 = _interopRequireDefault(_productSelectorContainer);

      var _productConfigOptionsContainer = __webpack_require__(344);

      var _productConfigOptionsContainer2 = _interopRequireDefault(_productConfigOptionsContainer);

      var _productSummaryContainer = __webpack_require__(352);

      var _productSummaryContainer2 = _interopRequireDefault(_productSummaryContainer);

      var _productSpecsContainer = __webpack_require__(348);

      var _productSpecsContainer2 = _interopRequireDefault(_productSpecsContainer);

      var _productImageContainer = __webpack_require__(345);

      var _productImageContainer2 = _interopRequireDefault(_productImageContainer);

      var _productImageExpanderContainer = __webpack_require__(346);

      var _productImageExpanderContainer2 = _interopRequireDefault(_productImageExpanderContainer);

      var _productSpecsHeaderContainer = __webpack_require__(350);

      var _productSpecsHeaderContainer2 = _interopRequireDefault(_productSpecsHeaderContainer);

      var _productSpecsPager = __webpack_require__(335);

      var _productSpecsPager2 = _interopRequireDefault(_productSpecsPager);

      var _productSpecsPrevnextContainer = __webpack_require__(351);

      var _productSpecsPrevnextContainer2 = _interopRequireDefault(_productSpecsPrevnextContainer);

      var _productSpecsExpanderContainer = __webpack_require__(349);

      var _productSpecsExpanderContainer2 = _interopRequireDefault(_productSpecsExpanderContainer);

      var _shareWidgetContainer = __webpack_require__(353);

      var _shareWidgetContainer2 = _interopRequireDefault(_shareWidgetContainer);

      var _compareWidgetContainer = __webpack_require__(343);

      var _compareWidgetContainer2 = _interopRequireDefault(_compareWidgetContainer);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
          throw new TypeError('Cannot call a class as a function');
        }
      }

      function _possibleConstructorReturn(self, call) {
        if (!self) {
          throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
        }
        return call && (typeof call === 'object' || typeof call === 'function') ? call : self;
      }

      function _inherits(subClass, superClass) {
        if (typeof superClass !== 'function' && superClass !== null) {
          throw new TypeError(
            'Super expression must either be null or a function, not ' + typeof superClass
          );
        }
        subClass.prototype = Object.create(superClass && superClass.prototype, {
          constructor: { value: subClass, enumerable: false, writable: true, configurable: true },
        });
        if (superClass)
          Object.setPrototypeOf
            ? Object.setPrototypeOf(subClass, superClass)
            : (subClass.__proto__ = superClass);
      }

      var App = (function (_React$Component) {
        _inherits(App, _React$Component);

        function App(props) {
          _classCallCheck(this, App);

          return _possibleConstructorReturn(
            this,
            (App.__proto__ || Object.getPrototypeOf(App)).call(this, props)
          );
        }

        _createClass(App, [
          {
            key: 'render',
            value: function render() {
              var _this2 = this;

              return _react2.default.createElement(
                _reactLoadingSpinner2.default,
                { isLoading: !this.props.dataLoaded, loadingClassName: 'loading' },
                _react2.default.createElement(
                  'div',
                  {
                    className:
                      'builder ' +
                      (this.props.imageExpanded
                        ? 'builder-image--expanded'
                        : 'builder-image--collapsed'),
                  },
                  _react2.default.createElement(
                    'div',
                    {
                      id: 'builder-config--' + this.props.rando,
                      className: 'clearfix builder-config',
                    },
                    _react2.default.createElement(
                      'div',
                      { className: 'builder-config__image' },
                      _react2.default.createElement(_productImageContainer2.default, null),
                      _react2.default.createElement(_productImageExpanderContainer2.default, null)
                    ),
                    _react2.default.createElement(
                      'div',
                      {
                        className:
                          'builder-config__settings ' +
                          (this.props.configVisible
                            ? 'js-builder-config__settings--visible'
                            : 'js-builder-config__settings--hidden'),
                      },
                      _react2.default.createElement(
                        'div',
                        {
                          className:
                            'builder-config__settings-section builder-config__settings-section--product',
                        },
                        _react2.default.createElement(_productSelectorContainer2.default, null)
                      ),
                      _react2.default.createElement(
                        'div',
                        {
                          className:
                            'builder-config__settings-section builder-config__settings-section--config',
                        },
                        _react2.default.createElement(_productConfigOptionsContainer2.default, null)
                      ),
                      _react2.default.createElement(
                        'div',
                        {
                          className:
                            'builder-config__settings-section builder-config__settings-section--summary',
                        },
                        _react2.default.createElement(_productSummaryContainer2.default, null)
                      ),
                      _react2.default.createElement(
                        'span',
                        {
                          className: 'builder-config__settings--close',
                          onClick: function onClick(e) {
                            e.preventDefault();
                            _this2.props.onClickAction({});
                          },
                        },
                        'Close'
                      )
                    ),
                    _react2.default.createElement(
                      'div',
                      { className: 'builder-mobile' },
                      _react2.default.createElement(_productSummaryContainer2.default, null)
                    ),
                    _react2.default.createElement(_shareWidgetContainer2.default, null),
                    _react2.default.createElement(_compareWidgetContainer2.default, null)
                  ),
                  _react2.default.createElement(
                    'div',
                    { id: 'builder-specs--' + this.props.rando, className: 'builder-specs' },
                    _react2.default.createElement(
                      'div',
                      { className: 'builder-specs__header' },
                      _react2.default.createElement(_productSpecsHeaderContainer2.default, null)
                    ),
                    _react2.default.createElement(
                      'div',
                      {
                        className:
                          'builder-specs__table ' +
                          (this.props.specsExpanded
                            ? 'builder-specs__table--expanded'
                            : 'builder-specs__table--collapsed'),
                      },
                      _react2.default.createElement(_productSpecsContainer2.default, null)
                    ),
                    _react2.default.createElement(
                      'div',
                      { className: 'builder-specs__footer' },
                      _react2.default.createElement(_productSpecsPrevnextContainer2.default, null),
                      _react2.default.createElement(_productSpecsPager2.default, null),
                      _react2.default.createElement(_productSpecsExpanderContainer2.default, null)
                    )
                  )
                )
              );
            },
          },
        ]);

        return App;
      })(_react2.default.Component);

      App.propTypes = {
        dataLoaded: _react2.default.PropTypes.bool,
        specsExpanded: _react2.default.PropTypes.bool,
        imageExpanded: _react2.default.PropTypes.bool,
        configVisible: _react2.default.PropTypes.bool,
        rando: _react2.default.PropTypes.string,
      };

      exports.default = App;

      /***/
    },
    /* 325 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true,
      });

      var _createClass = (function () {
        function defineProperties(target, props) {
          for (var i = 0; i < props.length; i++) {
            var descriptor = props[i];
            descriptor.enumerable = descriptor.enumerable || false;
            descriptor.configurable = true;
            if ('value' in descriptor) descriptor.writable = true;
            Object.defineProperty(target, descriptor.key, descriptor);
          }
        }
        return function (Constructor, protoProps, staticProps) {
          if (protoProps) defineProperties(Constructor.prototype, protoProps);
          if (staticProps) defineProperties(Constructor, staticProps);
          return Constructor;
        };
      })();

      var _react = __webpack_require__(4);

      var _react2 = _interopRequireDefault(_react);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      function _toConsumableArray(arr) {
        if (Array.isArray(arr)) {
          for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) {
            arr2[i] = arr[i];
          }
          return arr2;
        } else {
          return Array.from(arr);
        }
      }

      function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
          throw new TypeError('Cannot call a class as a function');
        }
      }

      function _possibleConstructorReturn(self, call) {
        if (!self) {
          throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
        }
        return call && (typeof call === 'object' || typeof call === 'function') ? call : self;
      }

      function _inherits(subClass, superClass) {
        if (typeof superClass !== 'function' && superClass !== null) {
          throw new TypeError(
            'Super expression must either be null or a function, not ' + typeof superClass
          );
        }
        subClass.prototype = Object.create(superClass && superClass.prototype, {
          constructor: { value: subClass, enumerable: false, writable: true, configurable: true },
        });
        if (superClass)
          Object.setPrototypeOf
            ? Object.setPrototypeOf(subClass, superClass)
            : (subClass.__proto__ = superClass);
      }

      var BuilderCanvas = (function (_React$Component) {
        _inherits(BuilderCanvas, _React$Component);

        function BuilderCanvas(props) {
          _classCallCheck(this, BuilderCanvas);

          var _this = _possibleConstructorReturn(
            this,
            (BuilderCanvas.__proto__ || Object.getPrototypeOf(BuilderCanvas)).call(this, props)
          );

          _this.canvasWidth = 2048;
          _this.canvasHeight = 1539;
          _this.canvasID = 'builder-canvas__canvas--' + props.rando;
          _this.canvasImg = 'builder-canvas__image--' + props.rando;

          return _this;
        }

        _createClass(BuilderCanvas, [
          {
            key: 'addLoadingClass',
            value: function addLoadingClass() {
              this.canvas.parentElement.classList.add('builder-canvas--loading');
            },
          },
          {
            key: 'removeLoadingClass',
            value: function removeLoadingClass() {
              this.canvas.parentElement.classList.remove('builder-canvas--loading');
            },
          },
          {
            key: 'componentDidMount',
            value: function componentDidMount() {
              this.loadCanvasImages(this.props.renderBuffer);
            },
          },
          {
            key: 'componentWillReceiveProps',
            value: function componentWillReceiveProps(nextProps) {
              this.addLoadingClass();
              this.loadCanvasImages(nextProps.renderBuffer);
            },
          },
          {
            key: 'loadCanvasImages',
            value: function loadCanvasImages(images) {
              var _this2 = this;

              this.renderCanvasLoad();
              var checkImage = function checkImage(path) {
                return new Promise(function (resolve) {
                  var img = new Image();
                  img.crossOrigin = 'Anonymous';
                  img.onload = function () {
                    return resolve({ path: path, img: img, status: 'ok' });
                  };
                  img.onerror = function () {
                    return resolve({ path: path, status: 'error' });
                  };

                  img.src = path;
                });
              };

              var loadImg = function loadImg() {
                for (
                  var _len = arguments.length, paths = Array(_len), _key = 0;
                  _key < _len;
                  _key++
                ) {
                  paths[_key] = arguments[_key];
                }

                return Promise.all(paths.map(checkImage));
              };

              loadImg
                .apply(
                  undefined,
                  _toConsumableArray(
                    images.map(function (item) {
                      return item.uri;
                    })
                  )
                )
                .then(function (result) {
                  _this2.renderCanvas(images, result);
                });
            },
          },
          {
            key: 'createStaticImage',
            value: function createStaticImage(fadein) {
              var staticImage = new Image();
              var _that = this;
              staticImage.onload = function () {
                // const cnv = document.getElementById('builder-canvas__canvas');
                // const cnvImg = document.getElementById('builder-canvas__image');
                var cnv = document.getElementById(_that.canvasID);
                var cnvImg = document.getElementById(_that.canvasImg);

                //remove any old-old images
                var oldimages = document.getElementsByClassName('builder-canvas__image--old');
                // while(oldimages[0]) {
                //   oldimages[0].parentNode.removeChild(oldimages[0]);
                // }​
                while (oldimages[1]) {
                  oldimages[1].parentNode.removeChild(oldimages[1]);
                }
                //end cleanup
                if (cnv) {
                  staticImage.className = 'builder-canvas__image builder-canvas__image--current';
                  staticImage.setAttribute('id', _that.canvasImg);
                  if (cnvImg) {
                    cnvImg.id = '';
                    cnvImg.className = 'builder-canvas__image builder-canvas__image--old';
                  }
                  cnv.parentNode.insertBefore(staticImage, cnv.nextSibling);
                  if (fadein) {
                    _that.removeLoadingClass();
                  }
                }
              };
              staticImage.src = this.canvas.toDataURL('image/jpeg', 1);
            },
          },
          {
            key: 'renderCanvasLoad',
            value: function renderCanvasLoad() {
              this.addLoadingClass();
              var ctx = this.canvas.getContext('2d');
              ctx.clearRect(
                0,
                0,
                this.canvasWidth * this.props.canvasZoomLevel,
                this.canvasHeight * this.props.canvasZoomLevel
              );
              ctx.fillStyle = '#FFFFFF';
              ctx.fillRect(
                0,
                0,
                this.canvasWidth * this.props.canvasZoomLevel,
                this.canvasHeight * this.props.canvasZoomLevel
              );
              this.createStaticImage(false);
            },
          },
          {
            key: 'renderCanvas',
            value: function renderCanvas(images, loadedImages) {
              var _this3 = this;

              // we assume all the images are now drawn
              var sortedImageArray = images.sort(function (a, b) {
                if (a.z < b.z) {
                  return -1;
                }
                if (a.z > b.z) {
                  return 1;
                }
                return 0;
              });

              var ctx = this.canvas.getContext('2d');
              ctx.clearRect(
                0,
                0,
                this.canvasWidth * this.props.canvasZoomLevel,
                this.canvasHeight * this.props.canvasZoomLevel
              );
              ctx.fillStyle = 'white';
              ctx.fillRect(
                0,
                0,
                this.canvasWidth * this.props.canvasZoomLevel,
                this.canvasHeight * this.props.canvasZoomLevel
              );

              sortedImageArray.forEach(function (image) {
                var loadedImage = loadedImages.find(function (li) {
                  return li.path === image.uri;
                });
                if (loadedImage.status !== 'error') {
                  ctx.drawImage(
                    loadedImage.img,
                    image.x,
                    image.y,
                    image.width * _this3.props.canvasZoomLevel,
                    image.height * _this3.props.canvasZoomLevel
                  );
                } else {
                  console.warn('Error rendering ' + loadedImage.path);
                }
              });

              //convert canvas to singular image (for responsive)
              this.createStaticImage(true);
            },
          },
          {
            key: 'render',
            value: function render() {
              var _this4 = this;

              return _react2.default.createElement(
                'div',
                { className: 'builder-canvas builder-canvas--loading clearfix' },
                _react2.default.createElement('canvas', {
                  id: this.canvasID,
                  className: 'builder-canvas__canvas',
                  ref: function ref(c) {
                    _this4.canvas = c;
                  },
                  width: this.canvasWidth * this.props.canvasZoomLevel,
                  height: this.canvasHeight * this.props.canvasZoomLevel,
                })
              );
            },
          },
        ]);

        return BuilderCanvas;
      })(_react2.default.Component);

      BuilderCanvas.propTypes = {
        renderBuffer: _react2.default.PropTypes.array,
        canvasZoomLevel: _react2.default.PropTypes.number,
        rando: _react2.default.PropTypes.string,
      };

      exports.default = BuilderCanvas;

      /***/
    },
    /* 326 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true,
      });

      var _createClass = (function () {
        function defineProperties(target, props) {
          for (var i = 0; i < props.length; i++) {
            var descriptor = props[i];
            descriptor.enumerable = descriptor.enumerable || false;
            descriptor.configurable = true;
            if ('value' in descriptor) descriptor.writable = true;
            Object.defineProperty(target, descriptor.key, descriptor);
          }
        }
        return function (Constructor, protoProps, staticProps) {
          if (protoProps) defineProperties(Constructor.prototype, protoProps);
          if (staticProps) defineProperties(Constructor, staticProps);
          return Constructor;
        };
      })();

      var _react = __webpack_require__(4);

      var _react2 = _interopRequireDefault(_react);

      var _app2 = __webpack_require__(11);

      var _app = _interopRequireWildcard(_app2);

      function _interopRequireWildcard(obj) {
        if (obj && obj.__esModule) {
          return obj;
        } else {
          var newObj = {};
          if (obj != null) {
            for (var key in obj) {
              if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key];
            }
          }
          newObj.default = obj;
          return newObj;
        }
      }

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
          throw new TypeError('Cannot call a class as a function');
        }
      }

      function _possibleConstructorReturn(self, call) {
        if (!self) {
          throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
        }
        return call && (typeof call === 'object' || typeof call === 'function') ? call : self;
      }

      function _inherits(subClass, superClass) {
        if (typeof superClass !== 'function' && superClass !== null) {
          throw new TypeError(
            'Super expression must either be null or a function, not ' + typeof superClass
          );
        }
        subClass.prototype = Object.create(superClass && superClass.prototype, {
          constructor: { value: subClass, enumerable: false, writable: true, configurable: true },
        });
        if (superClass)
          Object.setPrototypeOf
            ? Object.setPrototypeOf(subClass, superClass)
            : (subClass.__proto__ = superClass);
      }

      var CompareWidget = (function (_React$Component) {
        _inherits(CompareWidget, _React$Component);

        function CompareWidget(props) {
          _classCallCheck(this, CompareWidget);

          var _this = _possibleConstructorReturn(
            this,
            (CompareWidget.__proto__ || Object.getPrototypeOf(CompareWidget)).call(this, props)
          );

          _this.compareLink = _this.props.linkRoot + 'compare';
          return _this;
        }

        _createClass(CompareWidget, [
          {
            key: 'isFull',
            value: function isFull() {
              return (
                this.props.numItems / this.props.maxNumItems == 1 &&
                this.props.lastNumItems == this.props.numItems
              );
            },
          },
          {
            key: 'confirmCompare',
            value: function confirmCompare() {
              var _this2 = this;

              return {
                title: _app.t('Compare'),
                msg: _app.t('Add this build to your compare list?'),
                actions: [
                  _react2.default.createElement(
                    'a',
                    {
                      href: this.compareLink,
                      className: 'btn-primary',
                      key: 'compareBtn2',
                      onClick: function onClick(e) {
                        e.preventDefault();
                        _this2.props.onConfirmAction();
                      },
                    },
                    _app.t('Add Now')
                  ),
                  _react2.default.createElement(
                    'a',
                    {
                      href: '/',
                      className: 'btn-tertiary',
                      key: 'compareBtn1',
                      onClick: function onClick(e) {
                        e.preventDefault();
                        _this2.props.onCloseAction({
                          platform: 'close',
                        });
                      },
                    },
                    _app.t('Keep Browsing')
                  ),
                ],
                spacesLeft: null,
              };
            },
          },
          {
            key: 'confirmFull',
            value: function confirmFull() {
              var _this3 = this;

              return {
                title: _app.t('Compare'),
                msg: _app.t(
                  'Your compare list if full. Remove an item from your list to free up a space.'
                ),
                actions: [
                  _react2.default.createElement(
                    'a',
                    { href: this.compareLink, className: 'btn-primary', key: 'compareBtn3' },
                    _app.t('Compare Now')
                  ),
                  _react2.default.createElement(
                    'a',
                    {
                      href: '#',
                      className: 'btn-tertiary',
                      key: 'compareBtn4',
                      onClick: function onClick(e) {
                        e.preventDefault();
                        _this3.props.onClearAction({});
                      },
                    },
                    _app.t('Clear List')
                  ),
                ],
                spacesLeft: null,
              };
            },
          },
          {
            key: 'confirmSuccess',
            value: function confirmSuccess() {
              var _this4 = this;

              return {
                title: _app.t('Compare'),
                msg: _app.t("Nice Build! It's been added to your compare list."),
                actions: [
                  _react2.default.createElement(
                    'a',
                    { href: this.compareLink, className: 'btn-primary', key: 'compareBtn2' },
                    _app.t('Compare Now')
                  ),
                  _react2.default.createElement(
                    'a',
                    {
                      href: '/',
                      className: 'btn-tertiary',
                      key: 'compareBtn1',
                      onClick: function onClick(e) {
                        e.preventDefault();
                        _this4.props.onCloseAction({
                          platform: 'close',
                        });
                      },
                    },
                    _app.t('Keep Browsing')
                  ),
                ],
                spacesLeft: this.props.maxNumItems - this.props.numItems,
              };
            },
          },
          {
            key: 'confirmSuccessFirst',
            value: function confirmSuccessFirst() {
              var _this5 = this;

              return {
                title: _app.t('Compare'),
                msg: _app.t("Nice Build! It's been added to your compare list."),
                actions: [
                  _react2.default.createElement(
                    'a',
                    {
                      href: '/',
                      className: 'btn-tertiary',
                      key: 'compareBtn1',
                      onClick: function onClick(e) {
                        e.preventDefault();
                        _this5.props.onCloseAction({
                          platform: 'close',
                        });
                      },
                    },
                    _app.t('Keep Browsing')
                  ),
                ],
                spacesLeft: this.props.maxNumItems - this.props.numItems,
              };
            },
          },
          {
            key: 'confirmSuccessLast',
            value: function confirmSuccessLast() {
              return {
                title: _app.t('Compare'),
                msg: _app.t(
                  "Nice Build! It's been added to your compare list. Your list is now full."
                ),
                actions: [
                  _react2.default.createElement(
                    'a',
                    { href: this.compareLink, className: 'btn-primary', key: 'compareBtn2' },
                    _app.t('Compare Now')
                  ),
                ],
                spacesLeft: null,
              };
            },
          },
          {
            key: 'confirmNoDice',
            value: function confirmNoDice() {
              return {
                title: _app.t('Compare'),
                msg: _app.t(
                  'Your browser is not compatible with storing the requisite data to compare. The compare function is not available.'
                ),
                actions: null,
                spacesLeft: null,
              };
            },
          },
          {
            key: 'handleKeyPress',
            value: function handleKeyPress(event) {
              if (event.key == 'Escape') {
                this.props.onCloseAction({
                  platform: 'close',
                });
              }
            },
          },
          {
            key: 'handleClick',
            value: function handleClick(event) {
              var isModal = event.target.className.split(' ').indexOf('builder-modal');
              if (isModal > -1) {
                this.props.onCloseAction({
                  platform: 'close',
                });
              }
            },
          },
          {
            key: 'render',
            value: function render() {
              var _this6 = this;

              var params = {};

              if (!this.props.addedState) {
                params = this.confirmCompare();
                //haven't added and already full
                if (this.isFull()) {
                  params = this.confirmFull();
                }
              } else {
                params = this.confirmSuccess();
                if (this.props.numItems == 1) {
                  params = this.confirmSuccessFirst();
                }
                if (this.props.numItems == this.props.maxNumItems) {
                  params = this.confirmSuccessLast();
                }
              }
              if (!this.props.canCompare) {
                params = this.confirmNoDice();
              }

              //default copy
              var modalTitle = params.title;
              var modalActions = params.actions;

              var modalContent = [];
              modalContent.push(
                _react2.default.createElement(
                  'span',
                  { key: 'compareMsg', className: 'builder-compare__content-msg' },
                  params.msg
                )
              );

              if (params.spacesLeft) {
                var spacesLeft =
                  '(' +
                  params.spacesLeft +
                  ' ' +
                  (params.spacesLeft == 1 ? _app.t('space left') : _app.t('spaces left')) +
                  ').';
                modalContent.push(
                  _react2.default.createElement(
                    'span',
                    { key: 'spacesLeft', className: 'builder-compare__content-count' },
                    spacesLeft
                  )
                );
              }

              return _react2.default.createElement(
                'div',
                {
                  tabIndex: '-1',
                  className:
                    'builder-modal builder-modal--compare builder-modal--' +
                    (this.props.active ? 'active' : 'inactive'),
                  onClick: function onClick(e) {
                    _this6.handleClick(e);
                  },
                  onKeyDown: function onKeyDown(e) {
                    _this6.handleKeyPress(e);
                  },
                },
                _react2.default.createElement(
                  'div',
                  { className: 'builder-modal__inner' },
                  _react2.default.createElement(
                    'h4',
                    { className: 'builder-modal__title' },
                    _react2.default.createElement('span', { className: 'builder-compare-icon' }),
                    modalTitle
                  ),
                  _react2.default.createElement(
                    'div',
                    { className: 'builder-modal__content builder-modal__content--compare' },
                    modalContent
                  ),
                  _react2.default.createElement(
                    'div',
                    { className: 'builder-modal__actions' },
                    modalActions
                  ),
                  _react2.default.createElement(
                    'span',
                    {
                      className: 'builder-modal__close',
                      onClick: function onClick() {
                        _this6.props.onCloseAction({
                          platform: 'close',
                        });
                      },
                    },
                    'Close'
                  )
                )
              );
            },
          },
        ]);

        return CompareWidget;
      })(_react2.default.Component);

      CompareWidget.propTypes = {
        active: _react2.default.PropTypes.bool,
        addedState: _react2.default.PropTypes.bool,
        canCompare: _react2.default.PropTypes.bool,
        numItems: _react2.default.PropTypes.number,
        lastNumItems: _react2.default.PropTypes.number,
        maxNumItems: _react2.default.PropTypes.number,
        onCloseAction: _react2.default.PropTypes.func,
        onClearAction: _react2.default.PropTypes.func,
        onConfirmAction: _react2.default.PropTypes.func,
      };

      exports.default = CompareWidget;

      /***/
    },
    /* 327 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true,
      });

      var _createClass = (function () {
        function defineProperties(target, props) {
          for (var i = 0; i < props.length; i++) {
            var descriptor = props[i];
            descriptor.enumerable = descriptor.enumerable || false;
            descriptor.configurable = true;
            if ('value' in descriptor) descriptor.writable = true;
            Object.defineProperty(target, descriptor.key, descriptor);
          }
        }
        return function (Constructor, protoProps, staticProps) {
          if (protoProps) defineProperties(Constructor.prototype, protoProps);
          if (staticProps) defineProperties(Constructor, staticProps);
          return Constructor;
        };
      })();

      var _react = __webpack_require__(4);

      var _react2 = _interopRequireDefault(_react);

      var _reactSelect = __webpack_require__(101);

      var _reactSelect2 = _interopRequireDefault(_reactSelect);

      var _productConfigSwatchSelector = __webpack_require__(328);

      var _productConfigSwatchSelector2 = _interopRequireDefault(_productConfigSwatchSelector);

      var _app2 = __webpack_require__(11);

      var _app = _interopRequireWildcard(_app2);

      function _interopRequireWildcard(obj) {
        if (obj && obj.__esModule) {
          return obj;
        } else {
          var newObj = {};
          if (obj != null) {
            for (var key in obj) {
              if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key];
            }
          }
          newObj.default = obj;
          return newObj;
        }
      }

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
          throw new TypeError('Cannot call a class as a function');
        }
      }

      function _possibleConstructorReturn(self, call) {
        if (!self) {
          throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
        }
        return call && (typeof call === 'object' || typeof call === 'function') ? call : self;
      }

      function _inherits(subClass, superClass) {
        if (typeof superClass !== 'function' && superClass !== null) {
          throw new TypeError(
            'Super expression must either be null or a function, not ' + typeof superClass
          );
        }
        subClass.prototype = Object.create(superClass && superClass.prototype, {
          constructor: { value: subClass, enumerable: false, writable: true, configurable: true },
        });
        if (superClass)
          Object.setPrototypeOf
            ? Object.setPrototypeOf(subClass, superClass)
            : (subClass.__proto__ = superClass);
      }

      //import { CSSTransitionGroup } from 'react-transition-group'; // ES6

      var ProductConfigOptions = (function (_React$Component) {
        _inherits(ProductConfigOptions, _React$Component);

        function ProductConfigOptions(props) {
          _classCallCheck(this, ProductConfigOptions);

          return _possibleConstructorReturn(
            this,
            (ProductConfigOptions.__proto__ || Object.getPrototypeOf(ProductConfigOptions)).call(
              this,
              props
            )
          );
        }

        _createClass(ProductConfigOptions, [
          {
            key: 'render',
            value: function render() {
              var _this2 = this;

              var controls = [];

              //build selects based on state (passed as configOptions - see reducer

              var _loop = function _loop() {
                var type = _this2.props.configOptions[i].type;
                var label = _this2.props.configOptions[i].overrideLabel;
                var options = _this2.props.configOptions[i].options;
                var selected = _this2.props.configOptions[i].selected;

                //reorder options according to order attribute
                options.sort(function (a, b) {
                  if (a.order < b.order) {
                    return -1;
                  }
                  if (a.order > b.order) {
                    return 1;
                  }
                  return 0;
                });

                var resetValue = {
                  reset: true,
                  type: type,
                };

                switch (type) {
                  case 'frame':
                    if (typeof options[0].primary_color != 'undefined') {
                      var selectedLabel = options.filter(function (item) {
                        return item.value == selected;
                      })[0].label;
                      label = _app.t('Frame Color');
                      controls.push(
                        _react2.default.createElement(
                          'div',
                          { key: type, className: 'builder-selector builder-selector--' + type },
                          _react2.default.createElement(
                            'h6',
                            { className: 'builder-selector__title' },
                            label
                          ),
                          _react2.default.createElement(
                            'div',
                            {
                              className:
                                'builder-selector__input builder-selector__input--swatches',
                            },
                            _react2.default.createElement(_productConfigSwatchSelector2.default, {
                              options: options,
                              selected: selected,
                              onClickAction: _this2.props.onClickAction,
                              selectedLabel: selectedLabel,
                            })
                          )
                        )
                      );
                    }
                    break;

                  case 'rim':
                  default:
                    // //@TODO - number of options logic
                    //
                    // //@If one option and required - radio button selected
                    // //@If one option and optional - checkbox
                    // //@If multiple options - select box
                    // if(options.length == 1 && this.props.configOptions[i].clearable) {
                    //   const option = options[0];
                    //   const isSelected = (selected == option.value);
                    //   option.reset = isSelected;
                    //   label = _app.t('Wheel Upgrades');
                    //   controls.push(
                    //     <div key={type} className={`builder-selector builder-selector--${type}`}>
                    //       <h6 className="builder-selector__title">{label}</h6>
                    //       <div className="builder-selector__input builder-selector__input--checkbox">
                    //         <input
                    //           type="checkbox"
                    //           name={type}
                    //           id={type}
                    //           value={isSelected}
                    //           onChange={()=>this.props.onClickAction(option)}
                    //         />
                    //         <label htmlFor={type}>
                    //           { option.label }
                    //         </label>
                    //       </div>
                    //     </div>
                    //   )
                    //
                    // } else if (options.length == 1) {
                    //   //single, selected radio button
                    //   //@TODO
                    // } else {
                    controls.push(
                      _react2.default.createElement(
                        'div',
                        { key: type, className: 'builder-selector builder-selector--' + type },
                        _react2.default.createElement(
                          'h6',
                          { className: 'builder-selector__title' },
                          label
                        ),
                        _react2.default.createElement(
                          'div',
                          { className: 'builder-selector__input builder-selector__input--select' },
                          _react2.default.createElement(_reactSelect2.default, {
                            name: type,
                            value: selected,
                            options: options,
                            onChange: _this2.props.onClickAction,
                            className: _this2.props.configOptions[i].className,
                            clearable: _this2.props.configOptions[i].clearable, //doesn't seem to like props data
                            resetValue: resetValue,
                            placeholder: 'Select ' + label,
                            searchable: false,
                          })
                        )
                      )
                    );
                    // }
                    break;
                }
              };

              for (var i in this.props.configOptions) {
                _loop();
              }

              if (controls.length) {
                return _react2.default.createElement(
                  'div',
                  { className: 'builder-options' },
                  _react2.default.createElement(
                    'h3',
                    { className: 'builder-options__title' },
                    _app.t('Customize')
                  ),
                  _react2.default.createElement(
                    'div',
                    { className: 'builder-options__inputs' },
                    controls
                  )
                );
              } else {
                return null;
              }
            },
          },
        ]);

        return ProductConfigOptions;
      })(_react2.default.Component);

      ProductConfigOptions.propTypes = {
        configOptions: _react2.default.PropTypes.array,
        onClickAction: _react2.default.PropTypes.func,
      };

      exports.default = ProductConfigOptions;

      /***/
    },
    /* 328 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true,
      });

      var _createClass = (function () {
        function defineProperties(target, props) {
          for (var i = 0; i < props.length; i++) {
            var descriptor = props[i];
            descriptor.enumerable = descriptor.enumerable || false;
            descriptor.configurable = true;
            if ('value' in descriptor) descriptor.writable = true;
            Object.defineProperty(target, descriptor.key, descriptor);
          }
        }
        return function (Constructor, protoProps, staticProps) {
          if (protoProps) defineProperties(Constructor.prototype, protoProps);
          if (staticProps) defineProperties(Constructor, staticProps);
          return Constructor;
        };
      })();

      var _react = __webpack_require__(4);

      var _react2 = _interopRequireDefault(_react);

      var _app2 = __webpack_require__(11);

      var _app = _interopRequireWildcard(_app2);

      function _interopRequireWildcard(obj) {
        if (obj && obj.__esModule) {
          return obj;
        } else {
          var newObj = {};
          if (obj != null) {
            for (var key in obj) {
              if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key];
            }
          }
          newObj.default = obj;
          return newObj;
        }
      }

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
          throw new TypeError('Cannot call a class as a function');
        }
      }

      function _possibleConstructorReturn(self, call) {
        if (!self) {
          throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
        }
        return call && (typeof call === 'object' || typeof call === 'function') ? call : self;
      }

      function _inherits(subClass, superClass) {
        if (typeof superClass !== 'function' && superClass !== null) {
          throw new TypeError(
            'Super expression must either be null or a function, not ' + typeof superClass
          );
        }
        subClass.prototype = Object.create(superClass && superClass.prototype, {
          constructor: { value: subClass, enumerable: false, writable: true, configurable: true },
        });
        if (superClass)
          Object.setPrototypeOf
            ? Object.setPrototypeOf(subClass, superClass)
            : (subClass.__proto__ = superClass);
      }

      var ProductConfigSwatchSelector = (function (_React$Component) {
        _inherits(ProductConfigSwatchSelector, _React$Component);

        function ProductConfigSwatchSelector(props) {
          _classCallCheck(this, ProductConfigSwatchSelector);

          var _this = _possibleConstructorReturn(
            this,
            (
              ProductConfigSwatchSelector.__proto__ ||
              Object.getPrototypeOf(ProductConfigSwatchSelector)
            ).call(this, props)
          );

          _this.onClickAction = _this.props.onClickAction.bind(_this);
          return _this;
        }

        _createClass(ProductConfigSwatchSelector, [
          {
            key: 'render',
            value: function render() {
              var _this2 = this;

              var swatches = [];

              var _loop = function _loop() {
                var color = _this2.props.options[i];
                if (typeof color.primary_color == 'undefined') return 'continue';

                var decal = '';
                if (typeof color.decal_color != 'undefined' && color.decal_color) {
                  decal = _react2.default.createElement('span', {
                    className: 'color-decal',
                    style: {
                      borderBottomColor: '#' + color.decal_color.hex,
                    },
                  });
                }

                var swatchClass = 'color-swatch';
                if (_this2.props.selected == color.value) {
                  swatchClass += ' color-swatch--selected';
                }

                swatches.push(
                  _react2.default.createElement(
                    'div',
                    {
                      key: i,
                      className: swatchClass,
                      onClick: function onClick() {
                        return _this2.onClickAction(color);
                      },
                      value: color.value,
                      //cid={color.cid}
                      //vid={color.vid}
                      style: {
                        backgroundColor: '#' + color.primary_color.hex,
                      },
                    },
                    _react2.default.createElement('span', { className: 'color-swatch__inner' }),
                    color.label,
                    decal
                  )
                );
              };

              for (var i in this.props.options) {
                var _ret = _loop();

                if (_ret === 'continue') continue;
              }

              return _react2.default.createElement(
                'div',
                {
                  className: 'swatch-list swatch-picker',
                },
                swatches,
                _react2.default.createElement(
                  'span',
                  { className: 'builder-selector__selected-label' },
                  _app.t(this.props.selectedLabel)
                )
              );
            },
          },
        ]);

        return ProductConfigSwatchSelector;
      })(_react2.default.Component);

      ProductConfigSwatchSelector.propTypes = {
        options: _react2.default.PropTypes.array,
        //selected: React.PropTypes.string,
        onClickAction: _react2.default.PropTypes.func,
        selectedLabel: _react2.default.PropTypes.string,
      };

      exports.default = ProductConfigSwatchSelector;

      /***/
    },
    /* 329 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true,
      });

      var _createClass = (function () {
        function defineProperties(target, props) {
          for (var i = 0; i < props.length; i++) {
            var descriptor = props[i];
            descriptor.enumerable = descriptor.enumerable || false;
            descriptor.configurable = true;
            if ('value' in descriptor) descriptor.writable = true;
            Object.defineProperty(target, descriptor.key, descriptor);
          }
        }
        return function (Constructor, protoProps, staticProps) {
          if (protoProps) defineProperties(Constructor.prototype, protoProps);
          if (staticProps) defineProperties(Constructor, staticProps);
          return Constructor;
        };
      })();

      var _react = __webpack_require__(4);

      var _react2 = _interopRequireDefault(_react);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
          throw new TypeError('Cannot call a class as a function');
        }
      }

      function _possibleConstructorReturn(self, call) {
        if (!self) {
          throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
        }
        return call && (typeof call === 'object' || typeof call === 'function') ? call : self;
      }

      function _inherits(subClass, superClass) {
        if (typeof superClass !== 'function' && superClass !== null) {
          throw new TypeError(
            'Super expression must either be null or a function, not ' + typeof superClass
          );
        }
        subClass.prototype = Object.create(superClass && superClass.prototype, {
          constructor: { value: subClass, enumerable: false, writable: true, configurable: true },
        });
        if (superClass)
          Object.setPrototypeOf
            ? Object.setPrototypeOf(subClass, superClass)
            : (subClass.__proto__ = superClass);
      }

      var ProductImageExpander = (function (_React$Component) {
        _inherits(ProductImageExpander, _React$Component);

        function ProductImageExpander(props) {
          _classCallCheck(this, ProductImageExpander);

          var _this = _possibleConstructorReturn(
            this,
            (ProductImageExpander.__proto__ || Object.getPrototypeOf(ProductImageExpander)).call(
              this,
              props
            )
          );

          _this.onClickAction = _this.props.onClickAction.bind(_this);
          return _this;
        }

        _createClass(ProductImageExpander, [
          {
            key: 'render',
            value: function render() {
              var _this2 = this;

              return _react2.default.createElement(
                'div',
                {
                  className:
                    'builder-image-expander ' +
                    (this.props.expanded ? 'is-expanded' : 'is-collapsed'),
                  onClick: function onClick() {
                    _this2.onClickAction({
                      newState: _this2.props.expanded,
                    });
                  },
                },
                _react2.default.createElement(
                  'span',
                  { className: 'builder-image-expander__text' },
                  this.props.label
                )
              );
            },
          },
        ]);

        return ProductImageExpander;
      })(_react2.default.Component);

      ProductImageExpander.propTypes = {
        expanded: _react2.default.PropTypes.bool,
        label: _react2.default.PropTypes.string,
        onClickAction: _react2.default.PropTypes.func,
      };

      exports.default = ProductImageExpander;

      /***/
    },
    /* 330 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true,
      });

      var _createClass = (function () {
        function defineProperties(target, props) {
          for (var i = 0; i < props.length; i++) {
            var descriptor = props[i];
            descriptor.enumerable = descriptor.enumerable || false;
            descriptor.configurable = true;
            if ('value' in descriptor) descriptor.writable = true;
            Object.defineProperty(target, descriptor.key, descriptor);
          }
        }
        return function (Constructor, protoProps, staticProps) {
          if (protoProps) defineProperties(Constructor.prototype, protoProps);
          if (staticProps) defineProperties(Constructor, staticProps);
          return Constructor;
        };
      })();

      var _react = __webpack_require__(4);

      var _react2 = _interopRequireDefault(_react);

      var _builderCanvasContainer = __webpack_require__(342);

      var _builderCanvasContainer2 = _interopRequireDefault(_builderCanvasContainer);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
          throw new TypeError('Cannot call a class as a function');
        }
      }

      function _possibleConstructorReturn(self, call) {
        if (!self) {
          throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
        }
        return call && (typeof call === 'object' || typeof call === 'function') ? call : self;
      }

      function _inherits(subClass, superClass) {
        if (typeof superClass !== 'function' && superClass !== null) {
          throw new TypeError(
            'Super expression must either be null or a function, not ' + typeof superClass
          );
        }
        subClass.prototype = Object.create(superClass && superClass.prototype, {
          constructor: { value: subClass, enumerable: false, writable: true, configurable: true },
        });
        if (superClass)
          Object.setPrototypeOf
            ? Object.setPrototypeOf(subClass, superClass)
            : (subClass.__proto__ = superClass);
      }

      var ProductImage = (function (_React$Component) {
        _inherits(ProductImage, _React$Component);

        function ProductImage(props) {
          _classCallCheck(this, ProductImage);

          return _possibleConstructorReturn(
            this,
            (ProductImage.__proto__ || Object.getPrototypeOf(ProductImage)).call(this, props)
          );
        }

        _createClass(ProductImage, [
          {
            key: 'render',
            value: function render() {
              return _react2.default.createElement(_builderCanvasContainer2.default, null);
            },
          },
        ]);

        return ProductImage;
      })(_react2.default.Component);

      ProductImage.propTypes = {};

      exports.default = ProductImage;

      /***/
    },
    /* 331 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true,
      });

      var _createClass = (function () {
        function defineProperties(target, props) {
          for (var i = 0; i < props.length; i++) {
            var descriptor = props[i];
            descriptor.enumerable = descriptor.enumerable || false;
            descriptor.configurable = true;
            if ('value' in descriptor) descriptor.writable = true;
            Object.defineProperty(target, descriptor.key, descriptor);
          }
        }
        return function (Constructor, protoProps, staticProps) {
          if (protoProps) defineProperties(Constructor.prototype, protoProps);
          if (staticProps) defineProperties(Constructor, staticProps);
          return Constructor;
        };
      })();

      var _react = __webpack_require__(4);

      var _react2 = _interopRequireDefault(_react);

      var _app2 = __webpack_require__(11);

      var _app = _interopRequireWildcard(_app2);

      var _reactSelect = __webpack_require__(101);

      var _reactSelect2 = _interopRequireDefault(_reactSelect);

      function _interopRequireWildcard(obj) {
        if (obj && obj.__esModule) {
          return obj;
        } else {
          var newObj = {};
          if (obj != null) {
            for (var key in obj) {
              if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key];
            }
          }
          newObj.default = obj;
          return newObj;
        }
      }

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
          throw new TypeError('Cannot call a class as a function');
        }
      }

      function _possibleConstructorReturn(self, call) {
        if (!self) {
          throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
        }
        return call && (typeof call === 'object' || typeof call === 'function') ? call : self;
      }

      function _inherits(subClass, superClass) {
        if (typeof superClass !== 'function' && superClass !== null) {
          throw new TypeError(
            'Super expression must either be null or a function, not ' + typeof superClass
          );
        }
        subClass.prototype = Object.create(superClass && superClass.prototype, {
          constructor: { value: subClass, enumerable: false, writable: true, configurable: true },
        });
        if (superClass)
          Object.setPrototypeOf
            ? Object.setPrototypeOf(subClass, superClass)
            : (subClass.__proto__ = superClass);
      }

      var ProductSelector = (function (_React$Component) {
        _inherits(ProductSelector, _React$Component);

        function ProductSelector(props) {
          _classCallCheck(this, ProductSelector);

          return _possibleConstructorReturn(
            this,
            (ProductSelector.__proto__ || Object.getPrototypeOf(ProductSelector)).call(this, props)
          );
        }

        _createClass(ProductSelector, [
          {
            key: 'render',
            value: function render() {
              if (this.props.hasProducts) {
                return _react2.default.createElement(
                  'div',
                  { className: 'builder-product' },
                  _react2.default.createElement(
                    'h3',
                    { className: 'builder-product__title' },
                    _app.t(this.props.label)
                  ),
                  _react2.default.createElement(
                    'div',
                    { className: 'builder-product__input builder-product__input--select' },
                    _react2.default.createElement(_reactSelect2.default, {
                      name: 'product_selector',
                      value: this.props.selected,
                      options: this.props.options,
                      clearable: false,
                      onChange: this.props.updateProducts,
                      placeholder: 'Please Choose',
                      searchable: false,
                    })
                  )
                );
              } else {
                return _react2.default.createElement('span', null);
              }
            },
          },
        ]);

        return ProductSelector;
      })(_react2.default.Component);

      ProductSelector.propTypes = {
        hasProducts: _react2.default.PropTypes.bool,
        options: _react2.default.PropTypes.array,
        selected: _react2.default.PropTypes.number,
        updateProducts: _react2.default.PropTypes.func,
      };

      exports.default = ProductSelector;

      /***/
    },
    /* 332 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true,
      });

      var _createClass = (function () {
        function defineProperties(target, props) {
          for (var i = 0; i < props.length; i++) {
            var descriptor = props[i];
            descriptor.enumerable = descriptor.enumerable || false;
            descriptor.configurable = true;
            if ('value' in descriptor) descriptor.writable = true;
            Object.defineProperty(target, descriptor.key, descriptor);
          }
        }
        return function (Constructor, protoProps, staticProps) {
          if (protoProps) defineProperties(Constructor.prototype, protoProps);
          if (staticProps) defineProperties(Constructor, staticProps);
          return Constructor;
        };
      })();

      var _react = __webpack_require__(4);

      var _react2 = _interopRequireDefault(_react);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
          throw new TypeError('Cannot call a class as a function');
        }
      }

      function _possibleConstructorReturn(self, call) {
        if (!self) {
          throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
        }
        return call && (typeof call === 'object' || typeof call === 'function') ? call : self;
      }

      function _inherits(subClass, superClass) {
        if (typeof superClass !== 'function' && superClass !== null) {
          throw new TypeError(
            'Super expression must either be null or a function, not ' + typeof superClass
          );
        }
        subClass.prototype = Object.create(superClass && superClass.prototype, {
          constructor: { value: subClass, enumerable: false, writable: true, configurable: true },
        });
        if (superClass)
          Object.setPrototypeOf
            ? Object.setPrototypeOf(subClass, superClass)
            : (subClass.__proto__ = superClass);
      }

      var ProductSpecsCell = (function (_React$Component) {
        _inherits(ProductSpecsCell, _React$Component);

        function ProductSpecsCell(props) {
          _classCallCheck(this, ProductSpecsCell);

          return _possibleConstructorReturn(
            this,
            (ProductSpecsCell.__proto__ || Object.getPrototypeOf(ProductSpecsCell)).call(
              this,
              props
            )
          );
        }

        _createClass(ProductSpecsCell, [
          {
            key: 'render',
            value: function render() {
              var contents = this.props.value;
              if (this.props.uri) {
                contents = _react2.default.createElement(
                  'a',
                  { href: this.props.uri },
                  this.props.value
                );
              }
              return _react2.default.createElement(
                'li',
                {
                  'data-id': this.props.id,
                  className: this.props.classes,
                  onClick: this.props.onClick,
                },
                this.props.prefix,
                _react2.default.createElement('span', null, contents),
                this.props.suffix
              );
            },
          },
        ]);

        return ProductSpecsCell;
      })(_react2.default.Component);

      exports.default = ProductSpecsCell;

      /***/
    },
    /* 333 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true,
      });

      var _createClass = (function () {
        function defineProperties(target, props) {
          for (var i = 0; i < props.length; i++) {
            var descriptor = props[i];
            descriptor.enumerable = descriptor.enumerable || false;
            descriptor.configurable = true;
            if ('value' in descriptor) descriptor.writable = true;
            Object.defineProperty(target, descriptor.key, descriptor);
          }
        }
        return function (Constructor, protoProps, staticProps) {
          if (protoProps) defineProperties(Constructor.prototype, protoProps);
          if (staticProps) defineProperties(Constructor, staticProps);
          return Constructor;
        };
      })();

      var _react = __webpack_require__(4);

      var _react2 = _interopRequireDefault(_react);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
          throw new TypeError('Cannot call a class as a function');
        }
      }

      function _possibleConstructorReturn(self, call) {
        if (!self) {
          throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
        }
        return call && (typeof call === 'object' || typeof call === 'function') ? call : self;
      }

      function _inherits(subClass, superClass) {
        if (typeof superClass !== 'function' && superClass !== null) {
          throw new TypeError(
            'Super expression must either be null or a function, not ' + typeof superClass
          );
        }
        subClass.prototype = Object.create(superClass && superClass.prototype, {
          constructor: { value: subClass, enumerable: false, writable: true, configurable: true },
        });
        if (superClass)
          Object.setPrototypeOf
            ? Object.setPrototypeOf(subClass, superClass)
            : (subClass.__proto__ = superClass);
      }

      var ProductSpecsExpander = (function (_React$Component) {
        _inherits(ProductSpecsExpander, _React$Component);

        function ProductSpecsExpander(props) {
          _classCallCheck(this, ProductSpecsExpander);

          var _this = _possibleConstructorReturn(
            this,
            (ProductSpecsExpander.__proto__ || Object.getPrototypeOf(ProductSpecsExpander)).call(
              this,
              props
            )
          );

          _this.onClickAction = _this.props.onClickAction.bind(_this);
          return _this;
        }

        _createClass(ProductSpecsExpander, [
          {
            key: 'render',
            value: function render() {
              var _this2 = this;

              return _react2.default.createElement(
                'div',
                { className: 'specs-expander' },
                _react2.default.createElement(
                  'span',
                  {
                    className: 'specs-expander__button',
                    onClick: function onClick() {
                      return _this2.onClickAction(_this2.props.expanded);
                    },
                  },
                  this.props.title
                )
              );
            },
          },
        ]);

        return ProductSpecsExpander;
      })(_react2.default.Component);

      ProductSpecsExpander.propTypes = {
        expanded: _react2.default.PropTypes.bool,
        title: _react2.default.PropTypes.string,
        onClickAction: _react2.default.PropTypes.func,
      };

      exports.default = ProductSpecsExpander;

      /***/
    },
    /* 334 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true,
      });

      var _createClass = (function () {
        function defineProperties(target, props) {
          for (var i = 0; i < props.length; i++) {
            var descriptor = props[i];
            descriptor.enumerable = descriptor.enumerable || false;
            descriptor.configurable = true;
            if ('value' in descriptor) descriptor.writable = true;
            Object.defineProperty(target, descriptor.key, descriptor);
          }
        }
        return function (Constructor, protoProps, staticProps) {
          if (protoProps) defineProperties(Constructor.prototype, protoProps);
          if (staticProps) defineProperties(Constructor, staticProps);
          return Constructor;
        };
      })();

      var _react = __webpack_require__(4);

      var _react2 = _interopRequireDefault(_react);

      var _app2 = __webpack_require__(11);

      var _app = _interopRequireWildcard(_app2);

      function _interopRequireWildcard(obj) {
        if (obj && obj.__esModule) {
          return obj;
        } else {
          var newObj = {};
          if (obj != null) {
            for (var key in obj) {
              if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key];
            }
          }
          newObj.default = obj;
          return newObj;
        }
      }

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
          throw new TypeError('Cannot call a class as a function');
        }
      }

      function _possibleConstructorReturn(self, call) {
        if (!self) {
          throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
        }
        return call && (typeof call === 'object' || typeof call === 'function') ? call : self;
      }

      function _inherits(subClass, superClass) {
        if (typeof superClass !== 'function' && superClass !== null) {
          throw new TypeError(
            'Super expression must either be null or a function, not ' + typeof superClass
          );
        }
        subClass.prototype = Object.create(superClass && superClass.prototype, {
          constructor: { value: subClass, enumerable: false, writable: true, configurable: true },
        });
        if (superClass)
          Object.setPrototypeOf
            ? Object.setPrototypeOf(subClass, superClass)
            : (subClass.__proto__ = superClass);
      }

      var ProductSpecsHeader = (function (_React$Component) {
        _inherits(ProductSpecsHeader, _React$Component);

        function ProductSpecsHeader(props) {
          _classCallCheck(this, ProductSpecsHeader);

          var _this = _possibleConstructorReturn(
            this,
            (ProductSpecsHeader.__proto__ || Object.getPrototypeOf(ProductSpecsHeader)).call(
              this,
              props
            )
          );

          _this.onClickAction = _this.props.onClickAction.bind(_this);
          return _this;
        }

        _createClass(ProductSpecsHeader, [
          {
            key: 'render',
            value: function render() {
              var _this2 = this;

              //TODO - abstract filters to global class
              var options = [];

              var _loop = function _loop() {
                var id = _this2.props.options[i].id;
                var is_selected = id == _this2.props.selected;

                options.push(
                  _react2.default.createElement(
                    'span',
                    {
                      key: id,
                      onClick: function onClick() {
                        return _this2.onClickAction({
                          type: _this2.props.builderType,
                          value: id,
                        });
                      },
                      className:
                        'toggle__option toggle__option--' +
                        id +
                        ' ' +
                        (is_selected ? 'js-toggle__option--active' : ''),
                    },
                    _react2.default.createElement(
                      'i',
                      { className: 'toggle__option-link', href: '#filter-' + id },
                      _this2.props.options[i].label
                    )
                  )
                );
              };

              for (var i in this.props.options) {
                _loop();
              }

              var filters = [];
              if (options.length) {
                filters.push(
                  _react2.default.createElement(
                    'div',
                    { className: 'specs-header__filters', key: 'spec-filters' },
                    _react2.default.createElement(
                      'div',
                      { className: 'toggle' },
                      _react2.default.createElement(
                        'span',
                        { className: 'toggle__label' },
                        _app.t('Filter'),
                        ':'
                      ),
                      options
                    )
                  )
                );
              }

              return _react2.default.createElement(
                'div',
                { className: 'specs-header clearfix' },
                _react2.default.createElement(
                  'h4',
                  { className: 'specs-header__title' },
                  this.props.header
                ),
                filters
              );
            },
          },
        ]);

        return ProductSpecsHeader;
      })(_react2.default.Component);

      ProductSpecsHeader.propTypes = {
        options: _react2.default.PropTypes.array,
        selected: _react2.default.PropTypes.string,
        header: _react2.default.PropTypes.string,
        onClickAction: _react2.default.PropTypes.func,
      };

      exports.default = ProductSpecsHeader;

      /***/
    },
    /* 335 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true,
      });

      var _createClass = (function () {
        function defineProperties(target, props) {
          for (var i = 0; i < props.length; i++) {
            var descriptor = props[i];
            descriptor.enumerable = descriptor.enumerable || false;
            descriptor.configurable = true;
            if ('value' in descriptor) descriptor.writable = true;
            Object.defineProperty(target, descriptor.key, descriptor);
          }
        }
        return function (Constructor, protoProps, staticProps) {
          if (protoProps) defineProperties(Constructor.prototype, protoProps);
          if (staticProps) defineProperties(Constructor, staticProps);
          return Constructor;
        };
      })();

      var _react = __webpack_require__(4);

      var _react2 = _interopRequireDefault(_react);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
          throw new TypeError('Cannot call a class as a function');
        }
      }

      function _possibleConstructorReturn(self, call) {
        if (!self) {
          throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
        }
        return call && (typeof call === 'object' || typeof call === 'function') ? call : self;
      }

      function _inherits(subClass, superClass) {
        if (typeof superClass !== 'function' && superClass !== null) {
          throw new TypeError(
            'Super expression must either be null or a function, not ' + typeof superClass
          );
        }
        subClass.prototype = Object.create(superClass && superClass.prototype, {
          constructor: { value: subClass, enumerable: false, writable: true, configurable: true },
        });
        if (superClass)
          Object.setPrototypeOf
            ? Object.setPrototypeOf(subClass, superClass)
            : (subClass.__proto__ = superClass);
      }

      var ProductSpecsPager = (function (_React$Component) {
        _inherits(ProductSpecsPager, _React$Component);

        function ProductSpecsPager(props) {
          _classCallCheck(this, ProductSpecsPager);

          return _possibleConstructorReturn(
            this,
            (ProductSpecsPager.__proto__ || Object.getPrototypeOf(ProductSpecsPager)).call(
              this,
              props
            )
          );
        }

        _createClass(ProductSpecsPager, [
          {
            key: 'render',
            value: function render() {
              return _react2.default.createElement('div', { className: 'specs-pager' });
            },
          },
        ]);

        return ProductSpecsPager;
      })(_react2.default.Component);

      ProductSpecsPager.propTypes = {};

      exports.default = ProductSpecsPager;

      /***/
    },
    /* 336 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true,
      });

      var _createClass = (function () {
        function defineProperties(target, props) {
          for (var i = 0; i < props.length; i++) {
            var descriptor = props[i];
            descriptor.enumerable = descriptor.enumerable || false;
            descriptor.configurable = true;
            if ('value' in descriptor) descriptor.writable = true;
            Object.defineProperty(target, descriptor.key, descriptor);
          }
        }
        return function (Constructor, protoProps, staticProps) {
          if (protoProps) defineProperties(Constructor.prototype, protoProps);
          if (staticProps) defineProperties(Constructor, staticProps);
          return Constructor;
        };
      })();

      var _react = __webpack_require__(4);

      var _react2 = _interopRequireDefault(_react);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
          throw new TypeError('Cannot call a class as a function');
        }
      }

      function _possibleConstructorReturn(self, call) {
        if (!self) {
          throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
        }
        return call && (typeof call === 'object' || typeof call === 'function') ? call : self;
      }

      function _inherits(subClass, superClass) {
        if (typeof superClass !== 'function' && superClass !== null) {
          throw new TypeError(
            'Super expression must either be null or a function, not ' + typeof superClass
          );
        }
        subClass.prototype = Object.create(superClass && superClass.prototype, {
          constructor: { value: subClass, enumerable: false, writable: true, configurable: true },
        });
        if (superClass)
          Object.setPrototypeOf
            ? Object.setPrototypeOf(subClass, superClass)
            : (subClass.__proto__ = superClass);
      }

      var ProductSpecsPrevNext = (function (_React$Component) {
        _inherits(ProductSpecsPrevNext, _React$Component);

        function ProductSpecsPrevNext(props) {
          _classCallCheck(this, ProductSpecsPrevNext);

          var _this = _possibleConstructorReturn(
            this,
            (ProductSpecsPrevNext.__proto__ || Object.getPrototypeOf(ProductSpecsPrevNext)).call(
              this,
              props
            )
          );

          _this.onPrevNext = _this.props.onPrevNext.bind(_this);
          return _this;
        }

        _createClass(ProductSpecsPrevNext, [
          {
            key: 'render',
            value: function render() {
              var _this2 = this;

              return _react2.default.createElement(
                'div',
                { className: 'specs-prevnext' },
                _react2.default.createElement(
                  'span',
                  {
                    className: 'specs-prevnext__control specs-prevnext__control--prev prev',
                    onClick: function onClick() {
                      return _this2.onPrevNext('prev');
                    },
                  },
                  'Prev'
                ),
                _react2.default.createElement(
                  'span',
                  {
                    className: 'specs-prevnext__control specs-prevnext__control--next next',
                    onClick: function onClick() {
                      return _this2.onPrevNext('next');
                    },
                  },
                  'Next'
                )
              );
            },
          },
        ]);

        return ProductSpecsPrevNext;
      })(_react2.default.Component);

      ProductSpecsPrevNext.propTypes = {
        onPrevNext: _react2.default.PropTypes.func,
      };

      exports.default = ProductSpecsPrevNext;

      /***/
    },
    /* 337 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true,
      });

      var _createClass = (function () {
        function defineProperties(target, props) {
          for (var i = 0; i < props.length; i++) {
            var descriptor = props[i];
            descriptor.enumerable = descriptor.enumerable || false;
            descriptor.configurable = true;
            if ('value' in descriptor) descriptor.writable = true;
            Object.defineProperty(target, descriptor.key, descriptor);
          }
        }
        return function (Constructor, protoProps, staticProps) {
          if (protoProps) defineProperties(Constructor.prototype, protoProps);
          if (staticProps) defineProperties(Constructor, staticProps);
          return Constructor;
        };
      })();

      var _react = __webpack_require__(4);

      var _react2 = _interopRequireDefault(_react);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
          throw new TypeError('Cannot call a class as a function');
        }
      }

      function _possibleConstructorReturn(self, call) {
        if (!self) {
          throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
        }
        return call && (typeof call === 'object' || typeof call === 'function') ? call : self;
      }

      function _inherits(subClass, superClass) {
        if (typeof superClass !== 'function' && superClass !== null) {
          throw new TypeError(
            'Super expression must either be null or a function, not ' + typeof superClass
          );
        }
        subClass.prototype = Object.create(superClass && superClass.prototype, {
          constructor: { value: subClass, enumerable: false, writable: true, configurable: true },
        });
        if (superClass)
          Object.setPrototypeOf
            ? Object.setPrototypeOf(subClass, superClass)
            : (subClass.__proto__ = superClass);
      }

      var ProductSpecsTableColumn = (function (_React$Component) {
        _inherits(ProductSpecsTableColumn, _React$Component);

        function ProductSpecsTableColumn(props) {
          _classCallCheck(this, ProductSpecsTableColumn);

          return _possibleConstructorReturn(
            this,
            (
              ProductSpecsTableColumn.__proto__ || Object.getPrototypeOf(ProductSpecsTableColumn)
            ).call(this, props)
          );
        }

        _createClass(ProductSpecsTableColumn, [
          {
            key: 'render',
            value: function render() {
              var classes = [];
              classes.push('specs-table__list-item');
              classes.push('specs-table__list-item--' + this.props.id);

              if (this.props.material) {
                classes.push('specs-table__list-item--' + this.props.material);
                classes.push(this.props.material);
              }

              if (this.props.selected) {
                classes.push('selected');
              }

              return _react2.default.createElement(
                'ul',
                {
                  className: classes.join(' '),
                },
                this.props.specs
              );
            },
          },
        ]);

        return ProductSpecsTableColumn;
      })(_react2.default.Component);

      ProductSpecsTableColumn.propTypes = {
        material: _react2.default.PropTypes.string,
        id: _react2.default.PropTypes.number,
        selected: _react2.default.PropTypes.bool,
        specs: _react2.default.PropTypes.array,
      };

      exports.default = ProductSpecsTableColumn;

      /***/
    },
    /* 338 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true,
      });

      var _createClass = (function () {
        function defineProperties(target, props) {
          for (var i = 0; i < props.length; i++) {
            var descriptor = props[i];
            descriptor.enumerable = descriptor.enumerable || false;
            descriptor.configurable = true;
            if ('value' in descriptor) descriptor.writable = true;
            Object.defineProperty(target, descriptor.key, descriptor);
          }
        }
        return function (Constructor, protoProps, staticProps) {
          if (protoProps) defineProperties(Constructor.prototype, protoProps);
          if (staticProps) defineProperties(Constructor, staticProps);
          return Constructor;
        };
      })();

      var _react = __webpack_require__(4);

      var _react2 = _interopRequireDefault(_react);

      var _app2 = __webpack_require__(11);

      var _app = _interopRequireWildcard(_app2);

      var _productSpecsTableColumn = __webpack_require__(337);

      var _productSpecsTableColumn2 = _interopRequireDefault(_productSpecsTableColumn);

      var _productSpecsCell = __webpack_require__(332);

      var _productSpecsCell2 = _interopRequireDefault(_productSpecsCell);

      var _reactSwipeable = __webpack_require__(756);

      var _reactSwipeable2 = _interopRequireDefault(_reactSwipeable);

      function _interopRequireWildcard(obj) {
        if (obj && obj.__esModule) {
          return obj;
        } else {
          var newObj = {};
          if (obj != null) {
            for (var key in obj) {
              if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key];
            }
          }
          newObj.default = obj;
          return newObj;
        }
      }

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
          throw new TypeError('Cannot call a class as a function');
        }
      }

      function _possibleConstructorReturn(self, call) {
        if (!self) {
          throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
        }
        return call && (typeof call === 'object' || typeof call === 'function') ? call : self;
      }

      function _inherits(subClass, superClass) {
        if (typeof superClass !== 'function' && superClass !== null) {
          throw new TypeError(
            'Super expression must either be null or a function, not ' + typeof superClass
          );
        }
        subClass.prototype = Object.create(superClass && superClass.prototype, {
          constructor: { value: subClass, enumerable: false, writable: true, configurable: true },
        });
        if (superClass)
          Object.setPrototypeOf
            ? Object.setPrototypeOf(subClass, superClass)
            : (subClass.__proto__ = superClass);
      }
      //https://github.com/dogfessional/react-swipeable

      var ProductSpecs = (function (_React$Component) {
        _inherits(ProductSpecs, _React$Component);

        function ProductSpecs(props) {
          _classCallCheck(this, ProductSpecs);

          var _this = _possibleConstructorReturn(
            this,
            (ProductSpecs.__proto__ || Object.getPrototypeOf(ProductSpecs)).call(this, props)
          );

          _this.itemClickAction = _this.props.itemClickAction.bind(_this);
          _this.onPrevNext = _this.props.onPrevNext.bind(_this);
          _this.resizeActions = _this.resizeActions.bind(_this);
          _this.clickResizeActions = _this.clickResizeActions.bind(_this);
          _this.swipedLeft = _this.swipedLeft.bind(_this);
          _this.swipedRight = _this.swipedRight.bind(_this);
          _this.boxSizing = getComputedStyle(document.getElementsByTagName('BODY')[0]).boxSizing;
          return _this;
        }

        _createClass(ProductSpecs, [
          {
            key: 'swipedLeft',
            value: function swipedLeft(e, deltaX, deltaY, isFlick, velocity) {
              this.onPrevNext('next');
            },
          },
          {
            key: 'swipedRight',
            value: function swipedRight(e, deltaX, deltaY, isFlick, velocity) {
              this.onPrevNext('prev');
            },

            //resizeActions
            //the magic that calculates spec table layout and display
            // - makes sure each cell is the same height as others in the same row
            // - determines the number of items to show on the page
            // - determines prev/next and pager navigation display
            //on load and resize this function is called
          },
          {
            key: 'resizeActions',
            value: function resizeActions() {
              //functions

              //a function that calculates the height of an element (cell)
              var outerHeight = function outerHeight(el) {
                var height = el.offsetHeight;
                var style = getComputedStyle(el);
                if (style.boxSizing != 'border-box') {
                  height =
                    height -
                    parseInt(style.paddingTop) -
                    parseInt(style.paddingBottom) -
                    parseInt(style.marginTop) -
                    parseInt(style.marginBottom) -
                    parseInt(style.borderBottomWidth) -
                    parseInt(style.borderTopWidth);
                }
                return height;
              };

              //elements that are required throughout
              var specList = this.refs['mySpecList--' + this.props.rando]; //the list table

              var specsWrapper = document.getElementById('builder-specs--' + this.props.rando); //parent wrapper (used to target header/footer)
              var cols = specList.querySelectorAll('.specs-table__list-item'); //each table column
              var colGroup = specList.querySelector('.specs-table__items'); //the wrapper div that contains the data columns (not the header column)
              var colHint = 40;

              var headerCol = specList.querySelectorAll('.specs-table__header'); //the header column
              var dummyCol = specList.querySelectorAll('.specs-table__list-item--headers'); //the dummy header column
              var headerCells = specList.querySelectorAll(
                '.specs-table__header .specs-table__header-item'
              ); //the cells in the header column

              var specListWidth = Math.max(10, parseInt(getComputedStyle(specList).width)); //gets the width of the table
              if (isNaN(specListWidth)) specListWidth = 10;

              var current = this.props.resizeDefaults.find(function (rule) {
                return specListWidth > rule.min && specListWidth <= rule.max;
              }); //current - get the settings for the current table width, as set in specsDataReducer (more breakpoints and settings can be tweaked there)

              var numItems = this.props.specItems.length; //number of products (items) displayed in the table

              var widthHeader = specListWidth * (current.headerpc / 100); //width of the header
              var widthColumn = (specListWidth - widthHeader) / Math.min(current.visible, numItems); //width of the columns
              colHint = widthColumn * 0.1;

              if (numItems > current.visible) {
                widthColumn = widthColumn - colHint; //allow for hinting if there are more columns
              }

              //set widths for viewport
              Array.prototype.forEach.call(cols, function (el, j) {
                el.style.width = widthColumn + 'px';
              });
              Array.prototype.forEach.call(headerCol, function (el, j) {
                el.style.width = widthHeader + 'px';
              });
              Array.prototype.forEach.call(dummyCol, function (el, j) {
                el.style.width = widthHeader + 'px';
              });

              //layout

              var selectedIndex = this.props.selectedIndex; //the zero index of the current selected item (product)
              var numPages = Math.max(numItems - current.visible, 0); //zero-indexed
              var currentPage = Math.min(selectedIndex, numPages); //zero-indexed

              //calculate offset of parent container and translateX
              var parentOffset = 0;
              if (numItems > current.visible) {
                parentOffset =
                  Math.min(selectedIndex, numItems - current.visible) * widthColumn * -1;
                if (currentPage == numPages) {
                  parentOffset = parentOffset + colHint * current.visible;
                } else if (currentPage > 0) {
                  parentOffset = parentOffset + colHint * current.visible * 0.5;
                }
              }

              colGroup.style.transform = 'translateX(' + parentOffset + 'px)';

              //determine prev/next arrow display
              specsWrapper.classList.remove('no-next');
              specsWrapper.classList.remove('no-prev');
              specsWrapper.classList.remove('no-next-page');
              specsWrapper.classList.remove('no-prev-page');

              if (parentOffset >= 0) {
                specsWrapper.classList.add('no-prev-page');
              }
              if (selectedIndex == 0) {
                specsWrapper.classList.add('no-prev');
              }
              if (current.visible + selectedIndex >= numItems) {
                specsWrapper.classList.add('no-next-page');
              }
              if (selectedIndex + 1 >= numItems) {
                //selected index is zero indexed.
                specsWrapper.classList.add('no-next');
              }

              //pager

              var pager = specsWrapper.querySelector('.specs-pager');
              //empty pager
              pager.innerHTML = ' ';
              if (numPages > 0) {
                var i = 0;
                while (i <= numPages) {
                  var pagerItem = document.createElement('span');
                  var pagerItemText = document.createElement('i');
                  pagerItem.className = 'specs-pager__item' + (i == currentPage ? ' selected' : '');
                  pagerItemText.innerHTML = _app.t('Go to Page') + (i + 1);
                  pagerItem.appendChild(pagerItemText);
                  pager.appendChild(pagerItem);
                  i++;
                }
              }

              //ensure all lines in the spec table are the same size
              //do this last of all

              Array.prototype.forEach.call(headerCells, function (el) {
                var id = el.getAttribute('data-id');
                var items = specList.querySelectorAll('li[data-id="' + id + '"]');
                var height = 0;
                Array.prototype.forEach.call(items, function (el) {
                  el.removeAttribute('style'); //remove any pre-existing style attribute
                  var h = outerHeight(el);
                  height = Math.max(height, h);
                });
                //get
                Array.prototype.forEach.call(items, function (el, j) {
                  el.style.height = height + 'px';
                });
                height = 0;
              });
            },
          },
          {
            key: 'clickResizeActions',
            value: function clickResizeActions(e) {
              if (e && e.target && _app.getClosest(e.target, '.tabs--builder')) {
                this.resizeActions(null);
              }
            },
          },
          {
            key: 'componentDidMount',
            value: function componentDidMount() {
              this.resizeActions(null);
              window.addEventListener('resize', this.resizeActions);
              window.addEventListener('click', this.clickResizeActions);
            },
          },
          {
            key: 'componentDidUpdate',
            value: function componentDidUpdate() {
              this.resizeActions(null);
              this.clickResizeActions(null);
            },
          },
          {
            key: 'componentWillUnmount',
            value: function componentWillUnmount() {
              window.removeEventListener('builder:rebuildspecs', this.resizeActions);
              window.removeEventListener('resize', this.resizeActions);
              window.removeEventListener('click', this.clickResizeActions);
            },
          },
          {
            key: 'render',
            value: function render() {
              var _this2 = this;

              var specItems = [];
              var specHeaders = [];
              var dummyHeaders = [];
              var selectedIndex = 0;

              for (var _i in this.props.specHeaders) {
                //@todo - classname with modifier of id
                specHeaders.push(
                  _react2.default.createElement(_productSpecsCell2.default, {
                    id: this.props.specHeaders[_i].type,
                    key: 'header-' + _i,
                    classes:
                      'specs-table__header-item specs-table__header-item--' +
                      this.props.specHeaders[_i].type,
                    value: _app.t(this.props.specHeaders[_i].typeLabel),
                  })
                );
                dummyHeaders.push(
                  _react2.default.createElement(_productSpecsCell2.default, {
                    id: this.props.specHeaders[_i].type,
                    key: 'dummyheader-' + _i,
                    classes:
                      'specs-table__header-item specs-table__header-item--' +
                      this.props.specHeaders[_i].type,
                    value: _app.t(this.props.specHeaders[_i].typeLabel),
                  })
                );
              }
              specItems.push(
                _react2.default.createElement(
                  'ul',
                  {
                    key: 'header-item-list-' + i,
                    className: 'specs-table__list-item specs-table__list-item--headers',
                  },
                  dummyHeaders
                )
              );

              //@TODO - specs might not have mateiral if material is hidden
              //plan - instead of removing set a displayflag when creating the list?

              for (var i in this.props.specItems) {
                var material = '';
                var specs = [];

                var _loop = function _loop() {
                  var _id = _this2.props.specHeaders[j].type;
                  var _specs = _this2.props.specItems[i]['specs'];
                  if (typeof _specs[_id] == 'undefined') {
                    specs.push(
                      _react2.default.createElement(_productSpecsCell2.default, {
                        key: 'spec-list-item--' + i + '--' + j,
                        id: _id,
                        classes:
                          'specs-table__item specs-table__item--' +
                          _id +
                          ' specs-table__item--empty',
                        value: '--',
                      })
                    );
                  } else {
                    var nid = _this2.props.specItems[i]['id'];
                    specs.push(
                      _react2.default.createElement(_productSpecsCell2.default, {
                        key: 'spec-list-item--' + i + '--' + j,
                        id: _id,
                        classes: 'specs-table__item specs-table__item--' + _id,
                        value: _app.t(_specs[_id].value),
                        uri: _app.t(_specs[_id].uri),
                        suffix: _specs[_id].suffix,
                        prefix: _specs[_id].prefix,
                        onClick: function onClick() {
                          _this2.itemClickAction({
                            value: nid,
                            row: _id,
                          });
                        },
                      })
                    );
                    if (_id == 'material') material = _specs[_id].value.getMachineMaterial();
                  }
                };

                for (var j in this.props.specHeaders) {
                  _loop();
                }

                var _classes = 'specs-table__list-item';
                if (this.props.specItems[i].id == this.props.selected) {
                  _classes += ' selected';
                  selectedIndex = i;
                }

                specItems.push(
                  _react2.default.createElement(_productSpecsTableColumn2.default, {
                    key: this.props.specItems[i].id,
                    material: material,
                    id: this.props.specItems[i].id,
                    selected: this.props.specItems[i].id == this.props.selected ? true : false,
                    specs: specs,
                  })
                );
              }

              var parentClasses = 'specs-table__items selected--' + selectedIndex;
              parentClasses += ' material--' + this.props.material;

              return _react2.default.createElement(
                'div',
                { className: 'specs-table clearfix', ref: 'mySpecList--' + this.props.rando },
                _react2.default.createElement(
                  'ul',
                  { key: 'header', className: 'specs-table__header' },
                  specHeaders
                ),
                _react2.default.createElement(
                  _reactSwipeable2.default,
                  {
                    key: 'contents',
                    className: parentClasses,
                    onSwipedLeft: this.swipedLeft,
                    onSwipedRight: this.swipedRight,
                  },
                  specItems
                )
              );
            },
          },
        ]);

        return ProductSpecs;
      })(_react2.default.Component);

      ProductSpecs.propTypes = {
        specItems: _react2.default.PropTypes.array,
        specHeaders: _react2.default.PropTypes.array,
        selected: _react2.default.PropTypes.number,
        selectedIndex: _react2.default.PropTypes.number,
        material: _react2.default.PropTypes.string,
        itemClickAction: _react2.default.PropTypes.func,
        resizeDefaults: _react2.default.PropTypes.array,
        onPrevNext: _react2.default.PropTypes.func,
        rando: _react2.default.PropTypes.string,
      };

      exports.default = ProductSpecs;

      /***/
    },
    /* 339 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true,
      });

      var _createClass = (function () {
        function defineProperties(target, props) {
          for (var i = 0; i < props.length; i++) {
            var descriptor = props[i];
            descriptor.enumerable = descriptor.enumerable || false;
            descriptor.configurable = true;
            if ('value' in descriptor) descriptor.writable = true;
            Object.defineProperty(target, descriptor.key, descriptor);
          }
        }
        return function (Constructor, protoProps, staticProps) {
          if (protoProps) defineProperties(Constructor.prototype, protoProps);
          if (staticProps) defineProperties(Constructor, staticProps);
          return Constructor;
        };
      })();

      var _react = __webpack_require__(4);

      var _react2 = _interopRequireDefault(_react);

      var _app2 = __webpack_require__(11);

      var _app = _interopRequireWildcard(_app2);

      function _interopRequireWildcard(obj) {
        if (obj && obj.__esModule) {
          return obj;
        } else {
          var newObj = {};
          if (obj != null) {
            for (var key in obj) {
              if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key];
            }
          }
          newObj.default = obj;
          return newObj;
        }
      }

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
          throw new TypeError('Cannot call a class as a function');
        }
      }

      function _possibleConstructorReturn(self, call) {
        if (!self) {
          throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
        }
        return call && (typeof call === 'object' || typeof call === 'function') ? call : self;
      }

      function _inherits(subClass, superClass) {
        if (typeof superClass !== 'function' && superClass !== null) {
          throw new TypeError(
            'Super expression must either be null or a function, not ' + typeof superClass
          );
        }
        subClass.prototype = Object.create(superClass && superClass.prototype, {
          constructor: { value: subClass, enumerable: false, writable: true, configurable: true },
        });
        if (superClass)
          Object.setPrototypeOf
            ? Object.setPrototypeOf(subClass, superClass)
            : (subClass.__proto__ = superClass);
      }

      var ProductSummary = (function (_React$Component) {
        _inherits(ProductSummary, _React$Component);

        function ProductSummary(props) {
          _classCallCheck(this, ProductSummary);

          return _possibleConstructorReturn(
            this,
            (ProductSummary.__proto__ || Object.getPrototypeOf(ProductSummary)).call(this, props)
          );
        }

        _createClass(ProductSummary, [
          {
            key: 'renderFrameOnlyPricing',
            value: function renderFrameOnlyPricing() {
              return {
                __html: this.props.frameOnlyPricing,
              };
            },
          },
          {
            key: 'render',
            value: function render() {
              var _this2 = this;

              var _symbol = _app.returnCurrencySymbolFromUnicode(this.props.currencySymbol);
              var price = [_symbol, this.props.price, ' ', this.props.currencySuffix];
              if (this.props.price <= 0) {
                price = 'Contact Your Local Dealer';
              }
              var weight = _app.formatWeight(this.props.weight);

              var dealerLink = this.props.linkRoot + 'dealers';

              var buttons = [];
              //changes
              buttons.push(
                _react2.default.createElement(
                  'a',
                  {
                    key: 'changes',
                    className: 'button builder-summary__button builder-summary__button--changes',
                    href: '#',
                    onClick: function onClick(e) {
                      e.preventDefault();
                      _this2.props.onCloseAction({});
                    },
                  },
                  this.props.configVisible ? _app.t('View Changes') : _app.t('Customize')
                )
              );
              //dealers
              buttons.push(
                _react2.default.createElement(
                  'a',
                  {
                    key: 'dealers',
                    className: 'button builder-summary__button builder-summary__button--dealers',
                    href: dealerLink,
                    onClick: function onClick(e) {
                      e.preventDefault();
                      _this2.props.onDealersAction({});
                    },
                  },
                  _app.t('Find a Dealer')
                )
              );
              //compare
              if (this.props.localStorage) {
                buttons.push(
                  _react2.default.createElement(
                    'a',
                    {
                      key: 'compare',
                      className: 'button builder-summary__button builder-summary__button--compare',
                      href: '#',
                      onClick: function onClick(e) {
                        e.preventDefault();
                        _this2.props.onCompareAction({});
                      },
                    },
                    _app.t('Compare'),
                    _react2.default.createElement(
                      'span',
                      {
                        className:
                          'builder_compare__count builder_compare__count--' +
                          this.props.currentCompareNum,
                      },
                      this.props.currentCompareNum
                    )
                  )
                );
              }
              //share
              buttons.push(
                _react2.default.createElement(
                  'a',
                  {
                    key: 'share',
                    className: 'button builder-summary__button builder-summary__button--share',
                    href: '#',
                    onClick: function onClick(e) {
                      e.preventDefault();
                      _this2.props.onClickAction({
                        platform: 'open',
                      });
                    },
                  },
                  _react2.default.createElement(
                    'span',
                    { className: 'btn-png-icon btn-png-icon--share' },
                    _app.t('Share')
                  )
                )
              );

              var frameonly = [];
              if (this.props.frameOnlyPricing) {
                frameonly.push(
                  _react2.default.createElement(
                    'div',
                    {
                      key: 'frameonly',
                      className: 'builder-summary__helper builder-summary__helper--frameonly',
                    },
                    _react2.default.createElement(
                      'div',
                      { className: 'builder-summary__helper-label' },
                      _app.t('Frame Only Pricing'),
                      ': '
                    ),
                    _react2.default.createElement('div', {
                      className: 'builder-summary__helper-value',
                      dangerouslySetInnerHTML: this.renderFrameOnlyPricing(),
                    })
                  )
                );
              }

              return _react2.default.createElement(
                'div',
                { className: 'builder-summary' },
                _react2.default.createElement(
                  'h3',
                  { className: 'builder-summary__heading' },
                  _app.t('Summary')
                ),
                _react2.default.createElement(
                  'ul',
                  { className: 'builder-summary__list' },
                  _react2.default.createElement(
                    'li',
                    { className: 'builder-summary__item builder-summary__item--product' },
                    _react2.default.createElement(
                      'span',
                      { className: 'builder-summary__item-label' },
                      _app.t('Selected')
                    ),
                    this.props.product
                  ),
                  _react2.default.createElement(
                    'li',
                    { className: 'builder-summary__item builder-summary__item--price' },
                    _react2.default.createElement(
                      'span',
                      { className: 'builder-summary__item-label' },
                      _app.t('Price')
                    ),
                    price,
                    ' (MSRP)'
                  ),
                  _react2.default.createElement(
                    'li',
                    { className: 'builder-summary__item builder-summary__item--weight' },
                    _react2.default.createElement(
                      'span',
                      { className: 'builder-summary__item-label' },
                      _app.t('Weight')
                    ),
                    weight
                  )
                ),
                _react2.default.createElement(
                  'div',
                  { className: 'builder-summary__buttons', key: 'summaryButtons' },
                  buttons
                ),
                frameonly,
                _react2.default.createElement(
                  'div',
                  { className: 'builder-summary__helper builder-summary__helper--pricing' },
                  _react2.default.createElement(
                    'span',
                    { className: 'builder-summary__helper-label' },
                    _app.t('Please Note'),
                    ': '
                  ),
                  _react2.default.createElement(
                    'span',
                    { className: 'builder-summary__helper-value' },
                    _app.t('Price, Weight and Parts Spec information is subject to change'),
                    '.'
                  )
                )
              );
            },
          },
        ]);

        return ProductSummary;
      })(_react2.default.Component);

      ProductSummary.propTypes = {
        currencySymbol: _react2.default.PropTypes.string,
        currencySuffix: _react2.default.PropTypes.string,
        weightSymbol: _react2.default.PropTypes.string,
        price: _react2.default.PropTypes.number,
        weight: _react2.default.PropTypes.number,
        product: _react2.default.PropTypes.string,
        onClickAction: _react2.default.PropTypes.func,
        onCloseAction: _react2.default.PropTypes.func,
        onCompareAction: _react2.default.PropTypes.func,
        onDealersAction: _react2.default.PropTypes.func,
        configVisible: _react2.default.PropTypes.bool,
        currentCompareNum: _react2.default.PropTypes.number,
        frameOnlyPricing: _react2.default.PropTypes.string,
      };

      exports.default = ProductSummary;

      /***/
    },
    /* 340 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true,
      });

      var _createClass = (function () {
        function defineProperties(target, props) {
          for (var i = 0; i < props.length; i++) {
            var descriptor = props[i];
            descriptor.enumerable = descriptor.enumerable || false;
            descriptor.configurable = true;
            if ('value' in descriptor) descriptor.writable = true;
            Object.defineProperty(target, descriptor.key, descriptor);
          }
        }
        return function (Constructor, protoProps, staticProps) {
          if (protoProps) defineProperties(Constructor.prototype, protoProps);
          if (staticProps) defineProperties(Constructor, staticProps);
          return Constructor;
        };
      })();

      var _react = __webpack_require__(4);

      var _react2 = _interopRequireDefault(_react);

      var _reactShare = __webpack_require__(752);

      var _app2 = __webpack_require__(11);

      var _app = _interopRequireWildcard(_app2);

      function _interopRequireWildcard(obj) {
        if (obj && obj.__esModule) {
          return obj;
        } else {
          var newObj = {};
          if (obj != null) {
            for (var key in obj) {
              if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key];
            }
          }
          newObj.default = obj;
          return newObj;
        }
      }

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
          throw new TypeError('Cannot call a class as a function');
        }
      }

      function _possibleConstructorReturn(self, call) {
        if (!self) {
          throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
        }
        return call && (typeof call === 'object' || typeof call === 'function') ? call : self;
      }

      function _inherits(subClass, superClass) {
        if (typeof superClass !== 'function' && superClass !== null) {
          throw new TypeError(
            'Super expression must either be null or a function, not ' + typeof superClass
          );
        }
        subClass.prototype = Object.create(superClass && superClass.prototype, {
          constructor: { value: subClass, enumerable: false, writable: true, configurable: true },
        });
        if (superClass)
          Object.setPrototypeOf
            ? Object.setPrototypeOf(subClass, superClass)
            : (subClass.__proto__ = superClass);
      }

      var ShareWidget = (function (_React$Component) {
        _inherits(ShareWidget, _React$Component);

        function ShareWidget(props) {
          _classCallCheck(this, ShareWidget);

          return _possibleConstructorReturn(
            this,
            (ShareWidget.__proto__ || Object.getPrototypeOf(ShareWidget)).call(this, props)
          );
        }

        _createClass(ShareWidget, [
          {
            key: 'handleKeyPress',
            value: function handleKeyPress(event) {
              if (event.key == 'Escape') {
                this.props.onClickAction({
                  platform: 'close',
                });
              }
            },
          },
          {
            key: 'handleClick',
            value: function handleClick(event) {
              var isModal = event.target.className.split(' ').indexOf('builder-modal');
              if (isModal > -1) {
                this.props.onClickAction({
                  platform: 'close',
                });
              }
            },
          },
          {
            key: 'render',
            value: function render() {
              var _this2 = this;

              var TwitterIcon = (0, _reactShare.generateShareIcon)('twitter');
              var FacebookIcon = (0, _reactShare.generateShareIcon)('facebook');
              var GooglePlusIcon = (0, _reactShare.generateShareIcon)('google');
              var FacebookShareButton = _reactShare.ShareButtons.FacebookShareButton,
                GooglePlusShareButton = _reactShare.ShareButtons.GooglePlusShareButton,
                TwitterShareButton = _reactShare.ShareButtons.TwitterShareButton;

              return _react2.default.createElement(
                'div',
                {
                  className:
                    'builder-modal builder-modal--share builder-modal--' +
                    (this.props.active ? 'active' : 'inactive'),
                  onClick: function onClick(e) {
                    _this2.handleClick(e);
                  },
                  onKeyDown: function onKeyDown(e) {
                    _this2.handleKeyPress(e);
                  },
                },
                _react2.default.createElement(
                  'div',
                  { className: 'builder-modal__inner' },
                  _react2.default.createElement(
                    'h4',
                    { className: 'builder-modal__title' },
                    _app.t('Share')
                  ),
                  _react2.default.createElement(
                    'div',
                    { className: 'builder-modal__content builder-modal__content--share' },
                    _react2.default.createElement(
                      FacebookShareButton,
                      {
                        className: 'builder-share__icon builder-share__icon--facebook',
                        url: this.props.url,
                        beforeOnClick: function beforeOnClick() {
                          _this2.props.onClickAction({
                            platform: 'facebook',
                          });
                        },
                      },
                      _react2.default.createElement(FacebookIcon, null)
                    ),
                    _react2.default.createElement(
                      TwitterShareButton,
                      {
                        className: 'builder-share__icon builder-share__icon--twitter',
                        url: this.props.url,
                        beforeOnClick: function beforeOnClick() {
                          _this2.props.onClickAction({
                            platform: 'twitter',
                          });
                        },
                      },
                      _react2.default.createElement(TwitterIcon, null)
                    ),
                    _react2.default.createElement(
                      GooglePlusShareButton,
                      {
                        className: 'builder-share__icon builder-share__icon--google',
                        url: this.props.url,
                        beforeOnClick: function beforeOnClick() {
                          _this2.props.onClickAction({
                            platform: 'google',
                          });
                        },
                      },
                      _react2.default.createElement(GooglePlusIcon, null)
                    ),
                    _react2.default.createElement(
                      'span',
                      {
                        className: 'builder-modal__close',
                        onClick: function onClick() {
                          _this2.props.onClickAction({
                            platform: 'close',
                          });
                        },
                      },
                      'Close'
                    )
                  )
                )
              );
            },
          },
        ]);

        return ShareWidget;
      })(_react2.default.Component);

      ShareWidget.propTypes = {
        active: _react2.default.PropTypes.bool,
        url: _react2.default.PropTypes.string,
        onClickAction: _react2.default.PropTypes.func,
      };

      exports.default = ShareWidget;

      /***/
    },
    /* 341 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true,
      });

      var _reactRedux = __webpack_require__(22);

      var _actions = __webpack_require__(16);

      var _app2 = __webpack_require__(324);

      var _app3 = _interopRequireDefault(_app2);

      var _app4 = __webpack_require__(11);

      var _app = _interopRequireWildcard(_app4);

      function _interopRequireWildcard(obj) {
        if (obj && obj.__esModule) {
          return obj;
        } else {
          var newObj = {};
          if (obj != null) {
            for (var key in obj) {
              if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key];
            }
          }
          newObj.default = obj;
          return newObj;
        }
      }

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      function mapStateToProps(state) {
        var expanded = _app.getExpandedState(state);

        return {
          dataLoaded: state.getIn(['productData', 'dataLoaded'], false),
          specsExpanded: expanded,
          imageExpanded: state.getIn(['productData', 'imageExpanded'], false),
          configVisible: state.getIn(['productData', 'configVisible'], false),
          rando: state.getIn(['productData', 'rando'], null),
        };
      }

      var mapDispatchToProps = function mapDispatchToProps(dispatch) {
        return {
          onClickAction: function onClickAction(data) {
            dispatch((0, _actions.toggleConfigVisible)(data));
          },
        };
      };

      var AppContainer = (0, _reactRedux.connect)(
        mapStateToProps,
        mapDispatchToProps
      )(_app3.default);

      exports.default = AppContainer;

      /***/
    },
    /* 342 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true,
      });

      var _reactRedux = __webpack_require__(22);

      var _app = __webpack_require__(11);

      var _builderCanvas = __webpack_require__(325);

      var _builderCanvas2 = _interopRequireDefault(_builderCanvas);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      function returnVariantImages(variant, state) {
        return state.getIn([
          'builder',
          'components',
          variant.get('productKey'),
          variant.get('parentNid').toString(),
          'variants',
          variant.get('nid').toString(),
          'images',
        ]);
      }

      function returnComponentImages(component, state) {
        return state.getIn([
          'builder',
          'components',
          component.get('productKey'),
          component.get('nid'),
          'images',
        ]);
      }

      function renderImages(component, state) {
        if (component.has('parentNid') && component.get('parentNid') !== undefined) {
          return returnVariantImages(component, state);
        }
        return returnComponentImages(component, state);
      }

      function mapStateToProps(state) {
        var canvasZoomLevel = 1;
        var renderBuffer = (0, _app.getRenderBuffer)(state);
        var rando = state.getIn(['productData', 'rando'], null);

        return {
          renderBuffer: renderBuffer,
          canvasZoomLevel: canvasZoomLevel,
          rando: rando,
        };
      }

      exports.default = (0, _reactRedux.connect)(mapStateToProps, null)(_builderCanvas2.default);

      /***/
    },
    /* 343 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true,
      });

      var _reactRedux = __webpack_require__(22);

      var _compareWidget = __webpack_require__(326);

      var _compareWidget2 = _interopRequireDefault(_compareWidget);

      var _actions = __webpack_require__(16);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      function mapStateToProps(state) {
        var data = {
          canCompare: state.getIn(['compareData', 'localStorage'], false),
          addedState: state.getIn(['compareData', 'addedState'], false),
          numItems: state.getIn(['compareData', 'numItems'], 0),
          lastNumItems: state.getIn(['compareData', 'lastNumItems'], 0),
          maxNumItems: state.getIn(['compareData', 'maxNumItems'], 3),
          active: state.getIn(['compareData', 'compareActive'], false),
          linkRoot: state.getIn(['productData', 'linkRoot'], false),
        };

        return data;
      }

      var mapDispatchToProps = function mapDispatchToProps(dispatch) {
        return {
          onCloseAction: function onCloseAction(data) {
            dispatch((0, _actions.closeCompareWidget)(data));
          },
          onClearAction: function onClearAction(data) {
            dispatch((0, _actions.compareClear)(data));
          },
          onConfirmAction: function onConfirmAction(data) {
            dispatch((0, _actions.compareConfirm)(data));
          },
        };
      };

      var CompareWidgetContainer = (0, _reactRedux.connect)(
        mapStateToProps,
        mapDispatchToProps
      )(_compareWidget2.default);

      exports.default = CompareWidgetContainer;

      /***/
    },
    /* 344 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true,
      });

      var _reactRedux = __webpack_require__(22);

      var _productConfigOptions = __webpack_require__(327);

      var _productConfigOptions2 = _interopRequireDefault(_productConfigOptions);

      var _actions = __webpack_require__(16);

      var _app = __webpack_require__(11);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      function mapStateToProps(state) {
        //iterate over builder data and build array of objects which each represent
        //the settings required to create a Select option
        var options = getConfigOptions(state);

        return {
          configOptions: options,
        };
      }

      var mapDispatchToProps = function mapDispatchToProps(dispatch) {
        return {
          onClickAction: function onClickAction(data) {
            if (data.reset) {
              dispatch((0, _actions.resetOption)(data.type));
            } else {
              dispatch(
                (0, _actions.clickOption)({
                  optionType: data.type,
                  cid: data.cid,
                  vid: data.vid,
                  rule: 0,
                })
              );
            }
            dispatch((0, _actions.applyRules)());
          },
        };
      };

      var ProductConfigOptionsContainer = (0, _reactRedux.connect)(
        mapStateToProps,
        mapDispatchToProps
      )(_productConfigOptions2.default);

      exports.default = ProductConfigOptionsContainer;

      function getConfigOptions(state) {
        var region = state.getIn(['productData', 'region']);
        var builder = state.getIn(['productData', 'builder']);
        var components = builder.components;
        var cts = builder.componentTypeSettings;

        var library = state.getIn(['productData', 'included']);

        var configOptions = [];
        for (var t in components) {
          //check property exists
          if (!components.hasOwnProperty(t)) continue;

          var typeSelectedCid = state.getIn(['productData', 'selected', t, 'cid'], null);
          var typeSelectedVid = state.getIn(['productData', 'selected', t, 'vid'], null);

          var compTypeSettings = state.getIn(['productData', 'builder'])['componentTypeSettings'][
            t
          ];

          var compType = {
            type: t,
            label: t, //todo
            widget: 'select',
            help: '',
            options: [],
            selected: null,
            className: 'option-select-' + t,
            clearable: compTypeSettings.isRequired ? false : true,
            resetValue: t,
            clearValue: t,
            clearValueText: 'Deselect ' + t,
          };

          var compOrder = 1;
          for (var nid in components[t]) {
            //check property exists
            if (!components[t].hasOwnProperty(nid)) continue;
            var comp = components[t][nid];
            //skip if not selectable
            if (!comp.isUserSelectable) continue;
            //skip if not in region
            if (!comp.regions[region].status) continue;

            if (!comp.limitSelectionToVariants) {
              var compTypeOptions = {
                value: comp.nid,
                label: comp.displayTitle,
                cid: comp.nid,
                vid: null,
                type: t,
                reset: false,
                order: comp.order ? comp.order : compOrder,
              };
              for (var x in comp.config) {
                compTypeOptions[x] = (0, _app.getKeyedInformation)(library, comp.config[x]);
              }
              compType.options.push(compTypeOptions);
              //check against selected state object values
              if (typeSelectedCid == comp.nid) {
                compType.selected = comp.nid;
              }
            }
            compOrder++;

            var variants = comp.variants;
            if (comp.variantsCount > 0) {
              var varOrder = 1;
              for (var vid in variants) {
                //check property exists
                if (!variants.hasOwnProperty(vid)) continue;
                //skip if not selectable
                if (!variants[vid].isUserSelectable) continue;
                var _compTypeOptions = {
                  value: vid,
                  label: variants[vid].displayTitle,
                  cid: comp.nid,
                  vid: variants[vid].nid,
                  type: t,
                  reset: false,
                  order: variants[vid].order ? variants[vid].order : varOrder,
                };
                for (var x in variants[vid].config) {
                  _compTypeOptions[x] = (0, _app.getKeyedInformation)(
                    library,
                    variants[vid].config[x]
                  );
                }
                compType.options.push(_compTypeOptions);
                //check against selected state object values
                if (typeSelectedCid == comp.nid && typeSelectedVid == vid) {
                  compType.selected = vid;
                }
                varOrder++;
              }
            }
          }

          compType = Object.assign(compType, cts[compType.type]);

          //reorder

          //only if options to choose
          if (compType.options.length && compTypeSettings.isVisible) {
            configOptions.push(compType);
          }
        }
        return configOptions;
      }

      /***/
    },
    /* 345 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true,
      });

      var _reactRedux = __webpack_require__(22);

      var _productImage = __webpack_require__(330);

      var _productImage2 = _interopRequireDefault(_productImage);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      function mapStateToProps(state) {
        return {};
      }

      var mapDispatchToProps = function mapDispatchToProps(dispatch) {
        return {};
      };

      var ProductImageContainer = (0, _reactRedux.connect)(
        mapStateToProps,
        mapDispatchToProps
      )(_productImage2.default);

      exports.default = ProductImageContainer;

      /***/
    },
    /* 346 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true,
      });

      var _reactRedux = __webpack_require__(22);

      var _app2 = __webpack_require__(11);

      var _app = _interopRequireWildcard(_app2);

      var _actions = __webpack_require__(16);

      var _productImageExpander = __webpack_require__(329);

      var _productImageExpander2 = _interopRequireDefault(_productImageExpander);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      function _interopRequireWildcard(obj) {
        if (obj && obj.__esModule) {
          return obj;
        } else {
          var newObj = {};
          if (obj != null) {
            for (var key in obj) {
              if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key];
            }
          }
          newObj.default = obj;
          return newObj;
        }
      }

      function mapStateToProps(state) {
        var expanded = state.getIn(['productData', 'imageExpanded'], false);
        return {
          label: _app.t(expanded ? 'Collapse' : 'Expand'),
          expanded: expanded,
        };
      }

      var mapDispatchToProps = function mapDispatchToProps(dispatch) {
        return {
          onClickAction: function onClickAction(data) {
            dispatch((0, _actions.toggleImageExpansion)(data));
          },
        };
      };

      var ProductImageExpanderContainer = (0, _reactRedux.connect)(
        mapStateToProps,
        mapDispatchToProps
      )(_productImageExpander2.default);

      exports.default = ProductImageExpanderContainer;

      /***/
    },
    /* 347 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true,
      });

      var _reactRedux = __webpack_require__(22);

      var _productSelector = __webpack_require__(331);

      var _productSelector2 = _interopRequireDefault(_productSelector);

      var _actions = __webpack_require__(16);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      function mapStateToProps(state) {
        var hasProducts = state.getIn(['productData', 'multipleProducts']);
        if (!hasProducts) return { hasProducts: hasProducts };

        var products = state.getIn(['productData', 'products']);
        var hideprods = state.getIn(['productData', 'hideprods']);
        var options = [];
        for (var i in products) {
          var title = products[i].data.builder.product.title;
          if (typeof products[i].data.builder.product.displayTitle != 'undefined') {
            title = products[i].data.builder.product.displayTitle;
          }
          if (!hideprods.includes(products[i].data.builder.product.nid)) {
            options.push({
              value: products[i].data.builder.product.nid,
              label: title,
            });
          }
        }
        var selected = state.getIn(['productData', 'builder'])['product']['nid'];

        //use field value on model to override the label value
        var label = 'Choose Build Kit & Frame';
        var hasRequestData = state.getIn(['productData', 'requestData']);

        if (
          hasRequestData &&
          state.getIn(['productData', 'requestData'])['data'] &&
          state.getIn(['productData', 'requestData'])['data']['fields'] &&
          state.getIn(['productData', 'requestData'])['data']['fields'][
            'field_builder_prod_selector_txt'
          ]
        ) {
          label = state.getIn(['productData', 'requestData'])['data']['fields'][
            'field_builder_prod_selector_txt'
          ];
        }

        return {
          hasProducts: hasProducts,
          options: options,
          selected: selected,
          label: label,
        };
      }

      var mapDispatchToProps = function mapDispatchToProps(dispatch) {
        return {
          updateProducts: function updateProducts(payload) {
            dispatch((0, _actions.updateProduct)(payload));
            dispatch((0, _actions.applyRules)());
          },
        };
      };

      var ProductSelectorContainer = (0, _reactRedux.connect)(
        mapStateToProps,
        mapDispatchToProps
      )(_productSelector2.default);

      exports.default = ProductSelectorContainer;

      /***/
    },
    /* 348 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true,
      });

      var _reactRedux = __webpack_require__(22);

      var _productSpecs = __webpack_require__(338);

      var _productSpecs2 = _interopRequireDefault(_productSpecs);

      var _app2 = __webpack_require__(11);

      var _app = _interopRequireWildcard(_app2);

      var _actions = __webpack_require__(16);

      function _interopRequireWildcard(obj) {
        if (obj && obj.__esModule) {
          return obj;
        } else {
          var newObj = {};
          if (obj != null) {
            for (var key in obj) {
              if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key];
            }
          }
          newObj.default = obj;
          return newObj;
        }
      }

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      function mapStateToProps(state) {
        //build specs and headers all in one

        var activeProducts = state.getIn(['productData', 'products']);
        var region = state.getIn(['productData', 'region']);
        var library = state.getIn(['productData', 'included']);

        var selected = state.getIn(['productData', 'builder']).product.nid;

        var selectedIndex = 0;

        //manually add some headers to the spec, which may not be part of the spec items
        var _specHeaders = [
          {
            id: 'kitname',
            type: 'kitname',
            label: 'Kit',
            typeLabel: 'Kit',
            value: 'Kit',
          },
          {
            id: 'material',
            type: 'material',
            label: 'Material',
            typeLabel: 'Material',
            value: 'Material',
          },
          {
            id: 'wheelsize',
            type: 'wheelsize',
            label: 'Wheel Size',
            typeLabel: 'Wheel Size',
            value: 'Wheel Size',
          },
          {
            id: 'price',
            type: 'price',
            label: 'Price',
            typeLabel: 'Price',
            value: 'Price',
          },
          {
            id: 'weight',
            type: 'weight',
            label: 'Weight',
            typeLabel: 'Weight',
            value: 'Weight',
          },
        ];

        //an object of header labels to keep track of all the items that have been iterated over before
        //(to ensure no duplication of headers)
        var _specHeadersTracker = {
          material: 0,
          kitname: 0,
          price: 0,
          weight: 0,
          wheelsize: 0,
        };

        var _specItems = [];

        var _loop = function _loop(i) {
          var library = activeProducts[i].data.included;
          var prod = activeProducts[i].data.builder.product;
          if (prod.nid == selected) selectedIndex = parseInt(i);

          var prodDefaults = _app.getDefaultSelectedForProduct(activeProducts[i].data, region);

          var components = activeProducts[i].data.builder.components;
          var priceWeight = _app.getDefaultProductPriceWeightSpecs(
            region,
            prod,
            components,
            prodDefaults,
            library
          );

          //defaults for the specs for the product
          var specs = priceWeight.specs;

          Object.keys(specs).forEach(function (key) {
            var specItem = specs[key];
            if (typeof _specHeadersTracker[specItem.type] == 'undefined') {
              _specHeaders.push(specItem);
              _specHeadersTracker[specItem.type] = specItem.type;
            }
          });

          _specItems.push({
            id: activeProducts[i].data.builder.product.nid,
            specs: specs,
          });
        };

        for (var i in activeProducts) {
          _loop(i);
        }

        //remove empty rows

        var headersToRemove = {}; //for removing empty rows
        var headerValTracker = {}; //for removing identical rows
        var numItems = _specItems.length;

        _specItems.forEach(function (item) {
          for (var key in item['specs']) {
            var val = item['specs'][key].value;

            if (!headersToRemove.hasOwnProperty(key)) {
              headersToRemove[key] = 0;
            }

            if (!headerValTracker.hasOwnProperty(key)) {
              headerValTracker[key] = {};
              headerValTracker[key][val] = 1;
            } else if (!headerValTracker[key].hasOwnProperty(val)) {
              headerValTracker[key][val] = 1;
            } else {
              headerValTracker[key][val]++;
            }

            if (val == '0kg / 0lbs' || val == 0) {
              headersToRemove[key]++;
            }
          }
        });

        //for wheelsize and material, remove rows where it is redundant

        if (
          (headerValTracker.hasOwnProperty('material') &&
            Object.keys(headerValTracker['material']).length == 1 &&
            headerValTracker['material'][Object.keys(headerValTracker['material'])[0]] ==
              numItems) ||
          !headerValTracker['material']
        ) {
          headersToRemove['material'] = numItems;
        }

        if (
          headerValTracker.hasOwnProperty('wheelsize') &&
          Object.keys(headerValTracker['wheelsize']).length == 1 &&
          headerValTracker['wheelsize'][Object.keys(headerValTracker['wheelsize'])[0]] == numItems
        ) {
          headersToRemove['wheelsize'] = numItems;
        }

        for (var key in headersToRemove) {
          if (headersToRemove[key] != numItems) continue;
          //filter headers (which dictates display of rows too)
          _specHeaders = _specHeaders.filter(function (data) {
            return data.id != key;
          });
        }

        //todo - based on product type, or include these values as part of the product type
        var defaultOrder = [
          'kitname',
          'price',
          'weight',
          'material',
          'wheelsize',
          'fork',
          'fork_option',
          'shock',
          'shock_option',
          'rear_derailleur',
          'shifters',
          'crankset',
          'cassette',
          'chainring_size',
          'front_derailleur',
          'chain',
          'bottom_bracket',
          'brakes',
          'brake_rotors',
          'headset',
          'bars',
          'stem',
          'grips',
          'front_hub',
          'rear_hub',
          'rims',
          'rim_option',
          'internal_width',
          'external_width',
          'erd',
          'asym_offset',
          'spoke_count',
          'type_width_recc',
          'tyre_width_recc',
          'caps_options',
          'driver_body_options',
          'hub_option',
          'spokes',
          'bead',
          'front_tire',
          'rear_tire',
          'tubes',
          'seat_post',
          'saddle',
        ];

        //sort specHeaders against defaultOrder
        _specHeaders.sort(function (a, b) {
          var ai =
            defaultOrder.indexOf(a.type) < 0
              ? _specHeaders.length + 1
              : defaultOrder.indexOf(a.type);
          var bi =
            defaultOrder.indexOf(b.type) < 0
              ? _specHeaders.length + 1
              : defaultOrder.indexOf(b.type);
          if (ai < bi) return -1;
          if (ai > bi) return 1;
          return 0;
        });

        //for wheels
        var builderType = state.getIn(['productData', 'builderType'], 'frame');
        if (builderType == 'rim') {
          //change Kit Name to "Wheel"
          _specHeaders.forEach(function (item, key) {
            //console.log(key, item);
            if (item.id == 'kitname') {
              _specHeaders[key]['typeLabel'] = _app.t('Wheel');
            }
          });
        }

        return {
          specItems: _specItems,
          specHeaders: _specHeaders,
          selected: selected,
          selectedIndex: selectedIndex,
          material: state.getIn(['specsData', 'specs_filter']), //current filtered material
          resizeDefaults: state.getIn(['specsData', 'displayRules']).toJS(),
          rando: state.getIn(['productData', 'rando'], null),
        };
      }

      var mapDispatchToProps = function mapDispatchToProps(dispatch) {
        return {
          itemClickAction: function itemClickAction(data) {
            if (data.row == 'kitname') {
              dispatch((0, _actions.updateProduct)(data));
            }
          },
          onPrevNext: function onPrevNext(data) {
            dispatch((0, _actions.prevNext)(data));
          },
        };
      };

      var ProductSpecsContainer = (0, _reactRedux.connect)(
        mapStateToProps,
        mapDispatchToProps
      )(_productSpecs2.default);

      exports.default = ProductSpecsContainer;

      /***/
    },
    /* 349 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true,
      });

      var _reactRedux = __webpack_require__(22);

      var _productSpecsExpander = __webpack_require__(333);

      var _productSpecsExpander2 = _interopRequireDefault(_productSpecsExpander);

      var _app2 = __webpack_require__(11);

      var _app = _interopRequireWildcard(_app2);

      var _actions = __webpack_require__(16);

      function _interopRequireWildcard(obj) {
        if (obj && obj.__esModule) {
          return obj;
        } else {
          var newObj = {};
          if (obj != null) {
            for (var key in obj) {
              if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key];
            }
          }
          newObj.default = obj;
          return newObj;
        }
      }

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      function mapStateToProps(state) {
        var expanded = _app.getExpandedState(state);
        var title = expanded ? 'Show Less' : 'Show Full Specs';

        return {
          expanded: expanded,
          title: _app.t(title),
        };
      }

      var mapDispatchToProps = function mapDispatchToProps(dispatch) {
        return {
          onClickAction: function onClickAction(data) {
            dispatch((0, _actions.expandSpecs)(data));
          },
        };
      };

      var ProductSpecsExpanderContainer = (0, _reactRedux.connect)(
        mapStateToProps,
        mapDispatchToProps
      )(_productSpecsExpander2.default);

      exports.default = ProductSpecsExpanderContainer;

      /***/
    },
    /* 350 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true,
      });

      var _reactRedux = __webpack_require__(22);

      var _productSpecsHeader = __webpack_require__(334);

      var _productSpecsHeader2 = _interopRequireDefault(_productSpecsHeader);

      var _app2 = __webpack_require__(11);

      var _app = _interopRequireWildcard(_app2);

      var _actions = __webpack_require__(16);

      function _interopRequireWildcard(obj) {
        if (obj && obj.__esModule) {
          return obj;
        } else {
          var newObj = {};
          if (obj != null) {
            for (var key in obj) {
              if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key];
            }
          }
          newObj.default = obj;
          return newObj;
        }
      }

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      function mapStateToProps(state) {
        var header = _app.t('Build Specs');
        var selected = state.getIn(['specsData', 'specs_filter'], 'all');
        var builderType = state.getIn(['productData', 'builderType'], 'frame');

        //TODO - generate specs from current product
        var options = [];
        if (state.getIn(['productData', 'multipleProducts'], false)) {
          var prodOptions = _app.getMaterialOptions(state);
          var max = 3;

          //try wheels if no material specified
          if (prodOptions.length < 1) {
            max = 2;
            prodOptions = _app.getWheelsizeOptions(state);
          }

          //if only All | Carbon CC <-- for example - don't need to show
          if (prodOptions.length > 0) {
            options = [
              {
                id: 'all',
                label: _app.t('All'),
              },
            ];
            //https://ventureweb.teamwork.com/#tasks/17410072
            //only display carbon if carbon c or cc is available
            var hascarbon = false;
            for (var i = 0; i < prodOptions.length; i++) {
              if (prodOptions[i].id.startsWith('carbon_')) {
                prodOptions.splice(i);
                hascarbon = true;
              }
            }
            options = options.concat(prodOptions);
            if (hascarbon) {
              options.push({
                id: 'carbon',
                label: _app.t('Carbon'),
              });
            }
          }

          if (options.length < max) {
            options = [];
          }
        }

        return {
          builderType: builderType,
          selected: selected,
          options: options,
          header: header,
        };
      }

      var mapDispatchToProps = function mapDispatchToProps(dispatch) {
        return {
          onClickAction: function onClickAction(data) {
            if (data.type == 'rim') {
              dispatch((0, _actions.filterWheelsize)(data.value));
            } else {
              dispatch((0, _actions.filterMaterial)(data.value));
            }
          },
        };
      };

      var ProductSpecsHeaderContainer = (0, _reactRedux.connect)(
        mapStateToProps,
        mapDispatchToProps
      )(_productSpecsHeader2.default);

      exports.default = ProductSpecsHeaderContainer;

      /***/
    },
    /* 351 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true,
      });

      var _reactRedux = __webpack_require__(22);

      var _productSpecsPrevnext = __webpack_require__(336);

      var _productSpecsPrevnext2 = _interopRequireDefault(_productSpecsPrevnext);

      var _actions = __webpack_require__(16);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      function mapStateToProps(state) {
        return {};
      }

      var mapDispatchToProps = function mapDispatchToProps(dispatch) {
        return {
          onPrevNext: function onPrevNext(data) {
            dispatch((0, _actions.prevNext)(data));
          },
        };
      };

      var ProductSpecsPrevNextContainer = (0, _reactRedux.connect)(
        mapStateToProps,
        mapDispatchToProps
      )(_productSpecsPrevnext2.default);

      exports.default = ProductSpecsPrevNextContainer;

      /***/
    },
    /* 352 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true,
      });

      var _reactRedux = __webpack_require__(22);

      var _productSummary = __webpack_require__(339);

      var _productSummary2 = _interopRequireDefault(_productSummary);

      var _app2 = __webpack_require__(11);

      var _app = _interopRequireWildcard(_app2);

      var _actions = __webpack_require__(16);

      var _sanitizeHtml = __webpack_require__(783);

      var _sanitizeHtml2 = _interopRequireDefault(_sanitizeHtml);

      function _interopRequireWildcard(obj) {
        if (obj && obj.__esModule) {
          return obj;
        } else {
          var newObj = {};
          if (obj != null) {
            for (var key in obj) {
              if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key];
            }
          }
          newObj.default = obj;
          return newObj;
        }
      }

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      function mapStateToProps(state) {
        var library = state.getIn(['productData', 'included']);
        var currentRegion = state.getIn(['productData', 'region']);
        var priceWeight = _app.getSelectedProductPriceWeightSpecs(state, currentRegion, library);

        var regionInfo = _app.getKeyedInformation(library, {
          includedType: 'regions',
          id: currentRegion,
        });

        var dirtyFrameOnlyPricing = state.getIn(['productData', 'frameOnlyPricing'], '');
        var cleanFrameOnlyPricing = (0, _sanitizeHtml2.default)(dirtyFrameOnlyPricing, {
          allowedTags: ['p', 'br'],
        });

        return {
          currencySymbol: regionInfo.currency.symbol,
          currencySuffix: regionInfo.currency.suffix,
          weightSymbol: 'g',
          price: priceWeight.price,
          weight: priceWeight.weight,
          product: state.getIn(['productData', 'builder'])['product']['displayTitle'],
          configVisible: state.getIn(['productData', 'configVisible'], false),
          localStorage: state.getIn(['compareData', 'localStorage']),
          currentCompareNum: state.getIn(['compareData', 'numItems']),
          linkRoot: state.getIn(['productData', 'linkRoot'], false),
          frameOnlyPricing: cleanFrameOnlyPricing,
        };
      }

      var mapDispatchToProps = function mapDispatchToProps(dispatch) {
        return {
          onClickAction: function onClickAction(data) {
            dispatch((0, _actions.toggleShareWidget)(data));
          },
          onCloseAction: function onCloseAction(data) {
            dispatch((0, _actions.toggleConfigVisible)(data));
          },
          onCompareAction: function onCompareAction(data) {
            dispatch((0, _actions.openCompareWidget)(data));
          },
          onDealersAction: function onDealersAction(data) {
            dispatch((0, _actions.toggleDealerLink)(data));
          },
        };
      };

      var ProductSummaryContainer = (0, _reactRedux.connect)(
        mapStateToProps,
        mapDispatchToProps
      )(_productSummary2.default);

      exports.default = ProductSummaryContainer;

      /***/
    },
    /* 353 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true,
      });

      var _reactRedux = __webpack_require__(22);

      var _shareWidget = __webpack_require__(340);

      var _shareWidget2 = _interopRequireDefault(_shareWidget);

      var _actions = __webpack_require__(16);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      function mapStateToProps(state) {
        return {
          active: state.getIn(['productData', 'shareActive'], false),
          url: window.location.href,
        };
      }

      var mapDispatchToProps = function mapDispatchToProps(dispatch) {
        return {
          onClickAction: function onClickAction(data) {
            dispatch((0, _actions.toggleShareWidget)(data));
          },
        };
      };

      var ShareWidgetContainer = (0, _reactRedux.connect)(
        mapStateToProps,
        mapDispatchToProps
      )(_shareWidget2.default);

      exports.default = ShareWidgetContainer;

      /***/
    },
    /* 354 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true,
      });
      exports.AnalyticsMiddleware = undefined;

      var _actions = __webpack_require__(16);

      var _app = __webpack_require__(11);

      function getAnalyticsLabelData(store) {
        var state = store.getState();

        var model = state.getIn(['productData', 'builder'])['product']['model'];
        var labelBits = [model];
        var components = state.getIn(['productData', 'builder'])['components'];
        var selected = state.getIn(['productData', 'selected']);

        selected.map(function (value, compType) {
          var cid = value.get('cid');
          var vid = value.get('vid');
          if (cid && vid) {
            labelBits.push(components[compType][cid]['variants'][vid]['displayTitle'].trim());
          } else if (cid) {
            labelBits.push(components[compType][cid]['displayTitle'].trim());
          }
        });

        return {
          model: model,
          label: labelBits.join(', '),
        };
      }

      function dlPush(obj, store) {
        window.dataLayer = window.dataLayer || [];

        var strings = getAnalyticsLabelData(store);
        obj.model = strings.model;
        obj.label = strings.label;

        dataLayer.push({
          //event: "BUILDER_CONFIG_ACTION",
          event: obj.category,
          payload: obj,
        });
      }

      var AnalyticsMiddleware = (exports.AnalyticsMiddleware = function AnalyticsMiddleware(store) {
        return function (next) {
          return function (action) {
            var dlObj = void 0,
              state = void 0;

            switch (action.type) {
              case _actions.LOAD_DATA:
              case _actions.APPLY_RULES:
              case _actions.UPDATE_SPEC_RULES:
              case _actions.UPDATE_IMAGE_RULES:
              case _actions.CLICK_OPTION_RULES:
                //do nothing for these processing actions
                return next(action);

              case _actions.FILTER_MATERIAL:
                dlObj = {
                  category: 'BUILDER_SPECS',
                  event: action.type,
                  value: action.payload.toUpperCase(),
                };
                dlPush(dlObj, store);

                return next(action);

              case _actions.EXPAND_SPECS:
                dlObj = {
                  category: 'BUILDER_SPECS',
                  event: action.type,
                  value: !action.payload ? 'OPEN' : 'CLOSE',
                };
                dlPush(dlObj, store);

                return next(action);

              case _actions.UPDATE_PRODUCT:
                //triggered by drop-down and specs-column-title-click
                state = store.getState();
                var prods = state.getIn(['productData', 'allProducts'], []);

                var lbl = void 0;
                for (var p in prods) {
                  if (lbl) continue;
                  if (prods[p].data.builder.product.nid == action.payload.value) {
                    lbl = prods[p].data.builder.product.displayTitle;
                  }
                }

                dlObj = {
                  category: 'BUILDER_PRODUCT',
                  event: 'CHANGE',
                  value: lbl ? lbl : 'unknown', //what the product is being changed to
                };

                dlPush(dlObj, store);

                return next(action);

              case _actions.CLICK_OPTION:
                state = store.getState();
                var components = state.getIn(['productData', 'builder'])['components'];

                var clickEventValue = 'N/A';
                if (action.payload.vid && action.payload.cid) {
                  clickEventValue =
                    components[action.payload.optionType][action.payload.cid]['variants'][
                      action.payload.vid
                    ]['displayTitle'];
                } else if (action.payload.cid) {
                  clickEventValue =
                    components[action.payload.optionType][action.payload.cid]['displayTitle'];
                }

                dlObj = {
                  category: 'BUILDER_CUSTOMIZE',
                  event: action.type + ' ' + action.payload.optionType.toUpperCase(),
                  value: clickEventValue,
                };

                dlPush(dlObj, store);

                return next(action);

              case _actions.RESET_OPTION:
                dlObj = {
                  category: 'BUILDER_CUSTOMIZE',
                  event: 'CLICK_OPTION' + ' ' + action.optionType.toUpperCase(), //note grouping in with click options
                  value: 'RESET TO DEFAULT',
                };

                dlPush(dlObj, store);

                return next(action);

              case _actions.TOGGLE_SHARE_WIDGET:
                dlObj = {
                  category: 'BUILDER_UI',
                  event: action.type,
                  value: action.payload.platform.toUpperCase(),
                };

                dlPush(dlObj, store);
                return next(action);

              case _actions.TOGGLE_IMAGE_EXPANSION:
                dlObj = {
                  category: 'BUILDER_UI',
                  event: action.type,
                  value: !action.payload.newState ? 'OPEN' : 'CLOSE',
                };

                dlPush(dlObj, store);
                return next(action);

              case _actions.TOGGLE_DEALER_LINK:
                dlObj = {
                  category: 'BUILDER_UI',
                  event: action.type,
                  value: 'GO',
                };

                dlPush(dlObj, store);

                window.location.replace('/dealers');

                return next(action);

              case _actions.OPEN_COMPARE_WIDGET:
              case _actions.CLOSE_COMPARE_WIDGET:
                dlObj = {
                  category: 'BUILDER_UI',
                  event: 'COMPARE_TOGGLE',
                  value:
                    action.type == _actions.OPEN_COMPARE_WIDGET
                      ? _actions.OPEN_COMPARE_WIDGET
                      : _actions.CLOSE_COMPARE_WIDGET,
                };

                dlPush(dlObj, store);

                return next(action);

              case _actions.COMPARE_CONFIRM:
                dlObj = {
                  category: 'BUILDER_UI',
                  event: action.type,
                  value: 'COMPARE',
                };

                dlPush(dlObj, store);

                return next(action);

              case _actions.COMPARE_CLEAR:
                dlObj = {
                  category: 'BUILDER_UI',
                  event: action.type,
                  value: 'CLEAR',
                };

                dlPush(dlObj, store);

                return next(action);

              default:
                return next(action);
            }
          };
        };
      });

      /***/
    },
    /* 355 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true,
      });
      exports.CompareMiddleware = undefined;

      var _actions = __webpack_require__(16);

      var _app = __webpack_require__(11);

      var _localStorage = __webpack_require__(128);

      var _app2 = __webpack_require__(11);

      var CompareMiddleware = (exports.CompareMiddleware = function CompareMiddleware(store) {
        return function (next) {
          return function (action) {
            switch (action.type) {
              case _actions.COMPARE_CONFIRM:
                var state = store.getState();

                if (!state.getIn(['compareData', 'localStorage'], false)) {
                  return next(action);
                } //no local storage so skip

                var preNumItems = state.getIn(['compareData', 'numItems'], 0);
                var maxNumItems = state.getIn(['compareData', 'maxNumItems'], 3);

                //don't add anything if we've hit the max
                if (preNumItems >= maxNumItems) return next(action); //no local storage so skip

                var region = state.getIn(['productData', 'region'], 'us');
                var included = state.getIn(['productData', 'included']);
                var compareItems = (0, _localStorage.loadCompare)();

                //TODO - ensure that the loaded Compare items are of the correct format, and erase/adjust as required

                var selected = (0, _app.getSelectedProductPriceWeightSpecs)(
                  state,
                  region,
                  included
                );

                selected.renderBuffer = (0, _app.getRenderBuffer)(state);
                selected.image = 'TODO';
                selected.productTitle = state.getIn(['productData', 'builder'])['product'][
                  'displayTitle'
                ];
                selected.model = state.getIn(['productData', 'builder'])['product']['model']; //todo modelDisplayTitle
                selected.href = window.location.href;
                //selected.selected = state.getIn(['productData', 'selected']); //what is currently chosen by the user

                //lets ensure the specs respect that which is selected, so lets set all available upgrades
                var current = state.getIn(['productData', 'selected']);
                var components = state.getIn(['productData', 'builder'])['components'];

                var cid = void 0,
                  vid = void 0,
                  lbl = void 0,
                  key = void 0;
                current.map(function (data, type) {
                  cid = data.get('cid', null);
                  vid = data.get('vid', null);
                  if (!cid && !vid) return;
                  lbl =
                    vid && cid
                      ? components[type][cid]['variants'][vid]['displayTitle']
                      : components[type][cid]['displayTitle'];
                  key = type == 'rim' ? 'rims' : type;
                  if (selected['specs'][key]) {
                    selected['specs'][key]['value'] = lbl;
                  }
                });

                compareItems.push(selected);

                (0, _localStorage.saveCompare)(compareItems);

                return next(action);

              case _actions.COMPARE_CLEAR:
                (0, _localStorage.clearCompare)();
                return next(action);

              default:
                return next(action);
            }
          };
        };
      });

      /***/
    },
    /* 356 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true,
      });
      exports.RuleMiddleware = undefined;

      var _actions = __webpack_require__(16);

      function filterEnabledRules(enabledRules, state) {
        // array to contain the current nid of selected components
        var currentSelected = [];
        state.getIn(['productData', 'selected']).forEach(function (component, compType) {
          currentSelected.push({
            type: compType,
            cid: component.get('cid'),
            vid: component.get('vid'),
          });
        });

        var currentRegion = state.getIn(['productData', 'region']);

        return enabledRules.filter(function (rule) {
          var conditions = rule['conditions'];

          var matches = 0;
          for (var i in conditions) {
            var condition = conditions[i];
            switch (condition.type) {
              case 'region':
                if (condition.value == currentRegion) {
                  matches++;
                }
                break;

              case 'region_not':
                if (condition.value != currentRegion) {
                  matches++;
                }
                break;

              case 'variant':
                for (var j in currentSelected) {
                  if (currentSelected[j].vid == condition.value) {
                    matches++;
                  }
                }
                break;

              case 'component':
              default:
                for (var j in currentSelected) {
                  if (currentSelected[j].cid == condition.value) {
                    matches++;
                  }
                }
                break;
            }
          }
          return matches >= conditions.length;
        });
      }

      var RuleMiddleware = (exports.RuleMiddleware = function RuleMiddleware(store) {
        return function (next) {
          return function (action) {
            var g = next(action);

            var state = store.getState();
            var allRules = state.getIn(['productData', 'rules']);
            // filter all rules which are not enabled
            var enabledRules = allRules.filter(function (rule) {
              return rule['enabled'] === true;
            });

            //filter the enabled rules down by looking for matches based on the type of condition set
            var rulesToApply = filterEnabledRules(enabledRules, state);

            if (!rulesToApply.length) return g; //no rules, keep going

            var rule_to_run = 0;
            if (typeof action.payload !== 'undefined' && action.payload.rule !== 'undefined')
              rule_to_run = action.payload.rule;

            //anytime anything happens we want to check for rules which apply

            switch (action.type) {
              //case LOAD_DATA:
              //case UPDATE_PRODUCT:
              //case RESET_OPTION:
              //case UPDATE_REGION:
              //not sure if these should really return anything but the same action type again? okay to jump to click option??
              //case CLICK_OPTION: {
              case _actions.APPLY_RULES: {
                if (rule_to_run < rulesToApply.length) {
                  var actions = rulesToApply[rule_to_run].actions;

                  for (var a in actions) {
                    var act = actions[a];
                    switch (act.type) {
                      case 'selectVariant':
                        //mimic a click of the selected variant
                        //can we update state here?
                        store.dispatch(
                          (0, _actions.clickOptionRules)({
                            optionType: act.compType,
                            cid: act.target,
                            vid: act.value,
                            rule: rule_to_run + 1,
                          })
                        );

                        break;

                      case 'updateSpec':
                        store.dispatch(
                          (0, _actions.updateSpecRules)({
                            prop: act.prop,
                            value: act.value,
                            uri: act.uri,
                            rule: rule_to_run + 1,
                          })
                        );
                        break;

                      case 'hideImage':
                        store.dispatch(
                          (0, _actions.updateImageRules)({
                            op: 'hide', //futureproof
                            fid: act.fid,
                            rule: rule_to_run + 1,
                          })
                        );

                      case 'selectComponent':
                      default:
                        break;
                    }
                  }
                }
              }
            }

            return g;
          };
        };
      });

      /***/
    },
    /* 357 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true,
      });

      var _immutable = __webpack_require__(82);

      var _immutable2 = _interopRequireDefault(_immutable);

      var _localStorage = __webpack_require__(128);

      var _ls = _interopRequireWildcard(_localStorage);

      var _actions = __webpack_require__(16);

      var _localStorage2 = __webpack_require__(128);

      var _app = __webpack_require__(11);

      function _interopRequireWildcard(obj) {
        if (obj && obj.__esModule) {
          return obj;
        } else {
          var newObj = {};
          if (obj != null) {
            for (var key in obj) {
              if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key];
            }
          }
          newObj.default = obj;
          return newObj;
        }
      }

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      var initalState = _immutable2.default.fromJS({
        compareActive: false,
        localStorage: !(null == _localStorage2.compareStorage),
        numItems: 0,
        maxNumItems: 3,
        lastNumItems: 0,
        addedState: false,
      }); // Reducers
      // Reducers specify how an applications state changes in response to Actions
      // @SEE http://redux.js.org/docs/basics/Reducers.html

      function compareDataReducer() {
        var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initalState;
        var action = arguments[1];

        switch (action.type) {
          case _actions.LOAD_DATA: {
            var localData = _ls.loadCompare();
            return state
              .set('numItems', localData.length)
              .set('lastNumItems', Math.max(0, localData.length));
          }

          case _actions.COMPARE_CLEAR: {
            var _localData = _ls.loadCompare();
            return state
              .set('numItems', _localData.length)
              .set('lastNumItems', Math.max(0, _localData.length))
              .set('addedState', false)
              .set('compareActive', false);
          }

          case _actions.OPEN_COMPARE_WIDGET: {
            document.dispatchEvent(_app.eventBuilderModalOpen);
            var current = state.getIn(['compareActive'], false);
            var _localData2 = _ls.loadCompare();
            var oldNumItems = state.getIn(['numItems'], 0);
            var maxNumItems = state.getIn(['maxNumItems'], 0);

            //determine what user previous number was (affects display)
            var newLast = Math.max(0, _localData2.length - 1);
            if (oldNumItems == maxNumItems) {
              //used to determine whether user was already maxed out, or just became maxed out
              newLast = Math.max(oldNumItems, newLast);
            }
            return state
              .set('compareActive', !current)
              .set('numItems', _localData2.length)
              .set('lastNumItems', newLast);
          }

          case _actions.CLOSE_COMPARE_WIDGET: {
            document.dispatchEvent(_app.eventBuilderModalClose);
            var _current = state.getIn(['compareActive'], false);
            return state.set('compareActive', !_current).set('addedState', false);
          }

          //similar to open compare in terms of calc'ing last/max/min etc.
          case _actions.COMPARE_CONFIRM: {
            var _localData3 = _ls.loadCompare();
            var _oldNumItems = state.getIn(['numItems'], 0);
            var _maxNumItems = state.getIn(['maxNumItems'], 0);

            //determine what user previous number was (affects display)
            var _newLast = Math.max(0, _localData3.length - 1);
            if (_oldNumItems == _maxNumItems) {
              //used to determine whether user was already maxed out, or just became maxed out
              _newLast = Math.max(_oldNumItems, _newLast);
            }
            //don't get to here without opening compare widget
            return state
              .set('addedState', true) //tells widget that item has just been added
              .set('numItems', _localData3.length)
              .set('lastNumItems', _newLast);
          }
        }

        return state;
      }

      exports.default = compareDataReducer;

      /***/
    },
    /* 358 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true,
      });

      var _typeof =
        typeof Symbol === 'function' && typeof Symbol.iterator === 'symbol'
          ? function (obj) {
              return typeof obj;
            }
          : function (obj) {
              return obj &&
                typeof Symbol === 'function' &&
                obj.constructor === Symbol &&
                obj !== Symbol.prototype
                ? 'symbol'
                : typeof obj;
            };

      var _slicedToArray = (function () {
        function sliceIterator(arr, i) {
          var _arr = [];
          var _n = true;
          var _d = false;
          var _e = undefined;
          try {
            for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {
              _arr.push(_s.value);
              if (i && _arr.length === i) break;
            }
          } catch (err) {
            _d = true;
            _e = err;
          } finally {
            try {
              if (!_n && _i['return']) _i['return']();
            } finally {
              if (_d) throw _e;
            }
          }
          return _arr;
        }
        return function (arr, i) {
          if (Array.isArray(arr)) {
            return arr;
          } else if (Symbol.iterator in Object(arr)) {
            return sliceIterator(arr, i);
          } else {
            throw new TypeError('Invalid attempt to destructure non-iterable instance');
          }
        };
      })(); // Reducers
      // Reducers specify how an applications state changes in response to Actions
      // @SEE http://redux.js.org/docs/basics/Reducers.html

      var _immutable = __webpack_require__(82);

      var _immutable2 = _interopRequireDefault(_immutable);

      var _app2 = __webpack_require__(11);

      var _app = _interopRequireWildcard(_app2);

      var _actions = __webpack_require__(16);

      function _interopRequireWildcard(obj) {
        if (obj && obj.__esModule) {
          return obj;
        } else {
          var newObj = {};
          if (obj != null) {
            for (var key in obj) {
              if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key];
            }
          }
          newObj.default = obj;
          return newObj;
        }
      }

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      var initalState = _immutable2.default.fromJS({
        requestData: false,
        multipleProducts: false,
        region: 'us', //set by Drupal
        linkRoot: '/',
        dataLoaded: false,
        builder: [],
        rules: [],
        spec_overrides: [], //array of items to override specs (applied by rules, typically)
        image_overrides: [], //array of items to override image displays (typically hide a file from display
        norule_selected: {}, //keeps track of current items w/o rules applied
        selected: {}, //keeps track of current items with rules applied from which other items are calculated (price, weight etc)
        regions: {},
        included: {},
        imageExpanded: false,
        shareActive: false,
        configVisible: false,
        frameOnlyPricing: '',
        rando: null,
        restrictions: [],
        hideprods: [],
        builderType: 'frame', //frame or wheel
      });

      var settingsMapping = {
        //v10 2019 per https://ventureweb.teamwork.com/index.cfm#tasks/19132936?c=7868421
        753: {
          size: {
            29: 770,
            27.5: 769,
            275: 769,
          },
        },
      };

      function productDataReducer() {
        var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initalState;
        var action = arguments[1];

        switch (action.type) {
          case _actions.INIT_DATA: {
            if (!action.payload || !action.payload.json || !JSON.parse(action.payload.json).request)
              return state;
            return state.set('requestData', JSON.parse(action.payload.json).request);
          }

          case _actions.LOAD_DATA: {
            var selected_product = action.payload[0].data;
            var modelNid = _app.getModelForProduct(selected_product);
            var rando = Math.random().toString(36).substring(7);

            if (modelNid > 0) {
              selected_product =
                action.queries &&
                Object.keys(action.queries).length &&
                settingsMapping[modelNid] &&
                settingsMapping[modelNid][Object.keys(action.queries)[0]] &&
                Object.keys(settingsMapping[modelNid][Object.keys(action.queries)[0]]).includes(
                  action.queries[Object.keys(action.queries)[0]]
                )
                  ? action.payload.find(function (i) {
                      return (
                        i.data.builder.product.nid ===
                        settingsMapping[modelNid][Object.keys(action.queries)[0]][
                          action.queries[Object.keys(action.queries)[0]]
                        ]
                      );
                    }).data
                  : action.payload[0].data; //let selected reflect order set in admin
            }

            //override if passed in queries
            if (action.queries.product) {
              selected_product = action.payload.find(function (i) {
                return i.data.builder.product.nid == action.queries.product;
              }).data;
            }

            var region = action.region ? action.region : initalState.get('region');

            var selected = _app.getDefaultSelectedForProduct(
              selected_product,
              region,
              action.restrictions
            );

            var builderType =
              selected_product.builder.product.machine.machine === 'rim' ||
              selected_product.builder.product.machine.machine === 'wheel'
                ? 'rim'
                : 'frame';

            //@TODO - this could be passed as a variable from the model/product data

            //regions is just a list of all regions to see how the product looks for that particular user
            //shouldn't be specific to the selected product
            //list of products which are available should update as region is changed
            var regions = _app.getRegionsForProduct(selected_product);
            var regionProducts = [];
            var currentRegion = state.getIn(['region'], action.rid);
            for (var i in action.payload) {
              if (
                action.payload[i].data.builder.product.regions[currentRegion].status &&
                !action.hideprods.includes(action.payload[i].data.builder.product.nid)
              ) {
                regionProducts.push(action.payload[i]);
              }
            }

            if (action.queries.selected) {
              selected = selected.setIn(
                [action.queries.selected.optionType, 'cid'],
                action.queries.selected.cid
              );
              selected = selected.setIn(
                [action.queries.selected.optionType, 'vid'],
                action.queries.selected.vid
              );
            }

            return state
              .set('dataLoaded', true)
              .set('builderType', builderType)
              .set('multipleProducts', action.payload.length > 1)
              .set('region', action.region ? action.region : 'us')
              .set('allProducts', action.payload)
              .set('products', regionProducts)
              .set('builder', selected_product.builder) //non immutable = read only
              .set('rules', selected_product.rules) //non immutable = read only
              .set('regions', regions) //non immutable = read only
              .set('selected', selected)
              .set('norule_selected', selected)
              .set('included', selected_product.included)
              .set('rando', rando)
              .set('restrictions', action.restrictions ? action.restrictions : [])
              .set('hideprods', action.hideprods ? action.hideprods : [])
              .set('frameOnlyPricing', action.frameonly ? action.frameonly : '')
              .set('linkRoot', action.linkRoot ? action.linkRoot : '/');
          }

          case _actions.UPDATE_PRODUCT: {
            //regenerate core state features based on new product ID
            var _region = state.getIn(['region']);
            var products = state.getIn(['products']);
            var restrictions = state.getIn(['restrictions']);
            for (var i in products) {
              if (products[i].data.builder.product.nid == action.payload.value) {
                var _ret = (function () {
                  var selected = _app.getDefaultSelectedForProduct(products[i].data, _region);

                  //todo - see if this matches any restrictions
                  var selectedJS = selected.toJS();

                  var _loop = function _loop(compType, value) {
                    if (selectedJS[compType]) {
                      restrictions[compType].forEach(function (value) {
                        if (selectedJS[compType].cid == value.cid) {
                          selectedJS[compType].vid = value.vid;
                        }
                      });
                    }
                  };

                  var _iteratorNormalCompletion = true;
                  var _didIteratorError = false;
                  var _iteratorError = undefined;

                  try {
                    for (
                      var _iterator = Object.entries(restrictions)[Symbol.iterator](), _step;
                      !(_iteratorNormalCompletion = (_step = _iterator.next()).done);
                      _iteratorNormalCompletion = true
                    ) {
                      var _step$value = _slicedToArray(_step.value, 2),
                        compType = _step$value[0],
                        value = _step$value[1];

                      _loop(compType, value);
                    }
                  } catch (err) {
                    _didIteratorError = true;
                    _iteratorError = err;
                  } finally {
                    try {
                      if (!_iteratorNormalCompletion && _iterator.return) {
                        _iterator.return();
                      }
                    } finally {
                      if (_didIteratorError) {
                        throw _iteratorError;
                      }
                    }
                  }

                  var newSelected = {};
                  var _iteratorNormalCompletion2 = true;
                  var _didIteratorError2 = false;
                  var _iteratorError2 = undefined;

                  try {
                    for (
                      var _iterator2 = Object.entries(selectedJS)[Symbol.iterator](), _step2;
                      !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done);
                      _iteratorNormalCompletion2 = true
                    ) {
                      var _step2$value = _slicedToArray(_step2.value, 2),
                        compTypeB = _step2$value[0],
                        valueB = _step2$value[1];

                      newSelected[compTypeB] = _immutable2.default.Map(selectedJS[compTypeB]);
                    }
                  } catch (err) {
                    _didIteratorError2 = true;
                    _iteratorError2 = err;
                  } finally {
                    try {
                      if (!_iteratorNormalCompletion2 && _iterator2.return) {
                        _iterator2.return();
                      }
                    } finally {
                      if (_didIteratorError2) {
                        throw _iteratorError2;
                      }
                    }
                  }

                  selected = _immutable2.default.Map(newSelected);

                  var regions = _app.getRegionsForProduct(products[i].data);
                  return {
                    v: state
                      .set('builder', products[i].data.builder)
                      .set('rules', products[i].data.rules)
                      .set('selected', selected)
                      .set('norule_selected', selected)
                      .set('regions', regions)
                      .set('spec_overrides', _immutable2.default.fromJS([]))
                      .set('image_overrides', _immutable2.default.fromJS([]))
                      .set('included', products[i].data.included),
                  };
                })();

                if ((typeof _ret === 'undefined' ? 'undefined' : _typeof(_ret)) === 'object')
                  return _ret.v;
              }
            }

            return state;
          }

          case _actions.TOGGLE_IMAGE_EXPANSION: {
            return state.set('imageExpanded', !action.payload.newState);
          }

          case _actions.TOGGLE_SHARE_WIDGET: {
            var current = state.getIn(['shareActive'], false);
            if (current != true) {
              document.dispatchEvent(_app.eventBuilderModalOpen);
            } else {
              document.dispatchEvent(_app.eventBuilderModalClose);
            }
            return state.set('shareActive', !current);
          }

          case _actions.TOGGLE_CONFIG_VISIBLE: {
            var configVis = state.getIn(['configVisible'], false);
            if (!configVis) {
              document.dispatchEvent(_app.eventBuilderModalOpen);
            } else {
              document.dispatchEvent(_app.eventBuilderModalClose);
            }
            return state.set('configVisible', !configVis);
          }

          case _actions.PREV_NEXT: {
            var _ret3 = (function () {
              //get the next product
              var direction = action.payload;
              var region = state.getIn(['region']);
              var products = state.getIn(['products']);
              var restrictions = state.getIn(['restrictions']);
              var current_selected = state.getIn(['builder'])['product']['nid'];
              var current_index = products.findIndex(function (item) {
                return item.data.builder.product.nid == current_selected;
              });
              var new_index = void 0;
              switch (direction) {
                case 'prev':
                  new_index = Math.max(0, current_index - 1);
                  break;
                case 'next':
                  new_index = Math.min(products.length - 1, current_index + 1);
                  break;
              }
              //copy UPDATE above
              var selected = _app.getDefaultSelectedForProduct(
                products[new_index].data,
                region,
                restrictions
              );

              //todo - see if this matches any restrictions
              var selectedJS = selected.toJS();

              var _loop2 = function _loop2(compType, value) {
                if (selectedJS[compType]) {
                  restrictions[compType].forEach(function (value) {
                    if (selectedJS[compType].cid == value.cid) {
                      selectedJS[compType].vid = value.vid;
                    }
                  });
                }
              };

              var _iteratorNormalCompletion3 = true;
              var _didIteratorError3 = false;
              var _iteratorError3 = undefined;

              try {
                for (
                  var _iterator3 = Object.entries(restrictions)[Symbol.iterator](), _step3;
                  !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done);
                  _iteratorNormalCompletion3 = true
                ) {
                  var _step3$value = _slicedToArray(_step3.value, 2),
                    compType = _step3$value[0],
                    value = _step3$value[1];

                  _loop2(compType, value);
                }
              } catch (err) {
                _didIteratorError3 = true;
                _iteratorError3 = err;
              } finally {
                try {
                  if (!_iteratorNormalCompletion3 && _iterator3.return) {
                    _iterator3.return();
                  }
                } finally {
                  if (_didIteratorError3) {
                    throw _iteratorError3;
                  }
                }
              }

              var newSelected = {};
              var _iteratorNormalCompletion4 = true;
              var _didIteratorError4 = false;
              var _iteratorError4 = undefined;

              try {
                for (
                  var _iterator4 = Object.entries(selectedJS)[Symbol.iterator](), _step4;
                  !(_iteratorNormalCompletion4 = (_step4 = _iterator4.next()).done);
                  _iteratorNormalCompletion4 = true
                ) {
                  var _step4$value = _slicedToArray(_step4.value, 2),
                    compTypeB = _step4$value[0],
                    valueB = _step4$value[1];

                  newSelected[compTypeB] = _immutable2.default.Map(selectedJS[compTypeB]);
                }
              } catch (err) {
                _didIteratorError4 = true;
                _iteratorError4 = err;
              } finally {
                try {
                  if (!_iteratorNormalCompletion4 && _iterator4.return) {
                    _iterator4.return();
                  }
                } finally {
                  if (_didIteratorError4) {
                    throw _iteratorError4;
                  }
                }
              }

              selected = _immutable2.default.Map(newSelected);

              var regions = _app.getRegionsForProduct(products[new_index].data);
              return {
                v: state
                  .set('builder', products[new_index].data.builder)
                  .set('rules', products[new_index].data.rules)
                  .set('selected', selected)
                  .set('norule_selected', selected)
                  .set('regions', regions)
                  .set('spec_overrides', _immutable2.default.fromJS([]))
                  .set('image_overrides', _immutable2.default.fromJS([]))
                  .set('included', products[new_index].data.included),
              };
            })();

            if ((typeof _ret3 === 'undefined' ? 'undefined' : _typeof(_ret3)) === 'object')
              return _ret3.v;
          }

          case _actions.CLICK_OPTION: {
            var orig = state.getIn(['norule_selected']);
            return state
              .setIn(['selected'], orig)
              .setIn(['selected', action.payload.optionType, 'cid'], action.payload.cid)
              .setIn(['selected', action.payload.optionType, 'vid'], action.payload.vid)
              .setIn(['norule_selected', action.payload.optionType, 'cid'], action.payload.cid)
              .setIn(['norule_selected', action.payload.optionType, 'vid'], action.payload.vid)
              .setIn(['spec_overrides'], _immutable2.default.fromJS([]))
              .setIn(['image_overrides'], _immutable2.default.fromJS([]));
          }

          case _actions.CLICK_OPTION_RULES: {
            return state
              .setIn(['selected', action.payload.optionType, 'cid'], action.payload.cid)
              .setIn(['selected', action.payload.optionType, 'vid'], action.payload.vid);
          }

          case _actions.UPDATE_SPEC_RULES: {
            var new_override = {
              prop: action.payload.prop,
              value: action.payload.value,
              uri: action.payload.uri,
            };
            return state.updateIn(['spec_overrides'], function (arr) {
              return arr.push(new_override);
            });
          }

          case _actions.UPDATE_IMAGE_RULES: {
            if (action.payload.op == 'hide') {
              return state.updateIn(['image_overrides'], function (arr) {
                return arr.push(action.payload.fid);
              });
            }
            return state;
          }

          case _actions.RESET_OPTION: {
            var _orig = state.getIn(['norule_selected']);
            return state
              .setIn(['selected'], _orig)
              .setIn(['selected', action.optionType, 'cid'], null)
              .setIn(['selected', action.optionType, 'vid'], null)
              .setIn(['norule_selected', action.optionType, 'cid'], null)
              .setIn(['norule_selected', action.optionType, 'vid'], null)
              .setIn(['spec_overrides'], _immutable2.default.fromJS([]))
              .setIn(['image_overrides'], _immutable2.default.fromJS([]));
          }

          case _actions.UPDATE_REGION: {
            //update active region
            var allProducts = state.getIn(['allProducts']); //all products from the orignal data
            var hideprods = state.getIn(['hideprods']);
            var _regionProducts = _app.getRegionalProducts(allProducts, action.rid, hideprods);

            //get default state of products too
            //some components might not be valid in other regions
            var _selected = null;
            //const products = state.getIn(['products']);
            var activeProduct = state.getIn(['builder'])['product']; //current active product

            for (var i in _regionProducts) {
              //changed this loop from 'products' to regionProducts' - OW
              if (_regionProducts[i].data.builder.product.nid == activeProduct.nid) {
                _selected = _app.getDefaultSelectedForProduct(_regionProducts[i].data, action.rid);
              }
            }
            if (!_selected) {
              _selected = _app.getDefaultSelectedForProduct(_regionProducts[0].data, action.rid);
            }

            //review all products and only display applicable
            return state
              .set('region', action.rid)
              .set('products', _regionProducts)
              .set('selected', _selected)
              .set('norule_selected', _selected) //? @TODO
              .set('spec_overrides', _immutable2.default.fromJS([]))
              .set('image_overrides', _immutable2.default.fromJS([]));
            //todo -include updated library?
          }

          case _actions.FILTER_MATERIAL: {
            //const material = action.payload;

            //TODO - nice to have for July 01
            //do filtering of products here, so that all components are updated (drop-downs as well as specs etc)
            //so like regional filtering, but also with material filtering too
            var material = action.payload;
            var _region2 = state.getIn(['region']);
            var _allProducts = state.getIn(['allProducts']); //all products from the orignal data
            var _hideprods = state.getIn(['hideprods']);
            var _regionProducts2 = _app.getRegionalProducts(_allProducts, _region2, _hideprods);
            var materialProducts = _app.getMaterialProducts(_regionProducts2, material, _region2);

            var _selected2 = null;
            var product = null;
            //const products = state.getIn(['products']);
            var _activeProduct = state.getIn(['builder'])['product']; //current active product

            for (var i in materialProducts) {
              //changed this loop from 'products' to regionProducts' - OW
              if (materialProducts[i].data.builder.product.nid == _activeProduct.nid) {
                product = materialProducts[i];
                _selected2 = _app.getDefaultSelectedForProduct(materialProducts[i].data, _region2);
              }
            }
            if (!product) {
              product = materialProducts[0];
              _selected2 = _app.getDefaultSelectedForProduct(product.data, _region2);
            }

            return state
              .set('builder', product.data.builder)
              .set('products', materialProducts)
              .set('rules', product.data.rules)
              .set('selected', _selected2)
              .set('norule_selected', _selected2)
              .set('spec_overrides', _immutable2.default.fromJS([]))
              .set('image_overrides', _immutable2.default.fromJS([]))
              .set('included', product.data.included);
          }

          case _actions.FILTER_WHEELSIZE: {
            //const material = action.payload;

            //TODO - nice to have for July 01
            //do filtering of products here, so that all components are updated (drop-downs as well as specs etc)
            //so like regional filtering, but also with material filtering too
            var size = action.payload;

            var _region3 = state.getIn(['region']);
            var _allProducts2 = state.getIn(['allProducts']); //all products from the orignal data
            var _hideprods2 = state.getIn(['hideprods']);
            var _regionProducts3 = _app.getRegionalProducts(_allProducts2, _region3, _hideprods2);
            var wheelsizeProducts = _app.getWheelsizeProducts(_regionProducts3, size, _region3);

            var _selected3 = null;
            var _product = null;

            var _activeProduct2 = state.getIn(['builder'])['product']; //current active product

            for (var i in wheelsizeProducts) {
              //changed this loop from 'products' to regionProducts' - OW
              if (wheelsizeProducts[i].data.builder.product.nid == _activeProduct2.nid) {
                _product = wheelsizeProducts[i];
                _selected3 = _app.getDefaultSelectedForProduct(wheelsizeProducts[i].data, _region3);
              }
            }
            if (!_product) {
              _product = wheelsizeProducts[0];
              _selected3 = _app.getDefaultSelectedForProduct(_product.data, _region3);
            }

            return state
              .set('builder', _product.data.builder)
              .set('products', wheelsizeProducts)
              .set('rules', _product.data.rules)
              .set('selected', _selected3)
              .set('norule_selected', _selected3)
              .set('spec_overrides', _immutable2.default.fromJS([]))
              .set('image_overrides', _immutable2.default.fromJS([]))
              .set('included', _product.data.included);
          }
        }

        return state;
      }

      exports.default = productDataReducer;

      /***/
    },
    /* 359 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true,
      });

      var _immutable = __webpack_require__(82);

      var _immutable2 = _interopRequireDefault(_immutable);

      var _app2 = __webpack_require__(11);

      var _app = _interopRequireWildcard(_app2);

      var _actions = __webpack_require__(16);

      function _interopRequireWildcard(obj) {
        if (obj && obj.__esModule) {
          return obj;
        } else {
          var newObj = {};
          if (obj != null) {
            for (var key in obj) {
              if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key];
            }
          }
          newObj.default = obj;
          return newObj;
        }
      }

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      var initalState = _immutable2.default.fromJS({
        specs_filter: 'all', //keeps track of the current material filter state (see productData reducer too)
        specs_expanded: false, //keeps track of whether the specs table is expanded or not
        last_visible: false, //keeps track of whether the last item in the list is visible or not
        num_pages: 1, //keeps track of the number of 'pages'
        active_page: 1, //keeps track of the current active page
        displayRules: [
          {
            min: 0,
            max: 599,
            headerpc: 30,
            visible: 1,
          },
          {
            min: 600,
            max: 959,
            headerpc: 20,
            visible: 2,
          },
          {
            min: 960,
            max: 1023,
            headerpc: 20,
            visible: 3,
          },
          {
            min: 1024,
            max: 1199,
            headerpc: 15,
            visible: 4,
          },
          {
            min: 1200,
            max: 99999,
            headerpc: 11,
            visible: 5,
          },
        ],
        staticProductData: [],
      });

      function specsDataReducer() {
        var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initalState;
        var action = arguments[1];

        switch (action.type) {
          case _actions.EXPAND_SPECS: {
            return state.setIn(['specs_expanded'], !action.payload);
          }

          case _actions.FILTER_MATERIAL: {
            return state.setIn(['specs_filter'], action.payload);
          }

          case _actions.FILTER_WHEELSIZE: {
            return state.setIn(['specs_filter'], action.payload);
          }
        }
        return state;
      }

      exports.default = specsDataReducer;

      /***/
    },
    /* 360 */
    /***/ function (module, exports, __webpack_require__) {
      module.exports = { default: __webpack_require__(369), __esModule: true };

      /***/
    },
    /* 361 */
    /***/ function (module, exports, __webpack_require__) {
      module.exports = { default: __webpack_require__(370), __esModule: true };

      /***/
    },
    /* 362 */
    /***/ function (module, exports, __webpack_require__) {
      module.exports = { default: __webpack_require__(371), __esModule: true };

      /***/
    },
    /* 363 */
    /***/ function (module, exports, __webpack_require__) {
      module.exports = { default: __webpack_require__(372), __esModule: true };

      /***/
    },
    /* 364 */
    /***/ function (module, exports, __webpack_require__) {
      module.exports = { default: __webpack_require__(375), __esModule: true };

      /***/
    },
    /* 365 */
    /***/ function (module, exports, __webpack_require__) {
      module.exports = { default: __webpack_require__(376), __esModule: true };

      /***/
    },
    /* 366 */
    /***/ function (module, exports, __webpack_require__) {
      module.exports = { default: __webpack_require__(377), __esModule: true };

      /***/
    },
    /* 367 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';

      exports.byteLength = byteLength;
      exports.toByteArray = toByteArray;
      exports.fromByteArray = fromByteArray;

      var lookup = [];
      var revLookup = [];
      var Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array;

      var code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';
      for (var i = 0, len = code.length; i < len; ++i) {
        lookup[i] = code[i];
        revLookup[code.charCodeAt(i)] = i;
      }

      revLookup['-'.charCodeAt(0)] = 62;
      revLookup['_'.charCodeAt(0)] = 63;

      function placeHoldersCount(b64) {
        var len = b64.length;
        if (len % 4 > 0) {
          throw new Error('Invalid string. Length must be a multiple of 4');
        }

        // the number of equal signs (place holders)
        // if there are two placeholders, than the two characters before it
        // represent one byte
        // if there is only one, then the three characters before it represent 2 bytes
        // this is just a cheap hack to not do indexOf twice
        return b64[len - 2] === '=' ? 2 : b64[len - 1] === '=' ? 1 : 0;
      }

      function byteLength(b64) {
        // base64 is 4/3 + up to two characters of the original data
        return (b64.length * 3) / 4 - placeHoldersCount(b64);
      }

      function toByteArray(b64) {
        var i, j, l, tmp, placeHolders, arr;
        var len = b64.length;
        placeHolders = placeHoldersCount(b64);

        arr = new Arr((len * 3) / 4 - placeHolders);

        // if there are placeholders, only get up to the last complete 4 chars
        l = placeHolders > 0 ? len - 4 : len;

        var L = 0;

        for (i = 0, j = 0; i < l; i += 4, j += 3) {
          tmp =
            (revLookup[b64.charCodeAt(i)] << 18) |
            (revLookup[b64.charCodeAt(i + 1)] << 12) |
            (revLookup[b64.charCodeAt(i + 2)] << 6) |
            revLookup[b64.charCodeAt(i + 3)];
          arr[L++] = (tmp >> 16) & 0xff;
          arr[L++] = (tmp >> 8) & 0xff;
          arr[L++] = tmp & 0xff;
        }

        if (placeHolders === 2) {
          tmp = (revLookup[b64.charCodeAt(i)] << 2) | (revLookup[b64.charCodeAt(i + 1)] >> 4);
          arr[L++] = tmp & 0xff;
        } else if (placeHolders === 1) {
          tmp =
            (revLookup[b64.charCodeAt(i)] << 10) |
            (revLookup[b64.charCodeAt(i + 1)] << 4) |
            (revLookup[b64.charCodeAt(i + 2)] >> 2);
          arr[L++] = (tmp >> 8) & 0xff;
          arr[L++] = tmp & 0xff;
        }

        return arr;
      }

      function tripletToBase64(num) {
        return (
          lookup[(num >> 18) & 0x3f] +
          lookup[(num >> 12) & 0x3f] +
          lookup[(num >> 6) & 0x3f] +
          lookup[num & 0x3f]
        );
      }

      function encodeChunk(uint8, start, end) {
        var tmp;
        var output = [];
        for (var i = start; i < end; i += 3) {
          tmp = (uint8[i] << 16) + (uint8[i + 1] << 8) + uint8[i + 2];
          output.push(tripletToBase64(tmp));
        }
        return output.join('');
      }

      function fromByteArray(uint8) {
        var tmp;
        var len = uint8.length;
        var extraBytes = len % 3; // if we have 1 byte left, pad 2 bytes
        var output = '';
        var parts = [];
        var maxChunkLength = 16383; // must be multiple of 3

        // go through the array every three bytes, we'll deal with trailing stuff later
        for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {
          parts.push(encodeChunk(uint8, i, i + maxChunkLength > len2 ? len2 : i + maxChunkLength));
        }

        // pad the end with zeros, but make sure to not forget the extra bytes
        if (extraBytes === 1) {
          tmp = uint8[len - 1];
          output += lookup[tmp >> 2];
          output += lookup[(tmp << 4) & 0x3f];
          output += '==';
        } else if (extraBytes === 2) {
          tmp = (uint8[len - 2] << 8) + uint8[len - 1];
          output += lookup[tmp >> 10];
          output += lookup[(tmp >> 4) & 0x3f];
          output += lookup[(tmp << 2) & 0x3f];
          output += '=';
        }

        parts.push(output);

        return parts.join('');
      }

      /***/
    },
    /* 368 */
    /***/ function (module, exports, __webpack_require__) {
      __webpack_require__(416);
      module.exports = __webpack_require__(44).RegExp.escape;

      /***/
    },
    /* 369 */
    /***/ function (module, exports, __webpack_require__) {
      var core = __webpack_require__(33),
        $JSON = core.JSON || (core.JSON = { stringify: JSON.stringify });
      module.exports = function stringify(it) {
        // eslint-disable-line no-unused-vars
        return $JSON.stringify.apply($JSON, arguments);
      };

      /***/
    },
    /* 370 */
    /***/ function (module, exports, __webpack_require__) {
      __webpack_require__(396);
      module.exports = __webpack_require__(33).Object.assign;

      /***/
    },
    /* 371 */
    /***/ function (module, exports, __webpack_require__) {
      __webpack_require__(397);
      var $Object = __webpack_require__(33).Object;
      module.exports = function create(P, D) {
        return $Object.create(P, D);
      };

      /***/
    },
    /* 372 */
    /***/ function (module, exports, __webpack_require__) {
      __webpack_require__(398);
      var $Object = __webpack_require__(33).Object;
      module.exports = function defineProperty(it, key, desc) {
        return $Object.defineProperty(it, key, desc);
      };

      /***/
    },
    /* 373 */
    /***/ function (module, exports, __webpack_require__) {
      __webpack_require__(399);
      module.exports = __webpack_require__(33).Object.getPrototypeOf;

      /***/
    },
    /* 374 */
    /***/ function (module, exports, __webpack_require__) {
      __webpack_require__(400);
      module.exports = __webpack_require__(33).Object.keys;

      /***/
    },
    /* 375 */
    /***/ function (module, exports, __webpack_require__) {
      __webpack_require__(401);
      module.exports = __webpack_require__(33).Object.setPrototypeOf;

      /***/
    },
    /* 376 */
    /***/ function (module, exports, __webpack_require__) {
      __webpack_require__(404);
      __webpack_require__(402);
      __webpack_require__(405);
      __webpack_require__(406);
      module.exports = __webpack_require__(33).Symbol;

      /***/
    },
    /* 377 */
    /***/ function (module, exports, __webpack_require__) {
      __webpack_require__(403);
      __webpack_require__(407);
      module.exports = __webpack_require__(144).f('iterator');

      /***/
    },
    /* 378 */
    /***/ function (module, exports) {
      module.exports = function (it) {
        if (typeof it != 'function') throw TypeError(it + ' is not a function!');
        return it;
      };

      /***/
    },
    /* 379 */
    /***/ function (module, exports) {
      module.exports = function () {
        /* empty */
      };

      /***/
    },
    /* 380 */
    /***/ function (module, exports, __webpack_require__) {
      // false -> Array#indexOf
      // true  -> Array#includes
      var toIObject = __webpack_require__(58),
        toLength = __webpack_require__(394),
        toIndex = __webpack_require__(393);
      module.exports = function (IS_INCLUDES) {
        return function ($this, el, fromIndex) {
          var O = toIObject($this),
            length = toLength(O.length),
            index = toIndex(fromIndex, length),
            value;
          // Array#includes uses SameValueZero equality algorithm
          if (IS_INCLUDES && el != el)
            while (length > index) {
              value = O[index++];
              if (value != value) return true;
              // Array#toIndex ignores holes, Array#includes - not
            }
          else
            for (; length > index; index++)
              if (IS_INCLUDES || index in O) {
                if (O[index] === el) return IS_INCLUDES || index || 0;
              }
          return !IS_INCLUDES && -1;
        };
      };

      /***/
    },
    /* 381 */
    /***/ function (module, exports, __webpack_require__) {
      // all enumerable object keys, includes symbols
      var getKeys = __webpack_require__(75),
        gOPS = __webpack_require__(137),
        pIE = __webpack_require__(102);
      module.exports = function (it) {
        var result = getKeys(it),
          getSymbols = gOPS.f;
        if (getSymbols) {
          var symbols = getSymbols(it),
            isEnum = pIE.f,
            i = 0,
            key;
          while (symbols.length > i) if (isEnum.call(it, (key = symbols[i++]))) result.push(key);
        }
        return result;
      };

      /***/
    },
    /* 382 */
    /***/ function (module, exports, __webpack_require__) {
      module.exports = __webpack_require__(49).document && document.documentElement;

      /***/
    },
    /* 383 */
    /***/ function (module, exports, __webpack_require__) {
      // 7.2.2 IsArray(argument)
      var cof = __webpack_require__(217);
      module.exports =
        Array.isArray ||
        function isArray(arg) {
          return cof(arg) == 'Array';
        };

      /***/
    },
    /* 384 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';

      var create = __webpack_require__(136),
        descriptor = __webpack_require__(103),
        setToStringTag = __webpack_require__(138),
        IteratorPrototype = {};

      // 25.1.2.1.1 %IteratorPrototype%[@@iterator]()
      __webpack_require__(74)(IteratorPrototype, __webpack_require__(76)('iterator'), function () {
        return this;
      });

      module.exports = function (Constructor, NAME, next) {
        Constructor.prototype = create(IteratorPrototype, { next: descriptor(1, next) });
        setToStringTag(Constructor, NAME + ' Iterator');
      };

      /***/
    },
    /* 385 */
    /***/ function (module, exports) {
      module.exports = function (done, value) {
        return { value: value, done: !!done };
      };

      /***/
    },
    /* 386 */
    /***/ function (module, exports, __webpack_require__) {
      var getKeys = __webpack_require__(75),
        toIObject = __webpack_require__(58);
      module.exports = function (object, el) {
        var O = toIObject(object),
          keys = getKeys(O),
          length = keys.length,
          index = 0,
          key;
        while (length > index) if (O[(key = keys[index++])] === el) return key;
      };

      /***/
    },
    /* 387 */
    /***/ function (module, exports, __webpack_require__) {
      var META = __webpack_require__(105)('meta'),
        isObject = __webpack_require__(87),
        has = __webpack_require__(56),
        setDesc = __webpack_require__(57).f,
        id = 0;
      var isExtensible =
        Object.isExtensible ||
        function () {
          return true;
        };
      var FREEZE = !__webpack_require__(73)(function () {
        return isExtensible(Object.preventExtensions({}));
      });
      var setMeta = function (it) {
        setDesc(it, META, {
          value: {
            i: 'O' + ++id, // object ID
            w: {}, // weak collections IDs
          },
        });
      };
      var fastKey = function (it, create) {
        // return primitive with prefix
        if (!isObject(it))
          return typeof it == 'symbol' ? it : (typeof it == 'string' ? 'S' : 'P') + it;
        if (!has(it, META)) {
          // can't set metadata to uncaught frozen object
          if (!isExtensible(it)) return 'F';
          // not necessary to add metadata
          if (!create) return 'E';
          // add missing metadata
          setMeta(it);
          // return object ID
        }
        return it[META].i;
      };
      var getWeak = function (it, create) {
        if (!has(it, META)) {
          // can't set metadata to uncaught frozen object
          if (!isExtensible(it)) return true;
          // not necessary to add metadata
          if (!create) return false;
          // add missing metadata
          setMeta(it);
          // return hash weak collections IDs
        }
        return it[META].w;
      };
      // add metadata on freeze-family methods calling
      var onFreeze = function (it) {
        if (FREEZE && meta.NEED && isExtensible(it) && !has(it, META)) setMeta(it);
        return it;
      };
      var meta = (module.exports = {
        KEY: META,
        NEED: false,
        fastKey: fastKey,
        getWeak: getWeak,
        onFreeze: onFreeze,
      });

      /***/
    },
    /* 388 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';

      // 19.1.2.1 Object.assign(target, source, ...)
      var getKeys = __webpack_require__(75),
        gOPS = __webpack_require__(137),
        pIE = __webpack_require__(102),
        toObject = __webpack_require__(104),
        IObject = __webpack_require__(221),
        $assign = Object.assign;

      // should work with symbols and should have deterministic property order (V8 bug)
      module.exports =
        !$assign ||
        __webpack_require__(73)(function () {
          var A = {},
            B = {},
            S = Symbol(),
            K = 'abcdefghijklmnopqrst';
          A[S] = 7;
          K.split('').forEach(function (k) {
            B[k] = k;
          });
          return $assign({}, A)[S] != 7 || Object.keys($assign({}, B)).join('') != K;
        })
          ? function assign(target, source) {
              // eslint-disable-line no-unused-vars
              var T = toObject(target),
                aLen = arguments.length,
                index = 1,
                getSymbols = gOPS.f,
                isEnum = pIE.f;
              while (aLen > index) {
                var S = IObject(arguments[index++]),
                  keys = getSymbols ? getKeys(S).concat(getSymbols(S)) : getKeys(S),
                  length = keys.length,
                  j = 0,
                  key;
                while (length > j) if (isEnum.call(S, (key = keys[j++]))) T[key] = S[key];
              }
              return T;
            }
          : $assign;

      /***/
    },
    /* 389 */
    /***/ function (module, exports, __webpack_require__) {
      var dP = __webpack_require__(57),
        anObject = __webpack_require__(86),
        getKeys = __webpack_require__(75);

      module.exports = __webpack_require__(54)
        ? Object.defineProperties
        : function defineProperties(O, Properties) {
            anObject(O);
            var keys = getKeys(Properties),
              length = keys.length,
              i = 0,
              P;
            while (length > i) dP.f(O, (P = keys[i++]), Properties[P]);
            return O;
          };

      /***/
    },
    /* 390 */
    /***/ function (module, exports, __webpack_require__) {
      // fallback for IE11 buggy Object.getOwnPropertyNames with iframe and window
      var toIObject = __webpack_require__(58),
        gOPN = __webpack_require__(224).f,
        toString = {}.toString;

      var windowNames =
        typeof window == 'object' && window && Object.getOwnPropertyNames
          ? Object.getOwnPropertyNames(window)
          : [];

      var getWindowNames = function (it) {
        try {
          return gOPN(it);
        } catch (e) {
          return windowNames.slice();
        }
      };

      module.exports.f = function getOwnPropertyNames(it) {
        return windowNames && toString.call(it) == '[object Window]'
          ? getWindowNames(it)
          : gOPN(toIObject(it));
      };

      /***/
    },
    /* 391 */
    /***/ function (module, exports, __webpack_require__) {
      // Works with __proto__ only. Old v8 can't work with null proto objects.
      /* eslint-disable no-proto */
      var isObject = __webpack_require__(87),
        anObject = __webpack_require__(86);
      var check = function (O, proto) {
        anObject(O);
        if (!isObject(proto) && proto !== null)
          throw TypeError(proto + ": can't set as prototype!");
      };
      module.exports = {
        set:
          Object.setPrototypeOf ||
          ('__proto__' in {} // eslint-disable-line
            ? (function (test, buggy, set) {
                try {
                  set = __webpack_require__(218)(
                    Function.call,
                    __webpack_require__(223).f(Object.prototype, '__proto__').set,
                    2
                  );
                  set(test, []);
                  buggy = !(test instanceof Array);
                } catch (e) {
                  buggy = true;
                }
                return function setPrototypeOf(O, proto) {
                  check(O, proto);
                  if (buggy) O.__proto__ = proto;
                  else set(O, proto);
                  return O;
                };
              })({}, false)
            : undefined),
        check: check,
      };

      /***/
    },
    /* 392 */
    /***/ function (module, exports, __webpack_require__) {
      var toInteger = __webpack_require__(141),
        defined = __webpack_require__(132);
      // true  -> String#at
      // false -> String#codePointAt
      module.exports = function (TO_STRING) {
        return function (that, pos) {
          var s = String(defined(that)),
            i = toInteger(pos),
            l = s.length,
            a,
            b;
          if (i < 0 || i >= l) return TO_STRING ? '' : undefined;
          a = s.charCodeAt(i);
          return a < 0xd800 ||
            a > 0xdbff ||
            i + 1 === l ||
            (b = s.charCodeAt(i + 1)) < 0xdc00 ||
            b > 0xdfff
            ? TO_STRING
              ? s.charAt(i)
              : a
            : TO_STRING
            ? s.slice(i, i + 2)
            : ((a - 0xd800) << 10) + (b - 0xdc00) + 0x10000;
        };
      };

      /***/
    },
    /* 393 */
    /***/ function (module, exports, __webpack_require__) {
      var toInteger = __webpack_require__(141),
        max = Math.max,
        min = Math.min;
      module.exports = function (index, length) {
        index = toInteger(index);
        return index < 0 ? max(index + length, 0) : min(index, length);
      };

      /***/
    },
    /* 394 */
    /***/ function (module, exports, __webpack_require__) {
      // 7.1.15 ToLength
      var toInteger = __webpack_require__(141),
        min = Math.min;
      module.exports = function (it) {
        return it > 0 ? min(toInteger(it), 0x1fffffffffffff) : 0; // pow(2, 53) - 1 == 9007199254740991
      };

      /***/
    },
    /* 395 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';

      var addToUnscopables = __webpack_require__(379),
        step = __webpack_require__(385),
        Iterators = __webpack_require__(134),
        toIObject = __webpack_require__(58);

      // 22.1.3.4 Array.prototype.entries()
      // 22.1.3.13 Array.prototype.keys()
      // 22.1.3.29 Array.prototype.values()
      // 22.1.3.30 Array.prototype[@@iterator]()
      module.exports = __webpack_require__(222)(
        Array,
        'Array',
        function (iterated, kind) {
          this._t = toIObject(iterated); // target
          this._i = 0; // next index
          this._k = kind; // kind
          // 22.1.5.2.1 %ArrayIteratorPrototype%.next()
        },
        function () {
          var O = this._t,
            kind = this._k,
            index = this._i++;
          if (!O || index >= O.length) {
            this._t = undefined;
            return step(1);
          }
          if (kind == 'keys') return step(0, index);
          if (kind == 'values') return step(0, O[index]);
          return step(0, [index, O[index]]);
        },
        'values'
      );

      // argumentsList[@@iterator] is %ArrayProto_values% (9.4.4.6, 9.4.4.7)
      Iterators.Arguments = Iterators.Array;

      addToUnscopables('keys');
      addToUnscopables('values');
      addToUnscopables('entries');

      /***/
    },
    /* 396 */
    /***/ function (module, exports, __webpack_require__) {
      // 19.1.3.1 Object.assign(target, source)
      var $export = __webpack_require__(55);

      $export($export.S + $export.F, 'Object', { assign: __webpack_require__(388) });

      /***/
    },
    /* 397 */
    /***/ function (module, exports, __webpack_require__) {
      var $export = __webpack_require__(55);
      // 19.1.2.2 / 15.2.3.5 Object.create(O [, Properties])
      $export($export.S, 'Object', { create: __webpack_require__(136) });

      /***/
    },
    /* 398 */
    /***/ function (module, exports, __webpack_require__) {
      var $export = __webpack_require__(55);
      // 19.1.2.4 / 15.2.3.6 Object.defineProperty(O, P, Attributes)
      $export($export.S + $export.F * !__webpack_require__(54), 'Object', {
        defineProperty: __webpack_require__(57).f,
      });

      /***/
    },
    /* 399 */
    /***/ function (module, exports, __webpack_require__) {
      // 19.1.2.9 Object.getPrototypeOf(O)
      var toObject = __webpack_require__(104),
        $getPrototypeOf = __webpack_require__(225);

      __webpack_require__(227)('getPrototypeOf', function () {
        return function getPrototypeOf(it) {
          return $getPrototypeOf(toObject(it));
        };
      });

      /***/
    },
    /* 400 */
    /***/ function (module, exports, __webpack_require__) {
      // 19.1.2.14 Object.keys(O)
      var toObject = __webpack_require__(104),
        $keys = __webpack_require__(75);

      __webpack_require__(227)('keys', function () {
        return function keys(it) {
          return $keys(toObject(it));
        };
      });

      /***/
    },
    /* 401 */
    /***/ function (module, exports, __webpack_require__) {
      // 19.1.3.19 Object.setPrototypeOf(O, proto)
      var $export = __webpack_require__(55);
      $export($export.S, 'Object', { setPrototypeOf: __webpack_require__(391).set });

      /***/
    },
    /* 402 */
    /***/ function (module, exports) {
      /***/
    },
    /* 403 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';

      var $at = __webpack_require__(392)(true);

      // 21.1.3.27 String.prototype[@@iterator]()
      __webpack_require__(222)(
        String,
        'String',
        function (iterated) {
          this._t = String(iterated); // target
          this._i = 0; // next index
          // 21.1.5.2.1 %StringIteratorPrototype%.next()
        },
        function () {
          var O = this._t,
            index = this._i,
            point;
          if (index >= O.length) return { value: undefined, done: true };
          point = $at(O, index);
          this._i += point.length;
          return { value: point, done: false };
        }
      );

      /***/
    },
    /* 404 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';

      // ECMAScript 6 symbols shim
      var global = __webpack_require__(49),
        has = __webpack_require__(56),
        DESCRIPTORS = __webpack_require__(54),
        $export = __webpack_require__(55),
        redefine = __webpack_require__(228),
        META = __webpack_require__(387).KEY,
        $fails = __webpack_require__(73),
        shared = __webpack_require__(140),
        setToStringTag = __webpack_require__(138),
        uid = __webpack_require__(105),
        wks = __webpack_require__(76),
        wksExt = __webpack_require__(144),
        wksDefine = __webpack_require__(143),
        keyOf = __webpack_require__(386),
        enumKeys = __webpack_require__(381),
        isArray = __webpack_require__(383),
        anObject = __webpack_require__(86),
        toIObject = __webpack_require__(58),
        toPrimitive = __webpack_require__(142),
        createDesc = __webpack_require__(103),
        _create = __webpack_require__(136),
        gOPNExt = __webpack_require__(390),
        $GOPD = __webpack_require__(223),
        $DP = __webpack_require__(57),
        $keys = __webpack_require__(75),
        gOPD = $GOPD.f,
        dP = $DP.f,
        gOPN = gOPNExt.f,
        $Symbol = global.Symbol,
        $JSON = global.JSON,
        _stringify = $JSON && $JSON.stringify,
        PROTOTYPE = 'prototype',
        HIDDEN = wks('_hidden'),
        TO_PRIMITIVE = wks('toPrimitive'),
        isEnum = {}.propertyIsEnumerable,
        SymbolRegistry = shared('symbol-registry'),
        AllSymbols = shared('symbols'),
        OPSymbols = shared('op-symbols'),
        ObjectProto = Object[PROTOTYPE],
        USE_NATIVE = typeof $Symbol == 'function',
        QObject = global.QObject;
      // Don't use setters in Qt Script, https://github.com/zloirock/core-js/issues/173
      var setter = !QObject || !QObject[PROTOTYPE] || !QObject[PROTOTYPE].findChild;

      // fallback for old Android, https://code.google.com/p/v8/issues/detail?id=687
      var setSymbolDesc =
        DESCRIPTORS &&
        $fails(function () {
          return (
            _create(
              dP({}, 'a', {
                get: function () {
                  return dP(this, 'a', { value: 7 }).a;
                },
              })
            ).a != 7
          );
        })
          ? function (it, key, D) {
              var protoDesc = gOPD(ObjectProto, key);
              if (protoDesc) delete ObjectProto[key];
              dP(it, key, D);
              if (protoDesc && it !== ObjectProto) dP(ObjectProto, key, protoDesc);
            }
          : dP;

      var wrap = function (tag) {
        var sym = (AllSymbols[tag] = _create($Symbol[PROTOTYPE]));
        sym._k = tag;
        return sym;
      };

      var isSymbol =
        USE_NATIVE && typeof $Symbol.iterator == 'symbol'
          ? function (it) {
              return typeof it == 'symbol';
            }
          : function (it) {
              return it instanceof $Symbol;
            };

      var $defineProperty = function defineProperty(it, key, D) {
        if (it === ObjectProto) $defineProperty(OPSymbols, key, D);
        anObject(it);
        key = toPrimitive(key, true);
        anObject(D);
        if (has(AllSymbols, key)) {
          if (!D.enumerable) {
            if (!has(it, HIDDEN)) dP(it, HIDDEN, createDesc(1, {}));
            it[HIDDEN][key] = true;
          } else {
            if (has(it, HIDDEN) && it[HIDDEN][key]) it[HIDDEN][key] = false;
            D = _create(D, { enumerable: createDesc(0, false) });
          }
          return setSymbolDesc(it, key, D);
        }
        return dP(it, key, D);
      };
      var $defineProperties = function defineProperties(it, P) {
        anObject(it);
        var keys = enumKeys((P = toIObject(P))),
          i = 0,
          l = keys.length,
          key;
        while (l > i) $defineProperty(it, (key = keys[i++]), P[key]);
        return it;
      };
      var $create = function create(it, P) {
        return P === undefined ? _create(it) : $defineProperties(_create(it), P);
      };
      var $propertyIsEnumerable = function propertyIsEnumerable(key) {
        var E = isEnum.call(this, (key = toPrimitive(key, true)));
        if (this === ObjectProto && has(AllSymbols, key) && !has(OPSymbols, key)) return false;
        return E ||
          !has(this, key) ||
          !has(AllSymbols, key) ||
          (has(this, HIDDEN) && this[HIDDEN][key])
          ? E
          : true;
      };
      var $getOwnPropertyDescriptor = function getOwnPropertyDescriptor(it, key) {
        it = toIObject(it);
        key = toPrimitive(key, true);
        if (it === ObjectProto && has(AllSymbols, key) && !has(OPSymbols, key)) return;
        var D = gOPD(it, key);
        if (D && has(AllSymbols, key) && !(has(it, HIDDEN) && it[HIDDEN][key])) D.enumerable = true;
        return D;
      };
      var $getOwnPropertyNames = function getOwnPropertyNames(it) {
        var names = gOPN(toIObject(it)),
          result = [],
          i = 0,
          key;
        while (names.length > i) {
          if (!has(AllSymbols, (key = names[i++])) && key != HIDDEN && key != META)
            result.push(key);
        }
        return result;
      };
      var $getOwnPropertySymbols = function getOwnPropertySymbols(it) {
        var IS_OP = it === ObjectProto,
          names = gOPN(IS_OP ? OPSymbols : toIObject(it)),
          result = [],
          i = 0,
          key;
        while (names.length > i) {
          if (has(AllSymbols, (key = names[i++])) && (IS_OP ? has(ObjectProto, key) : true))
            result.push(AllSymbols[key]);
        }
        return result;
      };

      // 19.4.1.1 Symbol([description])
      if (!USE_NATIVE) {
        $Symbol = function Symbol() {
          if (this instanceof $Symbol) throw TypeError('Symbol is not a constructor!');
          var tag = uid(arguments.length > 0 ? arguments[0] : undefined);
          var $set = function (value) {
            if (this === ObjectProto) $set.call(OPSymbols, value);
            if (has(this, HIDDEN) && has(this[HIDDEN], tag)) this[HIDDEN][tag] = false;
            setSymbolDesc(this, tag, createDesc(1, value));
          };
          if (DESCRIPTORS && setter)
            setSymbolDesc(ObjectProto, tag, { configurable: true, set: $set });
          return wrap(tag);
        };
        redefine($Symbol[PROTOTYPE], 'toString', function toString() {
          return this._k;
        });

        $GOPD.f = $getOwnPropertyDescriptor;
        $DP.f = $defineProperty;
        __webpack_require__(224).f = gOPNExt.f = $getOwnPropertyNames;
        __webpack_require__(102).f = $propertyIsEnumerable;
        __webpack_require__(137).f = $getOwnPropertySymbols;

        if (DESCRIPTORS && !__webpack_require__(135)) {
          redefine(ObjectProto, 'propertyIsEnumerable', $propertyIsEnumerable, true);
        }

        wksExt.f = function (name) {
          return wrap(wks(name));
        };
      }

      $export($export.G + $export.W + $export.F * !USE_NATIVE, { Symbol: $Symbol });

      for (
        var symbols = // 19.4.2.2, 19.4.2.3, 19.4.2.4, 19.4.2.6, 19.4.2.8, 19.4.2.9, 19.4.2.10, 19.4.2.11, 19.4.2.12, 19.4.2.13, 19.4.2.14
          'hasInstance,isConcatSpreadable,iterator,match,replace,search,species,split,toPrimitive,toStringTag,unscopables'.split(
            ','
          ),
          i = 0;
        symbols.length > i;

      )
        wks(symbols[i++]);

      for (var symbols = $keys(wks.store), i = 0; symbols.length > i; ) wksDefine(symbols[i++]);

      $export($export.S + $export.F * !USE_NATIVE, 'Symbol', {
        // 19.4.2.1 Symbol.for(key)
        for: function (key) {
          return has(SymbolRegistry, (key += ''))
            ? SymbolRegistry[key]
            : (SymbolRegistry[key] = $Symbol(key));
        },
        // 19.4.2.5 Symbol.keyFor(sym)
        keyFor: function keyFor(key) {
          if (isSymbol(key)) return keyOf(SymbolRegistry, key);
          throw TypeError(key + ' is not a symbol!');
        },
        useSetter: function () {
          setter = true;
        },
        useSimple: function () {
          setter = false;
        },
      });

      $export($export.S + $export.F * !USE_NATIVE, 'Object', {
        // 19.1.2.2 Object.create(O [, Properties])
        create: $create,
        // 19.1.2.4 Object.defineProperty(O, P, Attributes)
        defineProperty: $defineProperty,
        // 19.1.2.3 Object.defineProperties(O, Properties)
        defineProperties: $defineProperties,
        // 19.1.2.6 Object.getOwnPropertyDescriptor(O, P)
        getOwnPropertyDescriptor: $getOwnPropertyDescriptor,
        // 19.1.2.7 Object.getOwnPropertyNames(O)
        getOwnPropertyNames: $getOwnPropertyNames,
        // 19.1.2.8 Object.getOwnPropertySymbols(O)
        getOwnPropertySymbols: $getOwnPropertySymbols,
      });

      // 24.3.2 JSON.stringify(value [, replacer [, space]])
      $JSON &&
        $export(
          $export.S +
            $export.F *
              (!USE_NATIVE ||
                $fails(function () {
                  var S = $Symbol();
                  // MS Edge converts symbol values to JSON as {}
                  // WebKit converts symbol values to JSON as null
                  // V8 throws on boxed symbols
                  return (
                    _stringify([S]) != '[null]' ||
                    _stringify({ a: S }) != '{}' ||
                    _stringify(Object(S)) != '{}'
                  );
                })),
          'JSON',
          {
            stringify: function stringify(it) {
              if (it === undefined || isSymbol(it)) return; // IE8 returns string on undefined
              var args = [it],
                i = 1,
                replacer,
                $replacer;
              while (arguments.length > i) args.push(arguments[i++]);
              replacer = args[1];
              if (typeof replacer == 'function') $replacer = replacer;
              if ($replacer || !isArray(replacer))
                replacer = function (key, value) {
                  if ($replacer) value = $replacer.call(this, key, value);
                  if (!isSymbol(value)) return value;
                };
              args[1] = replacer;
              return _stringify.apply($JSON, args);
            },
          }
        );

      // 19.4.3.4 Symbol.prototype[@@toPrimitive](hint)
      $Symbol[PROTOTYPE][TO_PRIMITIVE] ||
        __webpack_require__(74)($Symbol[PROTOTYPE], TO_PRIMITIVE, $Symbol[PROTOTYPE].valueOf);
      // 19.4.3.5 Symbol.prototype[@@toStringTag]
      setToStringTag($Symbol, 'Symbol');
      // 20.2.1.9 Math[@@toStringTag]
      setToStringTag(Math, 'Math', true);
      // 24.3.3 JSON[@@toStringTag]
      setToStringTag(global.JSON, 'JSON', true);

      /***/
    },
    /* 405 */
    /***/ function (module, exports, __webpack_require__) {
      __webpack_require__(143)('asyncIterator');

      /***/
    },
    /* 406 */
    /***/ function (module, exports, __webpack_require__) {
      __webpack_require__(143)('observable');

      /***/
    },
    /* 407 */
    /***/ function (module, exports, __webpack_require__) {
      __webpack_require__(395);
      var global = __webpack_require__(49),
        hide = __webpack_require__(74),
        Iterators = __webpack_require__(134),
        TO_STRING_TAG = __webpack_require__(76)('toStringTag');

      for (
        var collections = [
            'NodeList',
            'DOMTokenList',
            'MediaList',
            'StyleSheetList',
            'CSSRuleList',
          ],
          i = 0;
        i < 5;
        i++
      ) {
        var NAME = collections[i],
          Collection = global[NAME],
          proto = Collection && Collection.prototype;
        if (proto && !proto[TO_STRING_TAG]) hide(proto, TO_STRING_TAG, NAME);
        Iterators[NAME] = Iterators.Array;
      }

      /***/
    },
    /* 408 */
    /***/ function (module, exports, __webpack_require__) {
      var isObject = __webpack_require__(9),
        isArray = __webpack_require__(153),
        SPECIES = __webpack_require__(10)('species');

      module.exports = function (original) {
        var C;
        if (isArray(original)) {
          C = original.constructor;
          // cross-realm fallback
          if (typeof C == 'function' && (C === Array || isArray(C.prototype))) C = undefined;
          if (isObject(C)) {
            C = C[SPECIES];
            if (C === null) C = undefined;
          }
        }
        return C === undefined ? Array : C;
      };

      /***/
    },
    /* 409 */
    /***/ function (module, exports, __webpack_require__) {
      // 9.4.2.3 ArraySpeciesCreate(originalArray, length)
      var speciesConstructor = __webpack_require__(408);

      module.exports = function (original, length) {
        return new (speciesConstructor(original))(length);
      };

      /***/
    },
    /* 410 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';

      var anObject = __webpack_require__(5),
        toPrimitive = __webpack_require__(39),
        NUMBER = 'number';

      module.exports = function (hint) {
        if (hint !== 'string' && hint !== NUMBER && hint !== 'default')
          throw TypeError('Incorrect hint');
        return toPrimitive(anObject(this), hint != NUMBER);
      };

      /***/
    },
    /* 411 */
    /***/ function (module, exports, __webpack_require__) {
      // all enumerable object keys, includes symbols
      var getKeys = __webpack_require__(63),
        gOPS = __webpack_require__(114),
        pIE = __webpack_require__(90);
      module.exports = function (it) {
        var result = getKeys(it),
          getSymbols = gOPS.f;
        if (getSymbols) {
          var symbols = getSymbols(it),
            isEnum = pIE.f,
            i = 0,
            key;
          while (symbols.length > i) if (isEnum.call(it, (key = symbols[i++]))) result.push(key);
        }
        return result;
      };

      /***/
    },
    /* 412 */
    /***/ function (module, exports, __webpack_require__) {
      var getKeys = __webpack_require__(63),
        toIObject = __webpack_require__(27);
      module.exports = function (object, el) {
        var O = toIObject(object),
          keys = getKeys(O),
          length = keys.length,
          index = 0,
          key;
        while (length > index) if (O[(key = keys[index++])] === el) return key;
      };

      /***/
    },
    /* 413 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';

      var path = __webpack_require__(414),
        invoke = __webpack_require__(110),
        aFunction = __webpack_require__(23);
      module.exports = function (/* ...pargs */) {
        var fn = aFunction(this),
          length = arguments.length,
          pargs = Array(length),
          i = 0,
          _ = path._,
          holder = false;
        while (length > i) if ((pargs[i] = arguments[i++]) === _) holder = true;
        return function (/* ...args */) {
          var that = this,
            aLen = arguments.length,
            j = 0,
            k = 0,
            args;
          if (!holder && !aLen) return invoke(fn, pargs, that);
          args = pargs.slice();
          if (holder) for (; length > j; j++) if (args[j] === _) args[j] = arguments[k++];
          while (aLen > k) args.push(arguments[k++]);
          return invoke(fn, args, that);
        };
      };

      /***/
    },
    /* 414 */
    /***/ function (module, exports, __webpack_require__) {
      module.exports = __webpack_require__(6);

      /***/
    },
    /* 415 */
    /***/ function (module, exports) {
      module.exports = function (regExp, replace) {
        var replacer =
          replace === Object(replace)
            ? function (part) {
                return replace[part];
              }
            : replace;
        return function (it) {
          return String(it).replace(regExp, replacer);
        };
      };

      /***/
    },
    /* 416 */
    /***/ function (module, exports, __webpack_require__) {
      // https://github.com/benjamingr/RexExp.escape
      var $export = __webpack_require__(0),
        $re = __webpack_require__(415)(/[\\^$*+?.()|[\]{}]/g, '\\$&');

      $export($export.S, 'RegExp', {
        escape: function escape(it) {
          return $re(it);
        },
      });

      /***/
    },
    /* 417 */
    /***/ function (module, exports, __webpack_require__) {
      // 22.1.3.3 Array.prototype.copyWithin(target, start, end = this.length)
      var $export = __webpack_require__(0);

      $export($export.P, 'Array', { copyWithin: __webpack_require__(230) });

      __webpack_require__(77)('copyWithin');

      /***/
    },
    /* 418 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';

      var $export = __webpack_require__(0),
        $every = __webpack_require__(37)(4);

      $export($export.P + $export.F * !__webpack_require__(36)([].every, true), 'Array', {
        // 22.1.3.5 / 15.4.4.16 Array.prototype.every(callbackfn [, thisArg])
        every: function every(callbackfn /* , thisArg */) {
          return $every(this, callbackfn, arguments[1]);
        },
      });

      /***/
    },
    /* 419 */
    /***/ function (module, exports, __webpack_require__) {
      // 22.1.3.6 Array.prototype.fill(value, start = 0, end = this.length)
      var $export = __webpack_require__(0);

      $export($export.P, 'Array', { fill: __webpack_require__(145) });

      __webpack_require__(77)('fill');

      /***/
    },
    /* 420 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';

      var $export = __webpack_require__(0),
        $filter = __webpack_require__(37)(2);

      $export($export.P + $export.F * !__webpack_require__(36)([].filter, true), 'Array', {
        // 22.1.3.7 / 15.4.4.20 Array.prototype.filter(callbackfn [, thisArg])
        filter: function filter(callbackfn /* , thisArg */) {
          return $filter(this, callbackfn, arguments[1]);
        },
      });

      /***/
    },
    /* 421 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';

      // 22.1.3.9 Array.prototype.findIndex(predicate, thisArg = undefined)
      var $export = __webpack_require__(0),
        $find = __webpack_require__(37)(6),
        KEY = 'findIndex',
        forced = true;
      // Shouldn't skip holes
      if (KEY in [])
        Array(1)[KEY](function () {
          forced = false;
        });
      $export($export.P + $export.F * forced, 'Array', {
        findIndex: function findIndex(callbackfn /*, that = undefined */) {
          return $find(this, callbackfn, arguments.length > 1 ? arguments[1] : undefined);
        },
      });
      __webpack_require__(77)(KEY);

      /***/
    },
    /* 422 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';

      // 22.1.3.8 Array.prototype.find(predicate, thisArg = undefined)
      var $export = __webpack_require__(0),
        $find = __webpack_require__(37)(5),
        KEY = 'find',
        forced = true;
      // Shouldn't skip holes
      if (KEY in [])
        Array(1)[KEY](function () {
          forced = false;
        });
      $export($export.P + $export.F * forced, 'Array', {
        find: function find(callbackfn /*, that = undefined */) {
          return $find(this, callbackfn, arguments.length > 1 ? arguments[1] : undefined);
        },
      });
      __webpack_require__(77)(KEY);

      /***/
    },
    /* 423 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';

      var $export = __webpack_require__(0),
        $forEach = __webpack_require__(37)(0),
        STRICT = __webpack_require__(36)([].forEach, true);

      $export($export.P + $export.F * !STRICT, 'Array', {
        // 22.1.3.10 / 15.4.4.18 Array.prototype.forEach(callbackfn [, thisArg])
        forEach: function forEach(callbackfn /* , thisArg */) {
          return $forEach(this, callbackfn, arguments[1]);
        },
      });

      /***/
    },
    /* 424 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';

      var ctx = __webpack_require__(45),
        $export = __webpack_require__(0),
        toObject = __webpack_require__(19),
        call = __webpack_require__(239),
        isArrayIter = __webpack_require__(152),
        toLength = __webpack_require__(17),
        createProperty = __webpack_require__(146),
        getIterFn = __webpack_require__(169);

      $export(
        $export.S +
          $export.F *
            !__webpack_require__(112)(function (iter) {
              Array.from(iter);
            }),
        'Array',
        {
          // 22.1.2.1 Array.from(arrayLike, mapfn = undefined, thisArg = undefined)
          from: function from(arrayLike /*, mapfn = undefined, thisArg = undefined*/) {
            var O = toObject(arrayLike),
              C = typeof this == 'function' ? this : Array,
              aLen = arguments.length,
              mapfn = aLen > 1 ? arguments[1] : undefined,
              mapping = mapfn !== undefined,
              index = 0,
              iterFn = getIterFn(O),
              length,
              result,
              step,
              iterator;
            if (mapping) mapfn = ctx(mapfn, aLen > 2 ? arguments[2] : undefined, 2);
            // if object isn't iterable or it's array with default iterator - use simple case
            if (iterFn != undefined && !(C == Array && isArrayIter(iterFn))) {
              for (
                iterator = iterFn.call(O), result = new C();
                !(step = iterator.next()).done;
                index++
              ) {
                createProperty(
                  result,
                  index,
                  mapping ? call(iterator, mapfn, [step.value, index], true) : step.value
                );
              }
            } else {
              length = toLength(O.length);
              for (result = new C(length); length > index; index++) {
                createProperty(result, index, mapping ? mapfn(O[index], index) : O[index]);
              }
            }
            result.length = index;
            return result;
          },
        }
      );

      /***/
    },
    /* 425 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';

      var $export = __webpack_require__(0),
        $indexOf = __webpack_require__(106)(false),
        $native = [].indexOf,
        NEGATIVE_ZERO = !!$native && 1 / [1].indexOf(1, -0) < 0;

      $export(
        $export.P + $export.F * (NEGATIVE_ZERO || !__webpack_require__(36)($native)),
        'Array',
        {
          // 22.1.3.11 / 15.4.4.14 Array.prototype.indexOf(searchElement [, fromIndex])
          indexOf: function indexOf(searchElement /*, fromIndex = 0 */) {
            return NEGATIVE_ZERO
              ? // convert -0 to +0
                $native.apply(this, arguments) || 0
              : $indexOf(this, searchElement, arguments[1]);
          },
        }
      );

      /***/
    },
    /* 426 */
    /***/ function (module, exports, __webpack_require__) {
      // 22.1.2.2 / 15.4.3.2 Array.isArray(arg)
      var $export = __webpack_require__(0);

      $export($export.S, 'Array', { isArray: __webpack_require__(153) });

      /***/
    },
    /* 427 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';

      // 22.1.3.13 Array.prototype.join(separator)
      var $export = __webpack_require__(0),
        toIObject = __webpack_require__(27),
        arrayJoin = [].join;

      // fallback for not array-like strings
      $export(
        $export.P +
          $export.F * (__webpack_require__(89) != Object || !__webpack_require__(36)(arrayJoin)),
        'Array',
        {
          join: function join(separator) {
            return arrayJoin.call(toIObject(this), separator === undefined ? ',' : separator);
          },
        }
      );

      /***/
    },
    /* 428 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';

      var $export = __webpack_require__(0),
        toIObject = __webpack_require__(27),
        toInteger = __webpack_require__(52),
        toLength = __webpack_require__(17),
        $native = [].lastIndexOf,
        NEGATIVE_ZERO = !!$native && 1 / [1].lastIndexOf(1, -0) < 0;

      $export(
        $export.P + $export.F * (NEGATIVE_ZERO || !__webpack_require__(36)($native)),
        'Array',
        {
          // 22.1.3.14 / 15.4.4.15 Array.prototype.lastIndexOf(searchElement [, fromIndex])
          lastIndexOf: function lastIndexOf(searchElement /*, fromIndex = @[*-1] */) {
            // convert -0 to +0
            if (NEGATIVE_ZERO) return $native.apply(this, arguments) || 0;
            var O = toIObject(this),
              length = toLength(O.length),
              index = length - 1;
            if (arguments.length > 1) index = Math.min(index, toInteger(arguments[1]));
            if (index < 0) index = length + index;
            for (; index >= 0; index--)
              if (index in O) if (O[index] === searchElement) return index || 0;
            return -1;
          },
        }
      );

      /***/
    },
    /* 429 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';

      var $export = __webpack_require__(0),
        $map = __webpack_require__(37)(1);

      $export($export.P + $export.F * !__webpack_require__(36)([].map, true), 'Array', {
        // 22.1.3.15 / 15.4.4.19 Array.prototype.map(callbackfn [, thisArg])
        map: function map(callbackfn /* , thisArg */) {
          return $map(this, callbackfn, arguments[1]);
        },
      });

      /***/
    },
    /* 430 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';

      var $export = __webpack_require__(0),
        createProperty = __webpack_require__(146);

      // WebKit Array.of isn't generic
      $export(
        $export.S +
          $export.F *
            __webpack_require__(7)(function () {
              function F() {}
              return !(Array.of.call(F) instanceof F);
            }),
        'Array',
        {
          // 22.1.2.3 Array.of( ...items)
          of: function of(/* ...args */) {
            var index = 0,
              aLen = arguments.length,
              result = new (typeof this == 'function' ? this : Array)(aLen);
            while (aLen > index) createProperty(result, index, arguments[index++]);
            result.length = aLen;
            return result;
          },
        }
      );

      /***/
    },
    /* 431 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';

      var $export = __webpack_require__(0),
        $reduce = __webpack_require__(232);

      $export($export.P + $export.F * !__webpack_require__(36)([].reduceRight, true), 'Array', {
        // 22.1.3.19 / 15.4.4.22 Array.prototype.reduceRight(callbackfn [, initialValue])
        reduceRight: function reduceRight(callbackfn /* , initialValue */) {
          return $reduce(this, callbackfn, arguments.length, arguments[1], true);
        },
      });

      /***/
    },
    /* 432 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';

      var $export = __webpack_require__(0),
        $reduce = __webpack_require__(232);

      $export($export.P + $export.F * !__webpack_require__(36)([].reduce, true), 'Array', {
        // 22.1.3.18 / 15.4.4.21 Array.prototype.reduce(callbackfn [, initialValue])
        reduce: function reduce(callbackfn /* , initialValue */) {
          return $reduce(this, callbackfn, arguments.length, arguments[1], false);
        },
      });

      /***/
    },
    /* 433 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';

      var $export = __webpack_require__(0),
        html = __webpack_require__(150),
        cof = __webpack_require__(34),
        toIndex = __webpack_require__(66),
        toLength = __webpack_require__(17),
        arraySlice = [].slice;

      // fallback for not array-like ES3 strings and DOM objects
      $export(
        $export.P +
          $export.F *
            __webpack_require__(7)(function () {
              if (html) arraySlice.call(html);
            }),
        'Array',
        {
          slice: function slice(begin, end) {
            var len = toLength(this.length),
              klass = cof(this);
            end = end === undefined ? len : end;
            if (klass == 'Array') return arraySlice.call(this, begin, end);
            var start = toIndex(begin, len),
              upTo = toIndex(end, len),
              size = toLength(upTo - start),
              cloned = Array(size),
              i = 0;
            for (; i < size; i++)
              cloned[i] = klass == 'String' ? this.charAt(start + i) : this[start + i];
            return cloned;
          },
        }
      );

      /***/
    },
    /* 434 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';

      var $export = __webpack_require__(0),
        $some = __webpack_require__(37)(3);

      $export($export.P + $export.F * !__webpack_require__(36)([].some, true), 'Array', {
        // 22.1.3.23 / 15.4.4.17 Array.prototype.some(callbackfn [, thisArg])
        some: function some(callbackfn /* , thisArg */) {
          return $some(this, callbackfn, arguments[1]);
        },
      });

      /***/
    },
    /* 435 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';

      var $export = __webpack_require__(0),
        aFunction = __webpack_require__(23),
        toObject = __webpack_require__(19),
        fails = __webpack_require__(7),
        $sort = [].sort,
        test = [1, 2, 3];

      $export(
        $export.P +
          $export.F *
            (fails(function () {
              // IE8-
              test.sort(undefined);
            }) ||
              !fails(function () {
                // V8 bug
                test.sort(null);
                // Old WebKit
              }) ||
              !__webpack_require__(36)($sort)),
        'Array',
        {
          // 22.1.3.25 Array.prototype.sort(comparefn)
          sort: function sort(comparefn) {
            return comparefn === undefined
              ? $sort.call(toObject(this))
              : $sort.call(toObject(this), aFunction(comparefn));
          },
        }
      );

      /***/
    },
    /* 436 */
    /***/ function (module, exports, __webpack_require__) {
      __webpack_require__(65)('Array');

      /***/
    },
    /* 437 */
    /***/ function (module, exports, __webpack_require__) {
      // 20.3.3.1 / 15.9.4.4 Date.now()
      var $export = __webpack_require__(0);

      $export($export.S, 'Date', {
        now: function () {
          return new Date().getTime();
        },
      });

      /***/
    },
    /* 438 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';

      // 20.3.4.36 / 15.9.5.43 Date.prototype.toISOString()
      var $export = __webpack_require__(0),
        fails = __webpack_require__(7),
        getTime = Date.prototype.getTime;

      var lz = function (num) {
        return num > 9 ? num : '0' + num;
      };

      // PhantomJS / old WebKit has a broken implementations
      $export(
        $export.P +
          $export.F *
            (fails(function () {
              return new Date(-5e13 - 1).toISOString() != '0385-07-25T07:06:39.999Z';
            }) ||
              !fails(function () {
                new Date(NaN).toISOString();
              })),
        'Date',
        {
          toISOString: function toISOString() {
            if (!isFinite(getTime.call(this))) throw RangeError('Invalid time value');
            var d = this,
              y = d.getUTCFullYear(),
              m = d.getUTCMilliseconds(),
              s = y < 0 ? '-' : y > 9999 ? '+' : '';
            return (
              s +
              ('00000' + Math.abs(y)).slice(s ? -6 : -4) +
              '-' +
              lz(d.getUTCMonth() + 1) +
              '-' +
              lz(d.getUTCDate()) +
              'T' +
              lz(d.getUTCHours()) +
              ':' +
              lz(d.getUTCMinutes()) +
              ':' +
              lz(d.getUTCSeconds()) +
              '.' +
              (m > 99 ? m : '0' + lz(m)) +
              'Z'
            );
          },
        }
      );

      /***/
    },
    /* 439 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';

      var $export = __webpack_require__(0),
        toObject = __webpack_require__(19),
        toPrimitive = __webpack_require__(39);

      $export(
        $export.P +
          $export.F *
            __webpack_require__(7)(function () {
              return (
                new Date(NaN).toJSON() !== null ||
                Date.prototype.toJSON.call({
                  toISOString: function () {
                    return 1;
                  },
                }) !== 1
              );
            }),
        'Date',
        {
          toJSON: function toJSON(key) {
            var O = toObject(this),
              pv = toPrimitive(O);
            return typeof pv == 'number' && !isFinite(pv) ? null : O.toISOString();
          },
        }
      );

      /***/
    },
    /* 440 */
    /***/ function (module, exports, __webpack_require__) {
      var TO_PRIMITIVE = __webpack_require__(10)('toPrimitive'),
        proto = Date.prototype;

      if (!(TO_PRIMITIVE in proto))
        __webpack_require__(24)(proto, TO_PRIMITIVE, __webpack_require__(410));

      /***/
    },
    /* 441 */
    /***/ function (module, exports, __webpack_require__) {
      var DateProto = Date.prototype,
        INVALID_DATE = 'Invalid Date',
        TO_STRING = 'toString',
        $toString = DateProto[TO_STRING],
        getTime = DateProto.getTime;
      if (new Date(NaN) + '' != INVALID_DATE) {
        __webpack_require__(25)(DateProto, TO_STRING, function toString() {
          var value = getTime.call(this);
          return value === value ? $toString.call(this) : INVALID_DATE;
        });
      }

      /***/
    },
    /* 442 */
    /***/ function (module, exports, __webpack_require__) {
      // 19.2.3.2 / 15.3.4.5 Function.prototype.bind(thisArg, args...)
      var $export = __webpack_require__(0);

      $export($export.P, 'Function', { bind: __webpack_require__(233) });

      /***/
    },
    /* 443 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';

      var isObject = __webpack_require__(9),
        getPrototypeOf = __webpack_require__(31),
        HAS_INSTANCE = __webpack_require__(10)('hasInstance'),
        FunctionProto = Function.prototype;
      // 19.2.3.6 Function.prototype[@@hasInstance](V)
      if (!(HAS_INSTANCE in FunctionProto))
        __webpack_require__(14).f(FunctionProto, HAS_INSTANCE, {
          value: function (O) {
            if (typeof this != 'function' || !isObject(O)) return false;
            if (!isObject(this.prototype)) return O instanceof this;
            // for environment w/o native `@@hasInstance` logic enough `instanceof`, but add this:
            while ((O = getPrototypeOf(O))) if (this.prototype === O) return true;
            return false;
          },
        });

      /***/
    },
    /* 444 */
    /***/ function (module, exports, __webpack_require__) {
      var dP = __webpack_require__(14).f,
        createDesc = __webpack_require__(51),
        has = __webpack_require__(21),
        FProto = Function.prototype,
        nameRE = /^\s*function ([^ (]*)/,
        NAME = 'name';

      var isExtensible =
        Object.isExtensible ||
        function () {
          return true;
        };

      // 19.2.4.2 name
      NAME in FProto ||
        (__webpack_require__(13) &&
          dP(FProto, NAME, {
            configurable: true,
            get: function () {
              try {
                var that = this,
                  name = ('' + that).match(nameRE)[1];
                has(that, NAME) || !isExtensible(that) || dP(that, NAME, createDesc(5, name));
                return name;
              } catch (e) {
                return '';
              }
            },
          }));

      /***/
    },
    /* 445 */
    /***/ function (module, exports, __webpack_require__) {
      // 20.2.2.3 Math.acosh(x)
      var $export = __webpack_require__(0),
        log1p = __webpack_require__(241),
        sqrt = Math.sqrt,
        $acosh = Math.acosh;

      $export(
        $export.S +
          $export.F *
            !(
              $acosh &&
              // V8 bug: https://code.google.com/p/v8/issues/detail?id=3509
              Math.floor($acosh(Number.MAX_VALUE)) == 710 &&
              // Tor Browser bug: Math.acosh(Infinity) -> NaN
              $acosh(Infinity) == Infinity
            ),
        'Math',
        {
          acosh: function acosh(x) {
            return (x = +x) < 1
              ? NaN
              : x > 94906265.62425156
              ? Math.log(x) + Math.LN2
              : log1p(x - 1 + sqrt(x - 1) * sqrt(x + 1));
          },
        }
      );

      /***/
    },
    /* 446 */
    /***/ function (module, exports, __webpack_require__) {
      // 20.2.2.5 Math.asinh(x)
      var $export = __webpack_require__(0),
        $asinh = Math.asinh;

      function asinh(x) {
        return !isFinite((x = +x)) || x == 0
          ? x
          : x < 0
          ? -asinh(-x)
          : Math.log(x + Math.sqrt(x * x + 1));
      }

      // Tor Browser bug: Math.asinh(0) -> -0
      $export($export.S + $export.F * !($asinh && 1 / $asinh(0) > 0), 'Math', { asinh: asinh });

      /***/
    },
    /* 447 */
    /***/ function (module, exports, __webpack_require__) {
      // 20.2.2.7 Math.atanh(x)
      var $export = __webpack_require__(0),
        $atanh = Math.atanh;

      // Tor Browser bug: Math.atanh(-0) -> 0
      $export($export.S + $export.F * !($atanh && 1 / $atanh(-0) < 0), 'Math', {
        atanh: function atanh(x) {
          return (x = +x) == 0 ? x : Math.log((1 + x) / (1 - x)) / 2;
        },
      });

      /***/
    },
    /* 448 */
    /***/ function (module, exports, __webpack_require__) {
      // 20.2.2.9 Math.cbrt(x)
      var $export = __webpack_require__(0),
        sign = __webpack_require__(157);

      $export($export.S, 'Math', {
        cbrt: function cbrt(x) {
          return sign((x = +x)) * Math.pow(Math.abs(x), 1 / 3);
        },
      });

      /***/
    },
    /* 449 */
    /***/ function (module, exports, __webpack_require__) {
      // 20.2.2.11 Math.clz32(x)
      var $export = __webpack_require__(0);

      $export($export.S, 'Math', {
        clz32: function clz32(x) {
          return (x >>>= 0) ? 31 - Math.floor(Math.log(x + 0.5) * Math.LOG2E) : 32;
        },
      });

      /***/
    },
    /* 450 */
    /***/ function (module, exports, __webpack_require__) {
      // 20.2.2.12 Math.cosh(x)
      var $export = __webpack_require__(0),
        exp = Math.exp;

      $export($export.S, 'Math', {
        cosh: function cosh(x) {
          return (exp((x = +x)) + exp(-x)) / 2;
        },
      });

      /***/
    },
    /* 451 */
    /***/ function (module, exports, __webpack_require__) {
      // 20.2.2.14 Math.expm1(x)
      var $export = __webpack_require__(0),
        $expm1 = __webpack_require__(156);

      $export($export.S + $export.F * ($expm1 != Math.expm1), 'Math', { expm1: $expm1 });

      /***/
    },
    /* 452 */
    /***/ function (module, exports, __webpack_require__) {
      // 20.2.2.16 Math.fround(x)
      var $export = __webpack_require__(0),
        sign = __webpack_require__(157),
        pow = Math.pow,
        EPSILON = pow(2, -52),
        EPSILON32 = pow(2, -23),
        MAX32 = pow(2, 127) * (2 - EPSILON32),
        MIN32 = pow(2, -126);

      var roundTiesToEven = function (n) {
        return n + 1 / EPSILON - 1 / EPSILON;
      };

      $export($export.S, 'Math', {
        fround: function fround(x) {
          var $abs = Math.abs(x),
            $sign = sign(x),
            a,
            result;
          if ($abs < MIN32)
            return $sign * roundTiesToEven($abs / MIN32 / EPSILON32) * MIN32 * EPSILON32;
          a = (1 + EPSILON32 / EPSILON) * $abs;
          result = a - (a - $abs);
          if (result > MAX32 || result != result) return $sign * Infinity;
          return $sign * result;
        },
      });

      /***/
    },
    /* 453 */
    /***/ function (module, exports, __webpack_require__) {
      // 20.2.2.17 Math.hypot([value1[, value2[, … ]]])
      var $export = __webpack_require__(0),
        abs = Math.abs;

      $export($export.S, 'Math', {
        hypot: function hypot(value1, value2) {
          // eslint-disable-line no-unused-vars
          var sum = 0,
            i = 0,
            aLen = arguments.length,
            larg = 0,
            arg,
            div;
          while (i < aLen) {
            arg = abs(arguments[i++]);
            if (larg < arg) {
              div = larg / arg;
              sum = sum * div * div + 1;
              larg = arg;
            } else if (arg > 0) {
              div = arg / larg;
              sum += div * div;
            } else sum += arg;
          }
          return larg === Infinity ? Infinity : larg * Math.sqrt(sum);
        },
      });

      /***/
    },
    /* 454 */
    /***/ function (module, exports, __webpack_require__) {
      // 20.2.2.18 Math.imul(x, y)
      var $export = __webpack_require__(0),
        $imul = Math.imul;

      // some WebKit versions fails with big numbers, some has wrong arity
      $export(
        $export.S +
          $export.F *
            __webpack_require__(7)(function () {
              return $imul(0xffffffff, 5) != -5 || $imul.length != 2;
            }),
        'Math',
        {
          imul: function imul(x, y) {
            var UINT16 = 0xffff,
              xn = +x,
              yn = +y,
              xl = UINT16 & xn,
              yl = UINT16 & yn;
            return (
              0 |
              (xl * yl +
                ((((UINT16 & (xn >>> 16)) * yl + xl * (UINT16 & (yn >>> 16))) << 16) >>> 0))
            );
          },
        }
      );

      /***/
    },
    /* 455 */
    /***/ function (module, exports, __webpack_require__) {
      // 20.2.2.21 Math.log10(x)
      var $export = __webpack_require__(0);

      $export($export.S, 'Math', {
        log10: function log10(x) {
          return Math.log(x) / Math.LN10;
        },
      });

      /***/
    },
    /* 456 */
    /***/ function (module, exports, __webpack_require__) {
      // 20.2.2.20 Math.log1p(x)
      var $export = __webpack_require__(0);

      $export($export.S, 'Math', { log1p: __webpack_require__(241) });

      /***/
    },
    /* 457 */
    /***/ function (module, exports, __webpack_require__) {
      // 20.2.2.22 Math.log2(x)
      var $export = __webpack_require__(0);

      $export($export.S, 'Math', {
        log2: function log2(x) {
          return Math.log(x) / Math.LN2;
        },
      });

      /***/
    },
    /* 458 */
    /***/ function (module, exports, __webpack_require__) {
      // 20.2.2.28 Math.sign(x)
      var $export = __webpack_require__(0);

      $export($export.S, 'Math', { sign: __webpack_require__(157) });

      /***/
    },
    /* 459 */
    /***/ function (module, exports, __webpack_require__) {
      // 20.2.2.30 Math.sinh(x)
      var $export = __webpack_require__(0),
        expm1 = __webpack_require__(156),
        exp = Math.exp;

      // V8 near Chromium 38 has a problem with very small numbers
      $export(
        $export.S +
          $export.F *
            __webpack_require__(7)(function () {
              return !Math.sinh(-2e-17) != -2e-17;
            }),
        'Math',
        {
          sinh: function sinh(x) {
            return Math.abs((x = +x)) < 1
              ? (expm1(x) - expm1(-x)) / 2
              : (exp(x - 1) - exp(-x - 1)) * (Math.E / 2);
          },
        }
      );

      /***/
    },
    /* 460 */
    /***/ function (module, exports, __webpack_require__) {
      // 20.2.2.33 Math.tanh(x)
      var $export = __webpack_require__(0),
        expm1 = __webpack_require__(156),
        exp = Math.exp;

      $export($export.S, 'Math', {
        tanh: function tanh(x) {
          var a = expm1((x = +x)),
            b = expm1(-x);
          return a == Infinity ? 1 : b == Infinity ? -1 : (a - b) / (exp(x) + exp(-x));
        },
      });

      /***/
    },
    /* 461 */
    /***/ function (module, exports, __webpack_require__) {
      // 20.2.2.34 Math.trunc(x)
      var $export = __webpack_require__(0);

      $export($export.S, 'Math', {
        trunc: function trunc(it) {
          return (it > 0 ? Math.floor : Math.ceil)(it);
        },
      });

      /***/
    },
    /* 462 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';

      var global = __webpack_require__(6),
        has = __webpack_require__(21),
        cof = __webpack_require__(34),
        inheritIfRequired = __webpack_require__(151),
        toPrimitive = __webpack_require__(39),
        fails = __webpack_require__(7),
        gOPN = __webpack_require__(62).f,
        gOPD = __webpack_require__(30).f,
        dP = __webpack_require__(14).f,
        $trim = __webpack_require__(81).trim,
        NUMBER = 'Number',
        $Number = global[NUMBER],
        Base = $Number,
        proto = $Number.prototype,
        // Opera ~12 has broken Object#toString
        BROKEN_COF = cof(__webpack_require__(61)(proto)) == NUMBER,
        TRIM = 'trim' in String.prototype;

      // 7.1.3 ToNumber(argument)
      var toNumber = function (argument) {
        var it = toPrimitive(argument, false);
        if (typeof it == 'string' && it.length > 2) {
          it = TRIM ? it.trim() : $trim(it, 3);
          var first = it.charCodeAt(0),
            third,
            radix,
            maxCode;
          if (first === 43 || first === 45) {
            third = it.charCodeAt(2);
            if (third === 88 || third === 120) return NaN; // Number('+0x1') should be NaN, old V8 fix
          } else if (first === 48) {
            switch (it.charCodeAt(1)) {
              case 66:
              case 98:
                radix = 2;
                maxCode = 49;
                break; // fast equal /^0b[01]+$/i
              case 79:
              case 111:
                radix = 8;
                maxCode = 55;
                break; // fast equal /^0o[0-7]+$/i
              default:
                return +it;
            }
            for (var digits = it.slice(2), i = 0, l = digits.length, code; i < l; i++) {
              code = digits.charCodeAt(i);
              // parseInt parses a string to a first unavailable symbol
              // but ToNumber should return NaN if a string contains unavailable symbols
              if (code < 48 || code > maxCode) return NaN;
            }
            return parseInt(digits, radix);
          }
        }
        return +it;
      };

      if (!$Number(' 0o1') || !$Number('0b1') || $Number('+0x1')) {
        $Number = function Number(value) {
          var it = arguments.length < 1 ? 0 : value,
            that = this;
          return that instanceof $Number &&
            // check on 1..constructor(foo) case
            (BROKEN_COF
              ? fails(function () {
                  proto.valueOf.call(that);
                })
              : cof(that) != NUMBER)
            ? inheritIfRequired(new Base(toNumber(it)), that, $Number)
            : toNumber(it);
        };
        for (
          var keys = __webpack_require__(13)
              ? gOPN(Base)
              : // ES3:
                (
                  'MAX_VALUE,MIN_VALUE,NaN,NEGATIVE_INFINITY,POSITIVE_INFINITY,' +
                  // ES6 (in case, if modules with ES6 Number statics required before):
                  'EPSILON,isFinite,isInteger,isNaN,isSafeInteger,MAX_SAFE_INTEGER,' +
                  'MIN_SAFE_INTEGER,parseFloat,parseInt,isInteger'
                ).split(','),
            j = 0,
            key;
          keys.length > j;
          j++
        ) {
          if (has(Base, (key = keys[j])) && !has($Number, key)) {
            dP($Number, key, gOPD(Base, key));
          }
        }
        $Number.prototype = proto;
        proto.constructor = $Number;
        __webpack_require__(25)(global, NUMBER, $Number);
      }

      /***/
    },
    /* 463 */
    /***/ function (module, exports, __webpack_require__) {
      // 20.1.2.1 Number.EPSILON
      var $export = __webpack_require__(0);

      $export($export.S, 'Number', { EPSILON: Math.pow(2, -52) });

      /***/
    },
    /* 464 */
    /***/ function (module, exports, __webpack_require__) {
      // 20.1.2.2 Number.isFinite(number)
      var $export = __webpack_require__(0),
        _isFinite = __webpack_require__(6).isFinite;

      $export($export.S, 'Number', {
        isFinite: function isFinite(it) {
          return typeof it == 'number' && _isFinite(it);
        },
      });

      /***/
    },
    /* 465 */
    /***/ function (module, exports, __webpack_require__) {
      // 20.1.2.3 Number.isInteger(number)
      var $export = __webpack_require__(0);

      $export($export.S, 'Number', { isInteger: __webpack_require__(238) });

      /***/
    },
    /* 466 */
    /***/ function (module, exports, __webpack_require__) {
      // 20.1.2.4 Number.isNaN(number)
      var $export = __webpack_require__(0);

      $export($export.S, 'Number', {
        isNaN: function isNaN(number) {
          return number != number;
        },
      });

      /***/
    },
    /* 467 */
    /***/ function (module, exports, __webpack_require__) {
      // 20.1.2.5 Number.isSafeInteger(number)
      var $export = __webpack_require__(0),
        isInteger = __webpack_require__(238),
        abs = Math.abs;

      $export($export.S, 'Number', {
        isSafeInteger: function isSafeInteger(number) {
          return isInteger(number) && abs(number) <= 0x1fffffffffffff;
        },
      });

      /***/
    },
    /* 468 */
    /***/ function (module, exports, __webpack_require__) {
      // 20.1.2.6 Number.MAX_SAFE_INTEGER
      var $export = __webpack_require__(0);

      $export($export.S, 'Number', { MAX_SAFE_INTEGER: 0x1fffffffffffff });

      /***/
    },
    /* 469 */
    /***/ function (module, exports, __webpack_require__) {
      // 20.1.2.10 Number.MIN_SAFE_INTEGER
      var $export = __webpack_require__(0);

      $export($export.S, 'Number', { MIN_SAFE_INTEGER: -0x1fffffffffffff });

      /***/
    },
    /* 470 */
    /***/ function (module, exports, __webpack_require__) {
      var $export = __webpack_require__(0),
        $parseFloat = __webpack_require__(248);
      // 20.1.2.12 Number.parseFloat(string)
      $export($export.S + $export.F * (Number.parseFloat != $parseFloat), 'Number', {
        parseFloat: $parseFloat,
      });

      /***/
    },
    /* 471 */
    /***/ function (module, exports, __webpack_require__) {
      var $export = __webpack_require__(0),
        $parseInt = __webpack_require__(249);
      // 20.1.2.13 Number.parseInt(string, radix)
      $export($export.S + $export.F * (Number.parseInt != $parseInt), 'Number', {
        parseInt: $parseInt,
      });

      /***/
    },
    /* 472 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';

      var $export = __webpack_require__(0),
        toInteger = __webpack_require__(52),
        aNumberValue = __webpack_require__(229),
        repeat = __webpack_require__(164),
        $toFixed = (1).toFixed,
        floor = Math.floor,
        data = [0, 0, 0, 0, 0, 0],
        ERROR = 'Number.toFixed: incorrect invocation!',
        ZERO = '0';

      var multiply = function (n, c) {
        var i = -1,
          c2 = c;
        while (++i < 6) {
          c2 += n * data[i];
          data[i] = c2 % 1e7;
          c2 = floor(c2 / 1e7);
        }
      };
      var divide = function (n) {
        var i = 6,
          c = 0;
        while (--i >= 0) {
          c += data[i];
          data[i] = floor(c / n);
          c = (c % n) * 1e7;
        }
      };
      var numToString = function () {
        var i = 6,
          s = '';
        while (--i >= 0) {
          if (s !== '' || i === 0 || data[i] !== 0) {
            var t = String(data[i]);
            s = s === '' ? t : s + repeat.call(ZERO, 7 - t.length) + t;
          }
        }
        return s;
      };
      var pow = function (x, n, acc) {
        return n === 0 ? acc : n % 2 === 1 ? pow(x, n - 1, acc * x) : pow(x * x, n / 2, acc);
      };
      var log = function (x) {
        var n = 0,
          x2 = x;
        while (x2 >= 4096) {
          n += 12;
          x2 /= 4096;
        }
        while (x2 >= 2) {
          n += 1;
          x2 /= 2;
        }
        return n;
      };

      $export(
        $export.P +
          $export.F *
            ((!!$toFixed &&
              ((0.00008).toFixed(3) !== '0.000' ||
                (0.9).toFixed(0) !== '1' ||
                (1.255).toFixed(2) !== '1.25' ||
                (1000000000000000128).toFixed(0) !== '1000000000000000128')) ||
              !__webpack_require__(7)(function () {
                // V8 ~ Android 4.3-
                $toFixed.call({});
              })),
        'Number',
        {
          toFixed: function toFixed(fractionDigits) {
            var x = aNumberValue(this, ERROR),
              f = toInteger(fractionDigits),
              s = '',
              m = ZERO,
              e,
              z,
              j,
              k;
            if (f < 0 || f > 20) throw RangeError(ERROR);
            if (x != x) return 'NaN';
            if (x <= -1e21 || x >= 1e21) return String(x);
            if (x < 0) {
              s = '-';
              x = -x;
            }
            if (x > 1e-21) {
              e = log(x * pow(2, 69, 1)) - 69;
              z = e < 0 ? x * pow(2, -e, 1) : x / pow(2, e, 1);
              z *= 0x10000000000000;
              e = 52 - e;
              if (e > 0) {
                multiply(0, z);
                j = f;
                while (j >= 7) {
                  multiply(1e7, 0);
                  j -= 7;
                }
                multiply(pow(10, j, 1), 0);
                j = e - 1;
                while (j >= 23) {
                  divide(1 << 23);
                  j -= 23;
                }
                divide(1 << j);
                multiply(1, 1);
                divide(2);
                m = numToString();
              } else {
                multiply(0, z);
                multiply(1 << -e, 0);
                m = numToString() + repeat.call(ZERO, f);
              }
            }
            if (f > 0) {
              k = m.length;
              m =
                s +
                (k <= f
                  ? '0.' + repeat.call(ZERO, f - k) + m
                  : m.slice(0, k - f) + '.' + m.slice(k - f));
            } else {
              m = s + m;
            }
            return m;
          },
        }
      );

      /***/
    },
    /* 473 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';

      var $export = __webpack_require__(0),
        $fails = __webpack_require__(7),
        aNumberValue = __webpack_require__(229),
        $toPrecision = (1).toPrecision;

      $export(
        $export.P +
          $export.F *
            ($fails(function () {
              // IE7-
              return $toPrecision.call(1, undefined) !== '1';
            }) ||
              !$fails(function () {
                // V8 ~ Android 4.3-
                $toPrecision.call({});
              })),
        'Number',
        {
          toPrecision: function toPrecision(precision) {
            var that = aNumberValue(this, 'Number#toPrecision: incorrect invocation!');
            return precision === undefined
              ? $toPrecision.call(that)
              : $toPrecision.call(that, precision);
          },
        }
      );

      /***/
    },
    /* 474 */
    /***/ function (module, exports, __webpack_require__) {
      // 19.1.3.1 Object.assign(target, source)
      var $export = __webpack_require__(0);

      $export($export.S + $export.F, 'Object', { assign: __webpack_require__(242) });

      /***/
    },
    /* 475 */
    /***/ function (module, exports, __webpack_require__) {
      var $export = __webpack_require__(0);
      // 19.1.2.2 / 15.2.3.5 Object.create(O [, Properties])
      $export($export.S, 'Object', { create: __webpack_require__(61) });

      /***/
    },
    /* 476 */
    /***/ function (module, exports, __webpack_require__) {
      var $export = __webpack_require__(0);
      // 19.1.2.3 / 15.2.3.7 Object.defineProperties(O, Properties)
      $export($export.S + $export.F * !__webpack_require__(13), 'Object', {
        defineProperties: __webpack_require__(243),
      });

      /***/
    },
    /* 477 */
    /***/ function (module, exports, __webpack_require__) {
      var $export = __webpack_require__(0);
      // 19.1.2.4 / 15.2.3.6 Object.defineProperty(O, P, Attributes)
      $export($export.S + $export.F * !__webpack_require__(13), 'Object', {
        defineProperty: __webpack_require__(14).f,
      });

      /***/
    },
    /* 478 */
    /***/ function (module, exports, __webpack_require__) {
      // 19.1.2.5 Object.freeze(O)
      var isObject = __webpack_require__(9),
        meta = __webpack_require__(50).onFreeze;

      __webpack_require__(38)('freeze', function ($freeze) {
        return function freeze(it) {
          return $freeze && isObject(it) ? $freeze(meta(it)) : it;
        };
      });

      /***/
    },
    /* 479 */
    /***/ function (module, exports, __webpack_require__) {
      // 19.1.2.6 Object.getOwnPropertyDescriptor(O, P)
      var toIObject = __webpack_require__(27),
        $getOwnPropertyDescriptor = __webpack_require__(30).f;

      __webpack_require__(38)('getOwnPropertyDescriptor', function () {
        return function getOwnPropertyDescriptor(it, key) {
          return $getOwnPropertyDescriptor(toIObject(it), key);
        };
      });

      /***/
    },
    /* 480 */
    /***/ function (module, exports, __webpack_require__) {
      // 19.1.2.7 Object.getOwnPropertyNames(O)
      __webpack_require__(38)('getOwnPropertyNames', function () {
        return __webpack_require__(244).f;
      });

      /***/
    },
    /* 481 */
    /***/ function (module, exports, __webpack_require__) {
      // 19.1.2.9 Object.getPrototypeOf(O)
      var toObject = __webpack_require__(19),
        $getPrototypeOf = __webpack_require__(31);

      __webpack_require__(38)('getPrototypeOf', function () {
        return function getPrototypeOf(it) {
          return $getPrototypeOf(toObject(it));
        };
      });

      /***/
    },
    /* 482 */
    /***/ function (module, exports, __webpack_require__) {
      // 19.1.2.11 Object.isExtensible(O)
      var isObject = __webpack_require__(9);

      __webpack_require__(38)('isExtensible', function ($isExtensible) {
        return function isExtensible(it) {
          return isObject(it) ? ($isExtensible ? $isExtensible(it) : true) : false;
        };
      });

      /***/
    },
    /* 483 */
    /***/ function (module, exports, __webpack_require__) {
      // 19.1.2.12 Object.isFrozen(O)
      var isObject = __webpack_require__(9);

      __webpack_require__(38)('isFrozen', function ($isFrozen) {
        return function isFrozen(it) {
          return isObject(it) ? ($isFrozen ? $isFrozen(it) : false) : true;
        };
      });

      /***/
    },
    /* 484 */
    /***/ function (module, exports, __webpack_require__) {
      // 19.1.2.13 Object.isSealed(O)
      var isObject = __webpack_require__(9);

      __webpack_require__(38)('isSealed', function ($isSealed) {
        return function isSealed(it) {
          return isObject(it) ? ($isSealed ? $isSealed(it) : false) : true;
        };
      });

      /***/
    },
    /* 485 */
    /***/ function (module, exports, __webpack_require__) {
      // 19.1.3.10 Object.is(value1, value2)
      var $export = __webpack_require__(0);
      $export($export.S, 'Object', { is: __webpack_require__(250) });

      /***/
    },
    /* 486 */
    /***/ function (module, exports, __webpack_require__) {
      // 19.1.2.14 Object.keys(O)
      var toObject = __webpack_require__(19),
        $keys = __webpack_require__(63);

      __webpack_require__(38)('keys', function () {
        return function keys(it) {
          return $keys(toObject(it));
        };
      });

      /***/
    },
    /* 487 */
    /***/ function (module, exports, __webpack_require__) {
      // 19.1.2.15 Object.preventExtensions(O)
      var isObject = __webpack_require__(9),
        meta = __webpack_require__(50).onFreeze;

      __webpack_require__(38)('preventExtensions', function ($preventExtensions) {
        return function preventExtensions(it) {
          return $preventExtensions && isObject(it) ? $preventExtensions(meta(it)) : it;
        };
      });

      /***/
    },
    /* 488 */
    /***/ function (module, exports, __webpack_require__) {
      // 19.1.2.17 Object.seal(O)
      var isObject = __webpack_require__(9),
        meta = __webpack_require__(50).onFreeze;

      __webpack_require__(38)('seal', function ($seal) {
        return function seal(it) {
          return $seal && isObject(it) ? $seal(meta(it)) : it;
        };
      });

      /***/
    },
    /* 489 */
    /***/ function (module, exports, __webpack_require__) {
      // 19.1.3.19 Object.setPrototypeOf(O, proto)
      var $export = __webpack_require__(0);
      $export($export.S, 'Object', { setPrototypeOf: __webpack_require__(159).set });

      /***/
    },
    /* 490 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';

      // 19.1.3.6 Object.prototype.toString()
      var classof = __webpack_require__(88),
        test = {};
      test[__webpack_require__(10)('toStringTag')] = 'z';
      if (test + '' != '[object z]') {
        __webpack_require__(25)(
          Object.prototype,
          'toString',
          function toString() {
            return '[object ' + classof(this) + ']';
          },
          true
        );
      }

      /***/
    },
    /* 491 */
    /***/ function (module, exports, __webpack_require__) {
      var $export = __webpack_require__(0),
        $parseFloat = __webpack_require__(248);
      // 18.2.4 parseFloat(string)
      $export($export.G + $export.F * (parseFloat != $parseFloat), { parseFloat: $parseFloat });

      /***/
    },
    /* 492 */
    /***/ function (module, exports, __webpack_require__) {
      var $export = __webpack_require__(0),
        $parseInt = __webpack_require__(249);
      // 18.2.5 parseInt(string, radix)
      $export($export.G + $export.F * (parseInt != $parseInt), { parseInt: $parseInt });

      /***/
    },
    /* 493 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';

      var LIBRARY = __webpack_require__(60),
        global = __webpack_require__(6),
        ctx = __webpack_require__(45),
        classof = __webpack_require__(88),
        $export = __webpack_require__(0),
        isObject = __webpack_require__(9),
        aFunction = __webpack_require__(23),
        anInstance = __webpack_require__(59),
        forOf = __webpack_require__(78),
        speciesConstructor = __webpack_require__(161),
        task = __webpack_require__(166).set,
        microtask = __webpack_require__(158)(),
        PROMISE = 'Promise',
        TypeError = global.TypeError,
        process = global.process,
        $Promise = global[PROMISE],
        process = global.process,
        isNode = classof(process) == 'process',
        empty = function () {
          /* empty */
        },
        Internal,
        GenericPromiseCapability,
        Wrapper;

      var USE_NATIVE = !!(function () {
        try {
          // correct subclassing with @@species support
          var promise = $Promise.resolve(1),
            FakePromise = ((promise.constructor = {})[
              __webpack_require__(10)('species')
            ] = function (exec) {
              exec(empty, empty);
            });
          // unhandled rejections tracking support, NodeJS Promise without it fails @@species test
          return (
            (isNode || typeof PromiseRejectionEvent == 'function') &&
            promise.then(empty) instanceof FakePromise
          );
        } catch (e) {
          /* empty */
        }
      })();

      // helpers
      var sameConstructor = function (a, b) {
        // with library wrapper special case
        return a === b || (a === $Promise && b === Wrapper);
      };
      var isThenable = function (it) {
        var then;
        return isObject(it) && typeof (then = it.then) == 'function' ? then : false;
      };
      var newPromiseCapability = function (C) {
        return sameConstructor($Promise, C)
          ? new PromiseCapability(C)
          : new GenericPromiseCapability(C);
      };
      var PromiseCapability = (GenericPromiseCapability = function (C) {
        var resolve, reject;
        this.promise = new C(function ($$resolve, $$reject) {
          if (resolve !== undefined || reject !== undefined)
            throw TypeError('Bad Promise constructor');
          resolve = $$resolve;
          reject = $$reject;
        });
        this.resolve = aFunction(resolve);
        this.reject = aFunction(reject);
      });
      var perform = function (exec) {
        try {
          exec();
        } catch (e) {
          return { error: e };
        }
      };
      var notify = function (promise, isReject) {
        if (promise._n) return;
        promise._n = true;
        var chain = promise._c;
        microtask(function () {
          var value = promise._v,
            ok = promise._s == 1,
            i = 0;
          var run = function (reaction) {
            var handler = ok ? reaction.ok : reaction.fail,
              resolve = reaction.resolve,
              reject = reaction.reject,
              domain = reaction.domain,
              result,
              then;
            try {
              if (handler) {
                if (!ok) {
                  if (promise._h == 2) onHandleUnhandled(promise);
                  promise._h = 1;
                }
                if (handler === true) result = value;
                else {
                  if (domain) domain.enter();
                  result = handler(value);
                  if (domain) domain.exit();
                }
                if (result === reaction.promise) {
                  reject(TypeError('Promise-chain cycle'));
                } else if ((then = isThenable(result))) {
                  then.call(result, resolve, reject);
                } else resolve(result);
              } else reject(value);
            } catch (e) {
              reject(e);
            }
          };
          while (chain.length > i) run(chain[i++]); // variable length - can't use forEach
          promise._c = [];
          promise._n = false;
          if (isReject && !promise._h) onUnhandled(promise);
        });
      };
      var onUnhandled = function (promise) {
        task.call(global, function () {
          var value = promise._v,
            abrupt,
            handler,
            console;
          if (isUnhandled(promise)) {
            abrupt = perform(function () {
              if (isNode) {
                process.emit('unhandledRejection', value, promise);
              } else if ((handler = global.onunhandledrejection)) {
                handler({ promise: promise, reason: value });
              } else if ((console = global.console) && console.error) {
                console.error('Unhandled promise rejection', value);
              }
            });
            // Browsers should not trigger `rejectionHandled` event if it was handled here, NodeJS - should
            promise._h = isNode || isUnhandled(promise) ? 2 : 1;
          }
          promise._a = undefined;
          if (abrupt) throw abrupt.error;
        });
      };
      var isUnhandled = function (promise) {
        if (promise._h == 1) return false;
        var chain = promise._a || promise._c,
          i = 0,
          reaction;
        while (chain.length > i) {
          reaction = chain[i++];
          if (reaction.fail || !isUnhandled(reaction.promise)) return false;
        }
        return true;
      };
      var onHandleUnhandled = function (promise) {
        task.call(global, function () {
          var handler;
          if (isNode) {
            process.emit('rejectionHandled', promise);
          } else if ((handler = global.onrejectionhandled)) {
            handler({ promise: promise, reason: promise._v });
          }
        });
      };
      var $reject = function (value) {
        var promise = this;
        if (promise._d) return;
        promise._d = true;
        promise = promise._w || promise; // unwrap
        promise._v = value;
        promise._s = 2;
        if (!promise._a) promise._a = promise._c.slice();
        notify(promise, true);
      };
      var $resolve = function (value) {
        var promise = this,
          then;
        if (promise._d) return;
        promise._d = true;
        promise = promise._w || promise; // unwrap
        try {
          if (promise === value) throw TypeError("Promise can't be resolved itself");
          if ((then = isThenable(value))) {
            microtask(function () {
              var wrapper = { _w: promise, _d: false }; // wrap
              try {
                then.call(value, ctx($resolve, wrapper, 1), ctx($reject, wrapper, 1));
              } catch (e) {
                $reject.call(wrapper, e);
              }
            });
          } else {
            promise._v = value;
            promise._s = 1;
            notify(promise, false);
          }
        } catch (e) {
          $reject.call({ _w: promise, _d: false }, e); // wrap
        }
      };

      // constructor polyfill
      if (!USE_NATIVE) {
        // 25.4.3.1 Promise(executor)
        $Promise = function Promise(executor) {
          anInstance(this, $Promise, PROMISE, '_h');
          aFunction(executor);
          Internal.call(this);
          try {
            executor(ctx($resolve, this, 1), ctx($reject, this, 1));
          } catch (err) {
            $reject.call(this, err);
          }
        };
        Internal = function Promise(executor) {
          this._c = []; // <- awaiting reactions
          this._a = undefined; // <- checked in isUnhandled reactions
          this._s = 0; // <- state
          this._d = false; // <- done
          this._v = undefined; // <- value
          this._h = 0; // <- rejection state, 0 - default, 1 - handled, 2 - unhandled
          this._n = false; // <- notify
        };
        Internal.prototype = __webpack_require__(64)($Promise.prototype, {
          // 25.4.5.3 Promise.prototype.then(onFulfilled, onRejected)
          then: function then(onFulfilled, onRejected) {
            var reaction = newPromiseCapability(speciesConstructor(this, $Promise));
            reaction.ok = typeof onFulfilled == 'function' ? onFulfilled : true;
            reaction.fail = typeof onRejected == 'function' && onRejected;
            reaction.domain = isNode ? process.domain : undefined;
            this._c.push(reaction);
            if (this._a) this._a.push(reaction);
            if (this._s) notify(this, false);
            return reaction.promise;
          },
          // 25.4.5.1 Promise.prototype.catch(onRejected)
          catch: function (onRejected) {
            return this.then(undefined, onRejected);
          },
        });
        PromiseCapability = function () {
          var promise = new Internal();
          this.promise = promise;
          this.resolve = ctx($resolve, promise, 1);
          this.reject = ctx($reject, promise, 1);
        };
      }

      $export($export.G + $export.W + $export.F * !USE_NATIVE, { Promise: $Promise });
      __webpack_require__(80)($Promise, PROMISE);
      __webpack_require__(65)(PROMISE);
      Wrapper = __webpack_require__(44)[PROMISE];

      // statics
      $export($export.S + $export.F * !USE_NATIVE, PROMISE, {
        // 25.4.4.5 Promise.reject(r)
        reject: function reject(r) {
          var capability = newPromiseCapability(this),
            $$reject = capability.reject;
          $$reject(r);
          return capability.promise;
        },
      });
      $export($export.S + $export.F * (LIBRARY || !USE_NATIVE), PROMISE, {
        // 25.4.4.6 Promise.resolve(x)
        resolve: function resolve(x) {
          // instanceof instead of internal slot check because we should fix it without replacement native Promise core
          if (x instanceof $Promise && sameConstructor(x.constructor, this)) return x;
          var capability = newPromiseCapability(this),
            $$resolve = capability.resolve;
          $$resolve(x);
          return capability.promise;
        },
      });
      $export(
        $export.S +
          $export.F *
            !(
              USE_NATIVE &&
              __webpack_require__(112)(function (iter) {
                $Promise.all(iter)['catch'](empty);
              })
            ),
        PROMISE,
        {
          // 25.4.4.1 Promise.all(iterable)
          all: function all(iterable) {
            var C = this,
              capability = newPromiseCapability(C),
              resolve = capability.resolve,
              reject = capability.reject;
            var abrupt = perform(function () {
              var values = [],
                index = 0,
                remaining = 1;
              forOf(iterable, false, function (promise) {
                var $index = index++,
                  alreadyCalled = false;
                values.push(undefined);
                remaining++;
                C.resolve(promise).then(function (value) {
                  if (alreadyCalled) return;
                  alreadyCalled = true;
                  values[$index] = value;
                  --remaining || resolve(values);
                }, reject);
              });
              --remaining || resolve(values);
            });
            if (abrupt) reject(abrupt.error);
            return capability.promise;
          },
          // 25.4.4.4 Promise.race(iterable)
          race: function race(iterable) {
            var C = this,
              capability = newPromiseCapability(C),
              reject = capability.reject;
            var abrupt = perform(function () {
              forOf(iterable, false, function (promise) {
                C.resolve(promise).then(capability.resolve, reject);
              });
            });
            if (abrupt) reject(abrupt.error);
            return capability.promise;
          },
        }
      );

      /***/
    },
    /* 494 */
    /***/ function (module, exports, __webpack_require__) {
      // 26.1.1 Reflect.apply(target, thisArgument, argumentsList)
      var $export = __webpack_require__(0),
        aFunction = __webpack_require__(23),
        anObject = __webpack_require__(5),
        rApply = (__webpack_require__(6).Reflect || {}).apply,
        fApply = Function.apply;
      // MS Edge argumentsList argument is optional
      $export(
        $export.S +
          $export.F *
            !__webpack_require__(7)(function () {
              rApply(function () {});
            }),
        'Reflect',
        {
          apply: function apply(target, thisArgument, argumentsList) {
            var T = aFunction(target),
              L = anObject(argumentsList);
            return rApply ? rApply(T, thisArgument, L) : fApply.call(T, thisArgument, L);
          },
        }
      );

      /***/
    },
    /* 495 */
    /***/ function (module, exports, __webpack_require__) {
      // 26.1.2 Reflect.construct(target, argumentsList [, newTarget])
      var $export = __webpack_require__(0),
        create = __webpack_require__(61),
        aFunction = __webpack_require__(23),
        anObject = __webpack_require__(5),
        isObject = __webpack_require__(9),
        fails = __webpack_require__(7),
        bind = __webpack_require__(233),
        rConstruct = (__webpack_require__(6).Reflect || {}).construct;

      // MS Edge supports only 2 arguments and argumentsList argument is optional
      // FF Nightly sets third argument as `new.target`, but does not create `this` from it
      var NEW_TARGET_BUG = fails(function () {
        function F() {}
        return !(rConstruct(function () {}, [], F) instanceof F);
      });
      var ARGS_BUG = !fails(function () {
        rConstruct(function () {});
      });

      $export($export.S + $export.F * (NEW_TARGET_BUG || ARGS_BUG), 'Reflect', {
        construct: function construct(Target, args /*, newTarget*/) {
          aFunction(Target);
          anObject(args);
          var newTarget = arguments.length < 3 ? Target : aFunction(arguments[2]);
          if (ARGS_BUG && !NEW_TARGET_BUG) return rConstruct(Target, args, newTarget);
          if (Target == newTarget) {
            // w/o altered newTarget, optimization for 0-4 arguments
            switch (args.length) {
              case 0:
                return new Target();
              case 1:
                return new Target(args[0]);
              case 2:
                return new Target(args[0], args[1]);
              case 3:
                return new Target(args[0], args[1], args[2]);
              case 4:
                return new Target(args[0], args[1], args[2], args[3]);
            }
            // w/o altered newTarget, lot of arguments case
            var $args = [null];
            $args.push.apply($args, args);
            return new (bind.apply(Target, $args))();
          }
          // with altered newTarget, not support built-in constructors
          var proto = newTarget.prototype,
            instance = create(isObject(proto) ? proto : Object.prototype),
            result = Function.apply.call(Target, instance, args);
          return isObject(result) ? result : instance;
        },
      });

      /***/
    },
    /* 496 */
    /***/ function (module, exports, __webpack_require__) {
      // 26.1.3 Reflect.defineProperty(target, propertyKey, attributes)
      var dP = __webpack_require__(14),
        $export = __webpack_require__(0),
        anObject = __webpack_require__(5),
        toPrimitive = __webpack_require__(39);

      // MS Edge has broken Reflect.defineProperty - throwing instead of returning false
      $export(
        $export.S +
          $export.F *
            __webpack_require__(7)(function () {
              Reflect.defineProperty(dP.f({}, 1, { value: 1 }), 1, { value: 2 });
            }),
        'Reflect',
        {
          defineProperty: function defineProperty(target, propertyKey, attributes) {
            anObject(target);
            propertyKey = toPrimitive(propertyKey, true);
            anObject(attributes);
            try {
              dP.f(target, propertyKey, attributes);
              return true;
            } catch (e) {
              return false;
            }
          },
        }
      );

      /***/
    },
    /* 497 */
    /***/ function (module, exports, __webpack_require__) {
      // 26.1.4 Reflect.deleteProperty(target, propertyKey)
      var $export = __webpack_require__(0),
        gOPD = __webpack_require__(30).f,
        anObject = __webpack_require__(5);

      $export($export.S, 'Reflect', {
        deleteProperty: function deleteProperty(target, propertyKey) {
          var desc = gOPD(anObject(target), propertyKey);
          return desc && !desc.configurable ? false : delete target[propertyKey];
        },
      });

      /***/
    },
    /* 498 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';

      // 26.1.5 Reflect.enumerate(target)
      var $export = __webpack_require__(0),
        anObject = __webpack_require__(5);
      var Enumerate = function (iterated) {
        this._t = anObject(iterated); // target
        this._i = 0; // next index
        var keys = (this._k = []), // keys
          key;
        for (key in iterated) keys.push(key);
      };
      __webpack_require__(154)(Enumerate, 'Object', function () {
        var that = this,
          keys = that._k,
          key;
        do {
          if (that._i >= keys.length) return { value: undefined, done: true };
        } while (!((key = keys[that._i++]) in that._t));
        return { value: key, done: false };
      });

      $export($export.S, 'Reflect', {
        enumerate: function enumerate(target) {
          return new Enumerate(target);
        },
      });

      /***/
    },
    /* 499 */
    /***/ function (module, exports, __webpack_require__) {
      // 26.1.7 Reflect.getOwnPropertyDescriptor(target, propertyKey)
      var gOPD = __webpack_require__(30),
        $export = __webpack_require__(0),
        anObject = __webpack_require__(5);

      $export($export.S, 'Reflect', {
        getOwnPropertyDescriptor: function getOwnPropertyDescriptor(target, propertyKey) {
          return gOPD.f(anObject(target), propertyKey);
        },
      });

      /***/
    },
    /* 500 */
    /***/ function (module, exports, __webpack_require__) {
      // 26.1.8 Reflect.getPrototypeOf(target)
      var $export = __webpack_require__(0),
        getProto = __webpack_require__(31),
        anObject = __webpack_require__(5);

      $export($export.S, 'Reflect', {
        getPrototypeOf: function getPrototypeOf(target) {
          return getProto(anObject(target));
        },
      });

      /***/
    },
    /* 501 */
    /***/ function (module, exports, __webpack_require__) {
      // 26.1.6 Reflect.get(target, propertyKey [, receiver])
      var gOPD = __webpack_require__(30),
        getPrototypeOf = __webpack_require__(31),
        has = __webpack_require__(21),
        $export = __webpack_require__(0),
        isObject = __webpack_require__(9),
        anObject = __webpack_require__(5);

      function get(target, propertyKey /*, receiver*/) {
        var receiver = arguments.length < 3 ? target : arguments[2],
          desc,
          proto;
        if (anObject(target) === receiver) return target[propertyKey];
        if ((desc = gOPD.f(target, propertyKey)))
          return has(desc, 'value')
            ? desc.value
            : desc.get !== undefined
            ? desc.get.call(receiver)
            : undefined;
        if (isObject((proto = getPrototypeOf(target)))) return get(proto, propertyKey, receiver);
      }

      $export($export.S, 'Reflect', { get: get });

      /***/
    },
    /* 502 */
    /***/ function (module, exports, __webpack_require__) {
      // 26.1.9 Reflect.has(target, propertyKey)
      var $export = __webpack_require__(0);

      $export($export.S, 'Reflect', {
        has: function has(target, propertyKey) {
          return propertyKey in target;
        },
      });

      /***/
    },
    /* 503 */
    /***/ function (module, exports, __webpack_require__) {
      // 26.1.10 Reflect.isExtensible(target)
      var $export = __webpack_require__(0),
        anObject = __webpack_require__(5),
        $isExtensible = Object.isExtensible;

      $export($export.S, 'Reflect', {
        isExtensible: function isExtensible(target) {
          anObject(target);
          return $isExtensible ? $isExtensible(target) : true;
        },
      });

      /***/
    },
    /* 504 */
    /***/ function (module, exports, __webpack_require__) {
      // 26.1.11 Reflect.ownKeys(target)
      var $export = __webpack_require__(0);

      $export($export.S, 'Reflect', { ownKeys: __webpack_require__(247) });

      /***/
    },
    /* 505 */
    /***/ function (module, exports, __webpack_require__) {
      // 26.1.12 Reflect.preventExtensions(target)
      var $export = __webpack_require__(0),
        anObject = __webpack_require__(5),
        $preventExtensions = Object.preventExtensions;

      $export($export.S, 'Reflect', {
        preventExtensions: function preventExtensions(target) {
          anObject(target);
          try {
            if ($preventExtensions) $preventExtensions(target);
            return true;
          } catch (e) {
            return false;
          }
        },
      });

      /***/
    },
    /* 506 */
    /***/ function (module, exports, __webpack_require__) {
      // 26.1.14 Reflect.setPrototypeOf(target, proto)
      var $export = __webpack_require__(0),
        setProto = __webpack_require__(159);

      if (setProto)
        $export($export.S, 'Reflect', {
          setPrototypeOf: function setPrototypeOf(target, proto) {
            setProto.check(target, proto);
            try {
              setProto.set(target, proto);
              return true;
            } catch (e) {
              return false;
            }
          },
        });

      /***/
    },
    /* 507 */
    /***/ function (module, exports, __webpack_require__) {
      // 26.1.13 Reflect.set(target, propertyKey, V [, receiver])
      var dP = __webpack_require__(14),
        gOPD = __webpack_require__(30),
        getPrototypeOf = __webpack_require__(31),
        has = __webpack_require__(21),
        $export = __webpack_require__(0),
        createDesc = __webpack_require__(51),
        anObject = __webpack_require__(5),
        isObject = __webpack_require__(9);

      function set(target, propertyKey, V /*, receiver*/) {
        var receiver = arguments.length < 4 ? target : arguments[3],
          ownDesc = gOPD.f(anObject(target), propertyKey),
          existingDescriptor,
          proto;
        if (!ownDesc) {
          if (isObject((proto = getPrototypeOf(target)))) {
            return set(proto, propertyKey, V, receiver);
          }
          ownDesc = createDesc(0);
        }
        if (has(ownDesc, 'value')) {
          if (ownDesc.writable === false || !isObject(receiver)) return false;
          existingDescriptor = gOPD.f(receiver, propertyKey) || createDesc(0);
          existingDescriptor.value = V;
          dP.f(receiver, propertyKey, existingDescriptor);
          return true;
        }
        return ownDesc.set === undefined ? false : (ownDesc.set.call(receiver, V), true);
      }

      $export($export.S, 'Reflect', { set: set });

      /***/
    },
    /* 508 */
    /***/ function (module, exports, __webpack_require__) {
      var global = __webpack_require__(6),
        inheritIfRequired = __webpack_require__(151),
        dP = __webpack_require__(14).f,
        gOPN = __webpack_require__(62).f,
        isRegExp = __webpack_require__(111),
        $flags = __webpack_require__(109),
        $RegExp = global.RegExp,
        Base = $RegExp,
        proto = $RegExp.prototype,
        re1 = /a/g,
        re2 = /a/g,
        // "new" creates a new object, old webkit buggy here
        CORRECT_NEW = new $RegExp(re1) !== re1;

      if (
        __webpack_require__(13) &&
        (!CORRECT_NEW ||
          __webpack_require__(7)(function () {
            re2[__webpack_require__(10)('match')] = false;
            // RegExp constructor can alter flags and IsRegExp works correct with @@match
            return $RegExp(re1) != re1 || $RegExp(re2) == re2 || $RegExp(re1, 'i') != '/a/i';
          }))
      ) {
        $RegExp = function RegExp(p, f) {
          var tiRE = this instanceof $RegExp,
            piRE = isRegExp(p),
            fiU = f === undefined;
          return !tiRE && piRE && p.constructor === $RegExp && fiU
            ? p
            : inheritIfRequired(
                CORRECT_NEW
                  ? new Base(piRE && !fiU ? p.source : p, f)
                  : Base(
                      (piRE = p instanceof $RegExp) ? p.source : p,
                      piRE && fiU ? $flags.call(p) : f
                    ),
                tiRE ? this : proto,
                $RegExp
              );
        };
        var proxy = function (key) {
          key in $RegExp ||
            dP($RegExp, key, {
              configurable: true,
              get: function () {
                return Base[key];
              },
              set: function (it) {
                Base[key] = it;
              },
            });
        };
        for (var keys = gOPN(Base), i = 0; keys.length > i; ) proxy(keys[i++]);
        proto.constructor = $RegExp;
        $RegExp.prototype = proto;
        __webpack_require__(25)(global, 'RegExp', $RegExp);
      }

      __webpack_require__(65)('RegExp');

      /***/
    },
    /* 509 */
    /***/ function (module, exports, __webpack_require__) {
      // @@match logic
      __webpack_require__(108)('match', 1, function (defined, MATCH, $match) {
        // 21.1.3.11 String.prototype.match(regexp)
        return [
          function match(regexp) {
            'use strict';
            var O = defined(this),
              fn = regexp == undefined ? undefined : regexp[MATCH];
            return fn !== undefined ? fn.call(regexp, O) : new RegExp(regexp)[MATCH](String(O));
          },
          $match,
        ];
      });

      /***/
    },
    /* 510 */
    /***/ function (module, exports, __webpack_require__) {
      // @@replace logic
      __webpack_require__(108)('replace', 2, function (defined, REPLACE, $replace) {
        // 21.1.3.14 String.prototype.replace(searchValue, replaceValue)
        return [
          function replace(searchValue, replaceValue) {
            'use strict';
            var O = defined(this),
              fn = searchValue == undefined ? undefined : searchValue[REPLACE];
            return fn !== undefined
              ? fn.call(searchValue, O, replaceValue)
              : $replace.call(String(O), searchValue, replaceValue);
          },
          $replace,
        ];
      });

      /***/
    },
    /* 511 */
    /***/ function (module, exports, __webpack_require__) {
      // @@search logic
      __webpack_require__(108)('search', 1, function (defined, SEARCH, $search) {
        // 21.1.3.15 String.prototype.search(regexp)
        return [
          function search(regexp) {
            'use strict';
            var O = defined(this),
              fn = regexp == undefined ? undefined : regexp[SEARCH];
            return fn !== undefined ? fn.call(regexp, O) : new RegExp(regexp)[SEARCH](String(O));
          },
          $search,
        ];
      });

      /***/
    },
    /* 512 */
    /***/ function (module, exports, __webpack_require__) {
      // @@split logic
      __webpack_require__(108)('split', 2, function (defined, SPLIT, $split) {
        'use strict';
        var isRegExp = __webpack_require__(111),
          _split = $split,
          $push = [].push,
          $SPLIT = 'split',
          LENGTH = 'length',
          LAST_INDEX = 'lastIndex';
        if (
          'abbc'[$SPLIT](/(b)*/)[1] == 'c' ||
          'test'[$SPLIT](/(?:)/, -1)[LENGTH] != 4 ||
          'ab'[$SPLIT](/(?:ab)*/)[LENGTH] != 2 ||
          '.'[$SPLIT](/(.?)(.?)/)[LENGTH] != 4 ||
          '.'[$SPLIT](/()()/)[LENGTH] > 1 ||
          ''[$SPLIT](/.?/)[LENGTH]
        ) {
          var NPCG = /()??/.exec('')[1] === undefined; // nonparticipating capturing group
          // based on es5-shim implementation, need to rework it
          $split = function (separator, limit) {
            var string = String(this);
            if (separator === undefined && limit === 0) return [];
            // If `separator` is not a regex, use native split
            if (!isRegExp(separator)) return _split.call(string, separator, limit);
            var output = [];
            var flags =
              (separator.ignoreCase ? 'i' : '') +
              (separator.multiline ? 'm' : '') +
              (separator.unicode ? 'u' : '') +
              (separator.sticky ? 'y' : '');
            var lastLastIndex = 0;
            var splitLimit = limit === undefined ? 4294967295 : limit >>> 0;
            // Make `global` and avoid `lastIndex` issues by working with a copy
            var separatorCopy = new RegExp(separator.source, flags + 'g');
            var separator2, match, lastIndex, lastLength, i;
            // Doesn't need flags gy, but they don't hurt
            if (!NPCG) separator2 = new RegExp('^' + separatorCopy.source + '$(?!\\s)', flags);
            while ((match = separatorCopy.exec(string))) {
              // `separatorCopy.lastIndex` is not reliable cross-browser
              lastIndex = match.index + match[0][LENGTH];
              if (lastIndex > lastLastIndex) {
                output.push(string.slice(lastLastIndex, match.index));
                // Fix browsers whose `exec` methods don't consistently return `undefined` for NPCG
                if (!NPCG && match[LENGTH] > 1)
                  match[0].replace(separator2, function () {
                    for (i = 1; i < arguments[LENGTH] - 2; i++)
                      if (arguments[i] === undefined) match[i] = undefined;
                  });
                if (match[LENGTH] > 1 && match.index < string[LENGTH])
                  $push.apply(output, match.slice(1));
                lastLength = match[0][LENGTH];
                lastLastIndex = lastIndex;
                if (output[LENGTH] >= splitLimit) break;
              }
              if (separatorCopy[LAST_INDEX] === match.index) separatorCopy[LAST_INDEX]++; // Avoid an infinite loop
            }
            if (lastLastIndex === string[LENGTH]) {
              if (lastLength || !separatorCopy.test('')) output.push('');
            } else output.push(string.slice(lastLastIndex));
            return output[LENGTH] > splitLimit ? output.slice(0, splitLimit) : output;
          };
          // Chakra, V8
        } else if ('0'[$SPLIT](undefined, 0)[LENGTH]) {
          $split = function (separator, limit) {
            return separator === undefined && limit === 0
              ? []
              : _split.call(this, separator, limit);
          };
        }
        // 21.1.3.17 String.prototype.split(separator, limit)
        return [
          function split(separator, limit) {
            var O = defined(this),
              fn = separator == undefined ? undefined : separator[SPLIT];
            return fn !== undefined
              ? fn.call(separator, O, limit)
              : $split.call(String(O), separator, limit);
          },
          $split,
        ];
      });

      /***/
    },
    /* 513 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';

      __webpack_require__(254);
      var anObject = __webpack_require__(5),
        $flags = __webpack_require__(109),
        DESCRIPTORS = __webpack_require__(13),
        TO_STRING = 'toString',
        $toString = /./[TO_STRING];

      var define = function (fn) {
        __webpack_require__(25)(RegExp.prototype, TO_STRING, fn, true);
      };

      // 21.2.5.14 RegExp.prototype.toString()
      if (
        __webpack_require__(7)(function () {
          return $toString.call({ source: 'a', flags: 'b' }) != '/a/b';
        })
      ) {
        define(function toString() {
          var R = anObject(this);
          return '/'.concat(
            R.source,
            '/',
            'flags' in R
              ? R.flags
              : !DESCRIPTORS && R instanceof RegExp
              ? $flags.call(R)
              : undefined
          );
        });
        // FF44- RegExp#toString has a wrong name
      } else if ($toString.name != TO_STRING) {
        define(function toString() {
          return $toString.call(this);
        });
      }

      /***/
    },
    /* 514 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';

      // B.2.3.2 String.prototype.anchor(name)
      __webpack_require__(26)('anchor', function (createHTML) {
        return function anchor(name) {
          return createHTML(this, 'a', 'name', name);
        };
      });

      /***/
    },
    /* 515 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';

      // B.2.3.3 String.prototype.big()
      __webpack_require__(26)('big', function (createHTML) {
        return function big() {
          return createHTML(this, 'big', '', '');
        };
      });

      /***/
    },
    /* 516 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';

      // B.2.3.4 String.prototype.blink()
      __webpack_require__(26)('blink', function (createHTML) {
        return function blink() {
          return createHTML(this, 'blink', '', '');
        };
      });

      /***/
    },
    /* 517 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';

      // B.2.3.5 String.prototype.bold()
      __webpack_require__(26)('bold', function (createHTML) {
        return function bold() {
          return createHTML(this, 'b', '', '');
        };
      });

      /***/
    },
    /* 518 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';

      var $export = __webpack_require__(0),
        $at = __webpack_require__(162)(false);
      $export($export.P, 'String', {
        // 21.1.3.3 String.prototype.codePointAt(pos)
        codePointAt: function codePointAt(pos) {
          return $at(this, pos);
        },
      });

      /***/
    },
    /* 519 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';
      // 21.1.3.6 String.prototype.endsWith(searchString [, endPosition])

      var $export = __webpack_require__(0),
        toLength = __webpack_require__(17),
        context = __webpack_require__(163),
        ENDS_WITH = 'endsWith',
        $endsWith = ''[ENDS_WITH];

      $export($export.P + $export.F * __webpack_require__(149)(ENDS_WITH), 'String', {
        endsWith: function endsWith(searchString /*, endPosition = @length */) {
          var that = context(this, searchString, ENDS_WITH),
            endPosition = arguments.length > 1 ? arguments[1] : undefined,
            len = toLength(that.length),
            end = endPosition === undefined ? len : Math.min(toLength(endPosition), len),
            search = String(searchString);
          return $endsWith
            ? $endsWith.call(that, search, end)
            : that.slice(end - search.length, end) === search;
        },
      });

      /***/
    },
    /* 520 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';

      // B.2.3.6 String.prototype.fixed()
      __webpack_require__(26)('fixed', function (createHTML) {
        return function fixed() {
          return createHTML(this, 'tt', '', '');
        };
      });

      /***/
    },
    /* 521 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';

      // B.2.3.7 String.prototype.fontcolor(color)
      __webpack_require__(26)('fontcolor', function (createHTML) {
        return function fontcolor(color) {
          return createHTML(this, 'font', 'color', color);
        };
      });

      /***/
    },
    /* 522 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';

      // B.2.3.8 String.prototype.fontsize(size)
      __webpack_require__(26)('fontsize', function (createHTML) {
        return function fontsize(size) {
          return createHTML(this, 'font', 'size', size);
        };
      });

      /***/
    },
    /* 523 */
    /***/ function (module, exports, __webpack_require__) {
      var $export = __webpack_require__(0),
        toIndex = __webpack_require__(66),
        fromCharCode = String.fromCharCode,
        $fromCodePoint = String.fromCodePoint;

      // length should be 1, old FF problem
      $export($export.S + $export.F * (!!$fromCodePoint && $fromCodePoint.length != 1), 'String', {
        // 21.1.2.2 String.fromCodePoint(...codePoints)
        fromCodePoint: function fromCodePoint(x) {
          // eslint-disable-line no-unused-vars
          var res = [],
            aLen = arguments.length,
            i = 0,
            code;
          while (aLen > i) {
            code = +arguments[i++];
            if (toIndex(code, 0x10ffff) !== code)
              throw RangeError(code + ' is not a valid code point');
            res.push(
              code < 0x10000
                ? fromCharCode(code)
                : fromCharCode(((code -= 0x10000) >> 10) + 0xd800, (code % 0x400) + 0xdc00)
            );
          }
          return res.join('');
        },
      });

      /***/
    },
    /* 524 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';
      // 21.1.3.7 String.prototype.includes(searchString, position = 0)

      var $export = __webpack_require__(0),
        context = __webpack_require__(163),
        INCLUDES = 'includes';

      $export($export.P + $export.F * __webpack_require__(149)(INCLUDES), 'String', {
        includes: function includes(searchString /*, position = 0 */) {
          return !!~context(this, searchString, INCLUDES).indexOf(
            searchString,
            arguments.length > 1 ? arguments[1] : undefined
          );
        },
      });

      /***/
    },
    /* 525 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';

      // B.2.3.9 String.prototype.italics()
      __webpack_require__(26)('italics', function (createHTML) {
        return function italics() {
          return createHTML(this, 'i', '', '');
        };
      });

      /***/
    },
    /* 526 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';

      var $at = __webpack_require__(162)(true);

      // 21.1.3.27 String.prototype[@@iterator]()
      __webpack_require__(155)(
        String,
        'String',
        function (iterated) {
          this._t = String(iterated); // target
          this._i = 0; // next index
          // 21.1.5.2.1 %StringIteratorPrototype%.next()
        },
        function () {
          var O = this._t,
            index = this._i,
            point;
          if (index >= O.length) return { value: undefined, done: true };
          point = $at(O, index);
          this._i += point.length;
          return { value: point, done: false };
        }
      );

      /***/
    },
    /* 527 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';

      // B.2.3.10 String.prototype.link(url)
      __webpack_require__(26)('link', function (createHTML) {
        return function link(url) {
          return createHTML(this, 'a', 'href', url);
        };
      });

      /***/
    },
    /* 528 */
    /***/ function (module, exports, __webpack_require__) {
      var $export = __webpack_require__(0),
        toIObject = __webpack_require__(27),
        toLength = __webpack_require__(17);

      $export($export.S, 'String', {
        // 21.1.2.4 String.raw(callSite, ...substitutions)
        raw: function raw(callSite) {
          var tpl = toIObject(callSite.raw),
            len = toLength(tpl.length),
            aLen = arguments.length,
            res = [],
            i = 0;
          while (len > i) {
            res.push(String(tpl[i++]));
            if (i < aLen) res.push(String(arguments[i]));
          }
          return res.join('');
        },
      });

      /***/
    },
    /* 529 */
    /***/ function (module, exports, __webpack_require__) {
      var $export = __webpack_require__(0);

      $export($export.P, 'String', {
        // 21.1.3.13 String.prototype.repeat(count)
        repeat: __webpack_require__(164),
      });

      /***/
    },
    /* 530 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';

      // B.2.3.11 String.prototype.small()
      __webpack_require__(26)('small', function (createHTML) {
        return function small() {
          return createHTML(this, 'small', '', '');
        };
      });

      /***/
    },
    /* 531 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';
      // 21.1.3.18 String.prototype.startsWith(searchString [, position ])

      var $export = __webpack_require__(0),
        toLength = __webpack_require__(17),
        context = __webpack_require__(163),
        STARTS_WITH = 'startsWith',
        $startsWith = ''[STARTS_WITH];

      $export($export.P + $export.F * __webpack_require__(149)(STARTS_WITH), 'String', {
        startsWith: function startsWith(searchString /*, position = 0 */) {
          var that = context(this, searchString, STARTS_WITH),
            index = toLength(
              Math.min(arguments.length > 1 ? arguments[1] : undefined, that.length)
            ),
            search = String(searchString);
          return $startsWith
            ? $startsWith.call(that, search, index)
            : that.slice(index, index + search.length) === search;
        },
      });

      /***/
    },
    /* 532 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';

      // B.2.3.12 String.prototype.strike()
      __webpack_require__(26)('strike', function (createHTML) {
        return function strike() {
          return createHTML(this, 'strike', '', '');
        };
      });

      /***/
    },
    /* 533 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';

      // B.2.3.13 String.prototype.sub()
      __webpack_require__(26)('sub', function (createHTML) {
        return function sub() {
          return createHTML(this, 'sub', '', '');
        };
      });

      /***/
    },
    /* 534 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';

      // B.2.3.14 String.prototype.sup()
      __webpack_require__(26)('sup', function (createHTML) {
        return function sup() {
          return createHTML(this, 'sup', '', '');
        };
      });

      /***/
    },
    /* 535 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';

      // 21.1.3.25 String.prototype.trim()
      __webpack_require__(81)('trim', function ($trim) {
        return function trim() {
          return $trim(this, 3);
        };
      });

      /***/
    },
    /* 536 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';

      // ECMAScript 6 symbols shim
      var global = __webpack_require__(6),
        has = __webpack_require__(21),
        DESCRIPTORS = __webpack_require__(13),
        $export = __webpack_require__(0),
        redefine = __webpack_require__(25),
        META = __webpack_require__(50).KEY,
        $fails = __webpack_require__(7),
        shared = __webpack_require__(115),
        setToStringTag = __webpack_require__(80),
        uid = __webpack_require__(67),
        wks = __webpack_require__(10),
        wksExt = __webpack_require__(252),
        wksDefine = __webpack_require__(168),
        keyOf = __webpack_require__(412),
        enumKeys = __webpack_require__(411),
        isArray = __webpack_require__(153),
        anObject = __webpack_require__(5),
        toIObject = __webpack_require__(27),
        toPrimitive = __webpack_require__(39),
        createDesc = __webpack_require__(51),
        _create = __webpack_require__(61),
        gOPNExt = __webpack_require__(244),
        $GOPD = __webpack_require__(30),
        $DP = __webpack_require__(14),
        $keys = __webpack_require__(63),
        gOPD = $GOPD.f,
        dP = $DP.f,
        gOPN = gOPNExt.f,
        $Symbol = global.Symbol,
        $JSON = global.JSON,
        _stringify = $JSON && $JSON.stringify,
        PROTOTYPE = 'prototype',
        HIDDEN = wks('_hidden'),
        TO_PRIMITIVE = wks('toPrimitive'),
        isEnum = {}.propertyIsEnumerable,
        SymbolRegistry = shared('symbol-registry'),
        AllSymbols = shared('symbols'),
        OPSymbols = shared('op-symbols'),
        ObjectProto = Object[PROTOTYPE],
        USE_NATIVE = typeof $Symbol == 'function',
        QObject = global.QObject;
      // Don't use setters in Qt Script, https://github.com/zloirock/core-js/issues/173
      var setter = !QObject || !QObject[PROTOTYPE] || !QObject[PROTOTYPE].findChild;

      // fallback for old Android, https://code.google.com/p/v8/issues/detail?id=687
      var setSymbolDesc =
        DESCRIPTORS &&
        $fails(function () {
          return (
            _create(
              dP({}, 'a', {
                get: function () {
                  return dP(this, 'a', { value: 7 }).a;
                },
              })
            ).a != 7
          );
        })
          ? function (it, key, D) {
              var protoDesc = gOPD(ObjectProto, key);
              if (protoDesc) delete ObjectProto[key];
              dP(it, key, D);
              if (protoDesc && it !== ObjectProto) dP(ObjectProto, key, protoDesc);
            }
          : dP;

      var wrap = function (tag) {
        var sym = (AllSymbols[tag] = _create($Symbol[PROTOTYPE]));
        sym._k = tag;
        return sym;
      };

      var isSymbol =
        USE_NATIVE && typeof $Symbol.iterator == 'symbol'
          ? function (it) {
              return typeof it == 'symbol';
            }
          : function (it) {
              return it instanceof $Symbol;
            };

      var $defineProperty = function defineProperty(it, key, D) {
        if (it === ObjectProto) $defineProperty(OPSymbols, key, D);
        anObject(it);
        key = toPrimitive(key, true);
        anObject(D);
        if (has(AllSymbols, key)) {
          if (!D.enumerable) {
            if (!has(it, HIDDEN)) dP(it, HIDDEN, createDesc(1, {}));
            it[HIDDEN][key] = true;
          } else {
            if (has(it, HIDDEN) && it[HIDDEN][key]) it[HIDDEN][key] = false;
            D = _create(D, { enumerable: createDesc(0, false) });
          }
          return setSymbolDesc(it, key, D);
        }
        return dP(it, key, D);
      };
      var $defineProperties = function defineProperties(it, P) {
        anObject(it);
        var keys = enumKeys((P = toIObject(P))),
          i = 0,
          l = keys.length,
          key;
        while (l > i) $defineProperty(it, (key = keys[i++]), P[key]);
        return it;
      };
      var $create = function create(it, P) {
        return P === undefined ? _create(it) : $defineProperties(_create(it), P);
      };
      var $propertyIsEnumerable = function propertyIsEnumerable(key) {
        var E = isEnum.call(this, (key = toPrimitive(key, true)));
        if (this === ObjectProto && has(AllSymbols, key) && !has(OPSymbols, key)) return false;
        return E ||
          !has(this, key) ||
          !has(AllSymbols, key) ||
          (has(this, HIDDEN) && this[HIDDEN][key])
          ? E
          : true;
      };
      var $getOwnPropertyDescriptor = function getOwnPropertyDescriptor(it, key) {
        it = toIObject(it);
        key = toPrimitive(key, true);
        if (it === ObjectProto && has(AllSymbols, key) && !has(OPSymbols, key)) return;
        var D = gOPD(it, key);
        if (D && has(AllSymbols, key) && !(has(it, HIDDEN) && it[HIDDEN][key])) D.enumerable = true;
        return D;
      };
      var $getOwnPropertyNames = function getOwnPropertyNames(it) {
        var names = gOPN(toIObject(it)),
          result = [],
          i = 0,
          key;
        while (names.length > i) {
          if (!has(AllSymbols, (key = names[i++])) && key != HIDDEN && key != META)
            result.push(key);
        }
        return result;
      };
      var $getOwnPropertySymbols = function getOwnPropertySymbols(it) {
        var IS_OP = it === ObjectProto,
          names = gOPN(IS_OP ? OPSymbols : toIObject(it)),
          result = [],
          i = 0,
          key;
        while (names.length > i) {
          if (has(AllSymbols, (key = names[i++])) && (IS_OP ? has(ObjectProto, key) : true))
            result.push(AllSymbols[key]);
        }
        return result;
      };

      // 19.4.1.1 Symbol([description])
      if (!USE_NATIVE) {
        $Symbol = function Symbol() {
          if (this instanceof $Symbol) throw TypeError('Symbol is not a constructor!');
          var tag = uid(arguments.length > 0 ? arguments[0] : undefined);
          var $set = function (value) {
            if (this === ObjectProto) $set.call(OPSymbols, value);
            if (has(this, HIDDEN) && has(this[HIDDEN], tag)) this[HIDDEN][tag] = false;
            setSymbolDesc(this, tag, createDesc(1, value));
          };
          if (DESCRIPTORS && setter)
            setSymbolDesc(ObjectProto, tag, { configurable: true, set: $set });
          return wrap(tag);
        };
        redefine($Symbol[PROTOTYPE], 'toString', function toString() {
          return this._k;
        });

        $GOPD.f = $getOwnPropertyDescriptor;
        $DP.f = $defineProperty;
        __webpack_require__(62).f = gOPNExt.f = $getOwnPropertyNames;
        __webpack_require__(90).f = $propertyIsEnumerable;
        __webpack_require__(114).f = $getOwnPropertySymbols;

        if (DESCRIPTORS && !__webpack_require__(60)) {
          redefine(ObjectProto, 'propertyIsEnumerable', $propertyIsEnumerable, true);
        }

        wksExt.f = function (name) {
          return wrap(wks(name));
        };
      }

      $export($export.G + $export.W + $export.F * !USE_NATIVE, { Symbol: $Symbol });

      for (
        var symbols = // 19.4.2.2, 19.4.2.3, 19.4.2.4, 19.4.2.6, 19.4.2.8, 19.4.2.9, 19.4.2.10, 19.4.2.11, 19.4.2.12, 19.4.2.13, 19.4.2.14
          'hasInstance,isConcatSpreadable,iterator,match,replace,search,species,split,toPrimitive,toStringTag,unscopables'.split(
            ','
          ),
          i = 0;
        symbols.length > i;

      )
        wks(symbols[i++]);

      for (var symbols = $keys(wks.store), i = 0; symbols.length > i; ) wksDefine(symbols[i++]);

      $export($export.S + $export.F * !USE_NATIVE, 'Symbol', {
        // 19.4.2.1 Symbol.for(key)
        for: function (key) {
          return has(SymbolRegistry, (key += ''))
            ? SymbolRegistry[key]
            : (SymbolRegistry[key] = $Symbol(key));
        },
        // 19.4.2.5 Symbol.keyFor(sym)
        keyFor: function keyFor(key) {
          if (isSymbol(key)) return keyOf(SymbolRegistry, key);
          throw TypeError(key + ' is not a symbol!');
        },
        useSetter: function () {
          setter = true;
        },
        useSimple: function () {
          setter = false;
        },
      });

      $export($export.S + $export.F * !USE_NATIVE, 'Object', {
        // 19.1.2.2 Object.create(O [, Properties])
        create: $create,
        // 19.1.2.4 Object.defineProperty(O, P, Attributes)
        defineProperty: $defineProperty,
        // 19.1.2.3 Object.defineProperties(O, Properties)
        defineProperties: $defineProperties,
        // 19.1.2.6 Object.getOwnPropertyDescriptor(O, P)
        getOwnPropertyDescriptor: $getOwnPropertyDescriptor,
        // 19.1.2.7 Object.getOwnPropertyNames(O)
        getOwnPropertyNames: $getOwnPropertyNames,
        // 19.1.2.8 Object.getOwnPropertySymbols(O)
        getOwnPropertySymbols: $getOwnPropertySymbols,
      });

      // 24.3.2 JSON.stringify(value [, replacer [, space]])
      $JSON &&
        $export(
          $export.S +
            $export.F *
              (!USE_NATIVE ||
                $fails(function () {
                  var S = $Symbol();
                  // MS Edge converts symbol values to JSON as {}
                  // WebKit converts symbol values to JSON as null
                  // V8 throws on boxed symbols
                  return (
                    _stringify([S]) != '[null]' ||
                    _stringify({ a: S }) != '{}' ||
                    _stringify(Object(S)) != '{}'
                  );
                })),
          'JSON',
          {
            stringify: function stringify(it) {
              if (it === undefined || isSymbol(it)) return; // IE8 returns string on undefined
              var args = [it],
                i = 1,
                replacer,
                $replacer;
              while (arguments.length > i) args.push(arguments[i++]);
              replacer = args[1];
              if (typeof replacer == 'function') $replacer = replacer;
              if ($replacer || !isArray(replacer))
                replacer = function (key, value) {
                  if ($replacer) value = $replacer.call(this, key, value);
                  if (!isSymbol(value)) return value;
                };
              args[1] = replacer;
              return _stringify.apply($JSON, args);
            },
          }
        );

      // 19.4.3.4 Symbol.prototype[@@toPrimitive](hint)
      $Symbol[PROTOTYPE][TO_PRIMITIVE] ||
        __webpack_require__(24)($Symbol[PROTOTYPE], TO_PRIMITIVE, $Symbol[PROTOTYPE].valueOf);
      // 19.4.3.5 Symbol.prototype[@@toStringTag]
      setToStringTag($Symbol, 'Symbol');
      // 20.2.1.9 Math[@@toStringTag]
      setToStringTag(Math, 'Math', true);
      // 24.3.3 JSON[@@toStringTag]
      setToStringTag(global.JSON, 'JSON', true);

      /***/
    },
    /* 537 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';

      var $export = __webpack_require__(0),
        $typed = __webpack_require__(116),
        buffer = __webpack_require__(167),
        anObject = __webpack_require__(5),
        toIndex = __webpack_require__(66),
        toLength = __webpack_require__(17),
        isObject = __webpack_require__(9),
        ArrayBuffer = __webpack_require__(6).ArrayBuffer,
        speciesConstructor = __webpack_require__(161),
        $ArrayBuffer = buffer.ArrayBuffer,
        $DataView = buffer.DataView,
        $isView = $typed.ABV && ArrayBuffer.isView,
        $slice = $ArrayBuffer.prototype.slice,
        VIEW = $typed.VIEW,
        ARRAY_BUFFER = 'ArrayBuffer';

      $export($export.G + $export.W + $export.F * (ArrayBuffer !== $ArrayBuffer), {
        ArrayBuffer: $ArrayBuffer,
      });

      $export($export.S + $export.F * !$typed.CONSTR, ARRAY_BUFFER, {
        // 24.1.3.1 ArrayBuffer.isView(arg)
        isView: function isView(it) {
          return ($isView && $isView(it)) || (isObject(it) && VIEW in it);
        },
      });

      $export(
        $export.P +
          $export.U +
          $export.F *
            __webpack_require__(7)(function () {
              return !new $ArrayBuffer(2).slice(1, undefined).byteLength;
            }),
        ARRAY_BUFFER,
        {
          // 24.1.4.3 ArrayBuffer.prototype.slice(start, end)
          slice: function slice(start, end) {
            if ($slice !== undefined && end === undefined)
              return $slice.call(anObject(this), start); // FF fix
            var len = anObject(this).byteLength,
              first = toIndex(start, len),
              final = toIndex(end === undefined ? len : end, len),
              result = new (speciesConstructor(this, $ArrayBuffer))(toLength(final - first)),
              viewS = new $DataView(this),
              viewT = new $DataView(result),
              index = 0;
            while (first < final) {
              viewT.setUint8(index++, viewS.getUint8(first++));
            }
            return result;
          },
        }
      );

      __webpack_require__(65)(ARRAY_BUFFER);

      /***/
    },
    /* 538 */
    /***/ function (module, exports, __webpack_require__) {
      var $export = __webpack_require__(0);
      $export($export.G + $export.W + $export.F * !__webpack_require__(116).ABV, {
        DataView: __webpack_require__(167).DataView,
      });

      /***/
    },
    /* 539 */
    /***/ function (module, exports, __webpack_require__) {
      __webpack_require__(47)('Float32', 4, function (init) {
        return function Float32Array(data, byteOffset, length) {
          return init(this, data, byteOffset, length);
        };
      });

      /***/
    },
    /* 540 */
    /***/ function (module, exports, __webpack_require__) {
      __webpack_require__(47)('Float64', 8, function (init) {
        return function Float64Array(data, byteOffset, length) {
          return init(this, data, byteOffset, length);
        };
      });

      /***/
    },
    /* 541 */
    /***/ function (module, exports, __webpack_require__) {
      __webpack_require__(47)('Int16', 2, function (init) {
        return function Int16Array(data, byteOffset, length) {
          return init(this, data, byteOffset, length);
        };
      });

      /***/
    },
    /* 542 */
    /***/ function (module, exports, __webpack_require__) {
      __webpack_require__(47)('Int32', 4, function (init) {
        return function Int32Array(data, byteOffset, length) {
          return init(this, data, byteOffset, length);
        };
      });

      /***/
    },
    /* 543 */
    /***/ function (module, exports, __webpack_require__) {
      __webpack_require__(47)('Int8', 1, function (init) {
        return function Int8Array(data, byteOffset, length) {
          return init(this, data, byteOffset, length);
        };
      });

      /***/
    },
    /* 544 */
    /***/ function (module, exports, __webpack_require__) {
      __webpack_require__(47)('Uint16', 2, function (init) {
        return function Uint16Array(data, byteOffset, length) {
          return init(this, data, byteOffset, length);
        };
      });

      /***/
    },
    /* 545 */
    /***/ function (module, exports, __webpack_require__) {
      __webpack_require__(47)('Uint32', 4, function (init) {
        return function Uint32Array(data, byteOffset, length) {
          return init(this, data, byteOffset, length);
        };
      });

      /***/
    },
    /* 546 */
    /***/ function (module, exports, __webpack_require__) {
      __webpack_require__(47)('Uint8', 1, function (init) {
        return function Uint8Array(data, byteOffset, length) {
          return init(this, data, byteOffset, length);
        };
      });

      /***/
    },
    /* 547 */
    /***/ function (module, exports, __webpack_require__) {
      __webpack_require__(47)(
        'Uint8',
        1,
        function (init) {
          return function Uint8ClampedArray(data, byteOffset, length) {
            return init(this, data, byteOffset, length);
          };
        },
        true
      );

      /***/
    },
    /* 548 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';

      var weak = __webpack_require__(236);

      // 23.4 WeakSet Objects
      __webpack_require__(107)(
        'WeakSet',
        function (get) {
          return function WeakSet() {
            return get(this, arguments.length > 0 ? arguments[0] : undefined);
          };
        },
        {
          // 23.4.3.1 WeakSet.prototype.add(value)
          add: function add(value) {
            return weak.def(this, value, true);
          },
        },
        weak,
        false,
        true
      );

      /***/
    },
    /* 549 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';

      // https://github.com/tc39/Array.prototype.includes
      var $export = __webpack_require__(0),
        $includes = __webpack_require__(106)(true);

      $export($export.P, 'Array', {
        includes: function includes(el /*, fromIndex = 0 */) {
          return $includes(this, el, arguments.length > 1 ? arguments[1] : undefined);
        },
      });

      __webpack_require__(77)('includes');

      /***/
    },
    /* 550 */
    /***/ function (module, exports, __webpack_require__) {
      // https://github.com/rwaldron/tc39-notes/blob/master/es6/2014-09/sept-25.md#510-globalasap-for-enqueuing-a-microtask
      var $export = __webpack_require__(0),
        microtask = __webpack_require__(158)(),
        process = __webpack_require__(6).process,
        isNode = __webpack_require__(34)(process) == 'process';

      $export($export.G, {
        asap: function asap(fn) {
          var domain = isNode && process.domain;
          microtask(domain ? domain.bind(fn) : fn);
        },
      });

      /***/
    },
    /* 551 */
    /***/ function (module, exports, __webpack_require__) {
      // https://github.com/ljharb/proposal-is-error
      var $export = __webpack_require__(0),
        cof = __webpack_require__(34);

      $export($export.S, 'Error', {
        isError: function isError(it) {
          return cof(it) === 'Error';
        },
      });

      /***/
    },
    /* 552 */
    /***/ function (module, exports, __webpack_require__) {
      // https://github.com/DavidBruant/Map-Set.prototype.toJSON
      var $export = __webpack_require__(0);

      $export($export.P + $export.R, 'Map', { toJSON: __webpack_require__(235)('Map') });

      /***/
    },
    /* 553 */
    /***/ function (module, exports, __webpack_require__) {
      // https://gist.github.com/BrendanEich/4294d5c212a6d2254703
      var $export = __webpack_require__(0);

      $export($export.S, 'Math', {
        iaddh: function iaddh(x0, x1, y0, y1) {
          var $x0 = x0 >>> 0,
            $x1 = x1 >>> 0,
            $y0 = y0 >>> 0;
          return (
            ($x1 + (y1 >>> 0) + ((($x0 & $y0) | (($x0 | $y0) & ~(($x0 + $y0) >>> 0))) >>> 31)) | 0
          );
        },
      });

      /***/
    },
    /* 554 */
    /***/ function (module, exports, __webpack_require__) {
      // https://gist.github.com/BrendanEich/4294d5c212a6d2254703
      var $export = __webpack_require__(0);

      $export($export.S, 'Math', {
        imulh: function imulh(u, v) {
          var UINT16 = 0xffff,
            $u = +u,
            $v = +v,
            u0 = $u & UINT16,
            v0 = $v & UINT16,
            u1 = $u >> 16,
            v1 = $v >> 16,
            t = ((u1 * v0) >>> 0) + ((u0 * v0) >>> 16);
          return u1 * v1 + (t >> 16) + ((((u0 * v1) >>> 0) + (t & UINT16)) >> 16);
        },
      });

      /***/
    },
    /* 555 */
    /***/ function (module, exports, __webpack_require__) {
      // https://gist.github.com/BrendanEich/4294d5c212a6d2254703
      var $export = __webpack_require__(0);

      $export($export.S, 'Math', {
        isubh: function isubh(x0, x1, y0, y1) {
          var $x0 = x0 >>> 0,
            $x1 = x1 >>> 0,
            $y0 = y0 >>> 0;
          return (
            ($x1 - (y1 >>> 0) - (((~$x0 & $y0) | (~($x0 ^ $y0) & (($x0 - $y0) >>> 0))) >>> 31)) | 0
          );
        },
      });

      /***/
    },
    /* 556 */
    /***/ function (module, exports, __webpack_require__) {
      // https://gist.github.com/BrendanEich/4294d5c212a6d2254703
      var $export = __webpack_require__(0);

      $export($export.S, 'Math', {
        umulh: function umulh(u, v) {
          var UINT16 = 0xffff,
            $u = +u,
            $v = +v,
            u0 = $u & UINT16,
            v0 = $v & UINT16,
            u1 = $u >>> 16,
            v1 = $v >>> 16,
            t = ((u1 * v0) >>> 0) + ((u0 * v0) >>> 16);
          return u1 * v1 + (t >>> 16) + ((((u0 * v1) >>> 0) + (t & UINT16)) >>> 16);
        },
      });

      /***/
    },
    /* 557 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';

      var $export = __webpack_require__(0),
        toObject = __webpack_require__(19),
        aFunction = __webpack_require__(23),
        $defineProperty = __webpack_require__(14);

      // B.2.2.2 Object.prototype.__defineGetter__(P, getter)
      __webpack_require__(13) &&
        $export($export.P + __webpack_require__(113), 'Object', {
          __defineGetter__: function __defineGetter__(P, getter) {
            $defineProperty.f(toObject(this), P, {
              get: aFunction(getter),
              enumerable: true,
              configurable: true,
            });
          },
        });

      /***/
    },
    /* 558 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';

      var $export = __webpack_require__(0),
        toObject = __webpack_require__(19),
        aFunction = __webpack_require__(23),
        $defineProperty = __webpack_require__(14);

      // B.2.2.3 Object.prototype.__defineSetter__(P, setter)
      __webpack_require__(13) &&
        $export($export.P + __webpack_require__(113), 'Object', {
          __defineSetter__: function __defineSetter__(P, setter) {
            $defineProperty.f(toObject(this), P, {
              set: aFunction(setter),
              enumerable: true,
              configurable: true,
            });
          },
        });

      /***/
    },
    /* 559 */
    /***/ function (module, exports, __webpack_require__) {
      // https://github.com/tc39/proposal-object-values-entries
      var $export = __webpack_require__(0),
        $entries = __webpack_require__(246)(true);

      $export($export.S, 'Object', {
        entries: function entries(it) {
          return $entries(it);
        },
      });

      /***/
    },
    /* 560 */
    /***/ function (module, exports, __webpack_require__) {
      // https://github.com/tc39/proposal-object-getownpropertydescriptors
      var $export = __webpack_require__(0),
        ownKeys = __webpack_require__(247),
        toIObject = __webpack_require__(27),
        gOPD = __webpack_require__(30),
        createProperty = __webpack_require__(146);

      $export($export.S, 'Object', {
        getOwnPropertyDescriptors: function getOwnPropertyDescriptors(object) {
          var O = toIObject(object),
            getDesc = gOPD.f,
            keys = ownKeys(O),
            result = {},
            i = 0,
            key;
          while (keys.length > i) createProperty(result, (key = keys[i++]), getDesc(O, key));
          return result;
        },
      });

      /***/
    },
    /* 561 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';

      var $export = __webpack_require__(0),
        toObject = __webpack_require__(19),
        toPrimitive = __webpack_require__(39),
        getPrototypeOf = __webpack_require__(31),
        getOwnPropertyDescriptor = __webpack_require__(30).f;

      // B.2.2.4 Object.prototype.__lookupGetter__(P)
      __webpack_require__(13) &&
        $export($export.P + __webpack_require__(113), 'Object', {
          __lookupGetter__: function __lookupGetter__(P) {
            var O = toObject(this),
              K = toPrimitive(P, true),
              D;
            do {
              if ((D = getOwnPropertyDescriptor(O, K))) return D.get;
            } while ((O = getPrototypeOf(O)));
          },
        });

      /***/
    },
    /* 562 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';

      var $export = __webpack_require__(0),
        toObject = __webpack_require__(19),
        toPrimitive = __webpack_require__(39),
        getPrototypeOf = __webpack_require__(31),
        getOwnPropertyDescriptor = __webpack_require__(30).f;

      // B.2.2.5 Object.prototype.__lookupSetter__(P)
      __webpack_require__(13) &&
        $export($export.P + __webpack_require__(113), 'Object', {
          __lookupSetter__: function __lookupSetter__(P) {
            var O = toObject(this),
              K = toPrimitive(P, true),
              D;
            do {
              if ((D = getOwnPropertyDescriptor(O, K))) return D.set;
            } while ((O = getPrototypeOf(O)));
          },
        });

      /***/
    },
    /* 563 */
    /***/ function (module, exports, __webpack_require__) {
      // https://github.com/tc39/proposal-object-values-entries
      var $export = __webpack_require__(0),
        $values = __webpack_require__(246)(false);

      $export($export.S, 'Object', {
        values: function values(it) {
          return $values(it);
        },
      });

      /***/
    },
    /* 564 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';

      // https://github.com/zenparsing/es-observable
      var $export = __webpack_require__(0),
        global = __webpack_require__(6),
        core = __webpack_require__(44),
        microtask = __webpack_require__(158)(),
        OBSERVABLE = __webpack_require__(10)('observable'),
        aFunction = __webpack_require__(23),
        anObject = __webpack_require__(5),
        anInstance = __webpack_require__(59),
        redefineAll = __webpack_require__(64),
        hide = __webpack_require__(24),
        forOf = __webpack_require__(78),
        RETURN = forOf.RETURN;

      var getMethod = function (fn) {
        return fn == null ? undefined : aFunction(fn);
      };

      var cleanupSubscription = function (subscription) {
        var cleanup = subscription._c;
        if (cleanup) {
          subscription._c = undefined;
          cleanup();
        }
      };

      var subscriptionClosed = function (subscription) {
        return subscription._o === undefined;
      };

      var closeSubscription = function (subscription) {
        if (!subscriptionClosed(subscription)) {
          subscription._o = undefined;
          cleanupSubscription(subscription);
        }
      };

      var Subscription = function (observer, subscriber) {
        anObject(observer);
        this._c = undefined;
        this._o = observer;
        observer = new SubscriptionObserver(this);
        try {
          var cleanup = subscriber(observer),
            subscription = cleanup;
          if (cleanup != null) {
            if (typeof cleanup.unsubscribe === 'function')
              cleanup = function () {
                subscription.unsubscribe();
              };
            else aFunction(cleanup);
            this._c = cleanup;
          }
        } catch (e) {
          observer.error(e);
          return;
        }
        if (subscriptionClosed(this)) cleanupSubscription(this);
      };

      Subscription.prototype = redefineAll(
        {},
        {
          unsubscribe: function unsubscribe() {
            closeSubscription(this);
          },
        }
      );

      var SubscriptionObserver = function (subscription) {
        this._s = subscription;
      };

      SubscriptionObserver.prototype = redefineAll(
        {},
        {
          next: function next(value) {
            var subscription = this._s;
            if (!subscriptionClosed(subscription)) {
              var observer = subscription._o;
              try {
                var m = getMethod(observer.next);
                if (m) return m.call(observer, value);
              } catch (e) {
                try {
                  closeSubscription(subscription);
                } finally {
                  throw e;
                }
              }
            }
          },
          error: function error(value) {
            var subscription = this._s;
            if (subscriptionClosed(subscription)) throw value;
            var observer = subscription._o;
            subscription._o = undefined;
            try {
              var m = getMethod(observer.error);
              if (!m) throw value;
              value = m.call(observer, value);
            } catch (e) {
              try {
                cleanupSubscription(subscription);
              } finally {
                throw e;
              }
            }
            cleanupSubscription(subscription);
            return value;
          },
          complete: function complete(value) {
            var subscription = this._s;
            if (!subscriptionClosed(subscription)) {
              var observer = subscription._o;
              subscription._o = undefined;
              try {
                var m = getMethod(observer.complete);
                value = m ? m.call(observer, value) : undefined;
              } catch (e) {
                try {
                  cleanupSubscription(subscription);
                } finally {
                  throw e;
                }
              }
              cleanupSubscription(subscription);
              return value;
            }
          },
        }
      );

      var $Observable = function Observable(subscriber) {
        anInstance(this, $Observable, 'Observable', '_f')._f = aFunction(subscriber);
      };

      redefineAll($Observable.prototype, {
        subscribe: function subscribe(observer) {
          return new Subscription(observer, this._f);
        },
        forEach: function forEach(fn) {
          var that = this;
          return new (core.Promise || global.Promise)(function (resolve, reject) {
            aFunction(fn);
            var subscription = that.subscribe({
              next: function (value) {
                try {
                  return fn(value);
                } catch (e) {
                  reject(e);
                  subscription.unsubscribe();
                }
              },
              error: reject,
              complete: resolve,
            });
          });
        },
      });

      redefineAll($Observable, {
        from: function from(x) {
          var C = typeof this === 'function' ? this : $Observable;
          var method = getMethod(anObject(x)[OBSERVABLE]);
          if (method) {
            var observable = anObject(method.call(x));
            return observable.constructor === C
              ? observable
              : new C(function (observer) {
                  return observable.subscribe(observer);
                });
          }
          return new C(function (observer) {
            var done = false;
            microtask(function () {
              if (!done) {
                try {
                  if (
                    forOf(x, false, function (it) {
                      observer.next(it);
                      if (done) return RETURN;
                    }) === RETURN
                  )
                    return;
                } catch (e) {
                  if (done) throw e;
                  observer.error(e);
                  return;
                }
                observer.complete();
              }
            });
            return function () {
              done = true;
            };
          });
        },
        of: function of() {
          for (var i = 0, l = arguments.length, items = Array(l); i < l; )
            items[i] = arguments[i++];
          return new (typeof this === 'function' ? this : $Observable)(function (observer) {
            var done = false;
            microtask(function () {
              if (!done) {
                for (var i = 0; i < items.length; ++i) {
                  observer.next(items[i]);
                  if (done) return;
                }
                observer.complete();
              }
            });
            return function () {
              done = true;
            };
          });
        },
      });

      hide($Observable.prototype, OBSERVABLE, function () {
        return this;
      });

      $export($export.G, { Observable: $Observable });

      __webpack_require__(65)('Observable');

      /***/
    },
    /* 565 */
    /***/ function (module, exports, __webpack_require__) {
      var metadata = __webpack_require__(46),
        anObject = __webpack_require__(5),
        toMetaKey = metadata.key,
        ordinaryDefineOwnMetadata = metadata.set;

      metadata.exp({
        defineMetadata: function defineMetadata(metadataKey, metadataValue, target, targetKey) {
          ordinaryDefineOwnMetadata(
            metadataKey,
            metadataValue,
            anObject(target),
            toMetaKey(targetKey)
          );
        },
      });

      /***/
    },
    /* 566 */
    /***/ function (module, exports, __webpack_require__) {
      var metadata = __webpack_require__(46),
        anObject = __webpack_require__(5),
        toMetaKey = metadata.key,
        getOrCreateMetadataMap = metadata.map,
        store = metadata.store;

      metadata.exp({
        deleteMetadata: function deleteMetadata(metadataKey, target /*, targetKey */) {
          var targetKey = arguments.length < 3 ? undefined : toMetaKey(arguments[2]),
            metadataMap = getOrCreateMetadataMap(anObject(target), targetKey, false);
          if (metadataMap === undefined || !metadataMap['delete'](metadataKey)) return false;
          if (metadataMap.size) return true;
          var targetMetadata = store.get(target);
          targetMetadata['delete'](targetKey);
          return !!targetMetadata.size || store['delete'](target);
        },
      });

      /***/
    },
    /* 567 */
    /***/ function (module, exports, __webpack_require__) {
      var Set = __webpack_require__(255),
        from = __webpack_require__(231),
        metadata = __webpack_require__(46),
        anObject = __webpack_require__(5),
        getPrototypeOf = __webpack_require__(31),
        ordinaryOwnMetadataKeys = metadata.keys,
        toMetaKey = metadata.key;

      var ordinaryMetadataKeys = function (O, P) {
        var oKeys = ordinaryOwnMetadataKeys(O, P),
          parent = getPrototypeOf(O);
        if (parent === null) return oKeys;
        var pKeys = ordinaryMetadataKeys(parent, P);
        return pKeys.length ? (oKeys.length ? from(new Set(oKeys.concat(pKeys))) : pKeys) : oKeys;
      };

      metadata.exp({
        getMetadataKeys: function getMetadataKeys(target /*, targetKey */) {
          return ordinaryMetadataKeys(
            anObject(target),
            arguments.length < 2 ? undefined : toMetaKey(arguments[1])
          );
        },
      });

      /***/
    },
    /* 568 */
    /***/ function (module, exports, __webpack_require__) {
      var metadata = __webpack_require__(46),
        anObject = __webpack_require__(5),
        getPrototypeOf = __webpack_require__(31),
        ordinaryHasOwnMetadata = metadata.has,
        ordinaryGetOwnMetadata = metadata.get,
        toMetaKey = metadata.key;

      var ordinaryGetMetadata = function (MetadataKey, O, P) {
        var hasOwn = ordinaryHasOwnMetadata(MetadataKey, O, P);
        if (hasOwn) return ordinaryGetOwnMetadata(MetadataKey, O, P);
        var parent = getPrototypeOf(O);
        return parent !== null ? ordinaryGetMetadata(MetadataKey, parent, P) : undefined;
      };

      metadata.exp({
        getMetadata: function getMetadata(metadataKey, target /*, targetKey */) {
          return ordinaryGetMetadata(
            metadataKey,
            anObject(target),
            arguments.length < 3 ? undefined : toMetaKey(arguments[2])
          );
        },
      });

      /***/
    },
    /* 569 */
    /***/ function (module, exports, __webpack_require__) {
      var metadata = __webpack_require__(46),
        anObject = __webpack_require__(5),
        ordinaryOwnMetadataKeys = metadata.keys,
        toMetaKey = metadata.key;

      metadata.exp({
        getOwnMetadataKeys: function getOwnMetadataKeys(target /*, targetKey */) {
          return ordinaryOwnMetadataKeys(
            anObject(target),
            arguments.length < 2 ? undefined : toMetaKey(arguments[1])
          );
        },
      });

      /***/
    },
    /* 570 */
    /***/ function (module, exports, __webpack_require__) {
      var metadata = __webpack_require__(46),
        anObject = __webpack_require__(5),
        ordinaryGetOwnMetadata = metadata.get,
        toMetaKey = metadata.key;

      metadata.exp({
        getOwnMetadata: function getOwnMetadata(metadataKey, target /*, targetKey */) {
          return ordinaryGetOwnMetadata(
            metadataKey,
            anObject(target),
            arguments.length < 3 ? undefined : toMetaKey(arguments[2])
          );
        },
      });

      /***/
    },
    /* 571 */
    /***/ function (module, exports, __webpack_require__) {
      var metadata = __webpack_require__(46),
        anObject = __webpack_require__(5),
        getPrototypeOf = __webpack_require__(31),
        ordinaryHasOwnMetadata = metadata.has,
        toMetaKey = metadata.key;

      var ordinaryHasMetadata = function (MetadataKey, O, P) {
        var hasOwn = ordinaryHasOwnMetadata(MetadataKey, O, P);
        if (hasOwn) return true;
        var parent = getPrototypeOf(O);
        return parent !== null ? ordinaryHasMetadata(MetadataKey, parent, P) : false;
      };

      metadata.exp({
        hasMetadata: function hasMetadata(metadataKey, target /*, targetKey */) {
          return ordinaryHasMetadata(
            metadataKey,
            anObject(target),
            arguments.length < 3 ? undefined : toMetaKey(arguments[2])
          );
        },
      });

      /***/
    },
    /* 572 */
    /***/ function (module, exports, __webpack_require__) {
      var metadata = __webpack_require__(46),
        anObject = __webpack_require__(5),
        ordinaryHasOwnMetadata = metadata.has,
        toMetaKey = metadata.key;

      metadata.exp({
        hasOwnMetadata: function hasOwnMetadata(metadataKey, target /*, targetKey */) {
          return ordinaryHasOwnMetadata(
            metadataKey,
            anObject(target),
            arguments.length < 3 ? undefined : toMetaKey(arguments[2])
          );
        },
      });

      /***/
    },
    /* 573 */
    /***/ function (module, exports, __webpack_require__) {
      var metadata = __webpack_require__(46),
        anObject = __webpack_require__(5),
        aFunction = __webpack_require__(23),
        toMetaKey = metadata.key,
        ordinaryDefineOwnMetadata = metadata.set;

      metadata.exp({
        metadata: function metadata(metadataKey, metadataValue) {
          return function decorator(target, targetKey) {
            ordinaryDefineOwnMetadata(
              metadataKey,
              metadataValue,
              (targetKey !== undefined ? anObject : aFunction)(target),
              toMetaKey(targetKey)
            );
          };
        },
      });

      /***/
    },
    /* 574 */
    /***/ function (module, exports, __webpack_require__) {
      // https://github.com/DavidBruant/Map-Set.prototype.toJSON
      var $export = __webpack_require__(0);

      $export($export.P + $export.R, 'Set', { toJSON: __webpack_require__(235)('Set') });

      /***/
    },
    /* 575 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';

      // https://github.com/mathiasbynens/String.prototype.at
      var $export = __webpack_require__(0),
        $at = __webpack_require__(162)(true);

      $export($export.P, 'String', {
        at: function at(pos) {
          return $at(this, pos);
        },
      });

      /***/
    },
    /* 576 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';

      // https://tc39.github.io/String.prototype.matchAll/
      var $export = __webpack_require__(0),
        defined = __webpack_require__(35),
        toLength = __webpack_require__(17),
        isRegExp = __webpack_require__(111),
        getFlags = __webpack_require__(109),
        RegExpProto = RegExp.prototype;

      var $RegExpStringIterator = function (regexp, string) {
        this._r = regexp;
        this._s = string;
      };

      __webpack_require__(154)($RegExpStringIterator, 'RegExp String', function next() {
        var match = this._r.exec(this._s);
        return { value: match, done: match === null };
      });

      $export($export.P, 'String', {
        matchAll: function matchAll(regexp) {
          defined(this);
          if (!isRegExp(regexp)) throw TypeError(regexp + ' is not a regexp!');
          var S = String(this),
            flags = 'flags' in RegExpProto ? String(regexp.flags) : getFlags.call(regexp),
            rx = new RegExp(regexp.source, ~flags.indexOf('g') ? flags : 'g' + flags);
          rx.lastIndex = toLength(regexp.lastIndex);
          return new $RegExpStringIterator(rx, S);
        },
      });

      /***/
    },
    /* 577 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';

      // https://github.com/tc39/proposal-string-pad-start-end
      var $export = __webpack_require__(0),
        $pad = __webpack_require__(251);

      $export($export.P, 'String', {
        padEnd: function padEnd(maxLength /*, fillString = ' ' */) {
          return $pad(this, maxLength, arguments.length > 1 ? arguments[1] : undefined, false);
        },
      });

      /***/
    },
    /* 578 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';

      // https://github.com/tc39/proposal-string-pad-start-end
      var $export = __webpack_require__(0),
        $pad = __webpack_require__(251);

      $export($export.P, 'String', {
        padStart: function padStart(maxLength /*, fillString = ' ' */) {
          return $pad(this, maxLength, arguments.length > 1 ? arguments[1] : undefined, true);
        },
      });

      /***/
    },
    /* 579 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';

      // https://github.com/sebmarkbage/ecmascript-string-left-right-trim
      __webpack_require__(81)(
        'trimLeft',
        function ($trim) {
          return function trimLeft() {
            return $trim(this, 1);
          };
        },
        'trimStart'
      );

      /***/
    },
    /* 580 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';

      // https://github.com/sebmarkbage/ecmascript-string-left-right-trim
      __webpack_require__(81)(
        'trimRight',
        function ($trim) {
          return function trimRight() {
            return $trim(this, 2);
          };
        },
        'trimEnd'
      );

      /***/
    },
    /* 581 */
    /***/ function (module, exports, __webpack_require__) {
      __webpack_require__(168)('asyncIterator');

      /***/
    },
    /* 582 */
    /***/ function (module, exports, __webpack_require__) {
      __webpack_require__(168)('observable');

      /***/
    },
    /* 583 */
    /***/ function (module, exports, __webpack_require__) {
      // https://github.com/ljharb/proposal-global
      var $export = __webpack_require__(0);

      $export($export.S, 'System', { global: __webpack_require__(6) });

      /***/
    },
    /* 584 */
    /***/ function (module, exports, __webpack_require__) {
      var $iterators = __webpack_require__(170),
        redefine = __webpack_require__(25),
        global = __webpack_require__(6),
        hide = __webpack_require__(24),
        Iterators = __webpack_require__(79),
        wks = __webpack_require__(10),
        ITERATOR = wks('iterator'),
        TO_STRING_TAG = wks('toStringTag'),
        ArrayValues = Iterators.Array;

      for (
        var collections = [
            'NodeList',
            'DOMTokenList',
            'MediaList',
            'StyleSheetList',
            'CSSRuleList',
          ],
          i = 0;
        i < 5;
        i++
      ) {
        var NAME = collections[i],
          Collection = global[NAME],
          proto = Collection && Collection.prototype,
          key;
        if (proto) {
          if (!proto[ITERATOR]) hide(proto, ITERATOR, ArrayValues);
          if (!proto[TO_STRING_TAG]) hide(proto, TO_STRING_TAG, NAME);
          Iterators[NAME] = ArrayValues;
          for (key in $iterators) if (!proto[key]) redefine(proto, key, $iterators[key], true);
        }
      }

      /***/
    },
    /* 585 */
    /***/ function (module, exports, __webpack_require__) {
      var $export = __webpack_require__(0),
        $task = __webpack_require__(166);
      $export($export.G + $export.B, {
        setImmediate: $task.set,
        clearImmediate: $task.clear,
      });

      /***/
    },
    /* 586 */
    /***/ function (module, exports, __webpack_require__) {
      // ie9- setTimeout & setInterval additional parameters fix
      var global = __webpack_require__(6),
        $export = __webpack_require__(0),
        invoke = __webpack_require__(110),
        partial = __webpack_require__(413),
        navigator = global.navigator,
        MSIE = !!navigator && /MSIE .\./.test(navigator.userAgent); // <- dirty ie9- check
      var wrap = function (set) {
        return MSIE
          ? function (fn, time /*, ...args */) {
              return set(
                invoke(
                  partial,
                  [].slice.call(arguments, 2),
                  typeof fn == 'function' ? fn : Function(fn)
                ),
                time
              );
            }
          : set;
      };
      $export($export.G + $export.B + $export.F * MSIE, {
        setTimeout: wrap(global.setTimeout),
        setInterval: wrap(global.setInterval),
      });

      /***/
    },
    /* 587 */
    /***/ function (module, exports, __webpack_require__) {
      __webpack_require__(536);
      __webpack_require__(475);
      __webpack_require__(477);
      __webpack_require__(476);
      __webpack_require__(479);
      __webpack_require__(481);
      __webpack_require__(486);
      __webpack_require__(480);
      __webpack_require__(478);
      __webpack_require__(488);
      __webpack_require__(487);
      __webpack_require__(483);
      __webpack_require__(484);
      __webpack_require__(482);
      __webpack_require__(474);
      __webpack_require__(485);
      __webpack_require__(489);
      __webpack_require__(490);
      __webpack_require__(442);
      __webpack_require__(444);
      __webpack_require__(443);
      __webpack_require__(492);
      __webpack_require__(491);
      __webpack_require__(462);
      __webpack_require__(472);
      __webpack_require__(473);
      __webpack_require__(463);
      __webpack_require__(464);
      __webpack_require__(465);
      __webpack_require__(466);
      __webpack_require__(467);
      __webpack_require__(468);
      __webpack_require__(469);
      __webpack_require__(470);
      __webpack_require__(471);
      __webpack_require__(445);
      __webpack_require__(446);
      __webpack_require__(447);
      __webpack_require__(448);
      __webpack_require__(449);
      __webpack_require__(450);
      __webpack_require__(451);
      __webpack_require__(452);
      __webpack_require__(453);
      __webpack_require__(454);
      __webpack_require__(455);
      __webpack_require__(456);
      __webpack_require__(457);
      __webpack_require__(458);
      __webpack_require__(459);
      __webpack_require__(460);
      __webpack_require__(461);
      __webpack_require__(523);
      __webpack_require__(528);
      __webpack_require__(535);
      __webpack_require__(526);
      __webpack_require__(518);
      __webpack_require__(519);
      __webpack_require__(524);
      __webpack_require__(529);
      __webpack_require__(531);
      __webpack_require__(514);
      __webpack_require__(515);
      __webpack_require__(516);
      __webpack_require__(517);
      __webpack_require__(520);
      __webpack_require__(521);
      __webpack_require__(522);
      __webpack_require__(525);
      __webpack_require__(527);
      __webpack_require__(530);
      __webpack_require__(532);
      __webpack_require__(533);
      __webpack_require__(534);
      __webpack_require__(437);
      __webpack_require__(439);
      __webpack_require__(438);
      __webpack_require__(441);
      __webpack_require__(440);
      __webpack_require__(426);
      __webpack_require__(424);
      __webpack_require__(430);
      __webpack_require__(427);
      __webpack_require__(433);
      __webpack_require__(435);
      __webpack_require__(423);
      __webpack_require__(429);
      __webpack_require__(420);
      __webpack_require__(434);
      __webpack_require__(418);
      __webpack_require__(432);
      __webpack_require__(431);
      __webpack_require__(425);
      __webpack_require__(428);
      __webpack_require__(417);
      __webpack_require__(419);
      __webpack_require__(422);
      __webpack_require__(421);
      __webpack_require__(436);
      __webpack_require__(170);
      __webpack_require__(508);
      __webpack_require__(513);
      __webpack_require__(254);
      __webpack_require__(509);
      __webpack_require__(510);
      __webpack_require__(511);
      __webpack_require__(512);
      __webpack_require__(493);
      __webpack_require__(253);
      __webpack_require__(255);
      __webpack_require__(256);
      __webpack_require__(548);
      __webpack_require__(537);
      __webpack_require__(538);
      __webpack_require__(543);
      __webpack_require__(546);
      __webpack_require__(547);
      __webpack_require__(541);
      __webpack_require__(544);
      __webpack_require__(542);
      __webpack_require__(545);
      __webpack_require__(539);
      __webpack_require__(540);
      __webpack_require__(494);
      __webpack_require__(495);
      __webpack_require__(496);
      __webpack_require__(497);
      __webpack_require__(498);
      __webpack_require__(501);
      __webpack_require__(499);
      __webpack_require__(500);
      __webpack_require__(502);
      __webpack_require__(503);
      __webpack_require__(504);
      __webpack_require__(505);
      __webpack_require__(507);
      __webpack_require__(506);
      __webpack_require__(549);
      __webpack_require__(575);
      __webpack_require__(578);
      __webpack_require__(577);
      __webpack_require__(579);
      __webpack_require__(580);
      __webpack_require__(576);
      __webpack_require__(581);
      __webpack_require__(582);
      __webpack_require__(560);
      __webpack_require__(563);
      __webpack_require__(559);
      __webpack_require__(557);
      __webpack_require__(558);
      __webpack_require__(561);
      __webpack_require__(562);
      __webpack_require__(552);
      __webpack_require__(574);
      __webpack_require__(583);
      __webpack_require__(551);
      __webpack_require__(553);
      __webpack_require__(555);
      __webpack_require__(554);
      __webpack_require__(556);
      __webpack_require__(565);
      __webpack_require__(566);
      __webpack_require__(568);
      __webpack_require__(567);
      __webpack_require__(570);
      __webpack_require__(569);
      __webpack_require__(571);
      __webpack_require__(572);
      __webpack_require__(573);
      __webpack_require__(550);
      __webpack_require__(564);
      __webpack_require__(586);
      __webpack_require__(585);
      __webpack_require__(584);
      module.exports = __webpack_require__(44);

      /***/
    },
    /* 588 */
    /***/ function (module, exports) {
      // Polyfill for creating CustomEvents on IE9/10/11

      // code pulled from:
      // https://github.com/d4tocchini/customevent-polyfill
      // https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent#Polyfill

      (function () {
        if (typeof window === 'undefined') {
          return;
        }

        try {
          var ce = new window.CustomEvent('test', { cancelable: true });
          ce.preventDefault();
          if (ce.defaultPrevented !== true) {
            // IE has problems with .preventDefault() on custom events
            // http://stackoverflow.com/questions/23349191
            throw new Error('Could not prevent default');
          }
        } catch (e) {
          var CustomEvent = function (event, params) {
            var evt, origPrevent;
            params = params || {};
            params.bubbles = !!params.bubbles;
            params.cancelable = !!params.cancelable;

            evt = document.createEvent('CustomEvent');
            evt.initCustomEvent(event, params.bubbles, params.cancelable, params.detail);
            origPrevent = evt.preventDefault;
            evt.preventDefault = function () {
              origPrevent.call(this);
              try {
                Object.defineProperty(this, 'defaultPrevented', {
                  get: function () {
                    return true;
                  },
                });
              } catch (e) {
                this.defaultPrevented = true;
              }
            };
            return evt;
          };

          CustomEvent.prototype = window.Event.prototype;
          window.CustomEvent = CustomEvent; // expose definition to window
        }
      })();

      /***/
    },
    /* 589 */
    /***/ function (module, exports, __webpack_require__) {
      /**
       * This is the web browser implementation of `debug()`.
       *
       * Expose `debug()` as the module.
       */

      exports = module.exports = __webpack_require__(590);
      exports.log = log;
      exports.formatArgs = formatArgs;
      exports.save = save;
      exports.load = load;
      exports.useColors = useColors;
      exports.storage =
        'undefined' != typeof chrome && 'undefined' != typeof chrome.storage
          ? chrome.storage.local
          : localstorage();

      /**
       * Colors.
       */

      exports.colors = [
        'lightseagreen',
        'forestgreen',
        'goldenrod',
        'dodgerblue',
        'darkorchid',
        'crimson',
      ];

      /**
       * Currently only WebKit-based Web Inspectors, Firefox >= v31,
       * and the Firebug extension (any Firefox version) are known
       * to support "%c" CSS customizations.
       *
       * TODO: add a `localStorage` variable to explicitly enable/disable colors
       */

      function useColors() {
        // is webkit? http://stackoverflow.com/a/16459606/376773
        return (
          'WebkitAppearance' in document.documentElement.style ||
          // is firebug? http://stackoverflow.com/a/398120/376773
          (window.console && (console.firebug || (console.exception && console.table))) ||
          // is firefox >= v31?
          // https://developer.mozilla.org/en-US/docs/Tools/Web_Console#Styling_messages
          (navigator.userAgent.toLowerCase().match(/firefox\/(\d+)/) &&
            parseInt(RegExp.$1, 10) >= 31)
        );
      }

      /**
       * Map %j to `JSON.stringify()`, since no Web Inspectors do that by default.
       */

      exports.formatters.j = function (v) {
        return JSON.stringify(v);
      };

      /**
       * Colorize log arguments if enabled.
       *
       * @api public
       */

      function formatArgs() {
        var args = arguments;
        var useColors = this.useColors;

        args[0] =
          (useColors ? '%c' : '') +
          this.namespace +
          (useColors ? ' %c' : ' ') +
          args[0] +
          (useColors ? '%c ' : ' ') +
          '+' +
          exports.humanize(this.diff);

        if (!useColors) return args;

        var c = 'color: ' + this.color;
        args = [args[0], c, 'color: inherit'].concat(Array.prototype.slice.call(args, 1));

        // the final "%c" is somewhat tricky, because there could be other
        // arguments passed either before or after the %c, so we need to
        // figure out the correct index to insert the CSS into
        var index = 0;
        var lastC = 0;
        args[0].replace(/%[a-z%]/g, function (match) {
          if ('%%' === match) return;
          index++;
          if ('%c' === match) {
            // we only are interested in the *last* %c
            // (the user may have provided their own)
            lastC = index;
          }
        });

        args.splice(lastC, 0, c);
        return args;
      }

      /**
       * Invokes `console.log()` when available.
       * No-op when `console.log` is not a "function".
       *
       * @api public
       */

      function log() {
        // this hackery is required for IE8/9, where
        // the `console.log` function doesn't have 'apply'
        return (
          'object' === typeof console &&
          console.log &&
          Function.prototype.apply.call(console.log, console, arguments)
        );
      }

      /**
       * Save `namespaces`.
       *
       * @param {String} namespaces
       * @api private
       */

      function save(namespaces) {
        try {
          if (null == namespaces) {
            exports.storage.removeItem('debug');
          } else {
            exports.storage.debug = namespaces;
          }
        } catch (e) {}
      }

      /**
       * Load `namespaces`.
       *
       * @return {String} returns the previously persisted debug modes
       * @api private
       */

      function load() {
        var r;
        try {
          r = exports.storage.debug;
        } catch (e) {}
        return r;
      }

      /**
       * Enable namespaces listed in `localStorage.debug` initially.
       */

      exports.enable(load());

      /**
       * Localstorage attempts to return the localstorage.
       *
       * This is necessary because safari throws
       * when a user disables cookies/localstorage
       * and you attempt to access it.
       *
       * @return {LocalStorage}
       * @api private
       */

      function localstorage() {
        try {
          return window.localStorage;
        } catch (e) {}
      }

      /***/
    },
    /* 590 */
    /***/ function (module, exports, __webpack_require__) {
      /**
       * This is the common logic for both the Node.js and web browser
       * implementations of `debug()`.
       *
       * Expose `debug()` as the module.
       */

      exports = module.exports = debug;
      exports.coerce = coerce;
      exports.disable = disable;
      exports.enable = enable;
      exports.enabled = enabled;
      exports.humanize = __webpack_require__(640);

      /**
       * The currently active debug mode names, and names to skip.
       */

      exports.names = [];
      exports.skips = [];

      /**
       * Map of special "%n" handling functions, for the debug "format" argument.
       *
       * Valid key names are a single, lowercased letter, i.e. "n".
       */

      exports.formatters = {};

      /**
       * Previously assigned color.
       */

      var prevColor = 0;

      /**
       * Previous log timestamp.
       */

      var prevTime;

      /**
       * Select a color.
       *
       * @return {Number}
       * @api private
       */

      function selectColor() {
        return exports.colors[prevColor++ % exports.colors.length];
      }

      /**
       * Create a debugger with the given `namespace`.
       *
       * @param {String} namespace
       * @return {Function}
       * @api public
       */

      function debug(namespace) {
        // define the `disabled` version
        function disabled() {}
        disabled.enabled = false;

        // define the `enabled` version
        function enabled() {
          var self = enabled;

          // set `diff` timestamp
          var curr = +new Date();
          var ms = curr - (prevTime || curr);
          self.diff = ms;
          self.prev = prevTime;
          self.curr = curr;
          prevTime = curr;

          // add the `color` if not set
          if (null == self.useColors) self.useColors = exports.useColors();
          if (null == self.color && self.useColors) self.color = selectColor();

          var args = Array.prototype.slice.call(arguments);

          args[0] = exports.coerce(args[0]);

          if ('string' !== typeof args[0]) {
            // anything else let's inspect with %o
            args = ['%o'].concat(args);
          }

          // apply any `formatters` transformations
          var index = 0;
          args[0] = args[0].replace(/%([a-z%])/g, function (match, format) {
            // if we encounter an escaped % then don't increase the array index
            if (match === '%%') return match;
            index++;
            var formatter = exports.formatters[format];
            if ('function' === typeof formatter) {
              var val = args[index];
              match = formatter.call(self, val);

              // now we need to remove `args[index]` since it's inlined in the `format`
              args.splice(index, 1);
              index--;
            }
            return match;
          });

          if ('function' === typeof exports.formatArgs) {
            args = exports.formatArgs.apply(self, args);
          }
          var logFn = enabled.log || exports.log || console.log.bind(console);
          logFn.apply(self, args);
        }
        enabled.enabled = true;

        var fn = exports.enabled(namespace) ? enabled : disabled;

        fn.namespace = namespace;

        return fn;
      }

      /**
       * Enables a debug mode by namespaces. This can include modes
       * separated by a colon and wildcards.
       *
       * @param {String} namespaces
       * @api public
       */

      function enable(namespaces) {
        exports.save(namespaces);

        var split = (namespaces || '').split(/[\s,]+/);
        var len = split.length;

        for (var i = 0; i < len; i++) {
          if (!split[i]) continue; // ignore empty strings
          namespaces = split[i].replace(/\*/g, '.*?');
          if (namespaces[0] === '-') {
            exports.skips.push(new RegExp('^' + namespaces.substr(1) + '$'));
          } else {
            exports.names.push(new RegExp('^' + namespaces + '$'));
          }
        }
      }

      /**
       * Disable debug output.
       *
       * @api public
       */

      function disable() {
        exports.enable('');
      }

      /**
       * Returns true if the given mode name is enabled, false otherwise.
       *
       * @param {String} name
       * @return {Boolean}
       * @api public
       */

      function enabled(name) {
        var i, len;
        for (i = 0, len = exports.skips.length; i < len; i++) {
          if (exports.skips[i].test(name)) {
            return false;
          }
        }
        for (i = 0, len = exports.names.length; i < len; i++) {
          if (exports.names[i].test(name)) {
            return true;
          }
        }
        return false;
      }

      /**
       * Coerce `val`.
       *
       * @param {Mixed} val
       * @return {Mixed}
       * @api private
       */

      function coerce(val) {
        if (val instanceof Error) return val.stack || val.message;
        return val;
      }

      /***/
    },
    /* 591 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';

      var token = '%[a-f0-9]{2}';
      var singleMatcher = new RegExp(token, 'gi');
      var multiMatcher = new RegExp('(' + token + ')+', 'gi');

      function decodeComponents(components, split) {
        try {
          // Try to decode the entire string first
          return decodeURIComponent(components.join(''));
        } catch (err) {
          // Do nothing
        }

        if (components.length === 1) {
          return components;
        }

        split = split || 1;

        // Split the array in 2 parts
        var left = components.slice(0, split);
        var right = components.slice(split);

        return Array.prototype.concat.call([], decodeComponents(left), decodeComponents(right));
      }

      function decode(input) {
        try {
          return decodeURIComponent(input);
        } catch (err) {
          var tokens = input.match(singleMatcher);

          for (var i = 1; i < tokens.length; i++) {
            input = decodeComponents(tokens, i).join('');

            tokens = input.match(singleMatcher);
          }

          return input;
        }
      }

      function customDecodeURIComponent(input) {
        // Keep track of all the replacements and prefill the map with the `BOM`
        var replaceMap = {
          '%FE%FF': '\uFFFD\uFFFD',
          '%FF%FE': '\uFFFD\uFFFD',
        };

        var match = multiMatcher.exec(input);
        while (match) {
          try {
            // Decode as big chunks as possible
            replaceMap[match[0]] = decodeURIComponent(match[0]);
          } catch (err) {
            var result = decode(match[0]);

            if (result !== match[0]) {
              replaceMap[match[0]] = result;
            }
          }

          match = multiMatcher.exec(input);
        }

        // Add `%C2` at the end of the map to make sure it does not replace the combinator before everything else
        replaceMap['%C2'] = '\uFFFD';

        var entries = Object.keys(replaceMap);

        for (var i = 0; i < entries.length; i++) {
          // Replace all decoded components
          var key = entries[i];
          input = input.replace(new RegExp(key, 'g'), replaceMap[key]);
        }

        return input;
      }

      module.exports = function (encodedURI) {
        if (typeof encodedURI !== 'string') {
          throw new TypeError(
            'Expected `encodedURI` to be of type `string`, got `' + typeof encodedURI + '`'
          );
        }

        try {
          encodedURI = encodedURI.replace(/\+/g, ' ');

          // Try the built in decoder first
          return decodeURIComponent(encodedURI);
        } catch (err) {
          // Fallback to a more advanced decoder
          return customDecodeURIComponent(encodedURI);
        }
      };

      /***/
    },
    /* 592 */
    /***/ function (module, exports, __webpack_require__) {
      /*
  Module dependencies
*/
      var ElementType = __webpack_require__(593);
      var entities = __webpack_require__(603);

      /*
  Boolean Attributes
*/
      var booleanAttributes = {
        __proto__: null,
        allowfullscreen: true,
        async: true,
        autofocus: true,
        autoplay: true,
        checked: true,
        controls: true,
        default: true,
        defer: true,
        disabled: true,
        hidden: true,
        ismap: true,
        loop: true,
        multiple: true,
        muted: true,
        open: true,
        readonly: true,
        required: true,
        reversed: true,
        scoped: true,
        seamless: true,
        selected: true,
        typemustmatch: true,
      };

      var unencodedElements = {
        __proto__: null,
        style: true,
        script: true,
        xmp: true,
        iframe: true,
        noembed: true,
        noframes: true,
        plaintext: true,
        noscript: true,
      };

      /*
  Format attributes
*/
      function formatAttrs(attributes, opts) {
        if (!attributes) return;

        var output = '',
          value;

        // Loop through the attributes
        for (var key in attributes) {
          value = attributes[key];
          if (output) {
            output += ' ';
          }

          if (!value && booleanAttributes[key]) {
            output += key;
          } else {
            output += key + '="' + (opts.decodeEntities ? entities.encodeXML(value) : value) + '"';
          }
        }

        return output;
      }

      /*
  Self-enclosing tags (stolen from node-htmlparser)
*/
      var singleTag = {
        __proto__: null,
        area: true,
        base: true,
        basefont: true,
        br: true,
        col: true,
        command: true,
        embed: true,
        frame: true,
        hr: true,
        img: true,
        input: true,
        isindex: true,
        keygen: true,
        link: true,
        meta: true,
        param: true,
        source: true,
        track: true,
        wbr: true,
      };

      var render = (module.exports = function (dom, opts) {
        if (!Array.isArray(dom) && !dom.cheerio) dom = [dom];
        opts = opts || {};

        var output = '';

        for (var i = 0; i < dom.length; i++) {
          var elem = dom[i];

          if (elem.type === 'root') output += render(elem.children, opts);
          else if (ElementType.isTag(elem)) output += renderTag(elem, opts);
          else if (elem.type === ElementType.Directive) output += renderDirective(elem);
          else if (elem.type === ElementType.Comment) output += renderComment(elem);
          else if (elem.type === ElementType.CDATA) output += renderCdata(elem);
          else output += renderText(elem, opts);
        }

        return output;
      });

      function renderTag(elem, opts) {
        // Handle SVG
        if (elem.name === 'svg') opts = { decodeEntities: opts.decodeEntities, xmlMode: true };

        var tag = '<' + elem.name,
          attribs = formatAttrs(elem.attribs, opts);

        if (attribs) {
          tag += ' ' + attribs;
        }

        if (opts.xmlMode && (!elem.children || elem.children.length === 0)) {
          tag += '/>';
        } else {
          tag += '>';
          if (elem.children) {
            tag += render(elem.children, opts);
          }

          if (!singleTag[elem.name] || opts.xmlMode) {
            tag += '</' + elem.name + '>';
          }
        }

        return tag;
      }

      function renderDirective(elem) {
        return '<' + elem.data + '>';
      }

      function renderText(elem, opts) {
        var data = elem.data || '';

        // if entities weren't decoded, no need to encode them back
        if (opts.decodeEntities && !(elem.parent && elem.parent.name in unencodedElements)) {
          data = entities.encodeXML(data);
        }

        return data;
      }

      function renderCdata(elem) {
        return '<![CDATA[' + elem.children[0].data + ']]>';
      }

      function renderComment(elem) {
        return '<!--' + elem.data + '-->';
      }

      /***/
    },
    /* 593 */
    /***/ function (module, exports) {
      //Types of elements found in the DOM
      module.exports = {
        Text: 'text', //Text
        Directive: 'directive', //<? ... ?>
        Comment: 'comment', //<!-- ... -->
        Script: 'script', //<script> tags
        Style: 'style', //<style> tags
        Tag: 'tag', //Any tag
        CDATA: 'cdata', //<![CDATA[ ... ]]>

        isTag: function (elem) {
          return elem.type === 'tag' || elem.type === 'script' || elem.type === 'style';
        },
      };

      /***/
    },
    /* 594 */
    /***/ function (module, exports, __webpack_require__) {
      var ElementType = __webpack_require__(92);

      var re_whitespace = /\s+/g;
      var NodePrototype = __webpack_require__(257);
      var ElementPrototype = __webpack_require__(595);

      function DomHandler(callback, options, elementCB) {
        if (typeof callback === 'object') {
          elementCB = options;
          options = callback;
          callback = null;
        } else if (typeof options === 'function') {
          elementCB = options;
          options = defaultOpts;
        }
        this._callback = callback;
        this._options = options || defaultOpts;
        this._elementCB = elementCB;
        this.dom = [];
        this._done = false;
        this._tagStack = [];
        this._parser = this._parser || null;
      }

      //default options
      var defaultOpts = {
        normalizeWhitespace: false, //Replace all whitespace with single spaces
        withStartIndices: false, //Add startIndex properties to nodes
        withEndIndices: false, //Add endIndex properties to nodes
      };

      DomHandler.prototype.onparserinit = function (parser) {
        this._parser = parser;
      };

      //Resets the handler back to starting state
      DomHandler.prototype.onreset = function () {
        DomHandler.call(this, this._callback, this._options, this._elementCB);
      };

      //Signals the handler that parsing is done
      DomHandler.prototype.onend = function () {
        if (this._done) return;
        this._done = true;
        this._parser = null;
        this._handleCallback(null);
      };

      DomHandler.prototype._handleCallback = DomHandler.prototype.onerror = function (error) {
        if (typeof this._callback === 'function') {
          this._callback(error, this.dom);
        } else {
          if (error) throw error;
        }
      };

      DomHandler.prototype.onclosetag = function () {
        //if(this._tagStack.pop().name !== name) this._handleCallback(Error("Tagname didn't match!"));

        var elem = this._tagStack.pop();

        if (this._options.withEndIndices) {
          elem.endIndex = this._parser.endIndex;
        }

        if (this._elementCB) this._elementCB(elem);
      };

      DomHandler.prototype._createDomElement = function (properties) {
        if (!this._options.withDomLvl1) return properties;

        var element;
        if (properties.type === 'tag') {
          element = Object.create(ElementPrototype);
        } else {
          element = Object.create(NodePrototype);
        }

        for (var key in properties) {
          if (properties.hasOwnProperty(key)) {
            element[key] = properties[key];
          }
        }

        return element;
      };

      DomHandler.prototype._addDomElement = function (element) {
        var parent = this._tagStack[this._tagStack.length - 1];
        var siblings = parent ? parent.children : this.dom;
        var previousSibling = siblings[siblings.length - 1];

        element.next = null;

        if (this._options.withStartIndices) {
          element.startIndex = this._parser.startIndex;
        }
        if (this._options.withEndIndices) {
          element.endIndex = this._parser.endIndex;
        }

        if (previousSibling) {
          element.prev = previousSibling;
          previousSibling.next = element;
        } else {
          element.prev = null;
        }

        siblings.push(element);
        element.parent = parent || null;
      };

      DomHandler.prototype.onopentag = function (name, attribs) {
        var properties = {
          type:
            name === 'script'
              ? ElementType.Script
              : name === 'style'
              ? ElementType.Style
              : ElementType.Tag,
          name: name,
          attribs: attribs,
          children: [],
        };

        var element = this._createDomElement(properties);

        this._addDomElement(element);

        this._tagStack.push(element);
      };

      DomHandler.prototype.ontext = function (data) {
        //the ignoreWhitespace is officially dropped, but for now,
        //it's an alias for normalizeWhitespace
        var normalize = this._options.normalizeWhitespace || this._options.ignoreWhitespace;

        var lastTag;

        if (
          !this._tagStack.length &&
          this.dom.length &&
          (lastTag = this.dom[this.dom.length - 1]).type === ElementType.Text
        ) {
          if (normalize) {
            lastTag.data = (lastTag.data + data).replace(re_whitespace, ' ');
          } else {
            lastTag.data += data;
          }
        } else {
          if (
            this._tagStack.length &&
            (lastTag = this._tagStack[this._tagStack.length - 1]) &&
            (lastTag = lastTag.children[lastTag.children.length - 1]) &&
            lastTag.type === ElementType.Text
          ) {
            if (normalize) {
              lastTag.data = (lastTag.data + data).replace(re_whitespace, ' ');
            } else {
              lastTag.data += data;
            }
          } else {
            if (normalize) {
              data = data.replace(re_whitespace, ' ');
            }

            var element = this._createDomElement({
              data: data,
              type: ElementType.Text,
            });

            this._addDomElement(element);
          }
        }
      };

      DomHandler.prototype.oncomment = function (data) {
        var lastTag = this._tagStack[this._tagStack.length - 1];

        if (lastTag && lastTag.type === ElementType.Comment) {
          lastTag.data += data;
          return;
        }

        var properties = {
          data: data,
          type: ElementType.Comment,
        };

        var element = this._createDomElement(properties);

        this._addDomElement(element);
        this._tagStack.push(element);
      };

      DomHandler.prototype.oncdatastart = function () {
        var properties = {
          children: [
            {
              data: '',
              type: ElementType.Text,
            },
          ],
          type: ElementType.CDATA,
        };

        var element = this._createDomElement(properties);

        this._addDomElement(element);
        this._tagStack.push(element);
      };

      DomHandler.prototype.oncommentend = DomHandler.prototype.oncdataend = function () {
        this._tagStack.pop();
      };

      DomHandler.prototype.onprocessinginstruction = function (name, data) {
        var element = this._createDomElement({
          name: name,
          data: data,
          type: ElementType.Directive,
        });

        this._addDomElement(element);
      };

      module.exports = DomHandler;

      /***/
    },
    /* 595 */
    /***/ function (module, exports, __webpack_require__) {
      // DOM-Level-1-compliant structure
      var NodePrototype = __webpack_require__(257);
      var ElementPrototype = (module.exports = Object.create(NodePrototype));

      var domLvl1 = {
        tagName: 'name',
      };

      Object.keys(domLvl1).forEach(function (key) {
        var shorthand = domLvl1[key];
        Object.defineProperty(ElementPrototype, key, {
          get: function () {
            return this[shorthand] || null;
          },
          set: function (val) {
            this[shorthand] = val;
            return val;
          },
        });
      });

      /***/
    },
    /* 596 */
    /***/ function (module, exports, __webpack_require__) {
      var DomUtils = module.exports;

      [
        __webpack_require__(601),
        __webpack_require__(602),
        __webpack_require__(599),
        __webpack_require__(600),
        __webpack_require__(598),
        __webpack_require__(597),
      ].forEach(function (ext) {
        Object.keys(ext).forEach(function (key) {
          DomUtils[key] = ext[key].bind(DomUtils);
        });
      });

      /***/
    },
    /* 597 */
    /***/ function (module, exports) {
      // removeSubsets
      // Given an array of nodes, remove any member that is contained by another.
      exports.removeSubsets = function (nodes) {
        var idx = nodes.length,
          node,
          ancestor,
          replace;

        // Check if each node (or one of its ancestors) is already contained in the
        // array.
        while (--idx > -1) {
          node = ancestor = nodes[idx];

          // Temporarily remove the node under consideration
          nodes[idx] = null;
          replace = true;

          while (ancestor) {
            if (nodes.indexOf(ancestor) > -1) {
              replace = false;
              nodes.splice(idx, 1);
              break;
            }
            ancestor = ancestor.parent;
          }

          // If the node has been found to be unique, re-insert it.
          if (replace) {
            nodes[idx] = node;
          }
        }

        return nodes;
      };

      // Source: http://dom.spec.whatwg.org/#dom-node-comparedocumentposition
      var POSITION = {
        DISCONNECTED: 1,
        PRECEDING: 2,
        FOLLOWING: 4,
        CONTAINS: 8,
        CONTAINED_BY: 16,
      };

      // Compare the position of one node against another node in any other document.
      // The return value is a bitmask with the following values:
      //
      // document order:
      // > There is an ordering, document order, defined on all the nodes in the
      // > document corresponding to the order in which the first character of the
      // > XML representation of each node occurs in the XML representation of the
      // > document after expansion of general entities. Thus, the document element
      // > node will be the first node. Element nodes occur before their children.
      // > Thus, document order orders element nodes in order of the occurrence of
      // > their start-tag in the XML (after expansion of entities). The attribute
      // > nodes of an element occur after the element and before its children. The
      // > relative order of attribute nodes is implementation-dependent./
      // Source:
      // http://www.w3.org/TR/DOM-Level-3-Core/glossary.html#dt-document-order
      //
      // @argument {Node} nodaA The first node to use in the comparison
      // @argument {Node} nodeB The second node to use in the comparison
      //
      // @return {Number} A bitmask describing the input nodes' relative position.
      //         See http://dom.spec.whatwg.org/#dom-node-comparedocumentposition for
      //         a description of these values.
      var comparePos = (exports.compareDocumentPosition = function (nodeA, nodeB) {
        var aParents = [];
        var bParents = [];
        var current, sharedParent, siblings, aSibling, bSibling, idx;

        if (nodeA === nodeB) {
          return 0;
        }

        current = nodeA;
        while (current) {
          aParents.unshift(current);
          current = current.parent;
        }
        current = nodeB;
        while (current) {
          bParents.unshift(current);
          current = current.parent;
        }

        idx = 0;
        while (aParents[idx] === bParents[idx]) {
          idx++;
        }

        if (idx === 0) {
          return POSITION.DISCONNECTED;
        }

        sharedParent = aParents[idx - 1];
        siblings = sharedParent.children;
        aSibling = aParents[idx];
        bSibling = bParents[idx];

        if (siblings.indexOf(aSibling) > siblings.indexOf(bSibling)) {
          if (sharedParent === nodeB) {
            return POSITION.FOLLOWING | POSITION.CONTAINED_BY;
          }
          return POSITION.FOLLOWING;
        } else {
          if (sharedParent === nodeA) {
            return POSITION.PRECEDING | POSITION.CONTAINS;
          }
          return POSITION.PRECEDING;
        }
      });

      // Sort an array of nodes based on their relative position in the document and
      // remove any duplicate nodes. If the array contains nodes that do not belong
      // to the same document, sort order is unspecified.
      //
      // @argument {Array} nodes Array of DOM nodes
      //
      // @returns {Array} collection of unique nodes, sorted in document order
      exports.uniqueSort = function (nodes) {
        var idx = nodes.length,
          node,
          position;

        nodes = nodes.slice();

        while (--idx > -1) {
          node = nodes[idx];
          position = nodes.indexOf(node);
          if (position > -1 && position < idx) {
            nodes.splice(idx, 1);
          }
        }
        nodes.sort(function (a, b) {
          var relative = comparePos(a, b);
          if (relative & POSITION.PRECEDING) {
            return -1;
          } else if (relative & POSITION.FOLLOWING) {
            return 1;
          }
          return 0;
        });

        return nodes;
      };

      /***/
    },
    /* 598 */
    /***/ function (module, exports, __webpack_require__) {
      var ElementType = __webpack_require__(92);
      var isTag = (exports.isTag = ElementType.isTag);

      exports.testElement = function (options, element) {
        for (var key in options) {
          if (!options.hasOwnProperty(key));
          else if (key === 'tag_name') {
            if (!isTag(element) || !options.tag_name(element.name)) {
              return false;
            }
          } else if (key === 'tag_type') {
            if (!options.tag_type(element.type)) return false;
          } else if (key === 'tag_contains') {
            if (isTag(element) || !options.tag_contains(element.data)) {
              return false;
            }
          } else if (!element.attribs || !options[key](element.attribs[key])) {
            return false;
          }
        }
        return true;
      };

      var Checks = {
        tag_name: function (name) {
          if (typeof name === 'function') {
            return function (elem) {
              return isTag(elem) && name(elem.name);
            };
          } else if (name === '*') {
            return isTag;
          } else {
            return function (elem) {
              return isTag(elem) && elem.name === name;
            };
          }
        },
        tag_type: function (type) {
          if (typeof type === 'function') {
            return function (elem) {
              return type(elem.type);
            };
          } else {
            return function (elem) {
              return elem.type === type;
            };
          }
        },
        tag_contains: function (data) {
          if (typeof data === 'function') {
            return function (elem) {
              return !isTag(elem) && data(elem.data);
            };
          } else {
            return function (elem) {
              return !isTag(elem) && elem.data === data;
            };
          }
        },
      };

      function getAttribCheck(attrib, value) {
        if (typeof value === 'function') {
          return function (elem) {
            return elem.attribs && value(elem.attribs[attrib]);
          };
        } else {
          return function (elem) {
            return elem.attribs && elem.attribs[attrib] === value;
          };
        }
      }

      function combineFuncs(a, b) {
        return function (elem) {
          return a(elem) || b(elem);
        };
      }

      exports.getElements = function (options, element, recurse, limit) {
        var funcs = Object.keys(options).map(function (key) {
          var value = options[key];
          return key in Checks ? Checks[key](value) : getAttribCheck(key, value);
        });

        return funcs.length === 0
          ? []
          : this.filter(funcs.reduce(combineFuncs), element, recurse, limit);
      };

      exports.getElementById = function (id, element, recurse) {
        if (!Array.isArray(element)) element = [element];
        return this.findOne(getAttribCheck('id', id), element, recurse !== false);
      };

      exports.getElementsByTagName = function (name, element, recurse, limit) {
        return this.filter(Checks.tag_name(name), element, recurse, limit);
      };

      exports.getElementsByTagType = function (type, element, recurse, limit) {
        return this.filter(Checks.tag_type(type), element, recurse, limit);
      };

      /***/
    },
    /* 599 */
    /***/ function (module, exports) {
      exports.removeElement = function (elem) {
        if (elem.prev) elem.prev.next = elem.next;
        if (elem.next) elem.next.prev = elem.prev;

        if (elem.parent) {
          var childs = elem.parent.children;
          childs.splice(childs.lastIndexOf(elem), 1);
        }
      };

      exports.replaceElement = function (elem, replacement) {
        var prev = (replacement.prev = elem.prev);
        if (prev) {
          prev.next = replacement;
        }

        var next = (replacement.next = elem.next);
        if (next) {
          next.prev = replacement;
        }

        var parent = (replacement.parent = elem.parent);
        if (parent) {
          var childs = parent.children;
          childs[childs.lastIndexOf(elem)] = replacement;
        }
      };

      exports.appendChild = function (elem, child) {
        child.parent = elem;

        if (elem.children.push(child) !== 1) {
          var sibling = elem.children[elem.children.length - 2];
          sibling.next = child;
          child.prev = sibling;
          child.next = null;
        }
      };

      exports.append = function (elem, next) {
        var parent = elem.parent,
          currNext = elem.next;

        next.next = currNext;
        next.prev = elem;
        elem.next = next;
        next.parent = parent;

        if (currNext) {
          currNext.prev = next;
          if (parent) {
            var childs = parent.children;
            childs.splice(childs.lastIndexOf(currNext), 0, next);
          }
        } else if (parent) {
          parent.children.push(next);
        }
      };

      exports.prepend = function (elem, prev) {
        var parent = elem.parent;
        if (parent) {
          var childs = parent.children;
          childs.splice(childs.lastIndexOf(elem), 0, prev);
        }

        if (elem.prev) {
          elem.prev.next = prev;
        }

        prev.parent = parent;
        prev.prev = elem.prev;
        prev.next = elem;
        elem.prev = prev;
      };

      /***/
    },
    /* 600 */
    /***/ function (module, exports, __webpack_require__) {
      var isTag = __webpack_require__(92).isTag;

      module.exports = {
        filter: filter,
        find: find,
        findOneChild: findOneChild,
        findOne: findOne,
        existsOne: existsOne,
        findAll: findAll,
      };

      function filter(test, element, recurse, limit) {
        if (!Array.isArray(element)) element = [element];

        if (typeof limit !== 'number' || !isFinite(limit)) {
          limit = Infinity;
        }
        return find(test, element, recurse !== false, limit);
      }

      function find(test, elems, recurse, limit) {
        var result = [],
          childs;

        for (var i = 0, j = elems.length; i < j; i++) {
          if (test(elems[i])) {
            result.push(elems[i]);
            if (--limit <= 0) break;
          }

          childs = elems[i].children;
          if (recurse && childs && childs.length > 0) {
            childs = find(test, childs, recurse, limit);
            result = result.concat(childs);
            limit -= childs.length;
            if (limit <= 0) break;
          }
        }

        return result;
      }

      function findOneChild(test, elems) {
        for (var i = 0, l = elems.length; i < l; i++) {
          if (test(elems[i])) return elems[i];
        }

        return null;
      }

      function findOne(test, elems) {
        var elem = null;

        for (var i = 0, l = elems.length; i < l && !elem; i++) {
          if (!isTag(elems[i])) {
            continue;
          } else if (test(elems[i])) {
            elem = elems[i];
          } else if (elems[i].children.length > 0) {
            elem = findOne(test, elems[i].children);
          }
        }

        return elem;
      }

      function existsOne(test, elems) {
        for (var i = 0, l = elems.length; i < l; i++) {
          if (
            isTag(elems[i]) &&
            (test(elems[i]) || (elems[i].children.length > 0 && existsOne(test, elems[i].children)))
          ) {
            return true;
          }
        }

        return false;
      }

      function findAll(test, rootElems) {
        var result = [];
        var stack = [rootElems];
        while (stack.length) {
          var elems = stack.pop();
          for (var i = 0, j = elems.length; i < j; i++) {
            if (!isTag(elems[i])) continue;
            if (test(elems[i])) result.push(elems[i]);
          }
          while (j-- > 0) {
            if (elems[j].children && elems[j].children.length > 0) {
              stack.push(elems[j].children);
            }
          }
        }
        return result;
      }

      /***/
    },
    /* 601 */
    /***/ function (module, exports, __webpack_require__) {
      var ElementType = __webpack_require__(92),
        getOuterHTML = __webpack_require__(592),
        isTag = ElementType.isTag;

      module.exports = {
        getInnerHTML: getInnerHTML,
        getOuterHTML: getOuterHTML,
        getText: getText,
      };

      function getInnerHTML(elem, opts) {
        return elem.children
          ? elem.children
              .map(function (elem) {
                return getOuterHTML(elem, opts);
              })
              .join('')
          : '';
      }

      function getText(elem) {
        if (Array.isArray(elem)) return elem.map(getText).join('');
        if (isTag(elem)) return elem.name === 'br' ? '\n' : getText(elem.children);
        if (elem.type === ElementType.CDATA) return getText(elem.children);
        if (elem.type === ElementType.Text) return elem.data;
        return '';
      }

      /***/
    },
    /* 602 */
    /***/ function (module, exports) {
      var getChildren = (exports.getChildren = function (elem) {
        return elem.children;
      });

      var getParent = (exports.getParent = function (elem) {
        return elem.parent;
      });

      exports.getSiblings = function (elem) {
        var parent = getParent(elem);
        return parent ? getChildren(parent) : [elem];
      };

      exports.getAttributeValue = function (elem, name) {
        return elem.attribs && elem.attribs[name];
      };

      exports.hasAttrib = function (elem, name) {
        return !!elem.attribs && hasOwnProperty.call(elem.attribs, name);
      };

      exports.getName = function (elem) {
        return elem.name;
      };

      /***/
    },
    /* 603 */
    /***/ function (module, exports, __webpack_require__) {
      var encode = __webpack_require__(605),
        decode = __webpack_require__(604);

      exports.decode = function (data, level) {
        return (!level || level <= 0 ? decode.XML : decode.HTML)(data);
      };

      exports.decodeStrict = function (data, level) {
        return (!level || level <= 0 ? decode.XML : decode.HTMLStrict)(data);
      };

      exports.encode = function (data, level) {
        return (!level || level <= 0 ? encode.XML : encode.HTML)(data);
      };

      exports.encodeXML = encode.XML;

      exports.encodeHTML4 = exports.encodeHTML5 = exports.encodeHTML = encode.HTML;

      exports.decodeXML = exports.decodeXMLStrict = decode.XML;

      exports.decodeHTML4 = exports.decodeHTML5 = exports.decodeHTML = decode.HTML;

      exports.decodeHTML4Strict = exports.decodeHTML5Strict = exports.decodeHTMLStrict =
        decode.HTMLStrict;

      exports.escape = encode.escape;

      /***/
    },
    /* 604 */
    /***/ function (module, exports, __webpack_require__) {
      var entityMap = __webpack_require__(171),
        legacyMap = __webpack_require__(259),
        xmlMap = __webpack_require__(172),
        decodeCodePoint = __webpack_require__(258);

      var decodeXMLStrict = getStrictDecoder(xmlMap),
        decodeHTMLStrict = getStrictDecoder(entityMap);

      function getStrictDecoder(map) {
        var keys = Object.keys(map).join('|'),
          replace = getReplacer(map);

        keys += '|#[xX][\\da-fA-F]+|#\\d+';

        var re = new RegExp('&(?:' + keys + ');', 'g');

        return function (str) {
          return String(str).replace(re, replace);
        };
      }

      var decodeHTML = (function () {
        var legacy = Object.keys(legacyMap).sort(sorter);

        var keys = Object.keys(entityMap).sort(sorter);

        for (var i = 0, j = 0; i < keys.length; i++) {
          if (legacy[j] === keys[i]) {
            keys[i] += ';?';
            j++;
          } else {
            keys[i] += ';';
          }
        }

        var re = new RegExp('&(?:' + keys.join('|') + '|#[xX][\\da-fA-F]+;?|#\\d+;?)', 'g'),
          replace = getReplacer(entityMap);

        function replacer(str) {
          if (str.substr(-1) !== ';') str += ';';
          return replace(str);
        }

        //TODO consider creating a merged map
        return function (str) {
          return String(str).replace(re, replacer);
        };
      })();

      function sorter(a, b) {
        return a < b ? 1 : -1;
      }

      function getReplacer(map) {
        return function replace(str) {
          if (str.charAt(1) === '#') {
            if (str.charAt(2) === 'X' || str.charAt(2) === 'x') {
              return decodeCodePoint(parseInt(str.substr(3), 16));
            }
            return decodeCodePoint(parseInt(str.substr(2), 10));
          }
          return map[str.slice(1, -1)];
        };
      }

      module.exports = {
        XML: decodeXMLStrict,
        HTML: decodeHTML,
        HTMLStrict: decodeHTMLStrict,
      };

      /***/
    },
    /* 605 */
    /***/ function (module, exports, __webpack_require__) {
      var inverseXML = getInverseObj(__webpack_require__(172)),
        xmlReplacer = getInverseReplacer(inverseXML);

      exports.XML = getInverse(inverseXML, xmlReplacer);

      var inverseHTML = getInverseObj(__webpack_require__(171)),
        htmlReplacer = getInverseReplacer(inverseHTML);

      exports.HTML = getInverse(inverseHTML, htmlReplacer);

      function getInverseObj(obj) {
        return Object.keys(obj)
          .sort()
          .reduce(function (inverse, name) {
            inverse[obj[name]] = '&' + name + ';';
            return inverse;
          }, {});
      }

      function getInverseReplacer(inverse) {
        var single = [],
          multiple = [];

        Object.keys(inverse).forEach(function (k) {
          if (k.length === 1) {
            single.push('\\' + k);
          } else {
            multiple.push(k);
          }
        });

        //TODO add ranges
        multiple.unshift('[' + single.join('') + ']');

        return new RegExp(multiple.join('|'), 'g');
      }

      var re_nonASCII = /[^\0-\x7F]/g,
        re_astralSymbols = /[\uD800-\uDBFF][\uDC00-\uDFFF]/g;

      function singleCharReplacer(c) {
        return '&#x' + c.charCodeAt(0).toString(16).toUpperCase() + ';';
      }

      function astralReplacer(c) {
        // http://mathiasbynens.be/notes/javascript-encoding#surrogate-formulae
        var high = c.charCodeAt(0);
        var low = c.charCodeAt(1);
        var codePoint = (high - 0xd800) * 0x400 + low - 0xdc00 + 0x10000;
        return '&#x' + codePoint.toString(16).toUpperCase() + ';';
      }

      function getInverse(inverse, re) {
        function func(name) {
          return inverse[name];
        }

        return function (data) {
          return data
            .replace(re, func)
            .replace(re_astralSymbols, astralReplacer)
            .replace(re_nonASCII, singleCharReplacer);
        };
      }

      var re_xmlChars = getInverseReplacer(inverseXML);

      function escapeXML(data) {
        return data
          .replace(re_xmlChars, singleCharReplacer)
          .replace(re_astralSymbols, astralReplacer)
          .replace(re_nonASCII, singleCharReplacer);
      }

      exports.escape = escapeXML;

      /***/
    },
    /* 606 */
    /***/ function (module, exports) {
      module.exports = {
        0: 65533,
        128: 8364,
        130: 8218,
        131: 402,
        132: 8222,
        133: 8230,
        134: 8224,
        135: 8225,
        136: 710,
        137: 8240,
        138: 352,
        139: 8249,
        140: 338,
        142: 381,
        145: 8216,
        146: 8217,
        147: 8220,
        148: 8221,
        149: 8226,
        150: 8211,
        151: 8212,
        152: 732,
        153: 8482,
        154: 353,
        155: 8250,
        156: 339,
        158: 382,
        159: 376,
      };

      /***/
    },
    /* 607 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';

      /**
       * Copyright (c) 2013-present, Facebook, Inc.
       * All rights reserved.
       *
       * This source code is licensed under the BSD-style license found in the
       * LICENSE file in the root directory of this source tree. An additional grant
       * of patent rights can be found in the PATENTS file in the same directory.
       *
       * @typechecks
       */

      var _hyphenPattern = /-(.)/g;

      /**
       * Camelcases a hyphenated string, for example:
       *
       *   > camelize('background-color')
       *   < "backgroundColor"
       *
       * @param {string} string
       * @return {string}
       */
      function camelize(string) {
        return string.replace(_hyphenPattern, function (_, character) {
          return character.toUpperCase();
        });
      }

      module.exports = camelize;

      /***/
    },
    /* 608 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';
      /**
       * Copyright (c) 2013-present, Facebook, Inc.
       * All rights reserved.
       *
       * This source code is licensed under the BSD-style license found in the
       * LICENSE file in the root directory of this source tree. An additional grant
       * of patent rights can be found in the PATENTS file in the same directory.
       *
       * @typechecks
       */

      var camelize = __webpack_require__(607);

      var msPattern = /^-ms-/;

      /**
       * Camelcases a hyphenated CSS property name, for example:
       *
       *   > camelizeStyleName('background-color')
       *   < "backgroundColor"
       *   > camelizeStyleName('-moz-transition')
       *   < "MozTransition"
       *   > camelizeStyleName('-ms-transition')
       *   < "msTransition"
       *
       * As Andi Smith suggests
       * (http://www.andismith.com/blog/2012/02/modernizr-prefixed/), an `-ms` prefix
       * is converted to lowercase `ms`.
       *
       * @param {string} string
       * @return {string}
       */
      function camelizeStyleName(string) {
        return camelize(string.replace(msPattern, 'ms-'));
      }

      module.exports = camelizeStyleName;

      /***/
    },
    /* 609 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';

      /**
       * Copyright (c) 2013-present, Facebook, Inc.
       * All rights reserved.
       *
       * This source code is licensed under the BSD-style license found in the
       * LICENSE file in the root directory of this source tree. An additional grant
       * of patent rights can be found in the PATENTS file in the same directory.
       *
       *
       */

      var isTextNode = __webpack_require__(617);

      /*eslint-disable no-bitwise */

      /**
       * Checks if a given DOM node contains or is another DOM node.
       */
      function containsNode(outerNode, innerNode) {
        if (!outerNode || !innerNode) {
          return false;
        } else if (outerNode === innerNode) {
          return true;
        } else if (isTextNode(outerNode)) {
          return false;
        } else if (isTextNode(innerNode)) {
          return containsNode(outerNode, innerNode.parentNode);
        } else if ('contains' in outerNode) {
          return outerNode.contains(innerNode);
        } else if (outerNode.compareDocumentPosition) {
          return !!(outerNode.compareDocumentPosition(innerNode) & 16);
        } else {
          return false;
        }
      }

      module.exports = containsNode;

      /***/
    },
    /* 610 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';
      /* WEBPACK VAR INJECTION */ (function (process) {
        /**
         * Copyright (c) 2013-present, Facebook, Inc.
         * All rights reserved.
         *
         * This source code is licensed under the BSD-style license found in the
         * LICENSE file in the root directory of this source tree. An additional grant
         * of patent rights can be found in the PATENTS file in the same directory.
         *
         * @typechecks
         */

        var invariant = __webpack_require__(2);

        /**
         * Convert array-like objects to arrays.
         *
         * This API assumes the caller knows the contents of the data type. For less
         * well defined inputs use createArrayFromMixed.
         *
         * @param {object|function|filelist} obj
         * @return {array}
         */
        function toArray(obj) {
          var length = obj.length;

          // Some browsers builtin objects can report typeof 'function' (e.g. NodeList
          // in old versions of Safari).
          !(!Array.isArray(obj) && (typeof obj === 'object' || typeof obj === 'function'))
            ? process.env.NODE_ENV !== 'production'
              ? invariant(false, 'toArray: Array-like object expected')
              : invariant(false)
            : void 0;

          !(typeof length === 'number')
            ? process.env.NODE_ENV !== 'production'
              ? invariant(false, 'toArray: Object needs a length property')
              : invariant(false)
            : void 0;

          !(length === 0 || length - 1 in obj)
            ? process.env.NODE_ENV !== 'production'
              ? invariant(false, 'toArray: Object should have keys for indices')
              : invariant(false)
            : void 0;

          !(typeof obj.callee !== 'function')
            ? process.env.NODE_ENV !== 'production'
              ? invariant(
                  false,
                  "toArray: Object can't be `arguments`. Use rest params " +
                    '(function(...args) {}) or Array.from() instead.'
                )
              : invariant(false)
            : void 0;

          // Old IE doesn't give collections access to hasOwnProperty. Assume inputs
          // without method will throw during the slice call and skip straight to the
          // fallback.
          if (obj.hasOwnProperty) {
            try {
              return Array.prototype.slice.call(obj);
            } catch (e) {
              // IE < 9 does not support Array#slice on collections objects
            }
          }

          // Fall back to copying key by key. This assumes all keys have a value,
          // so will not preserve sparsely populated inputs.
          var ret = Array(length);
          for (var ii = 0; ii < length; ii++) {
            ret[ii] = obj[ii];
          }
          return ret;
        }

        /**
         * Perform a heuristic test to determine if an object is "array-like".
         *
         *   A monk asked Joshu, a Zen master, "Has a dog Buddha nature?"
         *   Joshu replied: "Mu."
         *
         * This function determines if its argument has "array nature": it returns
         * true if the argument is an actual array, an `arguments' object, or an
         * HTMLCollection (e.g. node.childNodes or node.getElementsByTagName()).
         *
         * It will return false for other array-like objects like Filelist.
         *
         * @param {*} obj
         * @return {boolean}
         */
        function hasArrayNature(obj) {
          return (
            // not null/false
            !!obj &&
            // arrays are objects, NodeLists are functions in Safari
            (typeof obj == 'object' || typeof obj == 'function') &&
            // quacks like an array
            'length' in obj &&
            // not window
            !('setInterval' in obj) &&
            // no DOM node should be considered an array-like
            // a 'select' element has 'length' and 'item' properties on IE8
            typeof obj.nodeType != 'number' &&
            // a real array
            (Array.isArray(obj) ||
              // arguments
              'callee' in obj ||
              // HTMLCollection/NodeList
              'item' in obj)
          );
        }

        /**
         * Ensure that the argument is an array by wrapping it in an array if it is not.
         * Creates a copy of the argument if it is already an array.
         *
         * This is mostly useful idiomatically:
         *
         *   var createArrayFromMixed = require('createArrayFromMixed');
         *
         *   function takesOneOrMoreThings(things) {
         *     things = createArrayFromMixed(things);
         *     ...
         *   }
         *
         * This allows you to treat `things' as an array, but accept scalars in the API.
         *
         * If you need to convert an array-like object, like `arguments`, into an array
         * use toArray instead.
         *
         * @param {*} obj
         * @return {array}
         */
        function createArrayFromMixed(obj) {
          if (!hasArrayNature(obj)) {
            return [obj];
          } else if (Array.isArray(obj)) {
            return obj.slice();
          } else {
            return toArray(obj);
          }
        }

        module.exports = createArrayFromMixed;
        /* WEBPACK VAR INJECTION */
      }.call(exports, __webpack_require__(1)));

      /***/
    },
    /* 611 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';
      /* WEBPACK VAR INJECTION */ (function (process) {
        /**
         * Copyright (c) 2013-present, Facebook, Inc.
         * All rights reserved.
         *
         * This source code is licensed under the BSD-style license found in the
         * LICENSE file in the root directory of this source tree. An additional grant
         * of patent rights can be found in the PATENTS file in the same directory.
         *
         * @typechecks
         */

        /*eslint-disable fb-www/unsafe-html*/

        var ExecutionEnvironment = __webpack_require__(18);

        var createArrayFromMixed = __webpack_require__(610);
        var getMarkupWrap = __webpack_require__(612);
        var invariant = __webpack_require__(2);

        /**
         * Dummy container used to render all markup.
         */
        var dummyNode = ExecutionEnvironment.canUseDOM ? document.createElement('div') : null;

        /**
         * Pattern used by `getNodeName`.
         */
        var nodeNamePattern = /^\s*<(\w+)/;

        /**
         * Extracts the `nodeName` of the first element in a string of markup.
         *
         * @param {string} markup String of markup.
         * @return {?string} Node name of the supplied markup.
         */
        function getNodeName(markup) {
          var nodeNameMatch = markup.match(nodeNamePattern);
          return nodeNameMatch && nodeNameMatch[1].toLowerCase();
        }

        /**
         * Creates an array containing the nodes rendered from the supplied markup. The
         * optionally supplied `handleScript` function will be invoked once for each
         * <script> element that is rendered. If no `handleScript` function is supplied,
         * an exception is thrown if any <script> elements are rendered.
         *
         * @param {string} markup A string of valid HTML markup.
         * @param {?function} handleScript Invoked once for each rendered <script>.
         * @return {array<DOMElement|DOMTextNode>} An array of rendered nodes.
         */
        function createNodesFromMarkup(markup, handleScript) {
          var node = dummyNode;
          !!!dummyNode
            ? process.env.NODE_ENV !== 'production'
              ? invariant(false, 'createNodesFromMarkup dummy not initialized')
              : invariant(false)
            : void 0;
          var nodeName = getNodeName(markup);

          var wrap = nodeName && getMarkupWrap(nodeName);
          if (wrap) {
            node.innerHTML = wrap[1] + markup + wrap[2];

            var wrapDepth = wrap[0];
            while (wrapDepth--) {
              node = node.lastChild;
            }
          } else {
            node.innerHTML = markup;
          }

          var scripts = node.getElementsByTagName('script');
          if (scripts.length) {
            !handleScript
              ? process.env.NODE_ENV !== 'production'
                ? invariant(
                    false,
                    'createNodesFromMarkup(...): Unexpected <script> element rendered.'
                  )
                : invariant(false)
              : void 0;
            createArrayFromMixed(scripts).forEach(handleScript);
          }

          var nodes = Array.from(node.childNodes);
          while (node.lastChild) {
            node.removeChild(node.lastChild);
          }
          return nodes;
        }

        module.exports = createNodesFromMarkup;
        /* WEBPACK VAR INJECTION */
      }.call(exports, __webpack_require__(1)));

      /***/
    },
    /* 612 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';
      /* WEBPACK VAR INJECTION */ (function (process) {
        /**
         * Copyright (c) 2013-present, Facebook, Inc.
         * All rights reserved.
         *
         * This source code is licensed under the BSD-style license found in the
         * LICENSE file in the root directory of this source tree. An additional grant
         * of patent rights can be found in the PATENTS file in the same directory.
         *
         */

        /*eslint-disable fb-www/unsafe-html */

        var ExecutionEnvironment = __webpack_require__(18);

        var invariant = __webpack_require__(2);

        /**
         * Dummy container used to detect which wraps are necessary.
         */
        var dummyNode = ExecutionEnvironment.canUseDOM ? document.createElement('div') : null;

        /**
         * Some browsers cannot use `innerHTML` to render certain elements standalone,
         * so we wrap them, render the wrapped nodes, then extract the desired node.
         *
         * In IE8, certain elements cannot render alone, so wrap all elements ('*').
         */

        var shouldWrap = {};

        var selectWrap = [1, '<select multiple="true">', '</select>'];
        var tableWrap = [1, '<table>', '</table>'];
        var trWrap = [3, '<table><tbody><tr>', '</tr></tbody></table>'];

        var svgWrap = [1, '<svg xmlns="http://www.w3.org/2000/svg">', '</svg>'];

        var markupWrap = {
          '*': [1, '?<div>', '</div>'],

          area: [1, '<map>', '</map>'],
          col: [2, '<table><tbody></tbody><colgroup>', '</colgroup></table>'],
          legend: [1, '<fieldset>', '</fieldset>'],
          param: [1, '<object>', '</object>'],
          tr: [2, '<table><tbody>', '</tbody></table>'],

          optgroup: selectWrap,
          option: selectWrap,

          caption: tableWrap,
          colgroup: tableWrap,
          tbody: tableWrap,
          tfoot: tableWrap,
          thead: tableWrap,

          td: trWrap,
          th: trWrap,
        };

        // Initialize the SVG elements since we know they'll always need to be wrapped
        // consistently. If they are created inside a <div> they will be initialized in
        // the wrong namespace (and will not display).
        var svgElements = [
          'circle',
          'clipPath',
          'defs',
          'ellipse',
          'g',
          'image',
          'line',
          'linearGradient',
          'mask',
          'path',
          'pattern',
          'polygon',
          'polyline',
          'radialGradient',
          'rect',
          'stop',
          'text',
          'tspan',
        ];
        svgElements.forEach(function (nodeName) {
          markupWrap[nodeName] = svgWrap;
          shouldWrap[nodeName] = true;
        });

        /**
         * Gets the markup wrap configuration for the supplied `nodeName`.
         *
         * NOTE: This lazily detects which wraps are necessary for the current browser.
         *
         * @param {string} nodeName Lowercase `nodeName`.
         * @return {?array} Markup wrap configuration, if applicable.
         */
        function getMarkupWrap(nodeName) {
          !!!dummyNode
            ? process.env.NODE_ENV !== 'production'
              ? invariant(false, 'Markup wrapping node not initialized')
              : invariant(false)
            : void 0;
          if (!markupWrap.hasOwnProperty(nodeName)) {
            nodeName = '*';
          }
          if (!shouldWrap.hasOwnProperty(nodeName)) {
            if (nodeName === '*') {
              dummyNode.innerHTML = '<link />';
            } else {
              dummyNode.innerHTML = '<' + nodeName + '></' + nodeName + '>';
            }
            shouldWrap[nodeName] = !dummyNode.firstChild;
          }
          return shouldWrap[nodeName] ? markupWrap[nodeName] : null;
        }

        module.exports = getMarkupWrap;
        /* WEBPACK VAR INJECTION */
      }.call(exports, __webpack_require__(1)));

      /***/
    },
    /* 613 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';
      /**
       * Copyright (c) 2013-present, Facebook, Inc.
       * All rights reserved.
       *
       * This source code is licensed under the BSD-style license found in the
       * LICENSE file in the root directory of this source tree. An additional grant
       * of patent rights can be found in the PATENTS file in the same directory.
       *
       * @typechecks
       */

      /**
       * Gets the scroll position of the supplied element or window.
       *
       * The return values are unbounded, unlike `getScrollPosition`. This means they
       * may be negative or exceed the element boundaries (which is possible using
       * inertial scrolling).
       *
       * @param {DOMWindow|DOMElement} scrollable
       * @return {object} Map with `x` and `y` keys.
       */

      function getUnboundedScrollPosition(scrollable) {
        if (scrollable === window) {
          return {
            x: window.pageXOffset || document.documentElement.scrollLeft,
            y: window.pageYOffset || document.documentElement.scrollTop,
          };
        }
        return {
          x: scrollable.scrollLeft,
          y: scrollable.scrollTop,
        };
      }

      module.exports = getUnboundedScrollPosition;

      /***/
    },
    /* 614 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';

      /**
       * Copyright (c) 2013-present, Facebook, Inc.
       * All rights reserved.
       *
       * This source code is licensed under the BSD-style license found in the
       * LICENSE file in the root directory of this source tree. An additional grant
       * of patent rights can be found in the PATENTS file in the same directory.
       *
       * @typechecks
       */

      var _uppercasePattern = /([A-Z])/g;

      /**
       * Hyphenates a camelcased string, for example:
       *
       *   > hyphenate('backgroundColor')
       *   < "background-color"
       *
       * For CSS style names, use `hyphenateStyleName` instead which works properly
       * with all vendor prefixes, including `ms`.
       *
       * @param {string} string
       * @return {string}
       */
      function hyphenate(string) {
        return string.replace(_uppercasePattern, '-$1').toLowerCase();
      }

      module.exports = hyphenate;

      /***/
    },
    /* 615 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';
      /**
       * Copyright (c) 2013-present, Facebook, Inc.
       * All rights reserved.
       *
       * This source code is licensed under the BSD-style license found in the
       * LICENSE file in the root directory of this source tree. An additional grant
       * of patent rights can be found in the PATENTS file in the same directory.
       *
       * @typechecks
       */

      var hyphenate = __webpack_require__(614);

      var msPattern = /^ms-/;

      /**
       * Hyphenates a camelcased CSS property name, for example:
       *
       *   > hyphenateStyleName('backgroundColor')
       *   < "background-color"
       *   > hyphenateStyleName('MozTransition')
       *   < "-moz-transition"
       *   > hyphenateStyleName('msTransition')
       *   < "-ms-transition"
       *
       * As Modernizr suggests (http://modernizr.com/docs/#prefixed), an `ms` prefix
       * is converted to `-ms-`.
       *
       * @param {string} string
       * @return {string}
       */
      function hyphenateStyleName(string) {
        return hyphenate(string).replace(msPattern, '-ms-');
      }

      module.exports = hyphenateStyleName;

      /***/
    },
    /* 616 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';

      /**
       * Copyright (c) 2013-present, Facebook, Inc.
       * All rights reserved.
       *
       * This source code is licensed under the BSD-style license found in the
       * LICENSE file in the root directory of this source tree. An additional grant
       * of patent rights can be found in the PATENTS file in the same directory.
       *
       * @typechecks
       */

      /**
       * @param {*} object The object to check.
       * @return {boolean} Whether or not the object is a DOM node.
       */
      function isNode(object) {
        return !!(
          object &&
          (typeof Node === 'function'
            ? object instanceof Node
            : typeof object === 'object' &&
              typeof object.nodeType === 'number' &&
              typeof object.nodeName === 'string')
        );
      }

      module.exports = isNode;

      /***/
    },
    /* 617 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';

      /**
       * Copyright (c) 2013-present, Facebook, Inc.
       * All rights reserved.
       *
       * This source code is licensed under the BSD-style license found in the
       * LICENSE file in the root directory of this source tree. An additional grant
       * of patent rights can be found in the PATENTS file in the same directory.
       *
       * @typechecks
       */

      var isNode = __webpack_require__(616);

      /**
       * @param {*} object The object to check.
       * @return {boolean} Whether or not the object is a DOM text node.
       */
      function isTextNode(object) {
        return isNode(object) && object.nodeType == 3;
      }

      module.exports = isTextNode;

      /***/
    },
    /* 618 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';
      /**
       * Copyright (c) 2013-present, Facebook, Inc.
       * All rights reserved.
       *
       * This source code is licensed under the BSD-style license found in the
       * LICENSE file in the root directory of this source tree. An additional grant
       * of patent rights can be found in the PATENTS file in the same directory.
       *
       *
       * @typechecks static-only
       */

      /**
       * Memoizes the return value of a function that accepts one string argument.
       */

      function memoizeStringOnly(callback) {
        var cache = {};
        return function (string) {
          if (!cache.hasOwnProperty(string)) {
            cache[string] = callback.call(this, string);
          }
          return cache[string];
        };
      }

      module.exports = memoizeStringOnly;

      /***/
    },
    /* 619 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';
      /**
       * Copyright (c) 2013-present, Facebook, Inc.
       * All rights reserved.
       *
       * This source code is licensed under the BSD-style license found in the
       * LICENSE file in the root directory of this source tree. An additional grant
       * of patent rights can be found in the PATENTS file in the same directory.
       *
       * @typechecks
       */

      var ExecutionEnvironment = __webpack_require__(18);

      var performance;

      if (ExecutionEnvironment.canUseDOM) {
        performance = window.performance || window.msPerformance || window.webkitPerformance;
      }

      module.exports = performance || {};

      /***/
    },
    /* 620 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';

      /**
       * Copyright (c) 2013-present, Facebook, Inc.
       * All rights reserved.
       *
       * This source code is licensed under the BSD-style license found in the
       * LICENSE file in the root directory of this source tree. An additional grant
       * of patent rights can be found in the PATENTS file in the same directory.
       *
       * @typechecks
       */

      var performance = __webpack_require__(619);

      var performanceNow;

      /**
       * Detect if we can use `window.performance.now()` and gracefully fallback to
       * `Date.now()` if it doesn't exist. We need to support Firefox < 15 for now
       * because of Facebook's testing infrastructure.
       */
      if (performance.now) {
        performanceNow = function performanceNow() {
          return performance.now();
        };
      } else {
        performanceNow = function performanceNow() {
          return Date.now();
        };
      }

      module.exports = performanceNow;

      /***/
    },
    /* 621 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';
      /**
       * Copyright 2015, Yahoo! Inc.
       * Copyrights licensed under the New BSD License. See the accompanying LICENSE file for terms.
       */

      var REACT_STATICS = {
        childContextTypes: true,
        contextTypes: true,
        defaultProps: true,
        displayName: true,
        getDefaultProps: true,
        mixins: true,
        propTypes: true,
        type: true,
      };

      var KNOWN_STATICS = {
        name: true,
        length: true,
        prototype: true,
        caller: true,
        arguments: true,
        arity: true,
      };

      var isGetOwnPropertySymbolsAvailable = typeof Object.getOwnPropertySymbols === 'function';

      module.exports = function hoistNonReactStatics(
        targetComponent,
        sourceComponent,
        customStatics
      ) {
        if (typeof sourceComponent !== 'string') {
          // don't hoist over string (html) components
          var keys = Object.getOwnPropertyNames(sourceComponent);

          /* istanbul ignore else */
          if (isGetOwnPropertySymbolsAvailable) {
            keys = keys.concat(Object.getOwnPropertySymbols(sourceComponent));
          }

          for (var i = 0; i < keys.length; ++i) {
            if (
              !REACT_STATICS[keys[i]] &&
              !KNOWN_STATICS[keys[i]] &&
              (!customStatics || !customStatics[keys[i]])
            ) {
              try {
                targetComponent[keys[i]] = sourceComponent[keys[i]];
              } catch (error) {}
            }
          }
        }

        return targetComponent;
      };

      /***/
    },
    /* 622 */
    /***/ function (module, exports, __webpack_require__) {
      module.exports = CollectingHandler;

      function CollectingHandler(cbs) {
        this._cbs = cbs || {};
        this.events = [];
      }

      var EVENTS = __webpack_require__(95).EVENTS;
      Object.keys(EVENTS).forEach(function (name) {
        if (EVENTS[name] === 0) {
          name = 'on' + name;
          CollectingHandler.prototype[name] = function () {
            this.events.push([name]);
            if (this._cbs[name]) this._cbs[name]();
          };
        } else if (EVENTS[name] === 1) {
          name = 'on' + name;
          CollectingHandler.prototype[name] = function (a) {
            this.events.push([name, a]);
            if (this._cbs[name]) this._cbs[name](a);
          };
        } else if (EVENTS[name] === 2) {
          name = 'on' + name;
          CollectingHandler.prototype[name] = function (a, b) {
            this.events.push([name, a, b]);
            if (this._cbs[name]) this._cbs[name](a, b);
          };
        } else {
          throw Error('wrong number of arguments');
        }
      });

      CollectingHandler.prototype.onreset = function () {
        this.events = [];
        if (this._cbs.onreset) this._cbs.onreset();
      };

      CollectingHandler.prototype.restart = function () {
        if (this._cbs.onreset) this._cbs.onreset();

        for (var i = 0, len = this.events.length; i < len; i++) {
          if (this._cbs[this.events[i][0]]) {
            var num = this.events[i].length;

            if (num === 1) {
              this._cbs[this.events[i][0]]();
            } else if (num === 2) {
              this._cbs[this.events[i][0]](this.events[i][1]);
            } else {
              this._cbs[this.events[i][0]](this.events[i][1], this.events[i][2]);
            }
          }
        }
      };

      /***/
    },
    /* 623 */
    /***/ function (module, exports, __webpack_require__) {
      var index = __webpack_require__(95),
        DomHandler = index.DomHandler,
        DomUtils = index.DomUtils;

      //TODO: make this a streamable handler
      function FeedHandler(callback, options) {
        this.init(callback, options);
      }

      __webpack_require__(40)(FeedHandler, DomHandler);

      FeedHandler.prototype.init = DomHandler;

      function getElements(what, where) {
        return DomUtils.getElementsByTagName(what, where, true);
      }
      function getOneElement(what, where) {
        return DomUtils.getElementsByTagName(what, where, true, 1)[0];
      }
      function fetch(what, where, recurse) {
        return DomUtils.getText(DomUtils.getElementsByTagName(what, where, recurse, 1)).trim();
      }

      function addConditionally(obj, prop, what, where, recurse) {
        var tmp = fetch(what, where, recurse);
        if (tmp) obj[prop] = tmp;
      }

      var isValidFeed = function (value) {
        return value === 'rss' || value === 'feed' || value === 'rdf:RDF';
      };

      FeedHandler.prototype.onend = function () {
        var feed = {},
          feedRoot = getOneElement(isValidFeed, this.dom),
          tmp,
          childs;

        if (feedRoot) {
          if (feedRoot.name === 'feed') {
            childs = feedRoot.children;

            feed.type = 'atom';
            addConditionally(feed, 'id', 'id', childs);
            addConditionally(feed, 'title', 'title', childs);
            if ((tmp = getOneElement('link', childs)) && (tmp = tmp.attribs) && (tmp = tmp.href))
              feed.link = tmp;
            addConditionally(feed, 'description', 'subtitle', childs);
            if ((tmp = fetch('updated', childs))) feed.updated = new Date(tmp);
            addConditionally(feed, 'author', 'email', childs, true);

            feed.items = getElements('entry', childs).map(function (item) {
              var entry = {},
                tmp;

              item = item.children;

              addConditionally(entry, 'id', 'id', item);
              addConditionally(entry, 'title', 'title', item);
              if ((tmp = getOneElement('link', item)) && (tmp = tmp.attribs) && (tmp = tmp.href))
                entry.link = tmp;
              if ((tmp = fetch('summary', item) || fetch('content', item))) entry.description = tmp;
              if ((tmp = fetch('updated', item))) entry.pubDate = new Date(tmp);
              return entry;
            });
          } else {
            childs = getOneElement('channel', feedRoot.children).children;

            feed.type = feedRoot.name.substr(0, 3);
            feed.id = '';
            addConditionally(feed, 'title', 'title', childs);
            addConditionally(feed, 'link', 'link', childs);
            addConditionally(feed, 'description', 'description', childs);
            if ((tmp = fetch('lastBuildDate', childs))) feed.updated = new Date(tmp);
            addConditionally(feed, 'author', 'managingEditor', childs, true);

            feed.items = getElements('item', feedRoot.children).map(function (item) {
              var entry = {},
                tmp;

              item = item.children;

              addConditionally(entry, 'id', 'guid', item);
              addConditionally(entry, 'title', 'title', item);
              addConditionally(entry, 'link', 'link', item);
              addConditionally(entry, 'description', 'description', item);
              if ((tmp = fetch('pubDate', item))) entry.pubDate = new Date(tmp);
              return entry;
            });
          }
        }
        this.dom = feed;
        DomHandler.prototype._handleCallback.call(
          this,
          feedRoot ? null : Error("couldn't find root of feed")
        );
      };

      module.exports = FeedHandler;

      /***/
    },
    /* 624 */
    /***/ function (module, exports, __webpack_require__) {
      module.exports = ProxyHandler;

      function ProxyHandler(cbs) {
        this._cbs = cbs || {};
      }

      var EVENTS = __webpack_require__(95).EVENTS;
      Object.keys(EVENTS).forEach(function (name) {
        if (EVENTS[name] === 0) {
          name = 'on' + name;
          ProxyHandler.prototype[name] = function () {
            if (this._cbs[name]) this._cbs[name]();
          };
        } else if (EVENTS[name] === 1) {
          name = 'on' + name;
          ProxyHandler.prototype[name] = function (a) {
            if (this._cbs[name]) this._cbs[name](a);
          };
        } else if (EVENTS[name] === 2) {
          name = 'on' + name;
          ProxyHandler.prototype[name] = function (a, b) {
            if (this._cbs[name]) this._cbs[name](a, b);
          };
        } else {
          throw Error('wrong number of arguments');
        }
      });

      /***/
    },
    /* 625 */
    /***/ function (module, exports, __webpack_require__) {
      module.exports = Stream;

      var Parser = __webpack_require__(265);

      function Stream(options) {
        Parser.call(this, new Cbs(this), options);
      }

      __webpack_require__(40)(Stream, Parser);

      Stream.prototype.readable = true;

      function Cbs(scope) {
        this.scope = scope;
      }

      var EVENTS = __webpack_require__(95).EVENTS;

      Object.keys(EVENTS).forEach(function (name) {
        if (EVENTS[name] === 0) {
          Cbs.prototype['on' + name] = function () {
            this.scope.emit(name);
          };
        } else if (EVENTS[name] === 1) {
          Cbs.prototype['on' + name] = function (a) {
            this.scope.emit(name, a);
          };
        } else if (EVENTS[name] === 2) {
          Cbs.prototype['on' + name] = function (a, b) {
            this.scope.emit(name, a, b);
          };
        } else {
          throw Error('wrong number of arguments!');
        }
      });

      /***/
    },
    /* 626 */
    /***/ function (module, exports) {
      exports.read = function (buffer, offset, isLE, mLen, nBytes) {
        var e, m;
        var eLen = nBytes * 8 - mLen - 1;
        var eMax = (1 << eLen) - 1;
        var eBias = eMax >> 1;
        var nBits = -7;
        var i = isLE ? nBytes - 1 : 0;
        var d = isLE ? -1 : 1;
        var s = buffer[offset + i];

        i += d;

        e = s & ((1 << -nBits) - 1);
        s >>= -nBits;
        nBits += eLen;
        for (; nBits > 0; e = e * 256 + buffer[offset + i], i += d, nBits -= 8) {}

        m = e & ((1 << -nBits) - 1);
        e >>= -nBits;
        nBits += mLen;
        for (; nBits > 0; m = m * 256 + buffer[offset + i], i += d, nBits -= 8) {}

        if (e === 0) {
          e = 1 - eBias;
        } else if (e === eMax) {
          return m ? NaN : (s ? -1 : 1) * Infinity;
        } else {
          m = m + Math.pow(2, mLen);
          e = e - eBias;
        }
        return (s ? -1 : 1) * m * Math.pow(2, e - mLen);
      };

      exports.write = function (buffer, value, offset, isLE, mLen, nBytes) {
        var e, m, c;
        var eLen = nBytes * 8 - mLen - 1;
        var eMax = (1 << eLen) - 1;
        var eBias = eMax >> 1;
        var rt = mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0;
        var i = isLE ? 0 : nBytes - 1;
        var d = isLE ? 1 : -1;
        var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0;

        value = Math.abs(value);

        if (isNaN(value) || value === Infinity) {
          m = isNaN(value) ? 1 : 0;
          e = eMax;
        } else {
          e = Math.floor(Math.log(value) / Math.LN2);
          if (value * (c = Math.pow(2, -e)) < 1) {
            e--;
            c *= 2;
          }
          if (e + eBias >= 1) {
            value += rt / c;
          } else {
            value += rt * Math.pow(2, 1 - eBias);
          }
          if (value * c >= 2) {
            e++;
            c /= 2;
          }

          if (e + eBias >= eMax) {
            m = 0;
            e = eMax;
          } else if (e + eBias >= 1) {
            m = (value * c - 1) * Math.pow(2, mLen);
            e = e + eBias;
          } else {
            m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen);
            e = 0;
          }
        }

        for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}

        e = (e << mLen) | m;
        eLen += mLen;
        for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}

        buffer[offset + i - d] |= s * 128;
      };

      /***/
    },
    /* 627 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';
      /* WEBPACK VAR INJECTION */ (function (process) {
        /**
         * Copyright 2013-2015, Facebook, Inc.
         * All rights reserved.
         *
         * This source code is licensed under the BSD-style license found in the
         * LICENSE file in the root directory of this source tree. An additional grant
         * of patent rights can be found in the PATENTS file in the same directory.
         */

        /**
         * Use invariant() to assert state which your program assumes to be true.
         *
         * Provide sprintf-style format (only %s is supported) and arguments
         * to provide information about what broke and what you were
         * expecting.
         *
         * The invariant message will be stripped in production, but the invariant
         * will remain to ensure logic does not differ in production.
         */

        var invariant = function (condition, format, a, b, c, d, e, f) {
          if (process.env.NODE_ENV !== 'production') {
            if (format === undefined) {
              throw new Error('invariant requires an error message argument');
            }
          }

          if (!condition) {
            var error;
            if (format === undefined) {
              error = new Error(
                'Minified exception occurred; use the non-minified dev environment ' +
                  'for the full error message and additional helpful warnings.'
              );
            } else {
              var args = [a, b, c, d, e, f];
              var argIndex = 0;
              error = new Error(
                format.replace(/%s/g, function () {
                  return args[argIndex++];
                })
              );
              error.name = 'Invariant Violation';
            }

            error.framesToPop = 1; // we don't care about invariant's own frame
            throw error;
          }
        };

        module.exports = invariant;

        /* WEBPACK VAR INJECTION */
      }.call(exports, __webpack_require__(1)));

      /***/
    },
    /* 628 */
    /***/ function (module, exports, __webpack_require__) {
      /**
       * Module dependencies
       */

      var debug = __webpack_require__(589)('jsonp');

      /**
       * Module exports.
       */

      module.exports = jsonp;

      /**
       * Callback index.
       */

      var count = 0;

      /**
       * Noop function.
       */

      function noop() {}

      /**
       * JSONP handler
       *
       * Options:
       *  - param {String} qs parameter (`callback`)
       *  - prefix {String} qs parameter (`__jp`)
       *  - name {String} qs parameter (`prefix` + incr)
       *  - timeout {Number} how long after a timeout error is emitted (`60000`)
       *
       * @param {String} url
       * @param {Object|Function} optional options / callback
       * @param {Function} optional callback
       */

      function jsonp(url, opts, fn) {
        if ('function' == typeof opts) {
          fn = opts;
          opts = {};
        }
        if (!opts) opts = {};

        var prefix = opts.prefix || '__jp';

        // use the callback name that was passed if one was provided.
        // otherwise generate a unique name by incrementing our counter.
        var id = opts.name || prefix + count++;

        var param = opts.param || 'callback';
        var timeout = null != opts.timeout ? opts.timeout : 60000;
        var enc = encodeURIComponent;
        var target = document.getElementsByTagName('script')[0] || document.head;
        var script;
        var timer;

        if (timeout) {
          timer = setTimeout(function () {
            cleanup();
            if (fn) fn(new Error('Timeout'));
          }, timeout);
        }

        function cleanup() {
          if (script.parentNode) script.parentNode.removeChild(script);
          window[id] = noop;
          if (timer) clearTimeout(timer);
        }

        function cancel() {
          if (window[id]) {
            cleanup();
          }
        }

        window[id] = function (data) {
          debug('jsonp got', data);
          cleanup();
          if (fn) fn(null, data);
        };

        // add qs component
        url += (~url.indexOf('?') ? '&' : '?') + param + '=' + enc(id);
        url = url.replace('?&', '?');

        debug('jsonp req "%s"', url);

        // create script
        script = document.createElement('script');
        script.src = url;
        target.parentNode.insertBefore(script, target);

        return cancel;
      }

      /***/
    },
    /* 629 */
    /***/ function (module, __webpack_exports__, __webpack_require__) {
      'use strict';
      /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__Symbol_js__ = __webpack_require__(267);
      /* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__getRawTag_js__ = __webpack_require__(
        632
      );
      /* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__objectToString_js__ = __webpack_require__(
        633
      );

      /** `Object#toString` result references. */
      var nullTag = '[object Null]',
        undefinedTag = '[object Undefined]';

      /** Built-in value references. */
      var symToStringTag = __WEBPACK_IMPORTED_MODULE_0__Symbol_js__['a' /* default */]
        ? __WEBPACK_IMPORTED_MODULE_0__Symbol_js__['a' /* default */].toStringTag
        : undefined;

      /**
       * The base implementation of `getTag` without fallbacks for buggy environments.
       *
       * @private
       * @param {*} value The value to query.
       * @returns {string} Returns the `toStringTag`.
       */
      function baseGetTag(value) {
        if (value == null) {
          return value === undefined ? undefinedTag : nullTag;
        }
        return symToStringTag && symToStringTag in Object(value)
          ? __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_1__getRawTag_js__['a' /* default */])(
              value
            )
          : __webpack_require__.i(
              __WEBPACK_IMPORTED_MODULE_2__objectToString_js__['a' /* default */]
            )(value);
      }

      /* harmony default export */ __webpack_exports__['a'] = baseGetTag;

      /***/
    },
    /* 630 */
    /***/ function (module, __webpack_exports__, __webpack_require__) {
      'use strict';
      /* WEBPACK VAR INJECTION */ (function (global) {
        /** Detect free variable `global` from Node.js. */
        var freeGlobal = typeof global == 'object' && global && global.Object === Object && global;

        /* harmony default export */ __webpack_exports__['a'] = freeGlobal;

        /* WEBPACK VAR INJECTION */
      }.call(__webpack_exports__, __webpack_require__(20)));

      /***/
    },
    /* 631 */
    /***/ function (module, __webpack_exports__, __webpack_require__) {
      'use strict';
      /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__overArg_js__ = __webpack_require__(634);

      /** Built-in value references. */
      var getPrototype = __webpack_require__.i(
        __WEBPACK_IMPORTED_MODULE_0__overArg_js__['a' /* default */]
      )(Object.getPrototypeOf, Object);

      /* harmony default export */ __webpack_exports__['a'] = getPrototype;

      /***/
    },
    /* 632 */
    /***/ function (module, __webpack_exports__, __webpack_require__) {
      'use strict';
      /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__Symbol_js__ = __webpack_require__(267);

      /** Used for built-in method references. */
      var objectProto = Object.prototype;

      /** Used to check objects for own properties. */
      var hasOwnProperty = objectProto.hasOwnProperty;

      /**
       * Used to resolve the
       * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)
       * of values.
       */
      var nativeObjectToString = objectProto.toString;

      /** Built-in value references. */
      var symToStringTag = __WEBPACK_IMPORTED_MODULE_0__Symbol_js__['a' /* default */]
        ? __WEBPACK_IMPORTED_MODULE_0__Symbol_js__['a' /* default */].toStringTag
        : undefined;

      /**
       * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.
       *
       * @private
       * @param {*} value The value to query.
       * @returns {string} Returns the raw `toStringTag`.
       */
      function getRawTag(value) {
        var isOwn = hasOwnProperty.call(value, symToStringTag),
          tag = value[symToStringTag];

        try {
          value[symToStringTag] = undefined;
          var unmasked = true;
        } catch (e) {}

        var result = nativeObjectToString.call(value);
        if (unmasked) {
          if (isOwn) {
            value[symToStringTag] = tag;
          } else {
            delete value[symToStringTag];
          }
        }
        return result;
      }

      /* harmony default export */ __webpack_exports__['a'] = getRawTag;

      /***/
    },
    /* 633 */
    /***/ function (module, __webpack_exports__, __webpack_require__) {
      'use strict';
      /** Used for built-in method references. */
      var objectProto = Object.prototype;

      /**
       * Used to resolve the
       * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)
       * of values.
       */
      var nativeObjectToString = objectProto.toString;

      /**
       * Converts `value` to a string using `Object.prototype.toString`.
       *
       * @private
       * @param {*} value The value to convert.
       * @returns {string} Returns the converted string.
       */
      function objectToString(value) {
        return nativeObjectToString.call(value);
      }

      /* harmony default export */ __webpack_exports__['a'] = objectToString;

      /***/
    },
    /* 634 */
    /***/ function (module, __webpack_exports__, __webpack_require__) {
      'use strict';
      /**
       * Creates a unary function that invokes `func` with its argument transformed.
       *
       * @private
       * @param {Function} func The function to wrap.
       * @param {Function} transform The argument transform.
       * @returns {Function} Returns the new function.
       */
      function overArg(func, transform) {
        return function (arg) {
          return func(transform(arg));
        };
      }

      /* harmony default export */ __webpack_exports__['a'] = overArg;

      /***/
    },
    /* 635 */
    /***/ function (module, __webpack_exports__, __webpack_require__) {
      'use strict';
      /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__freeGlobal_js__ = __webpack_require__(
        630
      );

      /** Detect free variable `self`. */
      var freeSelf = typeof self == 'object' && self && self.Object === Object && self;

      /** Used as a reference to the global object. */
      var root =
        __WEBPACK_IMPORTED_MODULE_0__freeGlobal_js__['a' /* default */] ||
        freeSelf ||
        Function('return this')();

      /* harmony default export */ __webpack_exports__['a'] = root;

      /***/
    },
    /* 636 */
    /***/ function (module, __webpack_exports__, __webpack_require__) {
      'use strict';
      /**
       * Checks if `value` is object-like. A value is object-like if it's not `null`
       * and has a `typeof` result of "object".
       *
       * @static
       * @memberOf _
       * @since 4.0.0
       * @category Lang
       * @param {*} value The value to check.
       * @returns {boolean} Returns `true` if `value` is object-like, else `false`.
       * @example
       *
       * _.isObjectLike({});
       * // => true
       *
       * _.isObjectLike([1, 2, 3]);
       * // => true
       *
       * _.isObjectLike(_.noop);
       * // => false
       *
       * _.isObjectLike(null);
       * // => false
       */
      function isObjectLike(value) {
        return value != null && typeof value == 'object';
      }

      /* harmony default export */ __webpack_exports__['a'] = isObjectLike;

      /***/
    },
    /* 637 */
    /***/ function (module, exports, __webpack_require__) {
      /* WEBPACK VAR INJECTION */ (function (global, module) {
        /**
         * lodash (Custom Build) <https://lodash.com/>
         * Build: `lodash modularize exports="npm" -o ./`
         * Copyright jQuery Foundation and other contributors <https://jquery.org/>
         * Released under MIT license <https://lodash.com/license>
         * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>
         * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors
         */

        /** Used as the size to enable large array optimizations. */
        var LARGE_ARRAY_SIZE = 200;

        /** Used to stand-in for `undefined` hash values. */
        var HASH_UNDEFINED = '__lodash_hash_undefined__';

        /** Used as references for various `Number` constants. */
        var MAX_SAFE_INTEGER = 9007199254740991;

        /** `Object#toString` result references. */
        var argsTag = '[object Arguments]',
          arrayTag = '[object Array]',
          boolTag = '[object Boolean]',
          dateTag = '[object Date]',
          errorTag = '[object Error]',
          funcTag = '[object Function]',
          genTag = '[object GeneratorFunction]',
          mapTag = '[object Map]',
          numberTag = '[object Number]',
          objectTag = '[object Object]',
          promiseTag = '[object Promise]',
          regexpTag = '[object RegExp]',
          setTag = '[object Set]',
          stringTag = '[object String]',
          symbolTag = '[object Symbol]',
          weakMapTag = '[object WeakMap]';

        var arrayBufferTag = '[object ArrayBuffer]',
          dataViewTag = '[object DataView]',
          float32Tag = '[object Float32Array]',
          float64Tag = '[object Float64Array]',
          int8Tag = '[object Int8Array]',
          int16Tag = '[object Int16Array]',
          int32Tag = '[object Int32Array]',
          uint8Tag = '[object Uint8Array]',
          uint8ClampedTag = '[object Uint8ClampedArray]',
          uint16Tag = '[object Uint16Array]',
          uint32Tag = '[object Uint32Array]';

        /**
         * Used to match `RegExp`
         * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).
         */
        var reRegExpChar = /[\\^$.*+?()[\]{}|]/g;

        /** Used to match `RegExp` flags from their coerced string values. */
        var reFlags = /\w*$/;

        /** Used to detect host constructors (Safari). */
        var reIsHostCtor = /^\[object .+?Constructor\]$/;

        /** Used to detect unsigned integer values. */
        var reIsUint = /^(?:0|[1-9]\d*)$/;

        /** Used to identify `toStringTag` values supported by `_.clone`. */
        var cloneableTags = {};
        cloneableTags[argsTag] = cloneableTags[arrayTag] = cloneableTags[
          arrayBufferTag
        ] = cloneableTags[dataViewTag] = cloneableTags[boolTag] = cloneableTags[
          dateTag
        ] = cloneableTags[float32Tag] = cloneableTags[float64Tag] = cloneableTags[
          int8Tag
        ] = cloneableTags[int16Tag] = cloneableTags[int32Tag] = cloneableTags[
          mapTag
        ] = cloneableTags[numberTag] = cloneableTags[objectTag] = cloneableTags[
          regexpTag
        ] = cloneableTags[setTag] = cloneableTags[stringTag] = cloneableTags[
          symbolTag
        ] = cloneableTags[uint8Tag] = cloneableTags[uint8ClampedTag] = cloneableTags[
          uint16Tag
        ] = cloneableTags[uint32Tag] = true;
        cloneableTags[errorTag] = cloneableTags[funcTag] = cloneableTags[weakMapTag] = false;

        /** Detect free variable `global` from Node.js. */
        var freeGlobal = typeof global == 'object' && global && global.Object === Object && global;

        /** Detect free variable `self`. */
        var freeSelf = typeof self == 'object' && self && self.Object === Object && self;

        /** Used as a reference to the global object. */
        var root = freeGlobal || freeSelf || Function('return this')();

        /** Detect free variable `exports`. */
        var freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;

        /** Detect free variable `module`. */
        var freeModule =
          freeExports && typeof module == 'object' && module && !module.nodeType && module;

        /** Detect the popular CommonJS extension `module.exports`. */
        var moduleExports = freeModule && freeModule.exports === freeExports;

        /**
         * Adds the key-value `pair` to `map`.
         *
         * @private
         * @param {Object} map The map to modify.
         * @param {Array} pair The key-value pair to add.
         * @returns {Object} Returns `map`.
         */
        function addMapEntry(map, pair) {
          // Don't return `map.set` because it's not chainable in IE 11.
          map.set(pair[0], pair[1]);
          return map;
        }

        /**
         * Adds `value` to `set`.
         *
         * @private
         * @param {Object} set The set to modify.
         * @param {*} value The value to add.
         * @returns {Object} Returns `set`.
         */
        function addSetEntry(set, value) {
          // Don't return `set.add` because it's not chainable in IE 11.
          set.add(value);
          return set;
        }

        /**
         * A specialized version of `_.forEach` for arrays without support for
         * iteratee shorthands.
         *
         * @private
         * @param {Array} [array] The array to iterate over.
         * @param {Function} iteratee The function invoked per iteration.
         * @returns {Array} Returns `array`.
         */
        function arrayEach(array, iteratee) {
          var index = -1,
            length = array ? array.length : 0;

          while (++index < length) {
            if (iteratee(array[index], index, array) === false) {
              break;
            }
          }
          return array;
        }

        /**
         * Appends the elements of `values` to `array`.
         *
         * @private
         * @param {Array} array The array to modify.
         * @param {Array} values The values to append.
         * @returns {Array} Returns `array`.
         */
        function arrayPush(array, values) {
          var index = -1,
            length = values.length,
            offset = array.length;

          while (++index < length) {
            array[offset + index] = values[index];
          }
          return array;
        }

        /**
         * A specialized version of `_.reduce` for arrays without support for
         * iteratee shorthands.
         *
         * @private
         * @param {Array} [array] The array to iterate over.
         * @param {Function} iteratee The function invoked per iteration.
         * @param {*} [accumulator] The initial value.
         * @param {boolean} [initAccum] Specify using the first element of `array` as
         *  the initial value.
         * @returns {*} Returns the accumulated value.
         */
        function arrayReduce(array, iteratee, accumulator, initAccum) {
          var index = -1,
            length = array ? array.length : 0;

          if (initAccum && length) {
            accumulator = array[++index];
          }
          while (++index < length) {
            accumulator = iteratee(accumulator, array[index], index, array);
          }
          return accumulator;
        }

        /**
         * The base implementation of `_.times` without support for iteratee shorthands
         * or max array length checks.
         *
         * @private
         * @param {number} n The number of times to invoke `iteratee`.
         * @param {Function} iteratee The function invoked per iteration.
         * @returns {Array} Returns the array of results.
         */
        function baseTimes(n, iteratee) {
          var index = -1,
            result = Array(n);

          while (++index < n) {
            result[index] = iteratee(index);
          }
          return result;
        }

        /**
         * Gets the value at `key` of `object`.
         *
         * @private
         * @param {Object} [object] The object to query.
         * @param {string} key The key of the property to get.
         * @returns {*} Returns the property value.
         */
        function getValue(object, key) {
          return object == null ? undefined : object[key];
        }

        /**
         * Checks if `value` is a host object in IE < 9.
         *
         * @private
         * @param {*} value The value to check.
         * @returns {boolean} Returns `true` if `value` is a host object, else `false`.
         */
        function isHostObject(value) {
          // Many host objects are `Object` objects that can coerce to strings
          // despite having improperly defined `toString` methods.
          var result = false;
          if (value != null && typeof value.toString != 'function') {
            try {
              result = !!(value + '');
            } catch (e) {}
          }
          return result;
        }

        /**
         * Converts `map` to its key-value pairs.
         *
         * @private
         * @param {Object} map The map to convert.
         * @returns {Array} Returns the key-value pairs.
         */
        function mapToArray(map) {
          var index = -1,
            result = Array(map.size);

          map.forEach(function (value, key) {
            result[++index] = [key, value];
          });
          return result;
        }

        /**
         * Creates a unary function that invokes `func` with its argument transformed.
         *
         * @private
         * @param {Function} func The function to wrap.
         * @param {Function} transform The argument transform.
         * @returns {Function} Returns the new function.
         */
        function overArg(func, transform) {
          return function (arg) {
            return func(transform(arg));
          };
        }

        /**
         * Converts `set` to an array of its values.
         *
         * @private
         * @param {Object} set The set to convert.
         * @returns {Array} Returns the values.
         */
        function setToArray(set) {
          var index = -1,
            result = Array(set.size);

          set.forEach(function (value) {
            result[++index] = value;
          });
          return result;
        }

        /** Used for built-in method references. */
        var arrayProto = Array.prototype,
          funcProto = Function.prototype,
          objectProto = Object.prototype;

        /** Used to detect overreaching core-js shims. */
        var coreJsData = root['__core-js_shared__'];

        /** Used to detect methods masquerading as native. */
        var maskSrcKey = (function () {
          var uid = /[^.]+$/.exec(
            (coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO) || ''
          );
          return uid ? 'Symbol(src)_1.' + uid : '';
        })();

        /** Used to resolve the decompiled source of functions. */
        var funcToString = funcProto.toString;

        /** Used to check objects for own properties. */
        var hasOwnProperty = objectProto.hasOwnProperty;

        /**
         * Used to resolve the
         * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)
         * of values.
         */
        var objectToString = objectProto.toString;

        /** Used to detect if a method is native. */
        var reIsNative = RegExp(
          '^' +
            funcToString
              .call(hasOwnProperty)
              .replace(reRegExpChar, '\\$&')
              .replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g, '$1.*?') +
            '$'
        );

        /** Built-in value references. */
        var Buffer = moduleExports ? root.Buffer : undefined,
          Symbol = root.Symbol,
          Uint8Array = root.Uint8Array,
          getPrototype = overArg(Object.getPrototypeOf, Object),
          objectCreate = Object.create,
          propertyIsEnumerable = objectProto.propertyIsEnumerable,
          splice = arrayProto.splice;

        /* Built-in method references for those with the same name as other `lodash` methods. */
        var nativeGetSymbols = Object.getOwnPropertySymbols,
          nativeIsBuffer = Buffer ? Buffer.isBuffer : undefined,
          nativeKeys = overArg(Object.keys, Object);

        /* Built-in method references that are verified to be native. */
        var DataView = getNative(root, 'DataView'),
          Map = getNative(root, 'Map'),
          Promise = getNative(root, 'Promise'),
          Set = getNative(root, 'Set'),
          WeakMap = getNative(root, 'WeakMap'),
          nativeCreate = getNative(Object, 'create');

        /** Used to detect maps, sets, and weakmaps. */
        var dataViewCtorString = toSource(DataView),
          mapCtorString = toSource(Map),
          promiseCtorString = toSource(Promise),
          setCtorString = toSource(Set),
          weakMapCtorString = toSource(WeakMap);

        /** Used to convert symbols to primitives and strings. */
        var symbolProto = Symbol ? Symbol.prototype : undefined,
          symbolValueOf = symbolProto ? symbolProto.valueOf : undefined;

        /**
         * Creates a hash object.
         *
         * @private
         * @constructor
         * @param {Array} [entries] The key-value pairs to cache.
         */
        function Hash(entries) {
          var index = -1,
            length = entries ? entries.length : 0;

          this.clear();
          while (++index < length) {
            var entry = entries[index];
            this.set(entry[0], entry[1]);
          }
        }

        /**
         * Removes all key-value entries from the hash.
         *
         * @private
         * @name clear
         * @memberOf Hash
         */
        function hashClear() {
          this.__data__ = nativeCreate ? nativeCreate(null) : {};
        }

        /**
         * Removes `key` and its value from the hash.
         *
         * @private
         * @name delete
         * @memberOf Hash
         * @param {Object} hash The hash to modify.
         * @param {string} key The key of the value to remove.
         * @returns {boolean} Returns `true` if the entry was removed, else `false`.
         */
        function hashDelete(key) {
          return this.has(key) && delete this.__data__[key];
        }

        /**
         * Gets the hash value for `key`.
         *
         * @private
         * @name get
         * @memberOf Hash
         * @param {string} key The key of the value to get.
         * @returns {*} Returns the entry value.
         */
        function hashGet(key) {
          var data = this.__data__;
          if (nativeCreate) {
            var result = data[key];
            return result === HASH_UNDEFINED ? undefined : result;
          }
          return hasOwnProperty.call(data, key) ? data[key] : undefined;
        }

        /**
         * Checks if a hash value for `key` exists.
         *
         * @private
         * @name has
         * @memberOf Hash
         * @param {string} key The key of the entry to check.
         * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
         */
        function hashHas(key) {
          var data = this.__data__;
          return nativeCreate ? data[key] !== undefined : hasOwnProperty.call(data, key);
        }

        /**
         * Sets the hash `key` to `value`.
         *
         * @private
         * @name set
         * @memberOf Hash
         * @param {string} key The key of the value to set.
         * @param {*} value The value to set.
         * @returns {Object} Returns the hash instance.
         */
        function hashSet(key, value) {
          var data = this.__data__;
          data[key] = nativeCreate && value === undefined ? HASH_UNDEFINED : value;
          return this;
        }

        // Add methods to `Hash`.
        Hash.prototype.clear = hashClear;
        Hash.prototype['delete'] = hashDelete;
        Hash.prototype.get = hashGet;
        Hash.prototype.has = hashHas;
        Hash.prototype.set = hashSet;

        /**
         * Creates an list cache object.
         *
         * @private
         * @constructor
         * @param {Array} [entries] The key-value pairs to cache.
         */
        function ListCache(entries) {
          var index = -1,
            length = entries ? entries.length : 0;

          this.clear();
          while (++index < length) {
            var entry = entries[index];
            this.set(entry[0], entry[1]);
          }
        }

        /**
         * Removes all key-value entries from the list cache.
         *
         * @private
         * @name clear
         * @memberOf ListCache
         */
        function listCacheClear() {
          this.__data__ = [];
        }

        /**
         * Removes `key` and its value from the list cache.
         *
         * @private
         * @name delete
         * @memberOf ListCache
         * @param {string} key The key of the value to remove.
         * @returns {boolean} Returns `true` if the entry was removed, else `false`.
         */
        function listCacheDelete(key) {
          var data = this.__data__,
            index = assocIndexOf(data, key);

          if (index < 0) {
            return false;
          }
          var lastIndex = data.length - 1;
          if (index == lastIndex) {
            data.pop();
          } else {
            splice.call(data, index, 1);
          }
          return true;
        }

        /**
         * Gets the list cache value for `key`.
         *
         * @private
         * @name get
         * @memberOf ListCache
         * @param {string} key The key of the value to get.
         * @returns {*} Returns the entry value.
         */
        function listCacheGet(key) {
          var data = this.__data__,
            index = assocIndexOf(data, key);

          return index < 0 ? undefined : data[index][1];
        }

        /**
         * Checks if a list cache value for `key` exists.
         *
         * @private
         * @name has
         * @memberOf ListCache
         * @param {string} key The key of the entry to check.
         * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
         */
        function listCacheHas(key) {
          return assocIndexOf(this.__data__, key) > -1;
        }

        /**
         * Sets the list cache `key` to `value`.
         *
         * @private
         * @name set
         * @memberOf ListCache
         * @param {string} key The key of the value to set.
         * @param {*} value The value to set.
         * @returns {Object} Returns the list cache instance.
         */
        function listCacheSet(key, value) {
          var data = this.__data__,
            index = assocIndexOf(data, key);

          if (index < 0) {
            data.push([key, value]);
          } else {
            data[index][1] = value;
          }
          return this;
        }

        // Add methods to `ListCache`.
        ListCache.prototype.clear = listCacheClear;
        ListCache.prototype['delete'] = listCacheDelete;
        ListCache.prototype.get = listCacheGet;
        ListCache.prototype.has = listCacheHas;
        ListCache.prototype.set = listCacheSet;

        /**
         * Creates a map cache object to store key-value pairs.
         *
         * @private
         * @constructor
         * @param {Array} [entries] The key-value pairs to cache.
         */
        function MapCache(entries) {
          var index = -1,
            length = entries ? entries.length : 0;

          this.clear();
          while (++index < length) {
            var entry = entries[index];
            this.set(entry[0], entry[1]);
          }
        }

        /**
         * Removes all key-value entries from the map.
         *
         * @private
         * @name clear
         * @memberOf MapCache
         */
        function mapCacheClear() {
          this.__data__ = {
            hash: new Hash(),
            map: new (Map || ListCache)(),
            string: new Hash(),
          };
        }

        /**
         * Removes `key` and its value from the map.
         *
         * @private
         * @name delete
         * @memberOf MapCache
         * @param {string} key The key of the value to remove.
         * @returns {boolean} Returns `true` if the entry was removed, else `false`.
         */
        function mapCacheDelete(key) {
          return getMapData(this, key)['delete'](key);
        }

        /**
         * Gets the map value for `key`.
         *
         * @private
         * @name get
         * @memberOf MapCache
         * @param {string} key The key of the value to get.
         * @returns {*} Returns the entry value.
         */
        function mapCacheGet(key) {
          return getMapData(this, key).get(key);
        }

        /**
         * Checks if a map value for `key` exists.
         *
         * @private
         * @name has
         * @memberOf MapCache
         * @param {string} key The key of the entry to check.
         * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
         */
        function mapCacheHas(key) {
          return getMapData(this, key).has(key);
        }

        /**
         * Sets the map `key` to `value`.
         *
         * @private
         * @name set
         * @memberOf MapCache
         * @param {string} key The key of the value to set.
         * @param {*} value The value to set.
         * @returns {Object} Returns the map cache instance.
         */
        function mapCacheSet(key, value) {
          getMapData(this, key).set(key, value);
          return this;
        }

        // Add methods to `MapCache`.
        MapCache.prototype.clear = mapCacheClear;
        MapCache.prototype['delete'] = mapCacheDelete;
        MapCache.prototype.get = mapCacheGet;
        MapCache.prototype.has = mapCacheHas;
        MapCache.prototype.set = mapCacheSet;

        /**
         * Creates a stack cache object to store key-value pairs.
         *
         * @private
         * @constructor
         * @param {Array} [entries] The key-value pairs to cache.
         */
        function Stack(entries) {
          this.__data__ = new ListCache(entries);
        }

        /**
         * Removes all key-value entries from the stack.
         *
         * @private
         * @name clear
         * @memberOf Stack
         */
        function stackClear() {
          this.__data__ = new ListCache();
        }

        /**
         * Removes `key` and its value from the stack.
         *
         * @private
         * @name delete
         * @memberOf Stack
         * @param {string} key The key of the value to remove.
         * @returns {boolean} Returns `true` if the entry was removed, else `false`.
         */
        function stackDelete(key) {
          return this.__data__['delete'](key);
        }

        /**
         * Gets the stack value for `key`.
         *
         * @private
         * @name get
         * @memberOf Stack
         * @param {string} key The key of the value to get.
         * @returns {*} Returns the entry value.
         */
        function stackGet(key) {
          return this.__data__.get(key);
        }

        /**
         * Checks if a stack value for `key` exists.
         *
         * @private
         * @name has
         * @memberOf Stack
         * @param {string} key The key of the entry to check.
         * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
         */
        function stackHas(key) {
          return this.__data__.has(key);
        }

        /**
         * Sets the stack `key` to `value`.
         *
         * @private
         * @name set
         * @memberOf Stack
         * @param {string} key The key of the value to set.
         * @param {*} value The value to set.
         * @returns {Object} Returns the stack cache instance.
         */
        function stackSet(key, value) {
          var cache = this.__data__;
          if (cache instanceof ListCache) {
            var pairs = cache.__data__;
            if (!Map || pairs.length < LARGE_ARRAY_SIZE - 1) {
              pairs.push([key, value]);
              return this;
            }
            cache = this.__data__ = new MapCache(pairs);
          }
          cache.set(key, value);
          return this;
        }

        // Add methods to `Stack`.
        Stack.prototype.clear = stackClear;
        Stack.prototype['delete'] = stackDelete;
        Stack.prototype.get = stackGet;
        Stack.prototype.has = stackHas;
        Stack.prototype.set = stackSet;

        /**
         * Creates an array of the enumerable property names of the array-like `value`.
         *
         * @private
         * @param {*} value The value to query.
         * @param {boolean} inherited Specify returning inherited property names.
         * @returns {Array} Returns the array of property names.
         */
        function arrayLikeKeys(value, inherited) {
          // Safari 8.1 makes `arguments.callee` enumerable in strict mode.
          // Safari 9 makes `arguments.length` enumerable in strict mode.
          var result = isArray(value) || isArguments(value) ? baseTimes(value.length, String) : [];

          var length = result.length,
            skipIndexes = !!length;

          for (var key in value) {
            if (
              (inherited || hasOwnProperty.call(value, key)) &&
              !(skipIndexes && (key == 'length' || isIndex(key, length)))
            ) {
              result.push(key);
            }
          }
          return result;
        }

        /**
         * Assigns `value` to `key` of `object` if the existing value is not equivalent
         * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
         * for equality comparisons.
         *
         * @private
         * @param {Object} object The object to modify.
         * @param {string} key The key of the property to assign.
         * @param {*} value The value to assign.
         */
        function assignValue(object, key, value) {
          var objValue = object[key];
          if (
            !(hasOwnProperty.call(object, key) && eq(objValue, value)) ||
            (value === undefined && !(key in object))
          ) {
            object[key] = value;
          }
        }

        /**
         * Gets the index at which the `key` is found in `array` of key-value pairs.
         *
         * @private
         * @param {Array} array The array to inspect.
         * @param {*} key The key to search for.
         * @returns {number} Returns the index of the matched value, else `-1`.
         */
        function assocIndexOf(array, key) {
          var length = array.length;
          while (length--) {
            if (eq(array[length][0], key)) {
              return length;
            }
          }
          return -1;
        }

        /**
         * The base implementation of `_.assign` without support for multiple sources
         * or `customizer` functions.
         *
         * @private
         * @param {Object} object The destination object.
         * @param {Object} source The source object.
         * @returns {Object} Returns `object`.
         */
        function baseAssign(object, source) {
          return object && copyObject(source, keys(source), object);
        }

        /**
         * The base implementation of `_.clone` and `_.cloneDeep` which tracks
         * traversed objects.
         *
         * @private
         * @param {*} value The value to clone.
         * @param {boolean} [isDeep] Specify a deep clone.
         * @param {boolean} [isFull] Specify a clone including symbols.
         * @param {Function} [customizer] The function to customize cloning.
         * @param {string} [key] The key of `value`.
         * @param {Object} [object] The parent object of `value`.
         * @param {Object} [stack] Tracks traversed objects and their clone counterparts.
         * @returns {*} Returns the cloned value.
         */
        function baseClone(value, isDeep, isFull, customizer, key, object, stack) {
          var result;
          if (customizer) {
            result = object ? customizer(value, key, object, stack) : customizer(value);
          }
          if (result !== undefined) {
            return result;
          }
          if (!isObject(value)) {
            return value;
          }
          var isArr = isArray(value);
          if (isArr) {
            result = initCloneArray(value);
            if (!isDeep) {
              return copyArray(value, result);
            }
          } else {
            var tag = getTag(value),
              isFunc = tag == funcTag || tag == genTag;

            if (isBuffer(value)) {
              return cloneBuffer(value, isDeep);
            }
            if (tag == objectTag || tag == argsTag || (isFunc && !object)) {
              if (isHostObject(value)) {
                return object ? value : {};
              }
              result = initCloneObject(isFunc ? {} : value);
              if (!isDeep) {
                return copySymbols(value, baseAssign(result, value));
              }
            } else {
              if (!cloneableTags[tag]) {
                return object ? value : {};
              }
              result = initCloneByTag(value, tag, baseClone, isDeep);
            }
          }
          // Check for circular references and return its corresponding clone.
          stack || (stack = new Stack());
          var stacked = stack.get(value);
          if (stacked) {
            return stacked;
          }
          stack.set(value, result);

          if (!isArr) {
            var props = isFull ? getAllKeys(value) : keys(value);
          }
          arrayEach(props || value, function (subValue, key) {
            if (props) {
              key = subValue;
              subValue = value[key];
            }
            // Recursively populate clone (susceptible to call stack limits).
            assignValue(
              result,
              key,
              baseClone(subValue, isDeep, isFull, customizer, key, value, stack)
            );
          });
          return result;
        }

        /**
         * The base implementation of `_.create` without support for assigning
         * properties to the created object.
         *
         * @private
         * @param {Object} prototype The object to inherit from.
         * @returns {Object} Returns the new object.
         */
        function baseCreate(proto) {
          return isObject(proto) ? objectCreate(proto) : {};
        }

        /**
         * The base implementation of `getAllKeys` and `getAllKeysIn` which uses
         * `keysFunc` and `symbolsFunc` to get the enumerable property names and
         * symbols of `object`.
         *
         * @private
         * @param {Object} object The object to query.
         * @param {Function} keysFunc The function to get the keys of `object`.
         * @param {Function} symbolsFunc The function to get the symbols of `object`.
         * @returns {Array} Returns the array of property names and symbols.
         */
        function baseGetAllKeys(object, keysFunc, symbolsFunc) {
          var result = keysFunc(object);
          return isArray(object) ? result : arrayPush(result, symbolsFunc(object));
        }

        /**
         * The base implementation of `getTag`.
         *
         * @private
         * @param {*} value The value to query.
         * @returns {string} Returns the `toStringTag`.
         */
        function baseGetTag(value) {
          return objectToString.call(value);
        }

        /**
         * The base implementation of `_.isNative` without bad shim checks.
         *
         * @private
         * @param {*} value The value to check.
         * @returns {boolean} Returns `true` if `value` is a native function,
         *  else `false`.
         */
        function baseIsNative(value) {
          if (!isObject(value) || isMasked(value)) {
            return false;
          }
          var pattern = isFunction(value) || isHostObject(value) ? reIsNative : reIsHostCtor;
          return pattern.test(toSource(value));
        }

        /**
         * The base implementation of `_.keys` which doesn't treat sparse arrays as dense.
         *
         * @private
         * @param {Object} object The object to query.
         * @returns {Array} Returns the array of property names.
         */
        function baseKeys(object) {
          if (!isPrototype(object)) {
            return nativeKeys(object);
          }
          var result = [];
          for (var key in Object(object)) {
            if (hasOwnProperty.call(object, key) && key != 'constructor') {
              result.push(key);
            }
          }
          return result;
        }

        /**
         * Creates a clone of  `buffer`.
         *
         * @private
         * @param {Buffer} buffer The buffer to clone.
         * @param {boolean} [isDeep] Specify a deep clone.
         * @returns {Buffer} Returns the cloned buffer.
         */
        function cloneBuffer(buffer, isDeep) {
          if (isDeep) {
            return buffer.slice();
          }
          var result = new buffer.constructor(buffer.length);
          buffer.copy(result);
          return result;
        }

        /**
         * Creates a clone of `arrayBuffer`.
         *
         * @private
         * @param {ArrayBuffer} arrayBuffer The array buffer to clone.
         * @returns {ArrayBuffer} Returns the cloned array buffer.
         */
        function cloneArrayBuffer(arrayBuffer) {
          var result = new arrayBuffer.constructor(arrayBuffer.byteLength);
          new Uint8Array(result).set(new Uint8Array(arrayBuffer));
          return result;
        }

        /**
         * Creates a clone of `dataView`.
         *
         * @private
         * @param {Object} dataView The data view to clone.
         * @param {boolean} [isDeep] Specify a deep clone.
         * @returns {Object} Returns the cloned data view.
         */
        function cloneDataView(dataView, isDeep) {
          var buffer = isDeep ? cloneArrayBuffer(dataView.buffer) : dataView.buffer;
          return new dataView.constructor(buffer, dataView.byteOffset, dataView.byteLength);
        }

        /**
         * Creates a clone of `map`.
         *
         * @private
         * @param {Object} map The map to clone.
         * @param {Function} cloneFunc The function to clone values.
         * @param {boolean} [isDeep] Specify a deep clone.
         * @returns {Object} Returns the cloned map.
         */
        function cloneMap(map, isDeep, cloneFunc) {
          var array = isDeep ? cloneFunc(mapToArray(map), true) : mapToArray(map);
          return arrayReduce(array, addMapEntry, new map.constructor());
        }

        /**
         * Creates a clone of `regexp`.
         *
         * @private
         * @param {Object} regexp The regexp to clone.
         * @returns {Object} Returns the cloned regexp.
         */
        function cloneRegExp(regexp) {
          var result = new regexp.constructor(regexp.source, reFlags.exec(regexp));
          result.lastIndex = regexp.lastIndex;
          return result;
        }

        /**
         * Creates a clone of `set`.
         *
         * @private
         * @param {Object} set The set to clone.
         * @param {Function} cloneFunc The function to clone values.
         * @param {boolean} [isDeep] Specify a deep clone.
         * @returns {Object} Returns the cloned set.
         */
        function cloneSet(set, isDeep, cloneFunc) {
          var array = isDeep ? cloneFunc(setToArray(set), true) : setToArray(set);
          return arrayReduce(array, addSetEntry, new set.constructor());
        }

        /**
         * Creates a clone of the `symbol` object.
         *
         * @private
         * @param {Object} symbol The symbol object to clone.
         * @returns {Object} Returns the cloned symbol object.
         */
        function cloneSymbol(symbol) {
          return symbolValueOf ? Object(symbolValueOf.call(symbol)) : {};
        }

        /**
         * Creates a clone of `typedArray`.
         *
         * @private
         * @param {Object} typedArray The typed array to clone.
         * @param {boolean} [isDeep] Specify a deep clone.
         * @returns {Object} Returns the cloned typed array.
         */
        function cloneTypedArray(typedArray, isDeep) {
          var buffer = isDeep ? cloneArrayBuffer(typedArray.buffer) : typedArray.buffer;
          return new typedArray.constructor(buffer, typedArray.byteOffset, typedArray.length);
        }

        /**
         * Copies the values of `source` to `array`.
         *
         * @private
         * @param {Array} source The array to copy values from.
         * @param {Array} [array=[]] The array to copy values to.
         * @returns {Array} Returns `array`.
         */
        function copyArray(source, array) {
          var index = -1,
            length = source.length;

          array || (array = Array(length));
          while (++index < length) {
            array[index] = source[index];
          }
          return array;
        }

        /**
         * Copies properties of `source` to `object`.
         *
         * @private
         * @param {Object} source The object to copy properties from.
         * @param {Array} props The property identifiers to copy.
         * @param {Object} [object={}] The object to copy properties to.
         * @param {Function} [customizer] The function to customize copied values.
         * @returns {Object} Returns `object`.
         */
        function copyObject(source, props, object, customizer) {
          object || (object = {});

          var index = -1,
            length = props.length;

          while (++index < length) {
            var key = props[index];

            var newValue = customizer
              ? customizer(object[key], source[key], key, object, source)
              : undefined;

            assignValue(object, key, newValue === undefined ? source[key] : newValue);
          }
          return object;
        }

        /**
         * Copies own symbol properties of `source` to `object`.
         *
         * @private
         * @param {Object} source The object to copy symbols from.
         * @param {Object} [object={}] The object to copy symbols to.
         * @returns {Object} Returns `object`.
         */
        function copySymbols(source, object) {
          return copyObject(source, getSymbols(source), object);
        }

        /**
         * Creates an array of own enumerable property names and symbols of `object`.
         *
         * @private
         * @param {Object} object The object to query.
         * @returns {Array} Returns the array of property names and symbols.
         */
        function getAllKeys(object) {
          return baseGetAllKeys(object, keys, getSymbols);
        }

        /**
         * Gets the data for `map`.
         *
         * @private
         * @param {Object} map The map to query.
         * @param {string} key The reference key.
         * @returns {*} Returns the map data.
         */
        function getMapData(map, key) {
          var data = map.__data__;
          return isKeyable(key) ? data[typeof key == 'string' ? 'string' : 'hash'] : data.map;
        }

        /**
         * Gets the native function at `key` of `object`.
         *
         * @private
         * @param {Object} object The object to query.
         * @param {string} key The key of the method to get.
         * @returns {*} Returns the function if it's native, else `undefined`.
         */
        function getNative(object, key) {
          var value = getValue(object, key);
          return baseIsNative(value) ? value : undefined;
        }

        /**
         * Creates an array of the own enumerable symbol properties of `object`.
         *
         * @private
         * @param {Object} object The object to query.
         * @returns {Array} Returns the array of symbols.
         */
        var getSymbols = nativeGetSymbols ? overArg(nativeGetSymbols, Object) : stubArray;

        /**
         * Gets the `toStringTag` of `value`.
         *
         * @private
         * @param {*} value The value to query.
         * @returns {string} Returns the `toStringTag`.
         */
        var getTag = baseGetTag;

        // Fallback for data views, maps, sets, and weak maps in IE 11,
        // for data views in Edge < 14, and promises in Node.js.
        if (
          (DataView && getTag(new DataView(new ArrayBuffer(1))) != dataViewTag) ||
          (Map && getTag(new Map()) != mapTag) ||
          (Promise && getTag(Promise.resolve()) != promiseTag) ||
          (Set && getTag(new Set()) != setTag) ||
          (WeakMap && getTag(new WeakMap()) != weakMapTag)
        ) {
          getTag = function (value) {
            var result = objectToString.call(value),
              Ctor = result == objectTag ? value.constructor : undefined,
              ctorString = Ctor ? toSource(Ctor) : undefined;

            if (ctorString) {
              switch (ctorString) {
                case dataViewCtorString:
                  return dataViewTag;
                case mapCtorString:
                  return mapTag;
                case promiseCtorString:
                  return promiseTag;
                case setCtorString:
                  return setTag;
                case weakMapCtorString:
                  return weakMapTag;
              }
            }
            return result;
          };
        }

        /**
         * Initializes an array clone.
         *
         * @private
         * @param {Array} array The array to clone.
         * @returns {Array} Returns the initialized clone.
         */
        function initCloneArray(array) {
          var length = array.length,
            result = array.constructor(length);

          // Add properties assigned by `RegExp#exec`.
          if (length && typeof array[0] == 'string' && hasOwnProperty.call(array, 'index')) {
            result.index = array.index;
            result.input = array.input;
          }
          return result;
        }

        /**
         * Initializes an object clone.
         *
         * @private
         * @param {Object} object The object to clone.
         * @returns {Object} Returns the initialized clone.
         */
        function initCloneObject(object) {
          return typeof object.constructor == 'function' && !isPrototype(object)
            ? baseCreate(getPrototype(object))
            : {};
        }

        /**
         * Initializes an object clone based on its `toStringTag`.
         *
         * **Note:** This function only supports cloning values with tags of
         * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.
         *
         * @private
         * @param {Object} object The object to clone.
         * @param {string} tag The `toStringTag` of the object to clone.
         * @param {Function} cloneFunc The function to clone values.
         * @param {boolean} [isDeep] Specify a deep clone.
         * @returns {Object} Returns the initialized clone.
         */
        function initCloneByTag(object, tag, cloneFunc, isDeep) {
          var Ctor = object.constructor;
          switch (tag) {
            case arrayBufferTag:
              return cloneArrayBuffer(object);

            case boolTag:
            case dateTag:
              return new Ctor(+object);

            case dataViewTag:
              return cloneDataView(object, isDeep);

            case float32Tag:
            case float64Tag:
            case int8Tag:
            case int16Tag:
            case int32Tag:
            case uint8Tag:
            case uint8ClampedTag:
            case uint16Tag:
            case uint32Tag:
              return cloneTypedArray(object, isDeep);

            case mapTag:
              return cloneMap(object, isDeep, cloneFunc);

            case numberTag:
            case stringTag:
              return new Ctor(object);

            case regexpTag:
              return cloneRegExp(object);

            case setTag:
              return cloneSet(object, isDeep, cloneFunc);

            case symbolTag:
              return cloneSymbol(object);
          }
        }

        /**
         * Checks if `value` is a valid array-like index.
         *
         * @private
         * @param {*} value The value to check.
         * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.
         * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.
         */
        function isIndex(value, length) {
          length = length == null ? MAX_SAFE_INTEGER : length;
          return (
            !!length &&
            (typeof value == 'number' || reIsUint.test(value)) &&
            value > -1 &&
            value % 1 == 0 &&
            value < length
          );
        }

        /**
         * Checks if `value` is suitable for use as unique object key.
         *
         * @private
         * @param {*} value The value to check.
         * @returns {boolean} Returns `true` if `value` is suitable, else `false`.
         */
        function isKeyable(value) {
          var type = typeof value;
          return type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean'
            ? value !== '__proto__'
            : value === null;
        }

        /**
         * Checks if `func` has its source masked.
         *
         * @private
         * @param {Function} func The function to check.
         * @returns {boolean} Returns `true` if `func` is masked, else `false`.
         */
        function isMasked(func) {
          return !!maskSrcKey && maskSrcKey in func;
        }

        /**
         * Checks if `value` is likely a prototype object.
         *
         * @private
         * @param {*} value The value to check.
         * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.
         */
        function isPrototype(value) {
          var Ctor = value && value.constructor,
            proto = (typeof Ctor == 'function' && Ctor.prototype) || objectProto;

          return value === proto;
        }

        /**
         * Converts `func` to its source code.
         *
         * @private
         * @param {Function} func The function to process.
         * @returns {string} Returns the source code.
         */
        function toSource(func) {
          if (func != null) {
            try {
              return funcToString.call(func);
            } catch (e) {}
            try {
              return func + '';
            } catch (e) {}
          }
          return '';
        }

        /**
         * This method is like `_.clone` except that it recursively clones `value`.
         *
         * @static
         * @memberOf _
         * @since 1.0.0
         * @category Lang
         * @param {*} value The value to recursively clone.
         * @returns {*} Returns the deep cloned value.
         * @see _.clone
         * @example
         *
         * var objects = [{ 'a': 1 }, { 'b': 2 }];
         *
         * var deep = _.cloneDeep(objects);
         * console.log(deep[0] === objects[0]);
         * // => false
         */
        function cloneDeep(value) {
          return baseClone(value, true, true);
        }

        /**
         * Performs a
         * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
         * comparison between two values to determine if they are equivalent.
         *
         * @static
         * @memberOf _
         * @since 4.0.0
         * @category Lang
         * @param {*} value The value to compare.
         * @param {*} other The other value to compare.
         * @returns {boolean} Returns `true` if the values are equivalent, else `false`.
         * @example
         *
         * var object = { 'a': 1 };
         * var other = { 'a': 1 };
         *
         * _.eq(object, object);
         * // => true
         *
         * _.eq(object, other);
         * // => false
         *
         * _.eq('a', 'a');
         * // => true
         *
         * _.eq('a', Object('a'));
         * // => false
         *
         * _.eq(NaN, NaN);
         * // => true
         */
        function eq(value, other) {
          return value === other || (value !== value && other !== other);
        }

        /**
         * Checks if `value` is likely an `arguments` object.
         *
         * @static
         * @memberOf _
         * @since 0.1.0
         * @category Lang
         * @param {*} value The value to check.
         * @returns {boolean} Returns `true` if `value` is an `arguments` object,
         *  else `false`.
         * @example
         *
         * _.isArguments(function() { return arguments; }());
         * // => true
         *
         * _.isArguments([1, 2, 3]);
         * // => false
         */
        function isArguments(value) {
          // Safari 8.1 makes `arguments.callee` enumerable in strict mode.
          return (
            isArrayLikeObject(value) &&
            hasOwnProperty.call(value, 'callee') &&
            (!propertyIsEnumerable.call(value, 'callee') || objectToString.call(value) == argsTag)
          );
        }

        /**
         * Checks if `value` is classified as an `Array` object.
         *
         * @static
         * @memberOf _
         * @since 0.1.0
         * @category Lang
         * @param {*} value The value to check.
         * @returns {boolean} Returns `true` if `value` is an array, else `false`.
         * @example
         *
         * _.isArray([1, 2, 3]);
         * // => true
         *
         * _.isArray(document.body.children);
         * // => false
         *
         * _.isArray('abc');
         * // => false
         *
         * _.isArray(_.noop);
         * // => false
         */
        var isArray = Array.isArray;

        /**
         * Checks if `value` is array-like. A value is considered array-like if it's
         * not a function and has a `value.length` that's an integer greater than or
         * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.
         *
         * @static
         * @memberOf _
         * @since 4.0.0
         * @category Lang
         * @param {*} value The value to check.
         * @returns {boolean} Returns `true` if `value` is array-like, else `false`.
         * @example
         *
         * _.isArrayLike([1, 2, 3]);
         * // => true
         *
         * _.isArrayLike(document.body.children);
         * // => true
         *
         * _.isArrayLike('abc');
         * // => true
         *
         * _.isArrayLike(_.noop);
         * // => false
         */
        function isArrayLike(value) {
          return value != null && isLength(value.length) && !isFunction(value);
        }

        /**
         * This method is like `_.isArrayLike` except that it also checks if `value`
         * is an object.
         *
         * @static
         * @memberOf _
         * @since 4.0.0
         * @category Lang
         * @param {*} value The value to check.
         * @returns {boolean} Returns `true` if `value` is an array-like object,
         *  else `false`.
         * @example
         *
         * _.isArrayLikeObject([1, 2, 3]);
         * // => true
         *
         * _.isArrayLikeObject(document.body.children);
         * // => true
         *
         * _.isArrayLikeObject('abc');
         * // => false
         *
         * _.isArrayLikeObject(_.noop);
         * // => false
         */
        function isArrayLikeObject(value) {
          return isObjectLike(value) && isArrayLike(value);
        }

        /**
         * Checks if `value` is a buffer.
         *
         * @static
         * @memberOf _
         * @since 4.3.0
         * @category Lang
         * @param {*} value The value to check.
         * @returns {boolean} Returns `true` if `value` is a buffer, else `false`.
         * @example
         *
         * _.isBuffer(new Buffer(2));
         * // => true
         *
         * _.isBuffer(new Uint8Array(2));
         * // => false
         */
        var isBuffer = nativeIsBuffer || stubFalse;

        /**
         * Checks if `value` is classified as a `Function` object.
         *
         * @static
         * @memberOf _
         * @since 0.1.0
         * @category Lang
         * @param {*} value The value to check.
         * @returns {boolean} Returns `true` if `value` is a function, else `false`.
         * @example
         *
         * _.isFunction(_);
         * // => true
         *
         * _.isFunction(/abc/);
         * // => false
         */
        function isFunction(value) {
          // The use of `Object#toString` avoids issues with the `typeof` operator
          // in Safari 8-9 which returns 'object' for typed array and other constructors.
          var tag = isObject(value) ? objectToString.call(value) : '';
          return tag == funcTag || tag == genTag;
        }

        /**
         * Checks if `value` is a valid array-like length.
         *
         * **Note:** This method is loosely based on
         * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).
         *
         * @static
         * @memberOf _
         * @since 4.0.0
         * @category Lang
         * @param {*} value The value to check.
         * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.
         * @example
         *
         * _.isLength(3);
         * // => true
         *
         * _.isLength(Number.MIN_VALUE);
         * // => false
         *
         * _.isLength(Infinity);
         * // => false
         *
         * _.isLength('3');
         * // => false
         */
        function isLength(value) {
          return (
            typeof value == 'number' && value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER
          );
        }

        /**
         * Checks if `value` is the
         * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)
         * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)
         *
         * @static
         * @memberOf _
         * @since 0.1.0
         * @category Lang
         * @param {*} value The value to check.
         * @returns {boolean} Returns `true` if `value` is an object, else `false`.
         * @example
         *
         * _.isObject({});
         * // => true
         *
         * _.isObject([1, 2, 3]);
         * // => true
         *
         * _.isObject(_.noop);
         * // => true
         *
         * _.isObject(null);
         * // => false
         */
        function isObject(value) {
          var type = typeof value;
          return !!value && (type == 'object' || type == 'function');
        }

        /**
         * Checks if `value` is object-like. A value is object-like if it's not `null`
         * and has a `typeof` result of "object".
         *
         * @static
         * @memberOf _
         * @since 4.0.0
         * @category Lang
         * @param {*} value The value to check.
         * @returns {boolean} Returns `true` if `value` is object-like, else `false`.
         * @example
         *
         * _.isObjectLike({});
         * // => true
         *
         * _.isObjectLike([1, 2, 3]);
         * // => true
         *
         * _.isObjectLike(_.noop);
         * // => false
         *
         * _.isObjectLike(null);
         * // => false
         */
        function isObjectLike(value) {
          return !!value && typeof value == 'object';
        }

        /**
         * Creates an array of the own enumerable property names of `object`.
         *
         * **Note:** Non-object values are coerced to objects. See the
         * [ES spec](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)
         * for more details.
         *
         * @static
         * @since 0.1.0
         * @memberOf _
         * @category Object
         * @param {Object} object The object to query.
         * @returns {Array} Returns the array of property names.
         * @example
         *
         * function Foo() {
         *   this.a = 1;
         *   this.b = 2;
         * }
         *
         * Foo.prototype.c = 3;
         *
         * _.keys(new Foo);
         * // => ['a', 'b'] (iteration order is not guaranteed)
         *
         * _.keys('hi');
         * // => ['0', '1']
         */
        function keys(object) {
          return isArrayLike(object) ? arrayLikeKeys(object) : baseKeys(object);
        }

        /**
         * This method returns a new empty array.
         *
         * @static
         * @memberOf _
         * @since 4.13.0
         * @category Util
         * @returns {Array} Returns the new empty array.
         * @example
         *
         * var arrays = _.times(2, _.stubArray);
         *
         * console.log(arrays);
         * // => [[], []]
         *
         * console.log(arrays[0] === arrays[1]);
         * // => false
         */
        function stubArray() {
          return [];
        }

        /**
         * This method returns `false`.
         *
         * @static
         * @memberOf _
         * @since 4.13.0
         * @category Util
         * @returns {boolean} Returns `false`.
         * @example
         *
         * _.times(2, _.stubFalse);
         * // => [false, false]
         */
        function stubFalse() {
          return false;
        }

        module.exports = cloneDeep;

        /* WEBPACK VAR INJECTION */
      }.call(exports, __webpack_require__(20), __webpack_require__(127)(module)));

      /***/
    },
    /* 638 */
    /***/ function (module, exports, __webpack_require__) {
      /* WEBPACK VAR INJECTION */ (function (global) {
        /**
         * lodash (Custom Build) <https://lodash.com/>
         * Build: `lodash modularize exports="npm" -o ./`
         * Copyright jQuery Foundation and other contributors <https://jquery.org/>
         * Released under MIT license <https://lodash.com/license>
         * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>
         * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors
         */

        /** Used as references for various `Number` constants. */
        var INFINITY = 1 / 0;

        /** `Object#toString` result references. */
        var symbolTag = '[object Symbol]';

        /**
         * Used to match `RegExp`
         * [syntax characters](http://ecma-international.org/ecma-262/6.0/#sec-patterns).
         */
        var reRegExpChar = /[\\^$.*+?()[\]{}|]/g,
          reHasRegExpChar = RegExp(reRegExpChar.source);

        /** Detect free variable `global` from Node.js. */
        var freeGlobal = typeof global == 'object' && global && global.Object === Object && global;

        /** Detect free variable `self`. */
        var freeSelf = typeof self == 'object' && self && self.Object === Object && self;

        /** Used as a reference to the global object. */
        var root = freeGlobal || freeSelf || Function('return this')();

        /** Used for built-in method references. */
        var objectProto = Object.prototype;

        /**
         * Used to resolve the
         * [`toStringTag`](http://ecma-international.org/ecma-262/6.0/#sec-object.prototype.tostring)
         * of values.
         */
        var objectToString = objectProto.toString;

        /** Built-in value references. */
        var Symbol = root.Symbol;

        /** Used to convert symbols to primitives and strings. */
        var symbolProto = Symbol ? Symbol.prototype : undefined,
          symbolToString = symbolProto ? symbolProto.toString : undefined;

        /**
         * The base implementation of `_.toString` which doesn't convert nullish
         * values to empty strings.
         *
         * @private
         * @param {*} value The value to process.
         * @returns {string} Returns the string.
         */
        function baseToString(value) {
          // Exit early for strings to avoid a performance hit in some environments.
          if (typeof value == 'string') {
            return value;
          }
          if (isSymbol(value)) {
            return symbolToString ? symbolToString.call(value) : '';
          }
          var result = value + '';
          return result == '0' && 1 / value == -INFINITY ? '-0' : result;
        }

        /**
         * Checks if `value` is object-like. A value is object-like if it's not `null`
         * and has a `typeof` result of "object".
         *
         * @static
         * @memberOf _
         * @since 4.0.0
         * @category Lang
         * @param {*} value The value to check.
         * @returns {boolean} Returns `true` if `value` is object-like, else `false`.
         * @example
         *
         * _.isObjectLike({});
         * // => true
         *
         * _.isObjectLike([1, 2, 3]);
         * // => true
         *
         * _.isObjectLike(_.noop);
         * // => false
         *
         * _.isObjectLike(null);
         * // => false
         */
        function isObjectLike(value) {
          return !!value && typeof value == 'object';
        }

        /**
         * Checks if `value` is classified as a `Symbol` primitive or object.
         *
         * @static
         * @memberOf _
         * @since 4.0.0
         * @category Lang
         * @param {*} value The value to check.
         * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.
         * @example
         *
         * _.isSymbol(Symbol.iterator);
         * // => true
         *
         * _.isSymbol('abc');
         * // => false
         */
        function isSymbol(value) {
          return (
            typeof value == 'symbol' ||
            (isObjectLike(value) && objectToString.call(value) == symbolTag)
          );
        }

        /**
         * Converts `value` to a string. An empty string is returned for `null`
         * and `undefined` values. The sign of `-0` is preserved.
         *
         * @static
         * @memberOf _
         * @since 4.0.0
         * @category Lang
         * @param {*} value The value to process.
         * @returns {string} Returns the string.
         * @example
         *
         * _.toString(null);
         * // => ''
         *
         * _.toString(-0);
         * // => '-0'
         *
         * _.toString([1, 2, 3]);
         * // => '1,2,3'
         */
        function toString(value) {
          return value == null ? '' : baseToString(value);
        }

        /**
         * Escapes the `RegExp` special characters "^", "$", "\", ".", "*", "+",
         * "?", "(", ")", "[", "]", "{", "}", and "|" in `string`.
         *
         * @static
         * @memberOf _
         * @since 3.0.0
         * @category String
         * @param {string} [string=''] The string to escape.
         * @returns {string} Returns the escaped string.
         * @example
         *
         * _.escapeRegExp('[lodash](https://lodash.com/)');
         * // => '\[lodash\]\(https://lodash\.com/\)'
         */
        function escapeRegExp(string) {
          string = toString(string);
          return string && reHasRegExpChar.test(string)
            ? string.replace(reRegExpChar, '\\$&')
            : string;
        }

        module.exports = escapeRegExp;

        /* WEBPACK VAR INJECTION */
      }.call(exports, __webpack_require__(20)));

      /***/
    },
    /* 639 */
    /***/ function (module, exports, __webpack_require__) {
      /* WEBPACK VAR INJECTION */ (function (global, module) {
        /**
         * lodash (Custom Build) <https://lodash.com/>
         * Build: `lodash modularize exports="npm" -o ./`
         * Copyright jQuery Foundation and other contributors <https://jquery.org/>
         * Released under MIT license <https://lodash.com/license>
         * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>
         * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors
         */

        /** Used as the size to enable large array optimizations. */
        var LARGE_ARRAY_SIZE = 200;

        /** Used to stand-in for `undefined` hash values. */
        var HASH_UNDEFINED = '__lodash_hash_undefined__';

        /** Used as references for various `Number` constants. */
        var MAX_SAFE_INTEGER = 9007199254740991;

        /** `Object#toString` result references. */
        var argsTag = '[object Arguments]',
          arrayTag = '[object Array]',
          boolTag = '[object Boolean]',
          dateTag = '[object Date]',
          errorTag = '[object Error]',
          funcTag = '[object Function]',
          genTag = '[object GeneratorFunction]',
          mapTag = '[object Map]',
          numberTag = '[object Number]',
          objectTag = '[object Object]',
          promiseTag = '[object Promise]',
          regexpTag = '[object RegExp]',
          setTag = '[object Set]',
          stringTag = '[object String]',
          symbolTag = '[object Symbol]',
          weakMapTag = '[object WeakMap]';

        var arrayBufferTag = '[object ArrayBuffer]',
          dataViewTag = '[object DataView]',
          float32Tag = '[object Float32Array]',
          float64Tag = '[object Float64Array]',
          int8Tag = '[object Int8Array]',
          int16Tag = '[object Int16Array]',
          int32Tag = '[object Int32Array]',
          uint8Tag = '[object Uint8Array]',
          uint8ClampedTag = '[object Uint8ClampedArray]',
          uint16Tag = '[object Uint16Array]',
          uint32Tag = '[object Uint32Array]';

        /**
         * Used to match `RegExp`
         * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).
         */
        var reRegExpChar = /[\\^$.*+?()[\]{}|]/g;

        /** Used to match `RegExp` flags from their coerced string values. */
        var reFlags = /\w*$/;

        /** Used to detect host constructors (Safari). */
        var reIsHostCtor = /^\[object .+?Constructor\]$/;

        /** Used to detect unsigned integer values. */
        var reIsUint = /^(?:0|[1-9]\d*)$/;

        /** Used to identify `toStringTag` values of typed arrays. */
        var typedArrayTags = {};
        typedArrayTags[float32Tag] = typedArrayTags[float64Tag] = typedArrayTags[
          int8Tag
        ] = typedArrayTags[int16Tag] = typedArrayTags[int32Tag] = typedArrayTags[
          uint8Tag
        ] = typedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] = typedArrayTags[
          uint32Tag
        ] = true;
        typedArrayTags[argsTag] = typedArrayTags[arrayTag] = typedArrayTags[
          arrayBufferTag
        ] = typedArrayTags[boolTag] = typedArrayTags[dataViewTag] = typedArrayTags[
          dateTag
        ] = typedArrayTags[errorTag] = typedArrayTags[funcTag] = typedArrayTags[
          mapTag
        ] = typedArrayTags[numberTag] = typedArrayTags[objectTag] = typedArrayTags[
          regexpTag
        ] = typedArrayTags[setTag] = typedArrayTags[stringTag] = typedArrayTags[weakMapTag] = false;

        /** Used to identify `toStringTag` values supported by `_.clone`. */
        var cloneableTags = {};
        cloneableTags[argsTag] = cloneableTags[arrayTag] = cloneableTags[
          arrayBufferTag
        ] = cloneableTags[dataViewTag] = cloneableTags[boolTag] = cloneableTags[
          dateTag
        ] = cloneableTags[float32Tag] = cloneableTags[float64Tag] = cloneableTags[
          int8Tag
        ] = cloneableTags[int16Tag] = cloneableTags[int32Tag] = cloneableTags[
          mapTag
        ] = cloneableTags[numberTag] = cloneableTags[objectTag] = cloneableTags[
          regexpTag
        ] = cloneableTags[setTag] = cloneableTags[stringTag] = cloneableTags[
          symbolTag
        ] = cloneableTags[uint8Tag] = cloneableTags[uint8ClampedTag] = cloneableTags[
          uint16Tag
        ] = cloneableTags[uint32Tag] = true;
        cloneableTags[errorTag] = cloneableTags[funcTag] = cloneableTags[weakMapTag] = false;

        /** Detect free variable `global` from Node.js. */
        var freeGlobal = typeof global == 'object' && global && global.Object === Object && global;

        /** Detect free variable `self`. */
        var freeSelf = typeof self == 'object' && self && self.Object === Object && self;

        /** Used as a reference to the global object. */
        var root = freeGlobal || freeSelf || Function('return this')();

        /** Detect free variable `exports`. */
        var freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;

        /** Detect free variable `module`. */
        var freeModule =
          freeExports && typeof module == 'object' && module && !module.nodeType && module;

        /** Detect the popular CommonJS extension `module.exports`. */
        var moduleExports = freeModule && freeModule.exports === freeExports;

        /** Detect free variable `process` from Node.js. */
        var freeProcess = moduleExports && freeGlobal.process;

        /** Used to access faster Node.js helpers. */
        var nodeUtil = (function () {
          try {
            return freeProcess && freeProcess.binding('util');
          } catch (e) {}
        })();

        /* Node.js helper references. */
        var nodeIsTypedArray = nodeUtil && nodeUtil.isTypedArray;

        /**
         * Adds the key-value `pair` to `map`.
         *
         * @private
         * @param {Object} map The map to modify.
         * @param {Array} pair The key-value pair to add.
         * @returns {Object} Returns `map`.
         */
        function addMapEntry(map, pair) {
          // Don't return `map.set` because it's not chainable in IE 11.
          map.set(pair[0], pair[1]);
          return map;
        }

        /**
         * Adds `value` to `set`.
         *
         * @private
         * @param {Object} set The set to modify.
         * @param {*} value The value to add.
         * @returns {Object} Returns `set`.
         */
        function addSetEntry(set, value) {
          // Don't return `set.add` because it's not chainable in IE 11.
          set.add(value);
          return set;
        }

        /**
         * A faster alternative to `Function#apply`, this function invokes `func`
         * with the `this` binding of `thisArg` and the arguments of `args`.
         *
         * @private
         * @param {Function} func The function to invoke.
         * @param {*} thisArg The `this` binding of `func`.
         * @param {Array} args The arguments to invoke `func` with.
         * @returns {*} Returns the result of `func`.
         */
        function apply(func, thisArg, args) {
          switch (args.length) {
            case 0:
              return func.call(thisArg);
            case 1:
              return func.call(thisArg, args[0]);
            case 2:
              return func.call(thisArg, args[0], args[1]);
            case 3:
              return func.call(thisArg, args[0], args[1], args[2]);
          }
          return func.apply(thisArg, args);
        }

        /**
         * A specialized version of `_.forEach` for arrays without support for
         * iteratee shorthands.
         *
         * @private
         * @param {Array} [array] The array to iterate over.
         * @param {Function} iteratee The function invoked per iteration.
         * @returns {Array} Returns `array`.
         */
        function arrayEach(array, iteratee) {
          var index = -1,
            length = array ? array.length : 0;

          while (++index < length) {
            if (iteratee(array[index], index, array) === false) {
              break;
            }
          }
          return array;
        }

        /**
         * Appends the elements of `values` to `array`.
         *
         * @private
         * @param {Array} array The array to modify.
         * @param {Array} values The values to append.
         * @returns {Array} Returns `array`.
         */
        function arrayPush(array, values) {
          var index = -1,
            length = values.length,
            offset = array.length;

          while (++index < length) {
            array[offset + index] = values[index];
          }
          return array;
        }

        /**
         * A specialized version of `_.reduce` for arrays without support for
         * iteratee shorthands.
         *
         * @private
         * @param {Array} [array] The array to iterate over.
         * @param {Function} iteratee The function invoked per iteration.
         * @param {*} [accumulator] The initial value.
         * @param {boolean} [initAccum] Specify using the first element of `array` as
         *  the initial value.
         * @returns {*} Returns the accumulated value.
         */
        function arrayReduce(array, iteratee, accumulator, initAccum) {
          var index = -1,
            length = array ? array.length : 0;

          if (initAccum && length) {
            accumulator = array[++index];
          }
          while (++index < length) {
            accumulator = iteratee(accumulator, array[index], index, array);
          }
          return accumulator;
        }

        /**
         * The base implementation of `_.times` without support for iteratee shorthands
         * or max array length checks.
         *
         * @private
         * @param {number} n The number of times to invoke `iteratee`.
         * @param {Function} iteratee The function invoked per iteration.
         * @returns {Array} Returns the array of results.
         */
        function baseTimes(n, iteratee) {
          var index = -1,
            result = Array(n);

          while (++index < n) {
            result[index] = iteratee(index);
          }
          return result;
        }

        /**
         * The base implementation of `_.unary` without support for storing metadata.
         *
         * @private
         * @param {Function} func The function to cap arguments for.
         * @returns {Function} Returns the new capped function.
         */
        function baseUnary(func) {
          return function (value) {
            return func(value);
          };
        }

        /**
         * Gets the value at `key` of `object`.
         *
         * @private
         * @param {Object} [object] The object to query.
         * @param {string} key The key of the property to get.
         * @returns {*} Returns the property value.
         */
        function getValue(object, key) {
          return object == null ? undefined : object[key];
        }

        /**
         * Checks if `value` is a host object in IE < 9.
         *
         * @private
         * @param {*} value The value to check.
         * @returns {boolean} Returns `true` if `value` is a host object, else `false`.
         */
        function isHostObject(value) {
          // Many host objects are `Object` objects that can coerce to strings
          // despite having improperly defined `toString` methods.
          var result = false;
          if (value != null && typeof value.toString != 'function') {
            try {
              result = !!(value + '');
            } catch (e) {}
          }
          return result;
        }

        /**
         * Converts `map` to its key-value pairs.
         *
         * @private
         * @param {Object} map The map to convert.
         * @returns {Array} Returns the key-value pairs.
         */
        function mapToArray(map) {
          var index = -1,
            result = Array(map.size);

          map.forEach(function (value, key) {
            result[++index] = [key, value];
          });
          return result;
        }

        /**
         * Creates a unary function that invokes `func` with its argument transformed.
         *
         * @private
         * @param {Function} func The function to wrap.
         * @param {Function} transform The argument transform.
         * @returns {Function} Returns the new function.
         */
        function overArg(func, transform) {
          return function (arg) {
            return func(transform(arg));
          };
        }

        /**
         * Converts `set` to an array of its values.
         *
         * @private
         * @param {Object} set The set to convert.
         * @returns {Array} Returns the values.
         */
        function setToArray(set) {
          var index = -1,
            result = Array(set.size);

          set.forEach(function (value) {
            result[++index] = value;
          });
          return result;
        }

        /** Used for built-in method references. */
        var arrayProto = Array.prototype,
          funcProto = Function.prototype,
          objectProto = Object.prototype;

        /** Used to detect overreaching core-js shims. */
        var coreJsData = root['__core-js_shared__'];

        /** Used to detect methods masquerading as native. */
        var maskSrcKey = (function () {
          var uid = /[^.]+$/.exec(
            (coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO) || ''
          );
          return uid ? 'Symbol(src)_1.' + uid : '';
        })();

        /** Used to resolve the decompiled source of functions. */
        var funcToString = funcProto.toString;

        /** Used to check objects for own properties. */
        var hasOwnProperty = objectProto.hasOwnProperty;

        /** Used to infer the `Object` constructor. */
        var objectCtorString = funcToString.call(Object);

        /**
         * Used to resolve the
         * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)
         * of values.
         */
        var objectToString = objectProto.toString;

        /** Used to detect if a method is native. */
        var reIsNative = RegExp(
          '^' +
            funcToString
              .call(hasOwnProperty)
              .replace(reRegExpChar, '\\$&')
              .replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g, '$1.*?') +
            '$'
        );

        /** Built-in value references. */
        var Buffer = moduleExports ? root.Buffer : undefined,
          Symbol = root.Symbol,
          Uint8Array = root.Uint8Array,
          getPrototype = overArg(Object.getPrototypeOf, Object),
          objectCreate = Object.create,
          propertyIsEnumerable = objectProto.propertyIsEnumerable,
          splice = arrayProto.splice;

        /* Built-in method references for those with the same name as other `lodash` methods. */
        var nativeGetSymbols = Object.getOwnPropertySymbols,
          nativeIsBuffer = Buffer ? Buffer.isBuffer : undefined,
          nativeKeys = overArg(Object.keys, Object),
          nativeMax = Math.max;

        /* Built-in method references that are verified to be native. */
        var DataView = getNative(root, 'DataView'),
          Map = getNative(root, 'Map'),
          Promise = getNative(root, 'Promise'),
          Set = getNative(root, 'Set'),
          WeakMap = getNative(root, 'WeakMap'),
          nativeCreate = getNative(Object, 'create');

        /** Used to detect maps, sets, and weakmaps. */
        var dataViewCtorString = toSource(DataView),
          mapCtorString = toSource(Map),
          promiseCtorString = toSource(Promise),
          setCtorString = toSource(Set),
          weakMapCtorString = toSource(WeakMap);

        /** Used to convert symbols to primitives and strings. */
        var symbolProto = Symbol ? Symbol.prototype : undefined,
          symbolValueOf = symbolProto ? symbolProto.valueOf : undefined;

        /**
         * Creates a hash object.
         *
         * @private
         * @constructor
         * @param {Array} [entries] The key-value pairs to cache.
         */
        function Hash(entries) {
          var index = -1,
            length = entries ? entries.length : 0;

          this.clear();
          while (++index < length) {
            var entry = entries[index];
            this.set(entry[0], entry[1]);
          }
        }

        /**
         * Removes all key-value entries from the hash.
         *
         * @private
         * @name clear
         * @memberOf Hash
         */
        function hashClear() {
          this.__data__ = nativeCreate ? nativeCreate(null) : {};
        }

        /**
         * Removes `key` and its value from the hash.
         *
         * @private
         * @name delete
         * @memberOf Hash
         * @param {Object} hash The hash to modify.
         * @param {string} key The key of the value to remove.
         * @returns {boolean} Returns `true` if the entry was removed, else `false`.
         */
        function hashDelete(key) {
          return this.has(key) && delete this.__data__[key];
        }

        /**
         * Gets the hash value for `key`.
         *
         * @private
         * @name get
         * @memberOf Hash
         * @param {string} key The key of the value to get.
         * @returns {*} Returns the entry value.
         */
        function hashGet(key) {
          var data = this.__data__;
          if (nativeCreate) {
            var result = data[key];
            return result === HASH_UNDEFINED ? undefined : result;
          }
          return hasOwnProperty.call(data, key) ? data[key] : undefined;
        }

        /**
         * Checks if a hash value for `key` exists.
         *
         * @private
         * @name has
         * @memberOf Hash
         * @param {string} key The key of the entry to check.
         * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
         */
        function hashHas(key) {
          var data = this.__data__;
          return nativeCreate ? data[key] !== undefined : hasOwnProperty.call(data, key);
        }

        /**
         * Sets the hash `key` to `value`.
         *
         * @private
         * @name set
         * @memberOf Hash
         * @param {string} key The key of the value to set.
         * @param {*} value The value to set.
         * @returns {Object} Returns the hash instance.
         */
        function hashSet(key, value) {
          var data = this.__data__;
          data[key] = nativeCreate && value === undefined ? HASH_UNDEFINED : value;
          return this;
        }

        // Add methods to `Hash`.
        Hash.prototype.clear = hashClear;
        Hash.prototype['delete'] = hashDelete;
        Hash.prototype.get = hashGet;
        Hash.prototype.has = hashHas;
        Hash.prototype.set = hashSet;

        /**
         * Creates an list cache object.
         *
         * @private
         * @constructor
         * @param {Array} [entries] The key-value pairs to cache.
         */
        function ListCache(entries) {
          var index = -1,
            length = entries ? entries.length : 0;

          this.clear();
          while (++index < length) {
            var entry = entries[index];
            this.set(entry[0], entry[1]);
          }
        }

        /**
         * Removes all key-value entries from the list cache.
         *
         * @private
         * @name clear
         * @memberOf ListCache
         */
        function listCacheClear() {
          this.__data__ = [];
        }

        /**
         * Removes `key` and its value from the list cache.
         *
         * @private
         * @name delete
         * @memberOf ListCache
         * @param {string} key The key of the value to remove.
         * @returns {boolean} Returns `true` if the entry was removed, else `false`.
         */
        function listCacheDelete(key) {
          var data = this.__data__,
            index = assocIndexOf(data, key);

          if (index < 0) {
            return false;
          }
          var lastIndex = data.length - 1;
          if (index == lastIndex) {
            data.pop();
          } else {
            splice.call(data, index, 1);
          }
          return true;
        }

        /**
         * Gets the list cache value for `key`.
         *
         * @private
         * @name get
         * @memberOf ListCache
         * @param {string} key The key of the value to get.
         * @returns {*} Returns the entry value.
         */
        function listCacheGet(key) {
          var data = this.__data__,
            index = assocIndexOf(data, key);

          return index < 0 ? undefined : data[index][1];
        }

        /**
         * Checks if a list cache value for `key` exists.
         *
         * @private
         * @name has
         * @memberOf ListCache
         * @param {string} key The key of the entry to check.
         * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
         */
        function listCacheHas(key) {
          return assocIndexOf(this.__data__, key) > -1;
        }

        /**
         * Sets the list cache `key` to `value`.
         *
         * @private
         * @name set
         * @memberOf ListCache
         * @param {string} key The key of the value to set.
         * @param {*} value The value to set.
         * @returns {Object} Returns the list cache instance.
         */
        function listCacheSet(key, value) {
          var data = this.__data__,
            index = assocIndexOf(data, key);

          if (index < 0) {
            data.push([key, value]);
          } else {
            data[index][1] = value;
          }
          return this;
        }

        // Add methods to `ListCache`.
        ListCache.prototype.clear = listCacheClear;
        ListCache.prototype['delete'] = listCacheDelete;
        ListCache.prototype.get = listCacheGet;
        ListCache.prototype.has = listCacheHas;
        ListCache.prototype.set = listCacheSet;

        /**
         * Creates a map cache object to store key-value pairs.
         *
         * @private
         * @constructor
         * @param {Array} [entries] The key-value pairs to cache.
         */
        function MapCache(entries) {
          var index = -1,
            length = entries ? entries.length : 0;

          this.clear();
          while (++index < length) {
            var entry = entries[index];
            this.set(entry[0], entry[1]);
          }
        }

        /**
         * Removes all key-value entries from the map.
         *
         * @private
         * @name clear
         * @memberOf MapCache
         */
        function mapCacheClear() {
          this.__data__ = {
            hash: new Hash(),
            map: new (Map || ListCache)(),
            string: new Hash(),
          };
        }

        /**
         * Removes `key` and its value from the map.
         *
         * @private
         * @name delete
         * @memberOf MapCache
         * @param {string} key The key of the value to remove.
         * @returns {boolean} Returns `true` if the entry was removed, else `false`.
         */
        function mapCacheDelete(key) {
          return getMapData(this, key)['delete'](key);
        }

        /**
         * Gets the map value for `key`.
         *
         * @private
         * @name get
         * @memberOf MapCache
         * @param {string} key The key of the value to get.
         * @returns {*} Returns the entry value.
         */
        function mapCacheGet(key) {
          return getMapData(this, key).get(key);
        }

        /**
         * Checks if a map value for `key` exists.
         *
         * @private
         * @name has
         * @memberOf MapCache
         * @param {string} key The key of the entry to check.
         * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
         */
        function mapCacheHas(key) {
          return getMapData(this, key).has(key);
        }

        /**
         * Sets the map `key` to `value`.
         *
         * @private
         * @name set
         * @memberOf MapCache
         * @param {string} key The key of the value to set.
         * @param {*} value The value to set.
         * @returns {Object} Returns the map cache instance.
         */
        function mapCacheSet(key, value) {
          getMapData(this, key).set(key, value);
          return this;
        }

        // Add methods to `MapCache`.
        MapCache.prototype.clear = mapCacheClear;
        MapCache.prototype['delete'] = mapCacheDelete;
        MapCache.prototype.get = mapCacheGet;
        MapCache.prototype.has = mapCacheHas;
        MapCache.prototype.set = mapCacheSet;

        /**
         * Creates a stack cache object to store key-value pairs.
         *
         * @private
         * @constructor
         * @param {Array} [entries] The key-value pairs to cache.
         */
        function Stack(entries) {
          this.__data__ = new ListCache(entries);
        }

        /**
         * Removes all key-value entries from the stack.
         *
         * @private
         * @name clear
         * @memberOf Stack
         */
        function stackClear() {
          this.__data__ = new ListCache();
        }

        /**
         * Removes `key` and its value from the stack.
         *
         * @private
         * @name delete
         * @memberOf Stack
         * @param {string} key The key of the value to remove.
         * @returns {boolean} Returns `true` if the entry was removed, else `false`.
         */
        function stackDelete(key) {
          return this.__data__['delete'](key);
        }

        /**
         * Gets the stack value for `key`.
         *
         * @private
         * @name get
         * @memberOf Stack
         * @param {string} key The key of the value to get.
         * @returns {*} Returns the entry value.
         */
        function stackGet(key) {
          return this.__data__.get(key);
        }

        /**
         * Checks if a stack value for `key` exists.
         *
         * @private
         * @name has
         * @memberOf Stack
         * @param {string} key The key of the entry to check.
         * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
         */
        function stackHas(key) {
          return this.__data__.has(key);
        }

        /**
         * Sets the stack `key` to `value`.
         *
         * @private
         * @name set
         * @memberOf Stack
         * @param {string} key The key of the value to set.
         * @param {*} value The value to set.
         * @returns {Object} Returns the stack cache instance.
         */
        function stackSet(key, value) {
          var cache = this.__data__;
          if (cache instanceof ListCache) {
            var pairs = cache.__data__;
            if (!Map || pairs.length < LARGE_ARRAY_SIZE - 1) {
              pairs.push([key, value]);
              return this;
            }
            cache = this.__data__ = new MapCache(pairs);
          }
          cache.set(key, value);
          return this;
        }

        // Add methods to `Stack`.
        Stack.prototype.clear = stackClear;
        Stack.prototype['delete'] = stackDelete;
        Stack.prototype.get = stackGet;
        Stack.prototype.has = stackHas;
        Stack.prototype.set = stackSet;

        /**
         * Creates an array of the enumerable property names of the array-like `value`.
         *
         * @private
         * @param {*} value The value to query.
         * @param {boolean} inherited Specify returning inherited property names.
         * @returns {Array} Returns the array of property names.
         */
        function arrayLikeKeys(value, inherited) {
          // Safari 8.1 makes `arguments.callee` enumerable in strict mode.
          // Safari 9 makes `arguments.length` enumerable in strict mode.
          var result = isArray(value) || isArguments(value) ? baseTimes(value.length, String) : [];

          var length = result.length,
            skipIndexes = !!length;

          for (var key in value) {
            if (
              (inherited || hasOwnProperty.call(value, key)) &&
              !(skipIndexes && (key == 'length' || isIndex(key, length)))
            ) {
              result.push(key);
            }
          }
          return result;
        }

        /**
         * This function is like `assignValue` except that it doesn't assign
         * `undefined` values.
         *
         * @private
         * @param {Object} object The object to modify.
         * @param {string} key The key of the property to assign.
         * @param {*} value The value to assign.
         */
        function assignMergeValue(object, key, value) {
          if (
            (value !== undefined && !eq(object[key], value)) ||
            (typeof key == 'number' && value === undefined && !(key in object))
          ) {
            object[key] = value;
          }
        }

        /**
         * Assigns `value` to `key` of `object` if the existing value is not equivalent
         * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
         * for equality comparisons.
         *
         * @private
         * @param {Object} object The object to modify.
         * @param {string} key The key of the property to assign.
         * @param {*} value The value to assign.
         */
        function assignValue(object, key, value) {
          var objValue = object[key];
          if (
            !(hasOwnProperty.call(object, key) && eq(objValue, value)) ||
            (value === undefined && !(key in object))
          ) {
            object[key] = value;
          }
        }

        /**
         * Gets the index at which the `key` is found in `array` of key-value pairs.
         *
         * @private
         * @param {Array} array The array to inspect.
         * @param {*} key The key to search for.
         * @returns {number} Returns the index of the matched value, else `-1`.
         */
        function assocIndexOf(array, key) {
          var length = array.length;
          while (length--) {
            if (eq(array[length][0], key)) {
              return length;
            }
          }
          return -1;
        }

        /**
         * The base implementation of `_.assign` without support for multiple sources
         * or `customizer` functions.
         *
         * @private
         * @param {Object} object The destination object.
         * @param {Object} source The source object.
         * @returns {Object} Returns `object`.
         */
        function baseAssign(object, source) {
          return object && copyObject(source, keys(source), object);
        }

        /**
         * The base implementation of `_.clone` and `_.cloneDeep` which tracks
         * traversed objects.
         *
         * @private
         * @param {*} value The value to clone.
         * @param {boolean} [isDeep] Specify a deep clone.
         * @param {boolean} [isFull] Specify a clone including symbols.
         * @param {Function} [customizer] The function to customize cloning.
         * @param {string} [key] The key of `value`.
         * @param {Object} [object] The parent object of `value`.
         * @param {Object} [stack] Tracks traversed objects and their clone counterparts.
         * @returns {*} Returns the cloned value.
         */
        function baseClone(value, isDeep, isFull, customizer, key, object, stack) {
          var result;
          if (customizer) {
            result = object ? customizer(value, key, object, stack) : customizer(value);
          }
          if (result !== undefined) {
            return result;
          }
          if (!isObject(value)) {
            return value;
          }
          var isArr = isArray(value);
          if (isArr) {
            result = initCloneArray(value);
            if (!isDeep) {
              return copyArray(value, result);
            }
          } else {
            var tag = getTag(value),
              isFunc = tag == funcTag || tag == genTag;

            if (isBuffer(value)) {
              return cloneBuffer(value, isDeep);
            }
            if (tag == objectTag || tag == argsTag || (isFunc && !object)) {
              if (isHostObject(value)) {
                return object ? value : {};
              }
              result = initCloneObject(isFunc ? {} : value);
              if (!isDeep) {
                return copySymbols(value, baseAssign(result, value));
              }
            } else {
              if (!cloneableTags[tag]) {
                return object ? value : {};
              }
              result = initCloneByTag(value, tag, baseClone, isDeep);
            }
          }
          // Check for circular references and return its corresponding clone.
          stack || (stack = new Stack());
          var stacked = stack.get(value);
          if (stacked) {
            return stacked;
          }
          stack.set(value, result);

          if (!isArr) {
            var props = isFull ? getAllKeys(value) : keys(value);
          }
          arrayEach(props || value, function (subValue, key) {
            if (props) {
              key = subValue;
              subValue = value[key];
            }
            // Recursively populate clone (susceptible to call stack limits).
            assignValue(
              result,
              key,
              baseClone(subValue, isDeep, isFull, customizer, key, value, stack)
            );
          });
          return result;
        }

        /**
         * The base implementation of `_.create` without support for assigning
         * properties to the created object.
         *
         * @private
         * @param {Object} prototype The object to inherit from.
         * @returns {Object} Returns the new object.
         */
        function baseCreate(proto) {
          return isObject(proto) ? objectCreate(proto) : {};
        }

        /**
         * The base implementation of `getAllKeys` and `getAllKeysIn` which uses
         * `keysFunc` and `symbolsFunc` to get the enumerable property names and
         * symbols of `object`.
         *
         * @private
         * @param {Object} object The object to query.
         * @param {Function} keysFunc The function to get the keys of `object`.
         * @param {Function} symbolsFunc The function to get the symbols of `object`.
         * @returns {Array} Returns the array of property names and symbols.
         */
        function baseGetAllKeys(object, keysFunc, symbolsFunc) {
          var result = keysFunc(object);
          return isArray(object) ? result : arrayPush(result, symbolsFunc(object));
        }

        /**
         * The base implementation of `getTag`.
         *
         * @private
         * @param {*} value The value to query.
         * @returns {string} Returns the `toStringTag`.
         */
        function baseGetTag(value) {
          return objectToString.call(value);
        }

        /**
         * The base implementation of `_.isNative` without bad shim checks.
         *
         * @private
         * @param {*} value The value to check.
         * @returns {boolean} Returns `true` if `value` is a native function,
         *  else `false`.
         */
        function baseIsNative(value) {
          if (!isObject(value) || isMasked(value)) {
            return false;
          }
          var pattern = isFunction(value) || isHostObject(value) ? reIsNative : reIsHostCtor;
          return pattern.test(toSource(value));
        }

        /**
         * The base implementation of `_.isTypedArray` without Node.js optimizations.
         *
         * @private
         * @param {*} value The value to check.
         * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.
         */
        function baseIsTypedArray(value) {
          return (
            isObjectLike(value) &&
            isLength(value.length) &&
            !!typedArrayTags[objectToString.call(value)]
          );
        }

        /**
         * The base implementation of `_.keys` which doesn't treat sparse arrays as dense.
         *
         * @private
         * @param {Object} object The object to query.
         * @returns {Array} Returns the array of property names.
         */
        function baseKeys(object) {
          if (!isPrototype(object)) {
            return nativeKeys(object);
          }
          var result = [];
          for (var key in Object(object)) {
            if (hasOwnProperty.call(object, key) && key != 'constructor') {
              result.push(key);
            }
          }
          return result;
        }

        /**
         * The base implementation of `_.keysIn` which doesn't treat sparse arrays as dense.
         *
         * @private
         * @param {Object} object The object to query.
         * @returns {Array} Returns the array of property names.
         */
        function baseKeysIn(object) {
          if (!isObject(object)) {
            return nativeKeysIn(object);
          }
          var isProto = isPrototype(object),
            result = [];

          for (var key in object) {
            if (!(key == 'constructor' && (isProto || !hasOwnProperty.call(object, key)))) {
              result.push(key);
            }
          }
          return result;
        }

        /**
         * The base implementation of `_.merge` without support for multiple sources.
         *
         * @private
         * @param {Object} object The destination object.
         * @param {Object} source The source object.
         * @param {number} srcIndex The index of `source`.
         * @param {Function} [customizer] The function to customize merged values.
         * @param {Object} [stack] Tracks traversed source values and their merged
         *  counterparts.
         */
        function baseMerge(object, source, srcIndex, customizer, stack) {
          if (object === source) {
            return;
          }
          if (!(isArray(source) || isTypedArray(source))) {
            var props = baseKeysIn(source);
          }
          arrayEach(props || source, function (srcValue, key) {
            if (props) {
              key = srcValue;
              srcValue = source[key];
            }
            if (isObject(srcValue)) {
              stack || (stack = new Stack());
              baseMergeDeep(object, source, key, srcIndex, baseMerge, customizer, stack);
            } else {
              var newValue = customizer
                ? customizer(object[key], srcValue, key + '', object, source, stack)
                : undefined;

              if (newValue === undefined) {
                newValue = srcValue;
              }
              assignMergeValue(object, key, newValue);
            }
          });
        }

        /**
         * A specialized version of `baseMerge` for arrays and objects which performs
         * deep merges and tracks traversed objects enabling objects with circular
         * references to be merged.
         *
         * @private
         * @param {Object} object The destination object.
         * @param {Object} source The source object.
         * @param {string} key The key of the value to merge.
         * @param {number} srcIndex The index of `source`.
         * @param {Function} mergeFunc The function to merge values.
         * @param {Function} [customizer] The function to customize assigned values.
         * @param {Object} [stack] Tracks traversed source values and their merged
         *  counterparts.
         */
        function baseMergeDeep(object, source, key, srcIndex, mergeFunc, customizer, stack) {
          var objValue = object[key],
            srcValue = source[key],
            stacked = stack.get(srcValue);

          if (stacked) {
            assignMergeValue(object, key, stacked);
            return;
          }
          var newValue = customizer
            ? customizer(objValue, srcValue, key + '', object, source, stack)
            : undefined;

          var isCommon = newValue === undefined;

          if (isCommon) {
            newValue = srcValue;
            if (isArray(srcValue) || isTypedArray(srcValue)) {
              if (isArray(objValue)) {
                newValue = objValue;
              } else if (isArrayLikeObject(objValue)) {
                newValue = copyArray(objValue);
              } else {
                isCommon = false;
                newValue = baseClone(srcValue, true);
              }
            } else if (isPlainObject(srcValue) || isArguments(srcValue)) {
              if (isArguments(objValue)) {
                newValue = toPlainObject(objValue);
              } else if (!isObject(objValue) || (srcIndex && isFunction(objValue))) {
                isCommon = false;
                newValue = baseClone(srcValue, true);
              } else {
                newValue = objValue;
              }
            } else {
              isCommon = false;
            }
          }
          if (isCommon) {
            // Recursively merge objects and arrays (susceptible to call stack limits).
            stack.set(srcValue, newValue);
            mergeFunc(newValue, srcValue, srcIndex, customizer, stack);
            stack['delete'](srcValue);
          }
          assignMergeValue(object, key, newValue);
        }

        /**
         * The base implementation of `_.rest` which doesn't validate or coerce arguments.
         *
         * @private
         * @param {Function} func The function to apply a rest parameter to.
         * @param {number} [start=func.length-1] The start position of the rest parameter.
         * @returns {Function} Returns the new function.
         */
        function baseRest(func, start) {
          start = nativeMax(start === undefined ? func.length - 1 : start, 0);
          return function () {
            var args = arguments,
              index = -1,
              length = nativeMax(args.length - start, 0),
              array = Array(length);

            while (++index < length) {
              array[index] = args[start + index];
            }
            index = -1;
            var otherArgs = Array(start + 1);
            while (++index < start) {
              otherArgs[index] = args[index];
            }
            otherArgs[start] = array;
            return apply(func, this, otherArgs);
          };
        }

        /**
         * Creates a clone of  `buffer`.
         *
         * @private
         * @param {Buffer} buffer The buffer to clone.
         * @param {boolean} [isDeep] Specify a deep clone.
         * @returns {Buffer} Returns the cloned buffer.
         */
        function cloneBuffer(buffer, isDeep) {
          if (isDeep) {
            return buffer.slice();
          }
          var result = new buffer.constructor(buffer.length);
          buffer.copy(result);
          return result;
        }

        /**
         * Creates a clone of `arrayBuffer`.
         *
         * @private
         * @param {ArrayBuffer} arrayBuffer The array buffer to clone.
         * @returns {ArrayBuffer} Returns the cloned array buffer.
         */
        function cloneArrayBuffer(arrayBuffer) {
          var result = new arrayBuffer.constructor(arrayBuffer.byteLength);
          new Uint8Array(result).set(new Uint8Array(arrayBuffer));
          return result;
        }

        /**
         * Creates a clone of `dataView`.
         *
         * @private
         * @param {Object} dataView The data view to clone.
         * @param {boolean} [isDeep] Specify a deep clone.
         * @returns {Object} Returns the cloned data view.
         */
        function cloneDataView(dataView, isDeep) {
          var buffer = isDeep ? cloneArrayBuffer(dataView.buffer) : dataView.buffer;
          return new dataView.constructor(buffer, dataView.byteOffset, dataView.byteLength);
        }

        /**
         * Creates a clone of `map`.
         *
         * @private
         * @param {Object} map The map to clone.
         * @param {Function} cloneFunc The function to clone values.
         * @param {boolean} [isDeep] Specify a deep clone.
         * @returns {Object} Returns the cloned map.
         */
        function cloneMap(map, isDeep, cloneFunc) {
          var array = isDeep ? cloneFunc(mapToArray(map), true) : mapToArray(map);
          return arrayReduce(array, addMapEntry, new map.constructor());
        }

        /**
         * Creates a clone of `regexp`.
         *
         * @private
         * @param {Object} regexp The regexp to clone.
         * @returns {Object} Returns the cloned regexp.
         */
        function cloneRegExp(regexp) {
          var result = new regexp.constructor(regexp.source, reFlags.exec(regexp));
          result.lastIndex = regexp.lastIndex;
          return result;
        }

        /**
         * Creates a clone of `set`.
         *
         * @private
         * @param {Object} set The set to clone.
         * @param {Function} cloneFunc The function to clone values.
         * @param {boolean} [isDeep] Specify a deep clone.
         * @returns {Object} Returns the cloned set.
         */
        function cloneSet(set, isDeep, cloneFunc) {
          var array = isDeep ? cloneFunc(setToArray(set), true) : setToArray(set);
          return arrayReduce(array, addSetEntry, new set.constructor());
        }

        /**
         * Creates a clone of the `symbol` object.
         *
         * @private
         * @param {Object} symbol The symbol object to clone.
         * @returns {Object} Returns the cloned symbol object.
         */
        function cloneSymbol(symbol) {
          return symbolValueOf ? Object(symbolValueOf.call(symbol)) : {};
        }

        /**
         * Creates a clone of `typedArray`.
         *
         * @private
         * @param {Object} typedArray The typed array to clone.
         * @param {boolean} [isDeep] Specify a deep clone.
         * @returns {Object} Returns the cloned typed array.
         */
        function cloneTypedArray(typedArray, isDeep) {
          var buffer = isDeep ? cloneArrayBuffer(typedArray.buffer) : typedArray.buffer;
          return new typedArray.constructor(buffer, typedArray.byteOffset, typedArray.length);
        }

        /**
         * Copies the values of `source` to `array`.
         *
         * @private
         * @param {Array} source The array to copy values from.
         * @param {Array} [array=[]] The array to copy values to.
         * @returns {Array} Returns `array`.
         */
        function copyArray(source, array) {
          var index = -1,
            length = source.length;

          array || (array = Array(length));
          while (++index < length) {
            array[index] = source[index];
          }
          return array;
        }

        /**
         * Copies properties of `source` to `object`.
         *
         * @private
         * @param {Object} source The object to copy properties from.
         * @param {Array} props The property identifiers to copy.
         * @param {Object} [object={}] The object to copy properties to.
         * @param {Function} [customizer] The function to customize copied values.
         * @returns {Object} Returns `object`.
         */
        function copyObject(source, props, object, customizer) {
          object || (object = {});

          var index = -1,
            length = props.length;

          while (++index < length) {
            var key = props[index];

            var newValue = customizer
              ? customizer(object[key], source[key], key, object, source)
              : undefined;

            assignValue(object, key, newValue === undefined ? source[key] : newValue);
          }
          return object;
        }

        /**
         * Copies own symbol properties of `source` to `object`.
         *
         * @private
         * @param {Object} source The object to copy symbols from.
         * @param {Object} [object={}] The object to copy symbols to.
         * @returns {Object} Returns `object`.
         */
        function copySymbols(source, object) {
          return copyObject(source, getSymbols(source), object);
        }

        /**
         * Creates a function like `_.assign`.
         *
         * @private
         * @param {Function} assigner The function to assign values.
         * @returns {Function} Returns the new assigner function.
         */
        function createAssigner(assigner) {
          return baseRest(function (object, sources) {
            var index = -1,
              length = sources.length,
              customizer = length > 1 ? sources[length - 1] : undefined,
              guard = length > 2 ? sources[2] : undefined;

            customizer =
              assigner.length > 3 && typeof customizer == 'function'
                ? (length--, customizer)
                : undefined;

            if (guard && isIterateeCall(sources[0], sources[1], guard)) {
              customizer = length < 3 ? undefined : customizer;
              length = 1;
            }
            object = Object(object);
            while (++index < length) {
              var source = sources[index];
              if (source) {
                assigner(object, source, index, customizer);
              }
            }
            return object;
          });
        }

        /**
         * Creates an array of own enumerable property names and symbols of `object`.
         *
         * @private
         * @param {Object} object The object to query.
         * @returns {Array} Returns the array of property names and symbols.
         */
        function getAllKeys(object) {
          return baseGetAllKeys(object, keys, getSymbols);
        }

        /**
         * Gets the data for `map`.
         *
         * @private
         * @param {Object} map The map to query.
         * @param {string} key The reference key.
         * @returns {*} Returns the map data.
         */
        function getMapData(map, key) {
          var data = map.__data__;
          return isKeyable(key) ? data[typeof key == 'string' ? 'string' : 'hash'] : data.map;
        }

        /**
         * Gets the native function at `key` of `object`.
         *
         * @private
         * @param {Object} object The object to query.
         * @param {string} key The key of the method to get.
         * @returns {*} Returns the function if it's native, else `undefined`.
         */
        function getNative(object, key) {
          var value = getValue(object, key);
          return baseIsNative(value) ? value : undefined;
        }

        /**
         * Creates an array of the own enumerable symbol properties of `object`.
         *
         * @private
         * @param {Object} object The object to query.
         * @returns {Array} Returns the array of symbols.
         */
        var getSymbols = nativeGetSymbols ? overArg(nativeGetSymbols, Object) : stubArray;

        /**
         * Gets the `toStringTag` of `value`.
         *
         * @private
         * @param {*} value The value to query.
         * @returns {string} Returns the `toStringTag`.
         */
        var getTag = baseGetTag;

        // Fallback for data views, maps, sets, and weak maps in IE 11,
        // for data views in Edge < 14, and promises in Node.js.
        if (
          (DataView && getTag(new DataView(new ArrayBuffer(1))) != dataViewTag) ||
          (Map && getTag(new Map()) != mapTag) ||
          (Promise && getTag(Promise.resolve()) != promiseTag) ||
          (Set && getTag(new Set()) != setTag) ||
          (WeakMap && getTag(new WeakMap()) != weakMapTag)
        ) {
          getTag = function (value) {
            var result = objectToString.call(value),
              Ctor = result == objectTag ? value.constructor : undefined,
              ctorString = Ctor ? toSource(Ctor) : undefined;

            if (ctorString) {
              switch (ctorString) {
                case dataViewCtorString:
                  return dataViewTag;
                case mapCtorString:
                  return mapTag;
                case promiseCtorString:
                  return promiseTag;
                case setCtorString:
                  return setTag;
                case weakMapCtorString:
                  return weakMapTag;
              }
            }
            return result;
          };
        }

        /**
         * Initializes an array clone.
         *
         * @private
         * @param {Array} array The array to clone.
         * @returns {Array} Returns the initialized clone.
         */
        function initCloneArray(array) {
          var length = array.length,
            result = array.constructor(length);

          // Add properties assigned by `RegExp#exec`.
          if (length && typeof array[0] == 'string' && hasOwnProperty.call(array, 'index')) {
            result.index = array.index;
            result.input = array.input;
          }
          return result;
        }

        /**
         * Initializes an object clone.
         *
         * @private
         * @param {Object} object The object to clone.
         * @returns {Object} Returns the initialized clone.
         */
        function initCloneObject(object) {
          return typeof object.constructor == 'function' && !isPrototype(object)
            ? baseCreate(getPrototype(object))
            : {};
        }

        /**
         * Initializes an object clone based on its `toStringTag`.
         *
         * **Note:** This function only supports cloning values with tags of
         * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.
         *
         * @private
         * @param {Object} object The object to clone.
         * @param {string} tag The `toStringTag` of the object to clone.
         * @param {Function} cloneFunc The function to clone values.
         * @param {boolean} [isDeep] Specify a deep clone.
         * @returns {Object} Returns the initialized clone.
         */
        function initCloneByTag(object, tag, cloneFunc, isDeep) {
          var Ctor = object.constructor;
          switch (tag) {
            case arrayBufferTag:
              return cloneArrayBuffer(object);

            case boolTag:
            case dateTag:
              return new Ctor(+object);

            case dataViewTag:
              return cloneDataView(object, isDeep);

            case float32Tag:
            case float64Tag:
            case int8Tag:
            case int16Tag:
            case int32Tag:
            case uint8Tag:
            case uint8ClampedTag:
            case uint16Tag:
            case uint32Tag:
              return cloneTypedArray(object, isDeep);

            case mapTag:
              return cloneMap(object, isDeep, cloneFunc);

            case numberTag:
            case stringTag:
              return new Ctor(object);

            case regexpTag:
              return cloneRegExp(object);

            case setTag:
              return cloneSet(object, isDeep, cloneFunc);

            case symbolTag:
              return cloneSymbol(object);
          }
        }

        /**
         * Checks if `value` is a valid array-like index.
         *
         * @private
         * @param {*} value The value to check.
         * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.
         * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.
         */
        function isIndex(value, length) {
          length = length == null ? MAX_SAFE_INTEGER : length;
          return (
            !!length &&
            (typeof value == 'number' || reIsUint.test(value)) &&
            value > -1 &&
            value % 1 == 0 &&
            value < length
          );
        }

        /**
         * Checks if the given arguments are from an iteratee call.
         *
         * @private
         * @param {*} value The potential iteratee value argument.
         * @param {*} index The potential iteratee index or key argument.
         * @param {*} object The potential iteratee object argument.
         * @returns {boolean} Returns `true` if the arguments are from an iteratee call,
         *  else `false`.
         */
        function isIterateeCall(value, index, object) {
          if (!isObject(object)) {
            return false;
          }
          var type = typeof index;
          if (
            type == 'number'
              ? isArrayLike(object) && isIndex(index, object.length)
              : type == 'string' && index in object
          ) {
            return eq(object[index], value);
          }
          return false;
        }

        /**
         * Checks if `value` is suitable for use as unique object key.
         *
         * @private
         * @param {*} value The value to check.
         * @returns {boolean} Returns `true` if `value` is suitable, else `false`.
         */
        function isKeyable(value) {
          var type = typeof value;
          return type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean'
            ? value !== '__proto__'
            : value === null;
        }

        /**
         * Checks if `func` has its source masked.
         *
         * @private
         * @param {Function} func The function to check.
         * @returns {boolean} Returns `true` if `func` is masked, else `false`.
         */
        function isMasked(func) {
          return !!maskSrcKey && maskSrcKey in func;
        }

        /**
         * Checks if `value` is likely a prototype object.
         *
         * @private
         * @param {*} value The value to check.
         * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.
         */
        function isPrototype(value) {
          var Ctor = value && value.constructor,
            proto = (typeof Ctor == 'function' && Ctor.prototype) || objectProto;

          return value === proto;
        }

        /**
         * This function is like
         * [`Object.keys`](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)
         * except that it includes inherited enumerable properties.
         *
         * @private
         * @param {Object} object The object to query.
         * @returns {Array} Returns the array of property names.
         */
        function nativeKeysIn(object) {
          var result = [];
          if (object != null) {
            for (var key in Object(object)) {
              result.push(key);
            }
          }
          return result;
        }

        /**
         * Converts `func` to its source code.
         *
         * @private
         * @param {Function} func The function to process.
         * @returns {string} Returns the source code.
         */
        function toSource(func) {
          if (func != null) {
            try {
              return funcToString.call(func);
            } catch (e) {}
            try {
              return func + '';
            } catch (e) {}
          }
          return '';
        }

        /**
         * Performs a
         * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
         * comparison between two values to determine if they are equivalent.
         *
         * @static
         * @memberOf _
         * @since 4.0.0
         * @category Lang
         * @param {*} value The value to compare.
         * @param {*} other The other value to compare.
         * @returns {boolean} Returns `true` if the values are equivalent, else `false`.
         * @example
         *
         * var object = { 'a': 1 };
         * var other = { 'a': 1 };
         *
         * _.eq(object, object);
         * // => true
         *
         * _.eq(object, other);
         * // => false
         *
         * _.eq('a', 'a');
         * // => true
         *
         * _.eq('a', Object('a'));
         * // => false
         *
         * _.eq(NaN, NaN);
         * // => true
         */
        function eq(value, other) {
          return value === other || (value !== value && other !== other);
        }

        /**
         * Checks if `value` is likely an `arguments` object.
         *
         * @static
         * @memberOf _
         * @since 0.1.0
         * @category Lang
         * @param {*} value The value to check.
         * @returns {boolean} Returns `true` if `value` is an `arguments` object,
         *  else `false`.
         * @example
         *
         * _.isArguments(function() { return arguments; }());
         * // => true
         *
         * _.isArguments([1, 2, 3]);
         * // => false
         */
        function isArguments(value) {
          // Safari 8.1 makes `arguments.callee` enumerable in strict mode.
          return (
            isArrayLikeObject(value) &&
            hasOwnProperty.call(value, 'callee') &&
            (!propertyIsEnumerable.call(value, 'callee') || objectToString.call(value) == argsTag)
          );
        }

        /**
         * Checks if `value` is classified as an `Array` object.
         *
         * @static
         * @memberOf _
         * @since 0.1.0
         * @category Lang
         * @param {*} value The value to check.
         * @returns {boolean} Returns `true` if `value` is an array, else `false`.
         * @example
         *
         * _.isArray([1, 2, 3]);
         * // => true
         *
         * _.isArray(document.body.children);
         * // => false
         *
         * _.isArray('abc');
         * // => false
         *
         * _.isArray(_.noop);
         * // => false
         */
        var isArray = Array.isArray;

        /**
         * Checks if `value` is array-like. A value is considered array-like if it's
         * not a function and has a `value.length` that's an integer greater than or
         * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.
         *
         * @static
         * @memberOf _
         * @since 4.0.0
         * @category Lang
         * @param {*} value The value to check.
         * @returns {boolean} Returns `true` if `value` is array-like, else `false`.
         * @example
         *
         * _.isArrayLike([1, 2, 3]);
         * // => true
         *
         * _.isArrayLike(document.body.children);
         * // => true
         *
         * _.isArrayLike('abc');
         * // => true
         *
         * _.isArrayLike(_.noop);
         * // => false
         */
        function isArrayLike(value) {
          return value != null && isLength(value.length) && !isFunction(value);
        }

        /**
         * This method is like `_.isArrayLike` except that it also checks if `value`
         * is an object.
         *
         * @static
         * @memberOf _
         * @since 4.0.0
         * @category Lang
         * @param {*} value The value to check.
         * @returns {boolean} Returns `true` if `value` is an array-like object,
         *  else `false`.
         * @example
         *
         * _.isArrayLikeObject([1, 2, 3]);
         * // => true
         *
         * _.isArrayLikeObject(document.body.children);
         * // => true
         *
         * _.isArrayLikeObject('abc');
         * // => false
         *
         * _.isArrayLikeObject(_.noop);
         * // => false
         */
        function isArrayLikeObject(value) {
          return isObjectLike(value) && isArrayLike(value);
        }

        /**
         * Checks if `value` is a buffer.
         *
         * @static
         * @memberOf _
         * @since 4.3.0
         * @category Lang
         * @param {*} value The value to check.
         * @returns {boolean} Returns `true` if `value` is a buffer, else `false`.
         * @example
         *
         * _.isBuffer(new Buffer(2));
         * // => true
         *
         * _.isBuffer(new Uint8Array(2));
         * // => false
         */
        var isBuffer = nativeIsBuffer || stubFalse;

        /**
         * Checks if `value` is classified as a `Function` object.
         *
         * @static
         * @memberOf _
         * @since 0.1.0
         * @category Lang
         * @param {*} value The value to check.
         * @returns {boolean} Returns `true` if `value` is a function, else `false`.
         * @example
         *
         * _.isFunction(_);
         * // => true
         *
         * _.isFunction(/abc/);
         * // => false
         */
        function isFunction(value) {
          // The use of `Object#toString` avoids issues with the `typeof` operator
          // in Safari 8-9 which returns 'object' for typed array and other constructors.
          var tag = isObject(value) ? objectToString.call(value) : '';
          return tag == funcTag || tag == genTag;
        }

        /**
         * Checks if `value` is a valid array-like length.
         *
         * **Note:** This method is loosely based on
         * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).
         *
         * @static
         * @memberOf _
         * @since 4.0.0
         * @category Lang
         * @param {*} value The value to check.
         * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.
         * @example
         *
         * _.isLength(3);
         * // => true
         *
         * _.isLength(Number.MIN_VALUE);
         * // => false
         *
         * _.isLength(Infinity);
         * // => false
         *
         * _.isLength('3');
         * // => false
         */
        function isLength(value) {
          return (
            typeof value == 'number' && value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER
          );
        }

        /**
         * Checks if `value` is the
         * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)
         * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)
         *
         * @static
         * @memberOf _
         * @since 0.1.0
         * @category Lang
         * @param {*} value The value to check.
         * @returns {boolean} Returns `true` if `value` is an object, else `false`.
         * @example
         *
         * _.isObject({});
         * // => true
         *
         * _.isObject([1, 2, 3]);
         * // => true
         *
         * _.isObject(_.noop);
         * // => true
         *
         * _.isObject(null);
         * // => false
         */
        function isObject(value) {
          var type = typeof value;
          return !!value && (type == 'object' || type == 'function');
        }

        /**
         * Checks if `value` is object-like. A value is object-like if it's not `null`
         * and has a `typeof` result of "object".
         *
         * @static
         * @memberOf _
         * @since 4.0.0
         * @category Lang
         * @param {*} value The value to check.
         * @returns {boolean} Returns `true` if `value` is object-like, else `false`.
         * @example
         *
         * _.isObjectLike({});
         * // => true
         *
         * _.isObjectLike([1, 2, 3]);
         * // => true
         *
         * _.isObjectLike(_.noop);
         * // => false
         *
         * _.isObjectLike(null);
         * // => false
         */
        function isObjectLike(value) {
          return !!value && typeof value == 'object';
        }

        /**
         * Checks if `value` is a plain object, that is, an object created by the
         * `Object` constructor or one with a `[[Prototype]]` of `null`.
         *
         * @static
         * @memberOf _
         * @since 0.8.0
         * @category Lang
         * @param {*} value The value to check.
         * @returns {boolean} Returns `true` if `value` is a plain object, else `false`.
         * @example
         *
         * function Foo() {
         *   this.a = 1;
         * }
         *
         * _.isPlainObject(new Foo);
         * // => false
         *
         * _.isPlainObject([1, 2, 3]);
         * // => false
         *
         * _.isPlainObject({ 'x': 0, 'y': 0 });
         * // => true
         *
         * _.isPlainObject(Object.create(null));
         * // => true
         */
        function isPlainObject(value) {
          if (
            !isObjectLike(value) ||
            objectToString.call(value) != objectTag ||
            isHostObject(value)
          ) {
            return false;
          }
          var proto = getPrototype(value);
          if (proto === null) {
            return true;
          }
          var Ctor = hasOwnProperty.call(proto, 'constructor') && proto.constructor;
          return (
            typeof Ctor == 'function' &&
            Ctor instanceof Ctor &&
            funcToString.call(Ctor) == objectCtorString
          );
        }

        /**
         * Checks if `value` is classified as a typed array.
         *
         * @static
         * @memberOf _
         * @since 3.0.0
         * @category Lang
         * @param {*} value The value to check.
         * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.
         * @example
         *
         * _.isTypedArray(new Uint8Array);
         * // => true
         *
         * _.isTypedArray([]);
         * // => false
         */
        var isTypedArray = nodeIsTypedArray ? baseUnary(nodeIsTypedArray) : baseIsTypedArray;

        /**
         * Converts `value` to a plain object flattening inherited enumerable string
         * keyed properties of `value` to own properties of the plain object.
         *
         * @static
         * @memberOf _
         * @since 3.0.0
         * @category Lang
         * @param {*} value The value to convert.
         * @returns {Object} Returns the converted plain object.
         * @example
         *
         * function Foo() {
         *   this.b = 2;
         * }
         *
         * Foo.prototype.c = 3;
         *
         * _.assign({ 'a': 1 }, new Foo);
         * // => { 'a': 1, 'b': 2 }
         *
         * _.assign({ 'a': 1 }, _.toPlainObject(new Foo));
         * // => { 'a': 1, 'b': 2, 'c': 3 }
         */
        function toPlainObject(value) {
          return copyObject(value, keysIn(value));
        }

        /**
         * Creates an array of the own enumerable property names of `object`.
         *
         * **Note:** Non-object values are coerced to objects. See the
         * [ES spec](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)
         * for more details.
         *
         * @static
         * @since 0.1.0
         * @memberOf _
         * @category Object
         * @param {Object} object The object to query.
         * @returns {Array} Returns the array of property names.
         * @example
         *
         * function Foo() {
         *   this.a = 1;
         *   this.b = 2;
         * }
         *
         * Foo.prototype.c = 3;
         *
         * _.keys(new Foo);
         * // => ['a', 'b'] (iteration order is not guaranteed)
         *
         * _.keys('hi');
         * // => ['0', '1']
         */
        function keys(object) {
          return isArrayLike(object) ? arrayLikeKeys(object) : baseKeys(object);
        }

        /**
         * Creates an array of the own and inherited enumerable property names of `object`.
         *
         * **Note:** Non-object values are coerced to objects.
         *
         * @static
         * @memberOf _
         * @since 3.0.0
         * @category Object
         * @param {Object} object The object to query.
         * @returns {Array} Returns the array of property names.
         * @example
         *
         * function Foo() {
         *   this.a = 1;
         *   this.b = 2;
         * }
         *
         * Foo.prototype.c = 3;
         *
         * _.keysIn(new Foo);
         * // => ['a', 'b', 'c'] (iteration order is not guaranteed)
         */
        function keysIn(object) {
          return isArrayLike(object) ? arrayLikeKeys(object, true) : baseKeysIn(object);
        }

        /**
         * This method is like `_.merge` except that it accepts `customizer` which
         * is invoked to produce the merged values of the destination and source
         * properties. If `customizer` returns `undefined`, merging is handled by the
         * method instead. The `customizer` is invoked with seven arguments:
         * (objValue, srcValue, key, object, source, stack).
         *
         * **Note:** This method mutates `object`.
         *
         * @static
         * @memberOf _
         * @since 4.0.0
         * @category Object
         * @param {Object} object The destination object.
         * @param {...Object} sources The source objects.
         * @param {Function} customizer The function to customize assigned values.
         * @returns {Object} Returns `object`.
         * @example
         *
         * function customizer(objValue, srcValue) {
         *   if (_.isArray(objValue)) {
         *     return objValue.concat(srcValue);
         *   }
         * }
         *
         * var object = { 'a': [1], 'b': [2] };
         * var other = { 'a': [3], 'b': [4] };
         *
         * _.mergeWith(object, other, customizer);
         * // => { 'a': [1, 3], 'b': [2, 4] }
         */
        var mergeWith = createAssigner(function (object, source, srcIndex, customizer) {
          baseMerge(object, source, srcIndex, customizer);
        });

        /**
         * This method returns a new empty array.
         *
         * @static
         * @memberOf _
         * @since 4.13.0
         * @category Util
         * @returns {Array} Returns the new empty array.
         * @example
         *
         * var arrays = _.times(2, _.stubArray);
         *
         * console.log(arrays);
         * // => [[], []]
         *
         * console.log(arrays[0] === arrays[1]);
         * // => false
         */
        function stubArray() {
          return [];
        }

        /**
         * This method returns `false`.
         *
         * @static
         * @memberOf _
         * @since 4.13.0
         * @category Util
         * @returns {boolean} Returns `false`.
         * @example
         *
         * _.times(2, _.stubFalse);
         * // => [false, false]
         */
        function stubFalse() {
          return false;
        }

        module.exports = mergeWith;

        /* WEBPACK VAR INJECTION */
      }.call(exports, __webpack_require__(20), __webpack_require__(127)(module)));

      /***/
    },
    /* 640 */
    /***/ function (module, exports) {
      /**
       * Helpers.
       */

      var s = 1000;
      var m = s * 60;
      var h = m * 60;
      var d = h * 24;
      var y = d * 365.25;

      /**
       * Parse or format the given `val`.
       *
       * Options:
       *
       *  - `long` verbose formatting [false]
       *
       * @param {String|Number} val
       * @param {Object} options
       * @return {String|Number}
       * @api public
       */

      module.exports = function (val, options) {
        options = options || {};
        if ('string' == typeof val) return parse(val);
        return options.long ? long(val) : short(val);
      };

      /**
       * Parse the given `str` and return milliseconds.
       *
       * @param {String} str
       * @return {Number}
       * @api private
       */

      function parse(str) {
        str = '' + str;
        if (str.length > 10000) return;
        var match = /^((?:\d+)?\.?\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|years?|yrs?|y)?$/i.exec(
          str
        );
        if (!match) return;
        var n = parseFloat(match[1]);
        var type = (match[2] || 'ms').toLowerCase();
        switch (type) {
          case 'years':
          case 'year':
          case 'yrs':
          case 'yr':
          case 'y':
            return n * y;
          case 'days':
          case 'day':
          case 'd':
            return n * d;
          case 'hours':
          case 'hour':
          case 'hrs':
          case 'hr':
          case 'h':
            return n * h;
          case 'minutes':
          case 'minute':
          case 'mins':
          case 'min':
          case 'm':
            return n * m;
          case 'seconds':
          case 'second':
          case 'secs':
          case 'sec':
          case 's':
            return n * s;
          case 'milliseconds':
          case 'millisecond':
          case 'msecs':
          case 'msec':
          case 'ms':
            return n;
        }
      }

      /**
       * Short format for `ms`.
       *
       * @param {Number} ms
       * @return {String}
       * @api private
       */

      function short(ms) {
        if (ms >= d) return Math.round(ms / d) + 'd';
        if (ms >= h) return Math.round(ms / h) + 'h';
        if (ms >= m) return Math.round(ms / m) + 'm';
        if (ms >= s) return Math.round(ms / s) + 's';
        return ms + 'ms';
      }

      /**
       * Long format for `ms`.
       *
       * @param {Number} ms
       * @return {String}
       * @api private
       */

      function long(ms) {
        return (
          plural(ms, d, 'day') ||
          plural(ms, h, 'hour') ||
          plural(ms, m, 'minute') ||
          plural(ms, s, 'second') ||
          ms + ' ms'
        );
      }

      /**
       * Pluralization helper.
       */

      function plural(ms, n, name) {
        if (ms < n) return;
        if (ms < n * 1.5) return Math.floor(ms / n) + ' ' + name;
        return Math.ceil(ms / n) + ' ' + name + 's';
      }

      /***/
    },
    /* 641 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';

      module.exports =
        Number.isNaN ||
        function (x) {
          return x !== x;
        };

      /***/
    },
    /* 642 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';
      /* WEBPACK VAR INJECTION */ (function (Buffer) {
        exports.__esModule = true;

        var _sourceMap = __webpack_require__(279);

        var _sourceMap2 = _interopRequireDefault(_sourceMap);

        var _path = __webpack_require__(175);

        var _path2 = _interopRequireDefault(_path);

        function _interopRequireDefault(obj) {
          return obj && obj.__esModule ? obj : { default: obj };
        }

        function _classCallCheck(instance, Constructor) {
          if (!(instance instanceof Constructor)) {
            throw new TypeError('Cannot call a class as a function');
          }
        }

        var MapGenerator = (function () {
          function MapGenerator(stringify, root, opts) {
            _classCallCheck(this, MapGenerator);

            this.stringify = stringify;
            this.mapOpts = opts.map || {};
            this.root = root;
            this.opts = opts;
          }

          MapGenerator.prototype.isMap = function isMap() {
            if (typeof this.opts.map !== 'undefined') {
              return !!this.opts.map;
            } else {
              return this.previous().length > 0;
            }
          };

          MapGenerator.prototype.previous = function previous() {
            var _this = this;

            if (!this.previousMaps) {
              this.previousMaps = [];
              this.root.walk(function (node) {
                if (node.source && node.source.input.map) {
                  var map = node.source.input.map;
                  if (_this.previousMaps.indexOf(map) === -1) {
                    _this.previousMaps.push(map);
                  }
                }
              });
            }

            return this.previousMaps;
          };

          MapGenerator.prototype.isInline = function isInline() {
            if (typeof this.mapOpts.inline !== 'undefined') {
              return this.mapOpts.inline;
            }

            var annotation = this.mapOpts.annotation;
            if (typeof annotation !== 'undefined' && annotation !== true) {
              return false;
            }

            if (this.previous().length) {
              return this.previous().some(function (i) {
                return i.inline;
              });
            } else {
              return true;
            }
          };

          MapGenerator.prototype.isSourcesContent = function isSourcesContent() {
            if (typeof this.mapOpts.sourcesContent !== 'undefined') {
              return this.mapOpts.sourcesContent;
            }
            if (this.previous().length) {
              return this.previous().some(function (i) {
                return i.withContent();
              });
            } else {
              return true;
            }
          };

          MapGenerator.prototype.clearAnnotation = function clearAnnotation() {
            if (this.mapOpts.annotation === false) return;

            var node = void 0;
            for (var i = this.root.nodes.length - 1; i >= 0; i--) {
              node = this.root.nodes[i];
              if (node.type !== 'comment') continue;
              if (node.text.indexOf('# sourceMappingURL=') === 0) {
                this.root.removeChild(i);
              }
            }
          };

          MapGenerator.prototype.setSourcesContent = function setSourcesContent() {
            var _this2 = this;

            var already = {};
            this.root.walk(function (node) {
              if (node.source) {
                var from = node.source.input.from;
                if (from && !already[from]) {
                  already[from] = true;
                  var relative = _this2.relative(from);
                  _this2.map.setSourceContent(relative, node.source.input.css);
                }
              }
            });
          };

          MapGenerator.prototype.applyPrevMaps = function applyPrevMaps() {
            for (
              var _iterator = this.previous(),
                _isArray = Array.isArray(_iterator),
                _i = 0,
                _iterator = _isArray ? _iterator : _iterator[Symbol.iterator]();
              ;

            ) {
              var _ref;

              if (_isArray) {
                if (_i >= _iterator.length) break;
                _ref = _iterator[_i++];
              } else {
                _i = _iterator.next();
                if (_i.done) break;
                _ref = _i.value;
              }

              var prev = _ref;

              var from = this.relative(prev.file);
              var root = prev.root || _path2.default.dirname(prev.file);
              var map = void 0;

              if (this.mapOpts.sourcesContent === false) {
                map = new _sourceMap2.default.SourceMapConsumer(prev.text);
                if (map.sourcesContent) {
                  map.sourcesContent = map.sourcesContent.map(function () {
                    return null;
                  });
                }
              } else {
                map = prev.consumer();
              }

              this.map.applySourceMap(map, from, this.relative(root));
            }
          };

          MapGenerator.prototype.isAnnotation = function isAnnotation() {
            if (this.isInline()) {
              return true;
            } else if (typeof this.mapOpts.annotation !== 'undefined') {
              return this.mapOpts.annotation;
            } else if (this.previous().length) {
              return this.previous().some(function (i) {
                return i.annotation;
              });
            } else {
              return true;
            }
          };

          MapGenerator.prototype.toBase64 = function toBase64(str) {
            if (Buffer) {
              if (Buffer.from && Buffer.from !== Uint8Array.from) {
                return Buffer.from(str).toString('base64');
              } else {
                return new Buffer(str).toString('base64');
              }
            } else {
              return window.btoa(unescape(encodeURIComponent(str)));
            }
          };

          MapGenerator.prototype.addAnnotation = function addAnnotation() {
            var content = void 0;

            if (this.isInline()) {
              content = 'data:application/json;base64,' + this.toBase64(this.map.toString());
            } else if (typeof this.mapOpts.annotation === 'string') {
              content = this.mapOpts.annotation;
            } else {
              content = this.outputFile() + '.map';
            }

            var eol = '\n';
            if (this.css.indexOf('\r\n') !== -1) eol = '\r\n';

            this.css += eol + '/*# sourceMappingURL=' + content + ' */';
          };

          MapGenerator.prototype.outputFile = function outputFile() {
            if (this.opts.to) {
              return this.relative(this.opts.to);
            } else if (this.opts.from) {
              return this.relative(this.opts.from);
            } else {
              return 'to.css';
            }
          };

          MapGenerator.prototype.generateMap = function generateMap() {
            this.generateString();
            if (this.isSourcesContent()) this.setSourcesContent();
            if (this.previous().length > 0) this.applyPrevMaps();
            if (this.isAnnotation()) this.addAnnotation();

            if (this.isInline()) {
              return [this.css];
            } else {
              return [this.css, this.map];
            }
          };

          MapGenerator.prototype.relative = function relative(file) {
            if (file.indexOf('<') === 0) return file;
            if (/^\w+:\/\//.test(file)) return file;

            var from = this.opts.to ? _path2.default.dirname(this.opts.to) : '.';

            if (typeof this.mapOpts.annotation === 'string') {
              from = _path2.default.dirname(_path2.default.resolve(from, this.mapOpts.annotation));
            }

            file = _path2.default.relative(from, file);
            if (_path2.default.sep === '\\') {
              return file.replace(/\\/g, '/');
            } else {
              return file;
            }
          };

          MapGenerator.prototype.sourcePath = function sourcePath(node) {
            if (this.mapOpts.from) {
              return this.mapOpts.from;
            } else {
              return this.relative(node.source.input.from);
            }
          };

          MapGenerator.prototype.generateString = function generateString() {
            var _this3 = this;

            this.css = '';
            this.map = new _sourceMap2.default.SourceMapGenerator({ file: this.outputFile() });

            var line = 1;
            var column = 1;

            var lines = void 0,
              last = void 0;
            this.stringify(this.root, function (str, node, type) {
              _this3.css += str;

              if (node && type !== 'end') {
                if (node.source && node.source.start) {
                  _this3.map.addMapping({
                    source: _this3.sourcePath(node),
                    generated: { line: line, column: column - 1 },
                    original: {
                      line: node.source.start.line,
                      column: node.source.start.column - 1,
                    },
                  });
                } else {
                  _this3.map.addMapping({
                    source: '<no source>',
                    original: { line: 1, column: 0 },
                    generated: { line: line, column: column - 1 },
                  });
                }
              }

              lines = str.match(/\n/g);
              if (lines) {
                line += lines.length;
                last = str.lastIndexOf('\n');
                column = str.length - last;
              } else {
                column += str.length;
              }

              if (node && type !== 'start') {
                if (node.source && node.source.end) {
                  _this3.map.addMapping({
                    source: _this3.sourcePath(node),
                    generated: { line: line, column: column - 1 },
                    original: {
                      line: node.source.end.line,
                      column: node.source.end.column,
                    },
                  });
                } else {
                  _this3.map.addMapping({
                    source: '<no source>',
                    original: { line: 1, column: 0 },
                    generated: { line: line, column: column - 1 },
                  });
                }
              }
            });
          };

          MapGenerator.prototype.generate = function generate() {
            this.clearAnnotation();

            if (this.isMap()) {
              return this.generateMap();
            } else {
              var result = '';
              this.stringify(this.root, function (i) {
                result += i;
              });
              return [result];
            }
          };

          return MapGenerator;
        })();

        exports.default = MapGenerator;
        module.exports = exports['default'];
        //# sourceMappingURL=data:application/json;charset=utf8;base64,

        /* WEBPACK VAR INJECTION */
      }.call(exports, __webpack_require__(43).Buffer));

      /***/
    },
    /* 643 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';

      exports.__esModule = true;

      var _declaration = __webpack_require__(178);

      var _declaration2 = _interopRequireDefault(_declaration);

      var _tokenize = __webpack_require__(275);

      var _tokenize2 = _interopRequireDefault(_tokenize);

      var _comment = __webpack_require__(176);

      var _comment2 = _interopRequireDefault(_comment);

      var _atRule = __webpack_require__(117);

      var _atRule2 = _interopRequireDefault(_atRule);

      var _root = __webpack_require__(181);

      var _root2 = _interopRequireDefault(_root);

      var _rule = __webpack_require__(118);

      var _rule2 = _interopRequireDefault(_rule);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
          throw new TypeError('Cannot call a class as a function');
        }
      }

      var Parser = (function () {
        function Parser(input) {
          _classCallCheck(this, Parser);

          this.input = input;

          this.root = new _root2.default();
          this.current = this.root;
          this.spaces = '';
          this.semicolon = false;

          this.createTokenizer();
          this.root.source = { input: input, start: { line: 1, column: 1 } };
        }

        Parser.prototype.createTokenizer = function createTokenizer() {
          this.tokenizer = (0, _tokenize2.default)(this.input);
        };

        Parser.prototype.parse = function parse() {
          var token = void 0;
          while (!this.tokenizer.endOfFile()) {
            token = this.tokenizer.nextToken();

            switch (token[0]) {
              case 'space':
                this.spaces += token[1];
                break;

              case ';':
                this.freeSemicolon(token);
                break;

              case '}':
                this.end(token);
                break;

              case 'comment':
                this.comment(token);
                break;

              case 'at-word':
                this.atrule(token);
                break;

              case '{':
                this.emptyRule(token);
                break;

              default:
                this.other(token);
                break;
            }
          }
          this.endFile();
        };

        Parser.prototype.comment = function comment(token) {
          var node = new _comment2.default();
          this.init(node, token[2], token[3]);
          node.source.end = { line: token[4], column: token[5] };

          var text = token[1].slice(2, -2);
          if (/^\s*$/.test(text)) {
            node.text = '';
            node.raws.left = text;
            node.raws.right = '';
          } else {
            var match = text.match(/^(\s*)([^]*[^\s])(\s*)$/);
            node.text = match[2];
            node.raws.left = match[1];
            node.raws.right = match[3];
          }
        };

        Parser.prototype.emptyRule = function emptyRule(token) {
          var node = new _rule2.default();
          this.init(node, token[2], token[3]);
          node.selector = '';
          node.raws.between = '';
          this.current = node;
        };

        Parser.prototype.other = function other(start) {
          var end = false;
          var type = null;
          var colon = false;
          var bracket = null;
          var brackets = [];

          var tokens = [];
          var token = start;
          while (token) {
            type = token[0];
            tokens.push(token);

            if (type === '(' || type === '[') {
              if (!bracket) bracket = token;
              brackets.push(type === '(' ? ')' : ']');
            } else if (brackets.length === 0) {
              if (type === ';') {
                if (colon) {
                  this.decl(tokens);
                  return;
                } else {
                  break;
                }
              } else if (type === '{') {
                this.rule(tokens);
                return;
              } else if (type === '}') {
                this.tokenizer.back(tokens.pop());
                end = true;
                break;
              } else if (type === ':') {
                colon = true;
              }
            } else if (type === brackets[brackets.length - 1]) {
              brackets.pop();
              if (brackets.length === 0) bracket = null;
            }

            token = this.tokenizer.nextToken();
          }

          if (this.tokenizer.endOfFile()) end = true;
          if (brackets.length > 0) this.unclosedBracket(bracket);

          if (end && colon) {
            while (tokens.length) {
              token = tokens[tokens.length - 1][0];
              if (token !== 'space' && token !== 'comment') break;
              this.tokenizer.back(tokens.pop());
            }
            this.decl(tokens);
            return;
          } else {
            this.unknownWord(tokens);
          }
        };

        Parser.prototype.rule = function rule(tokens) {
          tokens.pop();

          var node = new _rule2.default();
          this.init(node, tokens[0][2], tokens[0][3]);

          node.raws.between = this.spacesAndCommentsFromEnd(tokens);
          this.raw(node, 'selector', tokens);
          this.current = node;
        };

        Parser.prototype.decl = function decl(tokens) {
          var node = new _declaration2.default();
          this.init(node);

          var last = tokens[tokens.length - 1];
          if (last[0] === ';') {
            this.semicolon = true;
            tokens.pop();
          }
          if (last[4]) {
            node.source.end = { line: last[4], column: last[5] };
          } else {
            node.source.end = { line: last[2], column: last[3] };
          }

          while (tokens[0][0] !== 'word') {
            if (tokens.length === 1) this.unknownWord(tokens);
            node.raws.before += tokens.shift()[1];
          }
          node.source.start = { line: tokens[0][2], column: tokens[0][3] };

          node.prop = '';
          while (tokens.length) {
            var type = tokens[0][0];
            if (type === ':' || type === 'space' || type === 'comment') {
              break;
            }
            node.prop += tokens.shift()[1];
          }

          node.raws.between = '';

          var token = void 0;
          while (tokens.length) {
            token = tokens.shift();

            if (token[0] === ':') {
              node.raws.between += token[1];
              break;
            } else {
              node.raws.between += token[1];
            }
          }

          if (node.prop[0] === '_' || node.prop[0] === '*') {
            node.raws.before += node.prop[0];
            node.prop = node.prop.slice(1);
          }
          node.raws.between += this.spacesAndCommentsFromStart(tokens);
          this.precheckMissedSemicolon(tokens);

          for (var i = tokens.length - 1; i > 0; i--) {
            token = tokens[i];
            if (token[1].toLowerCase() === '!important') {
              node.important = true;
              var string = this.stringFrom(tokens, i);
              string = this.spacesFromEnd(tokens) + string;
              if (string !== ' !important') node.raws.important = string;
              break;
            } else if (token[1].toLowerCase() === 'important') {
              var cache = tokens.slice(0);
              var str = '';
              for (var j = i; j > 0; j--) {
                var _type = cache[j][0];
                if (str.trim().indexOf('!') === 0 && _type !== 'space') {
                  break;
                }
                str = cache.pop()[1] + str;
              }
              if (str.trim().indexOf('!') === 0) {
                node.important = true;
                node.raws.important = str;
                tokens = cache;
              }
            }

            if (token[0] !== 'space' && token[0] !== 'comment') {
              break;
            }
          }

          this.raw(node, 'value', tokens);

          if (node.value.indexOf(':') !== -1) this.checkMissedSemicolon(tokens);
        };

        Parser.prototype.atrule = function atrule(token) {
          var node = new _atRule2.default();
          node.name = token[1].slice(1);
          if (node.name === '') {
            this.unnamedAtrule(node, token);
          }
          this.init(node, token[2], token[3]);

          var prev = void 0;
          var shift = void 0;
          var last = false;
          var open = false;
          var params = [];

          while (!this.tokenizer.endOfFile()) {
            token = this.tokenizer.nextToken();

            if (token[0] === ';') {
              node.source.end = { line: token[2], column: token[3] };
              this.semicolon = true;
              break;
            } else if (token[0] === '{') {
              open = true;
              break;
            } else if (token[0] === '}') {
              if (params.length > 0) {
                shift = params.length - 1;
                prev = params[shift];
                while (prev && prev[0] === 'space') {
                  prev = params[--shift];
                }
                if (prev) {
                  node.source.end = { line: prev[4], column: prev[5] };
                }
              }
              this.end(token);
              break;
            } else {
              params.push(token);
            }

            if (this.tokenizer.endOfFile()) {
              last = true;
              break;
            }
          }

          node.raws.between = this.spacesAndCommentsFromEnd(params);
          if (params.length) {
            node.raws.afterName = this.spacesAndCommentsFromStart(params);
            this.raw(node, 'params', params);
            if (last) {
              token = params[params.length - 1];
              node.source.end = { line: token[4], column: token[5] };
              this.spaces = node.raws.between;
              node.raws.between = '';
            }
          } else {
            node.raws.afterName = '';
            node.params = '';
          }

          if (open) {
            node.nodes = [];
            this.current = node;
          }
        };

        Parser.prototype.end = function end(token) {
          if (this.current.nodes && this.current.nodes.length) {
            this.current.raws.semicolon = this.semicolon;
          }
          this.semicolon = false;

          this.current.raws.after = (this.current.raws.after || '') + this.spaces;
          this.spaces = '';

          if (this.current.parent) {
            this.current.source.end = { line: token[2], column: token[3] };
            this.current = this.current.parent;
          } else {
            this.unexpectedClose(token);
          }
        };

        Parser.prototype.endFile = function endFile() {
          if (this.current.parent) this.unclosedBlock();
          if (this.current.nodes && this.current.nodes.length) {
            this.current.raws.semicolon = this.semicolon;
          }
          this.current.raws.after = (this.current.raws.after || '') + this.spaces;
        };

        Parser.prototype.freeSemicolon = function freeSemicolon(token) {
          this.spaces += token[1];
          if (this.current.nodes) {
            var prev = this.current.nodes[this.current.nodes.length - 1];
            if (prev && prev.type === 'rule' && !prev.raws.ownSemicolon) {
              prev.raws.ownSemicolon = this.spaces;
              this.spaces = '';
            }
          }
        };

        // Helpers

        Parser.prototype.init = function init(node, line, column) {
          this.current.push(node);

          node.source = { start: { line: line, column: column }, input: this.input };
          node.raws.before = this.spaces;
          this.spaces = '';
          if (node.type !== 'comment') this.semicolon = false;
        };

        Parser.prototype.raw = function raw(node, prop, tokens) {
          var token = void 0,
            type = void 0;
          var length = tokens.length;
          var value = '';
          var clean = true;
          for (var i = 0; i < length; i += 1) {
            token = tokens[i];
            type = token[0];
            if (type === 'comment' || (type === 'space' && i === length - 1)) {
              clean = false;
            } else {
              value += token[1];
            }
          }
          if (!clean) {
            var raw = tokens.reduce(function (all, i) {
              return all + i[1];
            }, '');
            node.raws[prop] = { value: value, raw: raw };
          }
          node[prop] = value;
        };

        Parser.prototype.spacesAndCommentsFromEnd = function spacesAndCommentsFromEnd(tokens) {
          var lastTokenType = void 0;
          var spaces = '';
          while (tokens.length) {
            lastTokenType = tokens[tokens.length - 1][0];
            if (lastTokenType !== 'space' && lastTokenType !== 'comment') break;
            spaces = tokens.pop()[1] + spaces;
          }
          return spaces;
        };

        Parser.prototype.spacesAndCommentsFromStart = function spacesAndCommentsFromStart(tokens) {
          var next = void 0;
          var spaces = '';
          while (tokens.length) {
            next = tokens[0][0];
            if (next !== 'space' && next !== 'comment') break;
            spaces += tokens.shift()[1];
          }
          return spaces;
        };

        Parser.prototype.spacesFromEnd = function spacesFromEnd(tokens) {
          var lastTokenType = void 0;
          var spaces = '';
          while (tokens.length) {
            lastTokenType = tokens[tokens.length - 1][0];
            if (lastTokenType !== 'space') break;
            spaces = tokens.pop()[1] + spaces;
          }
          return spaces;
        };

        Parser.prototype.stringFrom = function stringFrom(tokens, from) {
          var result = '';
          for (var i = from; i < tokens.length; i++) {
            result += tokens[i][1];
          }
          tokens.splice(from, tokens.length - from);
          return result;
        };

        Parser.prototype.colon = function colon(tokens) {
          var brackets = 0;
          var token = void 0,
            type = void 0,
            prev = void 0;
          for (var i = 0; i < tokens.length; i++) {
            token = tokens[i];
            type = token[0];

            if (type === '(') {
              brackets += 1;
            } else if (type === ')') {
              brackets -= 1;
            } else if (brackets === 0 && type === ':') {
              if (!prev) {
                this.doubleColon(token);
              } else if (prev[0] === 'word' && prev[1] === 'progid') {
                continue;
              } else {
                return i;
              }
            }

            prev = token;
          }
          return false;
        };

        // Errors

        Parser.prototype.unclosedBracket = function unclosedBracket(bracket) {
          throw this.input.error('Unclosed bracket', bracket[2], bracket[3]);
        };

        Parser.prototype.unknownWord = function unknownWord(tokens) {
          throw this.input.error('Unknown word', tokens[0][2], tokens[0][3]);
        };

        Parser.prototype.unexpectedClose = function unexpectedClose(token) {
          throw this.input.error('Unexpected }', token[2], token[3]);
        };

        Parser.prototype.unclosedBlock = function unclosedBlock() {
          var pos = this.current.source.start;
          throw this.input.error('Unclosed block', pos.line, pos.column);
        };

        Parser.prototype.doubleColon = function doubleColon(token) {
          throw this.input.error('Double colon', token[2], token[3]);
        };

        Parser.prototype.unnamedAtrule = function unnamedAtrule(node, token) {
          throw this.input.error('At-rule without name', token[2], token[3]);
        };

        Parser.prototype.precheckMissedSemicolon = function precheckMissedSemicolon(tokens) {
          // Hook for Safe Parser
          tokens;
        };

        Parser.prototype.checkMissedSemicolon = function checkMissedSemicolon(tokens) {
          var colon = this.colon(tokens);
          if (colon === false) return;

          var founded = 0;
          var token = void 0;
          for (var j = colon - 1; j >= 0; j--) {
            token = tokens[j];
            if (token[0] !== 'space') {
              founded += 1;
              if (founded === 2) break;
            }
          }
          throw this.input.error('Missed semicolon', token[2], token[3]);
        };

        return Parser;
      })();

      exports.default = Parser;
      module.exports = exports['default'];
      //# sourceMappingURL=data:application/json;charset=utf8;base64,

      /***/
    },
    /* 644 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';

      exports.__esModule = true;

      var _declaration = __webpack_require__(178);

      var _declaration2 = _interopRequireDefault(_declaration);

      var _processor = __webpack_require__(273);

      var _processor2 = _interopRequireDefault(_processor);

      var _stringify = __webpack_require__(182);

      var _stringify2 = _interopRequireDefault(_stringify);

      var _comment = __webpack_require__(176);

      var _comment2 = _interopRequireDefault(_comment);

      var _atRule = __webpack_require__(117);

      var _atRule2 = _interopRequireDefault(_atRule);

      var _vendor = __webpack_require__(648);

      var _vendor2 = _interopRequireDefault(_vendor);

      var _parse = __webpack_require__(180);

      var _parse2 = _interopRequireDefault(_parse);

      var _list = __webpack_require__(272);

      var _list2 = _interopRequireDefault(_list);

      var _rule = __webpack_require__(118);

      var _rule2 = _interopRequireDefault(_rule);

      var _root = __webpack_require__(181);

      var _root2 = _interopRequireDefault(_root);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      /**
       * Create a new {@link Processor} instance that will apply `plugins`
       * as CSS processors.
       *
       * @param {Array.<Plugin|pluginFunction>|Processor} plugins - PostCSS
       *        plugins. See {@link Processor#use} for plugin format.
       *
       * @return {Processor} Processor to process multiple CSS
       *
       * @example
       * import postcss from 'postcss';
       *
       * postcss(plugins).process(css, { from, to }).then(result => {
       *   console.log(result.css);
       * });
       *
       * @namespace postcss
       */
      function postcss() {
        for (var _len = arguments.length, plugins = Array(_len), _key = 0; _key < _len; _key++) {
          plugins[_key] = arguments[_key];
        }

        if (plugins.length === 1 && Array.isArray(plugins[0])) {
          plugins = plugins[0];
        }
        return new _processor2.default(plugins);
      }

      /**
       * Creates a PostCSS plugin with a standard API.
       *
       * The newly-wrapped function will provide both the name and PostCSS
       * version of the plugin.
       *
       * ```js
       *  const processor = postcss([replace]);
       *  processor.plugins[0].postcssPlugin  //=> 'postcss-replace'
       *  processor.plugins[0].postcssVersion //=> '5.1.0'
       * ```
       *
       * The plugin function receives 2 arguments: {@link Root}
       * and {@link Result} instance. The function should mutate the provided
       * `Root` node. Alternatively, you can create a new `Root` node
       * and override the `result.root` property.
       *
       * ```js
       * const cleaner = postcss.plugin('postcss-cleaner', () => {
       *   return (root, result) => {
       *     result.root = postcss.root();
       *   };
       * });
       * ```
       *
       * As a convenience, plugins also expose a `process` method so that you can use
       * them as standalone tools.
       *
       * ```js
       * cleaner.process(css, processOpts, pluginOpts);
       * // This is equivalent to:
       * postcss([ cleaner(pluginOpts) ]).process(css, processOpts);
       * ```
       *
       * Asynchronous plugins should return a `Promise` instance.
       *
       * ```js
       * postcss.plugin('postcss-import', () => {
       *   return (root, result) => {
       *     return new Promise( (resolve, reject) => {
       *       fs.readFile('base.css', (base) => {
       *         root.prepend(base);
       *         resolve();
       *       });
       *     });
       *   };
       * });
       * ```
       *
       * Add warnings using the {@link Node#warn} method.
       * Send data to other plugins using the {@link Result#messages} array.
       *
       * ```js
       * postcss.plugin('postcss-caniuse-test', () => {
       *   return (root, result) => {
       *     css.walkDecls(decl => {
       *       if ( !caniuse.support(decl.prop) ) {
       *         decl.warn(result, 'Some browsers do not support ' + decl.prop);
       *       }
       *     });
       *   };
       * });
       * ```
       *
       * @param {string} name          - PostCSS plugin name. Same as in `name`
       *                                 property in `package.json`. It will be saved
       *                                 in `plugin.postcssPlugin` property.
       * @param {function} initializer - will receive plugin options
       *                                 and should return {@link pluginFunction}
       *
       * @return {Plugin} PostCSS plugin
       */
      postcss.plugin = function plugin(name, initializer) {
        var creator = function creator() {
          var transformer = initializer.apply(undefined, arguments);
          transformer.postcssPlugin = name;
          transformer.postcssVersion = new _processor2.default().version;
          return transformer;
        };

        var cache = void 0;
        Object.defineProperty(creator, 'postcss', {
          get: function get() {
            if (!cache) cache = creator();
            return cache;
          },
        });

        creator.process = function (css, processOpts, pluginOpts) {
          return postcss([creator(pluginOpts)]).process(css, processOpts);
        };

        return creator;
      };

      /**
       * Default function to convert a node tree into a CSS string.
       *
       * @param {Node} node       - start node for stringifing. Usually {@link Root}.
       * @param {builder} builder - function to concatenate CSS from node’s parts
       *                            or generate string and source map
       *
       * @return {void}
       *
       * @function
       */
      postcss.stringify = _stringify2.default;

      /**
       * Parses source css and returns a new {@link Root} node,
       * which contains the source CSS nodes.
       *
       * @param {string|toString} css   - string with input CSS or any object
       *                                  with toString() method, like a Buffer
       * @param {processOptions} [opts] - options with only `from` and `map` keys
       *
       * @return {Root} PostCSS AST
       *
       * @example
       * // Simple CSS concatenation with source map support
       * const root1 = postcss.parse(css1, { from: file1 });
       * const root2 = postcss.parse(css2, { from: file2 });
       * root1.append(root2).toResult().css;
       *
       * @function
       */
      postcss.parse = _parse2.default;

      /**
       * @member {vendor} - Contains the {@link vendor} module.
       *
       * @example
       * postcss.vendor.unprefixed('-moz-tab') //=> ['tab']
       */
      postcss.vendor = _vendor2.default;

      /**
       * @member {list} - Contains the {@link list} module.
       *
       * @example
       * postcss.list.space('5px calc(10% + 5px)') //=> ['5px', 'calc(10% + 5px)']
       */
      postcss.list = _list2.default;

      /**
       * Creates a new {@link Comment} node.
       *
       * @param {object} [defaults] - properties for the new node.
       *
       * @return {Comment} new Comment node
       *
       * @example
       * postcss.comment({ text: 'test' })
       */
      postcss.comment = function (defaults) {
        return new _comment2.default(defaults);
      };

      /**
       * Creates a new {@link AtRule} node.
       *
       * @param {object} [defaults] - properties for the new node.
       *
       * @return {AtRule} new AtRule node
       *
       * @example
       * postcss.atRule({ name: 'charset' }).toString() //=> "@charset"
       */
      postcss.atRule = function (defaults) {
        return new _atRule2.default(defaults);
      };

      /**
       * Creates a new {@link Declaration} node.
       *
       * @param {object} [defaults] - properties for the new node.
       *
       * @return {Declaration} new Declaration node
       *
       * @example
       * postcss.decl({ prop: 'color', value: 'red' }).toString() //=> "color: red"
       */
      postcss.decl = function (defaults) {
        return new _declaration2.default(defaults);
      };

      /**
       * Creates a new {@link Rule} node.
       *
       * @param {object} [defaults] - properties for the new node.
       *
       * @return {Rule} new Rule node
       *
       * @example
       * postcss.rule({ selector: 'a' }).toString() //=> "a {\n}"
       */
      postcss.rule = function (defaults) {
        return new _rule2.default(defaults);
      };

      /**
       * Creates a new {@link Root} node.
       *
       * @param {object} [defaults] - properties for the new node.
       *
       * @return {Root} new Root node
       *
       * @example
       * postcss.root({ after: '\n' }).toString() //=> "\n"
       */
      postcss.root = function (defaults) {
        return new _root2.default(defaults);
      };

      exports.default = postcss;
      module.exports = exports['default'];
      //# sourceMappingURL=data:application/json;charset=utf8;base64,

      /***/
    },
    /* 645 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';
      /* WEBPACK VAR INJECTION */ (function (Buffer) {
        exports.__esModule = true;

        var _typeof =
          typeof Symbol === 'function' && typeof Symbol.iterator === 'symbol'
            ? function (obj) {
                return typeof obj;
              }
            : function (obj) {
                return obj &&
                  typeof Symbol === 'function' &&
                  obj.constructor === Symbol &&
                  obj !== Symbol.prototype
                  ? 'symbol'
                  : typeof obj;
              };

        var _sourceMap = __webpack_require__(279);

        var _sourceMap2 = _interopRequireDefault(_sourceMap);

        var _path = __webpack_require__(175);

        var _path2 = _interopRequireDefault(_path);

        var _fs = __webpack_require__(797);

        var _fs2 = _interopRequireDefault(_fs);

        function _interopRequireDefault(obj) {
          return obj && obj.__esModule ? obj : { default: obj };
        }

        function _classCallCheck(instance, Constructor) {
          if (!(instance instanceof Constructor)) {
            throw new TypeError('Cannot call a class as a function');
          }
        }

        function fromBase64(str) {
          if (Buffer) {
            if (Buffer.from && Buffer.from !== Uint8Array.from) {
              return Buffer.from(str, 'base64').toString();
            } else {
              return new Buffer(str, 'base64').toString();
            }
          } else {
            return window.atob(str);
          }
        }

        /**
         * Source map information from input CSS.
         * For example, source map after Sass compiler.
         *
         * This class will automatically find source map in input CSS or in file system
         * near input file (according `from` option).
         *
         * @example
         * const root = postcss.parse(css, { from: 'a.sass.css' });
         * root.input.map //=> PreviousMap
         */

        var PreviousMap = (function () {
          /**
           * @param {string}         css    - input CSS source
           * @param {processOptions} [opts] - {@link Processor#process} options
           */
          function PreviousMap(css, opts) {
            _classCallCheck(this, PreviousMap);

            this.loadAnnotation(css);
            /**
             * @member {boolean} - Was source map inlined by data-uri to input CSS.
             */
            this.inline = this.startWith(this.annotation, 'data:');

            var prev = opts.map ? opts.map.prev : undefined;
            var text = this.loadMap(opts.from, prev);
            if (text) this.text = text;
          }

          /**
           * Create a instance of `SourceMapGenerator` class
           * from the `source-map` library to work with source map information.
           *
           * It is lazy method, so it will create object only on first call
           * and then it will use cache.
           *
           * @return {SourceMapGenerator} object with source map information
           */

          PreviousMap.prototype.consumer = function consumer() {
            if (!this.consumerCache) {
              this.consumerCache = new _sourceMap2.default.SourceMapConsumer(this.text);
            }
            return this.consumerCache;
          };

          /**
           * Does source map contains `sourcesContent` with input source text.
           *
           * @return {boolean} Is `sourcesContent` present
           */

          PreviousMap.prototype.withContent = function withContent() {
            return !!(this.consumer().sourcesContent && this.consumer().sourcesContent.length > 0);
          };

          PreviousMap.prototype.startWith = function startWith(string, start) {
            if (!string) return false;
            return string.substr(0, start.length) === start;
          };

          PreviousMap.prototype.loadAnnotation = function loadAnnotation(css) {
            var match = css.match(/\/\*\s*# sourceMappingURL=(.*)\s*\*\//);
            if (match) this.annotation = match[1].trim();
          };

          PreviousMap.prototype.decodeInline = function decodeInline(text) {
            // data:application/json;charset=utf-8;base64,
            // data:application/json;charset=utf8;base64,
            // data:application/json;base64,
            var baseUri = /^data:application\/json;(?:charset=utf-?8;)?base64,/;
            var uri = 'data:application/json,';

            if (this.startWith(text, uri)) {
              return decodeURIComponent(text.substr(uri.length));
            } else if (baseUri.test(text)) {
              return fromBase64(text.substr(RegExp.lastMatch.length));
            } else {
              var encoding = text.match(/data:application\/json;([^,]+),/)[1];
              throw new Error('Unsupported source map encoding ' + encoding);
            }
          };

          PreviousMap.prototype.loadMap = function loadMap(file, prev) {
            if (prev === false) return false;

            if (prev) {
              if (typeof prev === 'string') {
                return prev;
              } else if (typeof prev === 'function') {
                var prevPath = prev(file);
                if (prevPath && _fs2.default.existsSync && _fs2.default.existsSync(prevPath)) {
                  return _fs2.default.readFileSync(prevPath, 'utf-8').toString().trim();
                } else {
                  throw new Error('Unable to load previous source map: ' + prevPath.toString());
                }
              } else if (prev instanceof _sourceMap2.default.SourceMapConsumer) {
                return _sourceMap2.default.SourceMapGenerator.fromSourceMap(prev).toString();
              } else if (prev instanceof _sourceMap2.default.SourceMapGenerator) {
                return prev.toString();
              } else if (this.isMap(prev)) {
                return JSON.stringify(prev);
              } else {
                throw new Error('Unsupported previous source map format: ' + prev.toString());
              }
            } else if (this.inline) {
              return this.decodeInline(this.annotation);
            } else if (this.annotation) {
              var map = this.annotation;
              if (file) map = _path2.default.join(_path2.default.dirname(file), map);

              this.root = _path2.default.dirname(map);
              if (_fs2.default.existsSync && _fs2.default.existsSync(map)) {
                return _fs2.default.readFileSync(map, 'utf-8').toString().trim();
              } else {
                return false;
              }
            }
          };

          PreviousMap.prototype.isMap = function isMap(map) {
            if ((typeof map === 'undefined' ? 'undefined' : _typeof(map)) !== 'object')
              return false;
            return typeof map.mappings === 'string' || typeof map._mappings === 'string';
          };

          return PreviousMap;
        })();

        exports.default = PreviousMap;
        module.exports = exports['default'];
        //# sourceMappingURL=data:application/json;charset=utf8;base64,

        /* WEBPACK VAR INJECTION */
      }.call(exports, __webpack_require__(43).Buffer));

      /***/
    },
    /* 646 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';

      exports.__esModule = true;

      var _createClass = (function () {
        function defineProperties(target, props) {
          for (var i = 0; i < props.length; i++) {
            var descriptor = props[i];
            descriptor.enumerable = descriptor.enumerable || false;
            descriptor.configurable = true;
            if ('value' in descriptor) descriptor.writable = true;
            Object.defineProperty(target, descriptor.key, descriptor);
          }
        }
        return function (Constructor, protoProps, staticProps) {
          if (protoProps) defineProperties(Constructor.prototype, protoProps);
          if (staticProps) defineProperties(Constructor, staticProps);
          return Constructor;
        };
      })();

      var _warning = __webpack_require__(650);

      var _warning2 = _interopRequireDefault(_warning);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
          throw new TypeError('Cannot call a class as a function');
        }
      }

      /**
       * Provides the result of the PostCSS transformations.
       *
       * A Result instance is returned by {@link LazyResult#then}
       * or {@link Root#toResult} methods.
       *
       * @example
       * postcss([cssnext]).process(css).then(function (result) {
       *    console.log(result.css);
       * });
       *
       * @example
       * var result2 = postcss.parse(css).toResult();
       */
      var Result = (function () {
        /**
         * @param {Processor} processor - processor used for this transformation.
         * @param {Root}      root      - Root node after all transformations.
         * @param {processOptions} opts - options from the {@link Processor#process}
         *                                or {@link Root#toResult}
         */
        function Result(processor, root, opts) {
          _classCallCheck(this, Result);

          /**
           * @member {Processor} - The Processor instance used
           *                       for this transformation.
           *
           * @example
           * for ( let plugin of result.processor.plugins) {
           *   if ( plugin.postcssPlugin === 'postcss-bad' ) {
           *     throw 'postcss-good is incompatible with postcss-bad';
           *   }
           * });
           */
          this.processor = processor;
          /**
           * @member {Message[]} - Contains messages from plugins
           *                       (e.g., warnings or custom messages).
           *                       Each message should have type
           *                       and plugin properties.
           *
           * @example
           * postcss.plugin('postcss-min-browser', () => {
           *   return (root, result) => {
           *     var browsers = detectMinBrowsersByCanIUse(root);
           *     result.messages.push({
           *       type:    'min-browser',
           *       plugin:  'postcss-min-browser',
           *       browsers: browsers
           *     });
           *   };
           * });
           */
          this.messages = [];
          /**
           * @member {Root} - Root node after all transformations.
           *
           * @example
           * root.toResult().root == root;
           */
          this.root = root;
          /**
           * @member {processOptions} - Options from the {@link Processor#process}
           *                            or {@link Root#toResult} call
           *                            that produced this Result instance.
           *
           * @example
           * root.toResult(opts).opts == opts;
           */
          this.opts = opts;
          /**
           * @member {string} - A CSS string representing of {@link Result#root}.
           *
           * @example
           * postcss.parse('a{}').toResult().css //=> "a{}"
           */
          this.css = undefined;
          /**
           * @member {SourceMapGenerator} - An instance of `SourceMapGenerator`
           *                                class from the `source-map` library,
           *                                representing changes
           *                                to the {@link Result#root} instance.
           *
           * @example
           * result.map.toJSON() //=> { version: 3, file: 'a.css', … }
           *
           * @example
           * if ( result.map ) {
           *   fs.writeFileSync(result.opts.to + '.map', result.map.toString());
           * }
           */
          this.map = undefined;
        }

        /**
         * Returns for @{link Result#css} content.
         *
         * @example
         * result + '' === result.css
         *
         * @return {string} string representing of {@link Result#root}
         */

        Result.prototype.toString = function toString() {
          return this.css;
        };

        /**
         * Creates an instance of {@link Warning} and adds it
         * to {@link Result#messages}.
         *
         * @param {string} text        - warning message
         * @param {Object} [opts]      - warning options
         * @param {Node}   opts.node   - CSS node that caused the warning
         * @param {string} opts.word   - word in CSS source that caused the warning
         * @param {number} opts.index  - index in CSS node string that caused
         *                               the warning
         * @param {string} opts.plugin - name of the plugin that created
         *                               this warning. {@link Result#warn} fills
         *                               this property automatically.
         *
         * @return {Warning} created warning
         */

        Result.prototype.warn = function warn(text) {
          var opts = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

          if (!opts.plugin) {
            if (this.lastPlugin && this.lastPlugin.postcssPlugin) {
              opts.plugin = this.lastPlugin.postcssPlugin;
            }
          }

          var warning = new _warning2.default(text, opts);
          this.messages.push(warning);

          return warning;
        };

        /**
         * Returns warnings from plugins. Filters {@link Warning} instances
         * from {@link Result#messages}.
         *
         * @example
         * result.warnings().forEach(warn => {
         *   console.warn(warn.toString());
         * });
         *
         * @return {Warning[]} warnings from plugins
         */

        Result.prototype.warnings = function warnings() {
          return this.messages.filter(function (i) {
            return i.type === 'warning';
          });
        };

        /**
         * An alias for the {@link Result#css} property.
         * Use it with syntaxes that generate non-CSS output.
         * @type {string}
         *
         * @example
         * result.css === result.content;
         */

        _createClass(Result, [
          {
            key: 'content',
            get: function get() {
              return this.css;
            },
          },
        ]);

        return Result;
      })();

      exports.default = Result;

      /**
       * @typedef  {object} Message
       * @property {string} type   - message type
       * @property {string} plugin - source PostCSS plugin name
       */

      module.exports = exports['default'];
      //# sourceMappingURL=data:application/json;charset=utf8;base64,

      /***/
    },
    /* 647 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';

      exports.__esModule = true;

      var _chalk = __webpack_require__(321);

      var _chalk2 = _interopRequireDefault(_chalk);

      var _tokenize = __webpack_require__(275);

      var _tokenize2 = _interopRequireDefault(_tokenize);

      var _input = __webpack_require__(270);

      var _input2 = _interopRequireDefault(_input);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      var HIGHLIGHT_THEME = {
        brackets: _chalk2.default.cyan,
        'at-word': _chalk2.default.cyan,
        call: _chalk2.default.cyan,
        comment: _chalk2.default.gray,
        string: _chalk2.default.green,
        class: _chalk2.default.yellow,
        hash: _chalk2.default.magenta,
        '(': _chalk2.default.cyan,
        ')': _chalk2.default.cyan,
        '{': _chalk2.default.yellow,
        '}': _chalk2.default.yellow,
        '[': _chalk2.default.yellow,
        ']': _chalk2.default.yellow,
        ':': _chalk2.default.yellow,
        ';': _chalk2.default.yellow,
      };

      function getTokenType(_ref, processor) {
        var type = _ref[0],
          value = _ref[1];

        if (type === 'word') {
          if (value[0] === '.') {
            return 'class';
          }
          if (value[0] === '#') {
            return 'hash';
          }
        }

        if (!processor.endOfFile()) {
          var next = processor.nextToken();
          processor.back(next);
          if (next[0] === 'brackets' || next[0] === '(') return 'call';
        }

        return type;
      }

      function terminalHighlight(css) {
        var processor = (0, _tokenize2.default)(new _input2.default(css), { ignoreErrors: true });
        var result = '';

        var _loop = function _loop() {
          var token = processor.nextToken();
          var color = HIGHLIGHT_THEME[getTokenType(token, processor)];
          if (color) {
            result += token[1]
              .split(/\r?\n/)
              .map(function (i) {
                return color(i);
              })
              .join('\n');
          } else {
            result += token[1];
          }
        };

        while (!processor.endOfFile()) {
          _loop();
        }
        return result;
      }

      exports.default = terminalHighlight;
      module.exports = exports['default'];
      //# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInRlcm1pbmFsLWhpZ2hsaWdodC5lczYiXSwibmFtZXMiOlsiSElHSExJR0hUX1RIRU1FIiwiY3lhbiIsImdyYXkiLCJncmVlbiIsInllbGxvdyIsIm1hZ2VudGEiLCJnZXRUb2tlblR5cGUiLCJwcm9jZXNzb3IiLCJ0eXBlIiwidmFsdWUiLCJlbmRPZkZpbGUiLCJuZXh0IiwibmV4dFRva2VuIiwiYmFjayIsInRlcm1pbmFsSGlnaGxpZ2h0IiwiY3NzIiwiaWdub3JlRXJyb3JzIiwicmVzdWx0IiwidG9rZW4iLCJjb2xvciIsInNwbGl0IiwibWFwIiwiaSIsImpvaW4iXSwibWFwcGluZ3MiOiI7Ozs7QUFBQTs7OztBQUVBOzs7O0FBQ0E7Ozs7OztBQUVBLElBQU1BLGtCQUFrQjtBQUNwQixnQkFBWSxnQkFBTUMsSUFERTtBQUVwQixlQUFZLGdCQUFNQSxJQUZFO0FBR3BCLFlBQVksZ0JBQU1BLElBSEU7QUFJcEIsZUFBWSxnQkFBTUMsSUFKRTtBQUtwQixjQUFZLGdCQUFNQyxLQUxFO0FBTXBCLGFBQVksZ0JBQU1DLE1BTkU7QUFPcEIsWUFBWSxnQkFBTUMsT0FQRTtBQVFwQixTQUFZLGdCQUFNSixJQVJFO0FBU3BCLFNBQVksZ0JBQU1BLElBVEU7QUFVcEIsU0FBWSxnQkFBTUcsTUFWRTtBQVdwQixTQUFZLGdCQUFNQSxNQVhFO0FBWXBCLFNBQVksZ0JBQU1BLE1BWkU7QUFhcEIsU0FBWSxnQkFBTUEsTUFiRTtBQWNwQixTQUFZLGdCQUFNQSxNQWRFO0FBZXBCLFNBQVksZ0JBQU1BO0FBZkUsQ0FBeEI7O0FBa0JBLFNBQVNFLFlBQVQsT0FBcUNDLFNBQXJDLEVBQWdEO0FBQUEsUUFBekJDLElBQXlCO0FBQUEsUUFBbkJDLEtBQW1COztBQUM1QyxRQUFLRCxTQUFTLE1BQWQsRUFBdUI7QUFDbkIsWUFBS0MsTUFBTSxDQUFOLE1BQWEsR0FBbEIsRUFBd0I7QUFDcEIsbUJBQU8sT0FBUDtBQUNIO0FBQ0QsWUFBS0EsTUFBTSxDQUFOLE1BQWEsR0FBbEIsRUFBd0I7QUFDcEIsbUJBQU8sTUFBUDtBQUNIO0FBQ0o7O0FBRUQsUUFBSyxDQUFDRixVQUFVRyxTQUFWLEVBQU4sRUFBOEI7QUFDMUIsWUFBSUMsT0FBT0osVUFBVUssU0FBVixFQUFYO0FBQ0FMLGtCQUFVTSxJQUFWLENBQWVGLElBQWY7QUFDQSxZQUFLQSxLQUFLLENBQUwsTUFBWSxVQUFaLElBQTBCQSxLQUFLLENBQUwsTUFBWSxHQUEzQyxFQUFpRCxPQUFPLE1BQVA7QUFDcEQ7O0FBRUQsV0FBT0gsSUFBUDtBQUNIOztBQUVELFNBQVNNLGlCQUFULENBQTJCQyxHQUEzQixFQUFnQztBQUM1QixRQUFJUixZQUFZLHdCQUFVLG9CQUFVUSxHQUFWLENBQVYsRUFBMEIsRUFBRUMsY0FBYyxJQUFoQixFQUExQixDQUFoQjtBQUNBLFFBQUlDLFNBQVMsRUFBYjs7QUFGNEI7QUFJeEIsWUFBSUMsUUFBUVgsVUFBVUssU0FBVixFQUFaO0FBQ0EsWUFBSU8sUUFBUW5CLGdCQUFnQk0sYUFBYVksS0FBYixFQUFvQlgsU0FBcEIsQ0FBaEIsQ0FBWjtBQUNBLFlBQUtZLEtBQUwsRUFBYTtBQUNURixzQkFBVUMsTUFBTSxDQUFOLEVBQVNFLEtBQVQsQ0FBZSxPQUFmLEVBQ0xDLEdBREssQ0FDQTtBQUFBLHVCQUFLRixNQUFNRyxDQUFOLENBQUw7QUFBQSxhQURBLEVBRUxDLElBRkssQ0FFQSxJQUZBLENBQVY7QUFHSCxTQUpELE1BSU87QUFDSE4sc0JBQVVDLE1BQU0sQ0FBTixDQUFWO0FBQ0g7QUFadUI7O0FBRzVCLFdBQVEsQ0FBQ1gsVUFBVUcsU0FBVixFQUFULEVBQWlDO0FBQUE7QUFVaEM7QUFDRCxXQUFPTyxNQUFQO0FBQ0g7O2tCQUVjSCxpQiIsImZpbGUiOiJ0ZXJtaW5hbC1oaWdobGlnaHQuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgY2hhbGsgZnJvbSAnY2hhbGsnO1xuXG5pbXBvcnQgdG9rZW5pemVyIGZyb20gJy4vdG9rZW5pemUnO1xuaW1wb3J0IElucHV0ICAgIGZyb20gJy4vaW5wdXQnO1xuXG5jb25zdCBISUdITElHSFRfVEhFTUUgPSB7XG4gICAgJ2JyYWNrZXRzJzogY2hhbGsuY3lhbixcbiAgICAnYXQtd29yZCc6ICBjaGFsay5jeWFuLFxuICAgICdjYWxsJzogICAgIGNoYWxrLmN5YW4sXG4gICAgJ2NvbW1lbnQnOiAgY2hhbGsuZ3JheSxcbiAgICAnc3RyaW5nJzogICBjaGFsay5ncmVlbixcbiAgICAnY2xhc3MnOiAgICBjaGFsay55ZWxsb3csXG4gICAgJ2hhc2gnOiAgICAgY2hhbGsubWFnZW50YSxcbiAgICAnKCc6ICAgICAgICBjaGFsay5jeWFuLFxuICAgICcpJzogICAgICAgIGNoYWxrLmN5YW4sXG4gICAgJ3snOiAgICAgICAgY2hhbGsueWVsbG93LFxuICAgICd9JzogICAgICAgIGNoYWxrLnllbGxvdyxcbiAgICAnWyc6ICAgICAgICBjaGFsay55ZWxsb3csXG4gICAgJ10nOiAgICAgICAgY2hhbGsueWVsbG93LFxuICAgICc6JzogICAgICAgIGNoYWxrLnllbGxvdyxcbiAgICAnOyc6ICAgICAgICBjaGFsay55ZWxsb3dcbn07XG5cbmZ1bmN0aW9uIGdldFRva2VuVHlwZShbdHlwZSwgdmFsdWVdLCBwcm9jZXNzb3IpIHtcbiAgICBpZiAoIHR5cGUgPT09ICd3b3JkJyApIHtcbiAgICAgICAgaWYgKCB2YWx1ZVswXSA9PT0gJy4nICkge1xuICAgICAgICAgICAgcmV0dXJuICdjbGFzcyc7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKCB2YWx1ZVswXSA9PT0gJyMnICkge1xuICAgICAgICAgICAgcmV0dXJuICdoYXNoJztcbiAgICAgICAgfVxuICAgIH1cblxuICAgIGlmICggIXByb2Nlc3Nvci5lbmRPZkZpbGUoKSApIHtcbiAgICAgICAgbGV0IG5leHQgPSBwcm9jZXNzb3IubmV4dFRva2VuKCk7XG4gICAgICAgIHByb2Nlc3Nvci5iYWNrKG5leHQpO1xuICAgICAgICBpZiAoIG5leHRbMF0gPT09ICdicmFja2V0cycgfHwgbmV4dFswXSA9PT0gJygnICkgcmV0dXJuICdjYWxsJztcbiAgICB9XG5cbiAgICByZXR1cm4gdHlwZTtcbn1cblxuZnVuY3Rpb24gdGVybWluYWxIaWdobGlnaHQoY3NzKSB7XG4gICAgbGV0IHByb2Nlc3NvciA9IHRva2VuaXplcihuZXcgSW5wdXQoY3NzKSwgeyBpZ25vcmVFcnJvcnM6IHRydWUgfSk7XG4gICAgbGV0IHJlc3VsdCA9ICcnO1xuICAgIHdoaWxlICggIXByb2Nlc3Nvci5lbmRPZkZpbGUoKSApIHtcbiAgICAgICAgbGV0IHRva2VuID0gcHJvY2Vzc29yLm5leHRUb2tlbigpO1xuICAgICAgICBsZXQgY29sb3IgPSBISUdITElHSFRfVEhFTUVbZ2V0VG9rZW5UeXBlKHRva2VuLCBwcm9jZXNzb3IpXTtcbiAgICAgICAgaWYgKCBjb2xvciApIHtcbiAgICAgICAgICAgIHJlc3VsdCArPSB0b2tlblsxXS5zcGxpdCgvXFxyP1xcbi8pXG4gICAgICAgICAgICAgICAgLm1hcCggaSA9PiBjb2xvcihpKSApXG4gICAgICAgICAgICAgICAgLmpvaW4oJ1xcbicpO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgcmVzdWx0ICs9IHRva2VuWzFdO1xuICAgICAgICB9XG4gICAgfVxuICAgIHJldHVybiByZXN1bHQ7XG59XG5cbmV4cG9ydCBkZWZhdWx0IHRlcm1pbmFsSGlnaGxpZ2h0O1xuIl19

      /***/
    },
    /* 648 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';

      exports.__esModule = true;
      /**
       * Contains helpers for working with vendor prefixes.
       *
       * @example
       * const vendor = postcss.vendor;
       *
       * @namespace vendor
       */
      var vendor = {
        /**
         * Returns the vendor prefix extracted from an input string.
         *
         * @param {string} prop - string with or without vendor prefix
         *
         * @return {string} vendor prefix or empty string
         *
         * @example
         * postcss.vendor.prefix('-moz-tab-size') //=> '-moz-'
         * postcss.vendor.prefix('tab-size')      //=> ''
         */
        prefix: function prefix(prop) {
          var match = prop.match(/^(-\w+-)/);
          if (match) {
            return match[0];
          } else {
            return '';
          }
        },

        /**
         * Returns the input string stripped of its vendor prefix.
         *
         * @param {string} prop - string with or without vendor prefix
         *
         * @return {string} string name without vendor prefixes
         *
         * @example
         * postcss.vendor.unprefixed('-moz-tab-size') //=> 'tab-size'
         */
        unprefixed: function unprefixed(prop) {
          return prop.replace(/^-\w+-/, '');
        },
      };

      exports.default = vendor;
      module.exports = exports['default'];
      //# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInZlbmRvci5lczYiXSwibmFtZXMiOlsidmVuZG9yIiwicHJlZml4IiwicHJvcCIsIm1hdGNoIiwidW5wcmVmaXhlZCIsInJlcGxhY2UiXSwibWFwcGluZ3MiOiI7OztBQUFBOzs7Ozs7OztBQVFBLElBQUlBLFNBQVM7O0FBRVQ7Ozs7Ozs7Ozs7O0FBV0FDLFVBYlMsa0JBYUZDLElBYkUsRUFhSTtBQUNULFlBQUlDLFFBQVFELEtBQUtDLEtBQUwsQ0FBVyxVQUFYLENBQVo7QUFDQSxZQUFLQSxLQUFMLEVBQWE7QUFDVCxtQkFBT0EsTUFBTSxDQUFOLENBQVA7QUFDSCxTQUZELE1BRU87QUFDSCxtQkFBTyxFQUFQO0FBQ0g7QUFDSixLQXBCUTs7O0FBc0JUOzs7Ozs7Ozs7O0FBVUFDLGNBaENTLHNCQWdDRUYsSUFoQ0YsRUFnQ1E7QUFDYixlQUFPQSxLQUFLRyxPQUFMLENBQWEsUUFBYixFQUF1QixFQUF2QixDQUFQO0FBQ0g7QUFsQ1EsQ0FBYjs7a0JBc0NlTCxNIiwiZmlsZSI6InZlbmRvci5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQ29udGFpbnMgaGVscGVycyBmb3Igd29ya2luZyB3aXRoIHZlbmRvciBwcmVmaXhlcy5cbiAqXG4gKiBAZXhhbXBsZVxuICogY29uc3QgdmVuZG9yID0gcG9zdGNzcy52ZW5kb3I7XG4gKlxuICogQG5hbWVzcGFjZSB2ZW5kb3JcbiAqL1xubGV0IHZlbmRvciA9IHtcblxuICAgIC8qKlxuICAgICAqIFJldHVybnMgdGhlIHZlbmRvciBwcmVmaXggZXh0cmFjdGVkIGZyb20gYW4gaW5wdXQgc3RyaW5nLlxuICAgICAqXG4gICAgICogQHBhcmFtIHtzdHJpbmd9IHByb3AgLSBzdHJpbmcgd2l0aCBvciB3aXRob3V0IHZlbmRvciBwcmVmaXhcbiAgICAgKlxuICAgICAqIEByZXR1cm4ge3N0cmluZ30gdmVuZG9yIHByZWZpeCBvciBlbXB0eSBzdHJpbmdcbiAgICAgKlxuICAgICAqIEBleGFtcGxlXG4gICAgICogcG9zdGNzcy52ZW5kb3IucHJlZml4KCctbW96LXRhYi1zaXplJykgLy89PiAnLW1vei0nXG4gICAgICogcG9zdGNzcy52ZW5kb3IucHJlZml4KCd0YWItc2l6ZScpICAgICAgLy89PiAnJ1xuICAgICAqL1xuICAgIHByZWZpeChwcm9wKSB7XG4gICAgICAgIGxldCBtYXRjaCA9IHByb3AubWF0Y2goL14oLVxcdystKS8pO1xuICAgICAgICBpZiAoIG1hdGNoICkge1xuICAgICAgICAgICAgcmV0dXJuIG1hdGNoWzBdO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgcmV0dXJuICcnO1xuICAgICAgICB9XG4gICAgfSxcblxuICAgIC8qKlxuICAgICAqIFJldHVybnMgdGhlIGlucHV0IHN0cmluZyBzdHJpcHBlZCBvZiBpdHMgdmVuZG9yIHByZWZpeC5cbiAgICAgKlxuICAgICAqIEBwYXJhbSB7c3RyaW5nfSBwcm9wIC0gc3RyaW5nIHdpdGggb3Igd2l0aG91dCB2ZW5kb3IgcHJlZml4XG4gICAgICpcbiAgICAgKiBAcmV0dXJuIHtzdHJpbmd9IHN0cmluZyBuYW1lIHdpdGhvdXQgdmVuZG9yIHByZWZpeGVzXG4gICAgICpcbiAgICAgKiBAZXhhbXBsZVxuICAgICAqIHBvc3Rjc3MudmVuZG9yLnVucHJlZml4ZWQoJy1tb3otdGFiLXNpemUnKSAvLz0+ICd0YWItc2l6ZSdcbiAgICAgKi9cbiAgICB1bnByZWZpeGVkKHByb3ApIHtcbiAgICAgICAgcmV0dXJuIHByb3AucmVwbGFjZSgvXi1cXHcrLS8sICcnKTtcbiAgICB9XG5cbn07XG5cbmV4cG9ydCBkZWZhdWx0IHZlbmRvcjtcbiJdfQ==

      /***/
    },
    /* 649 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';

      exports.__esModule = true;
      exports.default = warnOnce;
      var printed = {};

      function warnOnce(message) {
        if (printed[message]) return;
        printed[message] = true;

        if (typeof console !== 'undefined' && console.warn) console.warn(message);
      }
      module.exports = exports['default'];
      //# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndhcm4tb25jZS5lczYiXSwibmFtZXMiOlsid2Fybk9uY2UiLCJwcmludGVkIiwibWVzc2FnZSIsImNvbnNvbGUiLCJ3YXJuIl0sIm1hcHBpbmdzIjoiOzs7a0JBRXdCQSxRO0FBRnhCLElBQUlDLFVBQVUsRUFBZDs7QUFFZSxTQUFTRCxRQUFULENBQWtCRSxPQUFsQixFQUEyQjtBQUN0QyxRQUFLRCxRQUFRQyxPQUFSLENBQUwsRUFBd0I7QUFDeEJELFlBQVFDLE9BQVIsSUFBbUIsSUFBbkI7O0FBRUEsUUFBSyxPQUFPQyxPQUFQLEtBQW1CLFdBQW5CLElBQWtDQSxRQUFRQyxJQUEvQyxFQUFzREQsUUFBUUMsSUFBUixDQUFhRixPQUFiO0FBQ3pEIiwiZmlsZSI6Indhcm4tb25jZS5qcyIsInNvdXJjZXNDb250ZW50IjpbImxldCBwcmludGVkID0geyB9O1xuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiB3YXJuT25jZShtZXNzYWdlKSB7XG4gICAgaWYgKCBwcmludGVkW21lc3NhZ2VdICkgcmV0dXJuO1xuICAgIHByaW50ZWRbbWVzc2FnZV0gPSB0cnVlO1xuXG4gICAgaWYgKCB0eXBlb2YgY29uc29sZSAhPT0gJ3VuZGVmaW5lZCcgJiYgY29uc29sZS53YXJuICkgY29uc29sZS53YXJuKG1lc3NhZ2UpO1xufVxuIl19

      /***/
    },
    /* 650 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';

      exports.__esModule = true;

      function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
          throw new TypeError('Cannot call a class as a function');
        }
      }

      /**
       * Represents a plugin’s warning. It can be created using {@link Node#warn}.
       *
       * @example
       * if ( decl.important ) {
       *     decl.warn(result, 'Avoid !important', { word: '!important' });
       * }
       */
      var Warning = (function () {
        /**
         * @param {string} text        - warning message
         * @param {Object} [opts]      - warning options
         * @param {Node}   opts.node   - CSS node that caused the warning
         * @param {string} opts.word   - word in CSS source that caused the warning
         * @param {number} opts.index  - index in CSS node string that caused
         *                               the warning
         * @param {string} opts.plugin - name of the plugin that created
         *                               this warning. {@link Result#warn} fills
         *                               this property automatically.
         */
        function Warning(text) {
          var opts = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

          _classCallCheck(this, Warning);

          /**
           * @member {string} - Type to filter warnings from
           *                    {@link Result#messages}. Always equal
           *                    to `"warning"`.
           *
           * @example
           * const nonWarning = result.messages.filter(i => i.type !== 'warning')
           */
          this.type = 'warning';
          /**
           * @member {string} - The warning message.
           *
           * @example
           * warning.text //=> 'Try to avoid !important'
           */
          this.text = text;

          if (opts.node && opts.node.source) {
            var pos = opts.node.positionBy(opts);
            /**
             * @member {number} - Line in the input file
             *                    with this warning’s source
             *
             * @example
             * warning.line //=> 5
             */
            this.line = pos.line;
            /**
             * @member {number} - Column in the input file
             *                    with this warning’s source.
             *
             * @example
             * warning.column //=> 6
             */
            this.column = pos.column;
          }

          for (var opt in opts) {
            this[opt] = opts[opt];
          }
        }

        /**
         * Returns a warning position and message.
         *
         * @example
         * warning.toString() //=> 'postcss-lint:a.css:10:14: Avoid !important'
         *
         * @return {string} warning position and message
         */

        Warning.prototype.toString = function toString() {
          if (this.node) {
            return this.node.error(this.text, {
              plugin: this.plugin,
              index: this.index,
              word: this.word,
            }).message;
          } else if (this.plugin) {
            return this.plugin + ': ' + this.text;
          } else {
            return this.text;
          }
        };

        /**
         * @memberof Warning#
         * @member {string} plugin - The name of the plugin that created
         *                           it will fill this property automatically.
         *                           this warning. When you call {@link Node#warn}
         *
         * @example
         * warning.plugin //=> 'postcss-important'
         */

        /**
         * @memberof Warning#
         * @member {Node} node - Contains the CSS node that caused the warning.
         *
         * @example
         * warning.node.toString() //=> 'color: white !important'
         */

        return Warning;
      })();

      exports.default = Warning;
      module.exports = exports['default'];
      //# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndhcm5pbmcuZXM2Il0sIm5hbWVzIjpbIldhcm5pbmciLCJ0ZXh0Iiwib3B0cyIsInR5cGUiLCJub2RlIiwic291cmNlIiwicG9zIiwicG9zaXRpb25CeSIsImxpbmUiLCJjb2x1bW4iLCJvcHQiLCJ0b1N0cmluZyIsImVycm9yIiwicGx1Z2luIiwiaW5kZXgiLCJ3b3JkIiwibWVzc2FnZSJdLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUE7Ozs7Ozs7O0lBUU1BLE87O0FBRUY7Ozs7Ozs7Ozs7O0FBV0EsbUJBQVlDLElBQVosRUFBOEI7QUFBQSxRQUFaQyxJQUFZLHVFQUFMLEVBQUs7O0FBQUE7O0FBQzFCOzs7Ozs7OztBQVFBLFNBQUtDLElBQUwsR0FBWSxTQUFaO0FBQ0E7Ozs7OztBQU1BLFNBQUtGLElBQUwsR0FBWUEsSUFBWjs7QUFFQSxRQUFLQyxLQUFLRSxJQUFMLElBQWFGLEtBQUtFLElBQUwsQ0FBVUMsTUFBNUIsRUFBcUM7QUFDakMsVUFBSUMsTUFBVUosS0FBS0UsSUFBTCxDQUFVRyxVQUFWLENBQXFCTCxJQUFyQixDQUFkO0FBQ0E7Ozs7Ozs7QUFPQSxXQUFLTSxJQUFMLEdBQWNGLElBQUlFLElBQWxCO0FBQ0E7Ozs7Ozs7QUFPQSxXQUFLQyxNQUFMLEdBQWNILElBQUlHLE1BQWxCO0FBQ0g7O0FBRUQsU0FBTSxJQUFJQyxHQUFWLElBQWlCUixJQUFqQjtBQUF3QixXQUFLUSxHQUFMLElBQVlSLEtBQUtRLEdBQUwsQ0FBWjtBQUF4QjtBQUNIOztBQUVEOzs7Ozs7Ozs7O29CQVFBQyxRLHVCQUFXO0FBQ1AsUUFBSyxLQUFLUCxJQUFWLEVBQWlCO0FBQ2IsYUFBTyxLQUFLQSxJQUFMLENBQVVRLEtBQVYsQ0FBZ0IsS0FBS1gsSUFBckIsRUFBMkI7QUFDOUJZLGdCQUFRLEtBQUtBLE1BRGlCO0FBRTlCQyxlQUFRLEtBQUtBLEtBRmlCO0FBRzlCQyxjQUFRLEtBQUtBO0FBSGlCLE9BQTNCLEVBSUpDLE9BSkg7QUFLSCxLQU5ELE1BTU8sSUFBSyxLQUFLSCxNQUFWLEVBQW1CO0FBQ3RCLGFBQU8sS0FBS0EsTUFBTCxHQUFjLElBQWQsR0FBcUIsS0FBS1osSUFBakM7QUFDSCxLQUZNLE1BRUE7QUFDSCxhQUFPLEtBQUtBLElBQVo7QUFDSDtBQUNKLEc7O0FBRUQ7Ozs7Ozs7Ozs7QUFVQTs7Ozs7Ozs7Ozs7a0JBVVdELE8iLCJmaWxlIjoid2FybmluZy5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogUmVwcmVzZW50cyBhIHBsdWdpbuKAmXMgd2FybmluZy4gSXQgY2FuIGJlIGNyZWF0ZWQgdXNpbmcge0BsaW5rIE5vZGUjd2Fybn0uXG4gKlxuICogQGV4YW1wbGVcbiAqIGlmICggZGVjbC5pbXBvcnRhbnQgKSB7XG4gKiAgICAgZGVjbC53YXJuKHJlc3VsdCwgJ0F2b2lkICFpbXBvcnRhbnQnLCB7IHdvcmQ6ICchaW1wb3J0YW50JyB9KTtcbiAqIH1cbiAqL1xuY2xhc3MgV2FybmluZyB7XG5cbiAgICAvKipcbiAgICAgKiBAcGFyYW0ge3N0cmluZ30gdGV4dCAgICAgICAgLSB3YXJuaW5nIG1lc3NhZ2VcbiAgICAgKiBAcGFyYW0ge09iamVjdH0gW29wdHNdICAgICAgLSB3YXJuaW5nIG9wdGlvbnNcbiAgICAgKiBAcGFyYW0ge05vZGV9ICAgb3B0cy5ub2RlICAgLSBDU1Mgbm9kZSB0aGF0IGNhdXNlZCB0aGUgd2FybmluZ1xuICAgICAqIEBwYXJhbSB7c3RyaW5nfSBvcHRzLndvcmQgICAtIHdvcmQgaW4gQ1NTIHNvdXJjZSB0aGF0IGNhdXNlZCB0aGUgd2FybmluZ1xuICAgICAqIEBwYXJhbSB7bnVtYmVyfSBvcHRzLmluZGV4ICAtIGluZGV4IGluIENTUyBub2RlIHN0cmluZyB0aGF0IGNhdXNlZFxuICAgICAqICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRoZSB3YXJuaW5nXG4gICAgICogQHBhcmFtIHtzdHJpbmd9IG9wdHMucGx1Z2luIC0gbmFtZSBvZiB0aGUgcGx1Z2luIHRoYXQgY3JlYXRlZFxuICAgICAqICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMgd2FybmluZy4ge0BsaW5rIFJlc3VsdCN3YXJufSBmaWxsc1xuICAgICAqICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMgcHJvcGVydHkgYXV0b21hdGljYWxseS5cbiAgICAgKi9cbiAgICBjb25zdHJ1Y3Rvcih0ZXh0LCBvcHRzID0geyB9KSB7XG4gICAgICAgIC8qKlxuICAgICAgICAgKiBAbWVtYmVyIHtzdHJpbmd9IC0gVHlwZSB0byBmaWx0ZXIgd2FybmluZ3MgZnJvbVxuICAgICAgICAgKiAgICAgICAgICAgICAgICAgICAge0BsaW5rIFJlc3VsdCNtZXNzYWdlc30uIEFsd2F5cyBlcXVhbFxuICAgICAgICAgKiAgICAgICAgICAgICAgICAgICAgdG8gYFwid2FybmluZ1wiYC5cbiAgICAgICAgICpcbiAgICAgICAgICogQGV4YW1wbGVcbiAgICAgICAgICogY29uc3Qgbm9uV2FybmluZyA9IHJlc3VsdC5tZXNzYWdlcy5maWx0ZXIoaSA9PiBpLnR5cGUgIT09ICd3YXJuaW5nJylcbiAgICAgICAgICovXG4gICAgICAgIHRoaXMudHlwZSA9ICd3YXJuaW5nJztcbiAgICAgICAgLyoqXG4gICAgICAgICAqIEBtZW1iZXIge3N0cmluZ30gLSBUaGUgd2FybmluZyBtZXNzYWdlLlxuICAgICAgICAgKlxuICAgICAgICAgKiBAZXhhbXBsZVxuICAgICAgICAgKiB3YXJuaW5nLnRleHQgLy89PiAnVHJ5IHRvIGF2b2lkICFpbXBvcnRhbnQnXG4gICAgICAgICAqL1xuICAgICAgICB0aGlzLnRleHQgPSB0ZXh0O1xuXG4gICAgICAgIGlmICggb3B0cy5ub2RlICYmIG9wdHMubm9kZS5zb3VyY2UgKSB7XG4gICAgICAgICAgICBsZXQgcG9zICAgICA9IG9wdHMubm9kZS5wb3NpdGlvbkJ5KG9wdHMpO1xuICAgICAgICAgICAgLyoqXG4gICAgICAgICAgICAgKiBAbWVtYmVyIHtudW1iZXJ9IC0gTGluZSBpbiB0aGUgaW5wdXQgZmlsZVxuICAgICAgICAgICAgICogICAgICAgICAgICAgICAgICAgIHdpdGggdGhpcyB3YXJuaW5n4oCZcyBzb3VyY2VcbiAgICAgICAgICAgICAqXG4gICAgICAgICAgICAgKiBAZXhhbXBsZVxuICAgICAgICAgICAgICogd2FybmluZy5saW5lIC8vPT4gNVxuICAgICAgICAgICAgICovXG4gICAgICAgICAgICB0aGlzLmxpbmUgICA9IHBvcy5saW5lO1xuICAgICAgICAgICAgLyoqXG4gICAgICAgICAgICAgKiBAbWVtYmVyIHtudW1iZXJ9IC0gQ29sdW1uIGluIHRoZSBpbnB1dCBmaWxlXG4gICAgICAgICAgICAgKiAgICAgICAgICAgICAgICAgICAgd2l0aCB0aGlzIHdhcm5pbmfigJlzIHNvdXJjZS5cbiAgICAgICAgICAgICAqXG4gICAgICAgICAgICAgKiBAZXhhbXBsZVxuICAgICAgICAgICAgICogd2FybmluZy5jb2x1bW4gLy89PiA2XG4gICAgICAgICAgICAgKi9cbiAgICAgICAgICAgIHRoaXMuY29sdW1uID0gcG9zLmNvbHVtbjtcbiAgICAgICAgfVxuXG4gICAgICAgIGZvciAoIGxldCBvcHQgaW4gb3B0cyApIHRoaXNbb3B0XSA9IG9wdHNbb3B0XTtcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiBSZXR1cm5zIGEgd2FybmluZyBwb3NpdGlvbiBhbmQgbWVzc2FnZS5cbiAgICAgKlxuICAgICAqIEBleGFtcGxlXG4gICAgICogd2FybmluZy50b1N0cmluZygpIC8vPT4gJ3Bvc3Rjc3MtbGludDphLmNzczoxMDoxNDogQXZvaWQgIWltcG9ydGFudCdcbiAgICAgKlxuICAgICAqIEByZXR1cm4ge3N0cmluZ30gd2FybmluZyBwb3NpdGlvbiBhbmQgbWVzc2FnZVxuICAgICAqL1xuICAgIHRvU3RyaW5nKCkge1xuICAgICAgICBpZiAoIHRoaXMubm9kZSApIHtcbiAgICAgICAgICAgIHJldHVybiB0aGlzLm5vZGUuZXJyb3IodGhpcy50ZXh0LCB7XG4gICAgICAgICAgICAgICAgcGx1Z2luOiB0aGlzLnBsdWdpbixcbiAgICAgICAgICAgICAgICBpbmRleDogIHRoaXMuaW5kZXgsXG4gICAgICAgICAgICAgICAgd29yZDogICB0aGlzLndvcmRcbiAgICAgICAgICAgIH0pLm1lc3NhZ2U7XG4gICAgICAgIH0gZWxzZSBpZiAoIHRoaXMucGx1Z2luICkge1xuICAgICAgICAgICAgcmV0dXJuIHRoaXMucGx1Z2luICsgJzogJyArIHRoaXMudGV4dDtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIHJldHVybiB0aGlzLnRleHQ7XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiBAbWVtYmVyb2YgV2FybmluZyNcbiAgICAgKiBAbWVtYmVyIHtzdHJpbmd9IHBsdWdpbiAtIFRoZSBuYW1lIG9mIHRoZSBwbHVnaW4gdGhhdCBjcmVhdGVkXG4gICAgICogICAgICAgICAgICAgICAgICAgICAgICAgICBpdCB3aWxsIGZpbGwgdGhpcyBwcm9wZXJ0eSBhdXRvbWF0aWNhbGx5LlxuICAgICAqICAgICAgICAgICAgICAgICAgICAgICAgICAgdGhpcyB3YXJuaW5nLiBXaGVuIHlvdSBjYWxsIHtAbGluayBOb2RlI3dhcm59XG4gICAgICpcbiAgICAgKiBAZXhhbXBsZVxuICAgICAqIHdhcm5pbmcucGx1Z2luIC8vPT4gJ3Bvc3Rjc3MtaW1wb3J0YW50J1xuICAgICAqL1xuXG4gICAgLyoqXG4gICAgICogQG1lbWJlcm9mIFdhcm5pbmcjXG4gICAgICogQG1lbWJlciB7Tm9kZX0gbm9kZSAtIENvbnRhaW5zIHRoZSBDU1Mgbm9kZSB0aGF0IGNhdXNlZCB0aGUgd2FybmluZy5cbiAgICAgKlxuICAgICAqIEBleGFtcGxlXG4gICAgICogd2FybmluZy5ub2RlLnRvU3RyaW5nKCkgLy89PiAnY29sb3I6IHdoaXRlICFpbXBvcnRhbnQnXG4gICAgICovXG5cbn1cblxuZXhwb3J0IGRlZmF1bHQgV2FybmluZztcbiJdfQ==

      /***/
    },
    /* 651 */
    /***/ function (module, exports) {
      /* -*- Mode: js; js-indent-level: 2; -*- */
      /*
       * Copyright 2011 Mozilla Foundation and contributors
       * Licensed under the New BSD license. See LICENSE or:
       * http://opensource.org/licenses/BSD-3-Clause
       */

      var intToCharMap = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'.split(
        ''
      );

      /**
       * Encode an integer in the range of 0 to 63 to a single base 64 digit.
       */
      exports.encode = function (number) {
        if (0 <= number && number < intToCharMap.length) {
          return intToCharMap[number];
        }
        throw new TypeError('Must be between 0 and 63: ' + number);
      };

      /**
       * Decode a single base 64 character code digit to an integer. Returns -1 on
       * failure.
       */
      exports.decode = function (charCode) {
        var bigA = 65; // 'A'
        var bigZ = 90; // 'Z'

        var littleA = 97; // 'a'
        var littleZ = 122; // 'z'

        var zero = 48; // '0'
        var nine = 57; // '9'

        var plus = 43; // '+'
        var slash = 47; // '/'

        var littleOffset = 26;
        var numberOffset = 52;

        // 0 - 25: ABCDEFGHIJKLMNOPQRSTUVWXYZ
        if (bigA <= charCode && charCode <= bigZ) {
          return charCode - bigA;
        }

        // 26 - 51: abcdefghijklmnopqrstuvwxyz
        if (littleA <= charCode && charCode <= littleZ) {
          return charCode - littleA + littleOffset;
        }

        // 52 - 61: 0123456789
        if (zero <= charCode && charCode <= nine) {
          return charCode - zero + numberOffset;
        }

        // 62: +
        if (charCode == plus) {
          return 62;
        }

        // 63: /
        if (charCode == slash) {
          return 63;
        }

        // Invalid base64 digit.
        return -1;
      };

      /***/
    },
    /* 652 */
    /***/ function (module, exports) {
      /* -*- Mode: js; js-indent-level: 2; -*- */
      /*
       * Copyright 2011 Mozilla Foundation and contributors
       * Licensed under the New BSD license. See LICENSE or:
       * http://opensource.org/licenses/BSD-3-Clause
       */

      exports.GREATEST_LOWER_BOUND = 1;
      exports.LEAST_UPPER_BOUND = 2;

      /**
       * Recursive implementation of binary search.
       *
       * @param aLow Indices here and lower do not contain the needle.
       * @param aHigh Indices here and higher do not contain the needle.
       * @param aNeedle The element being searched for.
       * @param aHaystack The non-empty array being searched.
       * @param aCompare Function which takes two elements and returns -1, 0, or 1.
       * @param aBias Either 'binarySearch.GREATEST_LOWER_BOUND' or
       *     'binarySearch.LEAST_UPPER_BOUND'. Specifies whether to return the
       *     closest element that is smaller than or greater than the one we are
       *     searching for, respectively, if the exact element cannot be found.
       */
      function recursiveSearch(aLow, aHigh, aNeedle, aHaystack, aCompare, aBias) {
        // This function terminates when one of the following is true:
        //
        //   1. We find the exact element we are looking for.
        //
        //   2. We did not find the exact element, but we can return the index of
        //      the next-closest element.
        //
        //   3. We did not find the exact element, and there is no next-closest
        //      element than the one we are searching for, so we return -1.
        var mid = Math.floor((aHigh - aLow) / 2) + aLow;
        var cmp = aCompare(aNeedle, aHaystack[mid], true);
        if (cmp === 0) {
          // Found the element we are looking for.
          return mid;
        } else if (cmp > 0) {
          // Our needle is greater than aHaystack[mid].
          if (aHigh - mid > 1) {
            // The element is in the upper half.
            return recursiveSearch(mid, aHigh, aNeedle, aHaystack, aCompare, aBias);
          }

          // The exact needle element was not found in this haystack. Determine if
          // we are in termination case (3) or (2) and return the appropriate thing.
          if (aBias == exports.LEAST_UPPER_BOUND) {
            return aHigh < aHaystack.length ? aHigh : -1;
          } else {
            return mid;
          }
        } else {
          // Our needle is less than aHaystack[mid].
          if (mid - aLow > 1) {
            // The element is in the lower half.
            return recursiveSearch(aLow, mid, aNeedle, aHaystack, aCompare, aBias);
          }

          // we are in termination case (3) or (2) and return the appropriate thing.
          if (aBias == exports.LEAST_UPPER_BOUND) {
            return mid;
          } else {
            return aLow < 0 ? -1 : aLow;
          }
        }
      }

      /**
       * This is an implementation of binary search which will always try and return
       * the index of the closest element if there is no exact hit. This is because
       * mappings between original and generated line/col pairs are single points,
       * and there is an implicit region between each of them, so a miss just means
       * that you aren't on the very start of a region.
       *
       * @param aNeedle The element you are looking for.
       * @param aHaystack The array that is being searched.
       * @param aCompare A function which takes the needle and an element in the
       *     array and returns -1, 0, or 1 depending on whether the needle is less
       *     than, equal to, or greater than the element, respectively.
       * @param aBias Either 'binarySearch.GREATEST_LOWER_BOUND' or
       *     'binarySearch.LEAST_UPPER_BOUND'. Specifies whether to return the
       *     closest element that is smaller than or greater than the one we are
       *     searching for, respectively, if the exact element cannot be found.
       *     Defaults to 'binarySearch.GREATEST_LOWER_BOUND'.
       */
      exports.search = function search(aNeedle, aHaystack, aCompare, aBias) {
        if (aHaystack.length === 0) {
          return -1;
        }

        var index = recursiveSearch(
          -1,
          aHaystack.length,
          aNeedle,
          aHaystack,
          aCompare,
          aBias || exports.GREATEST_LOWER_BOUND
        );
        if (index < 0) {
          return -1;
        }

        // We have found either the exact element, or the next-closest element than
        // the one we are searching for. However, there may be more than one such
        // element. Make sure we always return the smallest of these.
        while (index - 1 >= 0) {
          if (aCompare(aHaystack[index], aHaystack[index - 1], true) !== 0) {
            break;
          }
          --index;
        }

        return index;
      };

      /***/
    },
    /* 653 */
    /***/ function (module, exports, __webpack_require__) {
      /* -*- Mode: js; js-indent-level: 2; -*- */
      /*
       * Copyright 2014 Mozilla Foundation and contributors
       * Licensed under the New BSD license. See LICENSE or:
       * http://opensource.org/licenses/BSD-3-Clause
       */

      var util = __webpack_require__(96);

      /**
       * Determine whether mappingB is after mappingA with respect to generated
       * position.
       */
      function generatedPositionAfter(mappingA, mappingB) {
        // Optimized for most common case
        var lineA = mappingA.generatedLine;
        var lineB = mappingB.generatedLine;
        var columnA = mappingA.generatedColumn;
        var columnB = mappingB.generatedColumn;
        return (
          lineB > lineA ||
          (lineB == lineA && columnB >= columnA) ||
          util.compareByGeneratedPositionsInflated(mappingA, mappingB) <= 0
        );
      }

      /**
       * A data structure to provide a sorted view of accumulated mappings in a
       * performance conscious manner. It trades a neglibable overhead in general
       * case for a large speedup in case of mappings being added in order.
       */
      function MappingList() {
        this._array = [];
        this._sorted = true;
        // Serves as infimum
        this._last = { generatedLine: -1, generatedColumn: 0 };
      }

      /**
       * Iterate through internal items. This method takes the same arguments that
       * `Array.prototype.forEach` takes.
       *
       * NOTE: The order of the mappings is NOT guaranteed.
       */
      MappingList.prototype.unsortedForEach = function MappingList_forEach(aCallback, aThisArg) {
        this._array.forEach(aCallback, aThisArg);
      };

      /**
       * Add the given source mapping.
       *
       * @param Object aMapping
       */
      MappingList.prototype.add = function MappingList_add(aMapping) {
        if (generatedPositionAfter(this._last, aMapping)) {
          this._last = aMapping;
          this._array.push(aMapping);
        } else {
          this._sorted = false;
          this._array.push(aMapping);
        }
      };

      /**
       * Returns the flat, sorted array of mappings. The mappings are sorted by
       * generated position.
       *
       * WARNING: This method returns internal data without copying, for
       * performance. The return value must NOT be mutated, and should be treated as
       * an immutable borrow. If you want to take ownership, you must make your own
       * copy.
       */
      MappingList.prototype.toArray = function MappingList_toArray() {
        if (!this._sorted) {
          this._array.sort(util.compareByGeneratedPositionsInflated);
          this._sorted = true;
        }
        return this._array;
      };

      exports.MappingList = MappingList;

      /***/
    },
    /* 654 */
    /***/ function (module, exports) {
      /* -*- Mode: js; js-indent-level: 2; -*- */
      /*
       * Copyright 2011 Mozilla Foundation and contributors
       * Licensed under the New BSD license. See LICENSE or:
       * http://opensource.org/licenses/BSD-3-Clause
       */

      // It turns out that some (most?) JavaScript engines don't self-host
      // `Array.prototype.sort`. This makes sense because C++ will likely remain
      // faster than JS when doing raw CPU-intensive sorting. However, when using a
      // custom comparator function, calling back and forth between the VM's C++ and
      // JIT'd JS is rather slow *and* loses JIT type information, resulting in
      // worse generated code for the comparator function than would be optimal. In
      // fact, when sorting with a comparator, these costs outweigh the benefits of
      // sorting in C++. By using our own JS-implemented Quick Sort (below), we get
      // a ~3500ms mean speed-up in `bench/bench.html`.

      /**
       * Swap the elements indexed by `x` and `y` in the array `ary`.
       *
       * @param {Array} ary
       *        The array.
       * @param {Number} x
       *        The index of the first item.
       * @param {Number} y
       *        The index of the second item.
       */
      function swap(ary, x, y) {
        var temp = ary[x];
        ary[x] = ary[y];
        ary[y] = temp;
      }

      /**
       * Returns a random integer within the range `low .. high` inclusive.
       *
       * @param {Number} low
       *        The lower bound on the range.
       * @param {Number} high
       *        The upper bound on the range.
       */
      function randomIntInRange(low, high) {
        return Math.round(low + Math.random() * (high - low));
      }

      /**
       * The Quick Sort algorithm.
       *
       * @param {Array} ary
       *        An array to sort.
       * @param {function} comparator
       *        Function to use to compare two items.
       * @param {Number} p
       *        Start index of the array
       * @param {Number} r
       *        End index of the array
       */
      function doQuickSort(ary, comparator, p, r) {
        // If our lower bound is less than our upper bound, we (1) partition the
        // array into two pieces and (2) recurse on each half. If it is not, this is
        // the empty array and our base case.

        if (p < r) {
          // (1) Partitioning.
          //
          // The partitioning chooses a pivot between `p` and `r` and moves all
          // elements that are less than or equal to the pivot to the before it, and
          // all the elements that are greater than it after it. The effect is that
          // once partition is done, the pivot is in the exact place it will be when
          // the array is put in sorted order, and it will not need to be moved
          // again. This runs in O(n) time.

          // Always choose a random pivot so that an input array which is reverse
          // sorted does not cause O(n^2) running time.
          var pivotIndex = randomIntInRange(p, r);
          var i = p - 1;

          swap(ary, pivotIndex, r);
          var pivot = ary[r];

          // Immediately after `j` is incremented in this loop, the following hold
          // true:
          //
          //   * Every element in `ary[p .. i]` is less than or equal to the pivot.
          //
          //   * Every element in `ary[i+1 .. j-1]` is greater than the pivot.
          for (var j = p; j < r; j++) {
            if (comparator(ary[j], pivot) <= 0) {
              i += 1;
              swap(ary, i, j);
            }
          }

          swap(ary, i + 1, j);
          var q = i + 1;

          // (2) Recurse on each half.

          doQuickSort(ary, comparator, p, q - 1);
          doQuickSort(ary, comparator, q + 1, r);
        }
      }

      /**
       * Sort the given array in-place with the given comparator function.
       *
       * @param {Array} ary
       *        An array to sort.
       * @param {function} comparator
       *        Function to use to compare two items.
       */
      exports.quickSort = function (ary, comparator) {
        doQuickSort(ary, comparator, 0, ary.length - 1);
      };

      /***/
    },
    /* 655 */
    /***/ function (module, exports, __webpack_require__) {
      /* -*- Mode: js; js-indent-level: 2; -*- */
      /*
       * Copyright 2011 Mozilla Foundation and contributors
       * Licensed under the New BSD license. See LICENSE or:
       * http://opensource.org/licenses/BSD-3-Clause
       */

      var util = __webpack_require__(96);
      var binarySearch = __webpack_require__(652);
      var ArraySet = __webpack_require__(276).ArraySet;
      var base64VLQ = __webpack_require__(277);
      var quickSort = __webpack_require__(654).quickSort;

      function SourceMapConsumer(aSourceMap, aSourceMapURL) {
        var sourceMap = aSourceMap;
        if (typeof aSourceMap === 'string') {
          sourceMap = util.parseSourceMapInput(aSourceMap);
        }

        return sourceMap.sections != null
          ? new IndexedSourceMapConsumer(sourceMap, aSourceMapURL)
          : new BasicSourceMapConsumer(sourceMap, aSourceMapURL);
      }

      SourceMapConsumer.fromSourceMap = function (aSourceMap, aSourceMapURL) {
        return BasicSourceMapConsumer.fromSourceMap(aSourceMap, aSourceMapURL);
      };

      /**
       * The version of the source mapping spec that we are consuming.
       */
      SourceMapConsumer.prototype._version = 3;

      // `__generatedMappings` and `__originalMappings` are arrays that hold the
      // parsed mapping coordinates from the source map's "mappings" attribute. They
      // are lazily instantiated, accessed via the `_generatedMappings` and
      // `_originalMappings` getters respectively, and we only parse the mappings
      // and create these arrays once queried for a source location. We jump through
      // these hoops because there can be many thousands of mappings, and parsing
      // them is expensive, so we only want to do it if we must.
      //
      // Each object in the arrays is of the form:
      //
      //     {
      //       generatedLine: The line number in the generated code,
      //       generatedColumn: The column number in the generated code,
      //       source: The path to the original source file that generated this
      //               chunk of code,
      //       originalLine: The line number in the original source that
      //                     corresponds to this chunk of generated code,
      //       originalColumn: The column number in the original source that
      //                       corresponds to this chunk of generated code,
      //       name: The name of the original symbol which generated this chunk of
      //             code.
      //     }
      //
      // All properties except for `generatedLine` and `generatedColumn` can be
      // `null`.
      //
      // `_generatedMappings` is ordered by the generated positions.
      //
      // `_originalMappings` is ordered by the original positions.

      SourceMapConsumer.prototype.__generatedMappings = null;
      Object.defineProperty(SourceMapConsumer.prototype, '_generatedMappings', {
        configurable: true,
        enumerable: true,
        get: function () {
          if (!this.__generatedMappings) {
            this._parseMappings(this._mappings, this.sourceRoot);
          }

          return this.__generatedMappings;
        },
      });

      SourceMapConsumer.prototype.__originalMappings = null;
      Object.defineProperty(SourceMapConsumer.prototype, '_originalMappings', {
        configurable: true,
        enumerable: true,
        get: function () {
          if (!this.__originalMappings) {
            this._parseMappings(this._mappings, this.sourceRoot);
          }

          return this.__originalMappings;
        },
      });

      SourceMapConsumer.prototype._charIsMappingSeparator = function SourceMapConsumer_charIsMappingSeparator(
        aStr,
        index
      ) {
        var c = aStr.charAt(index);
        return c === ';' || c === ',';
      };

      /**
       * Parse the mappings in a string in to a data structure which we can easily
       * query (the ordered arrays in the `this.__generatedMappings` and
       * `this.__originalMappings` properties).
       */
      SourceMapConsumer.prototype._parseMappings = function SourceMapConsumer_parseMappings(
        aStr,
        aSourceRoot
      ) {
        throw new Error('Subclasses must implement _parseMappings');
      };

      SourceMapConsumer.GENERATED_ORDER = 1;
      SourceMapConsumer.ORIGINAL_ORDER = 2;

      SourceMapConsumer.GREATEST_LOWER_BOUND = 1;
      SourceMapConsumer.LEAST_UPPER_BOUND = 2;

      /**
       * Iterate over each mapping between an original source/line/column and a
       * generated line/column in this source map.
       *
       * @param Function aCallback
       *        The function that is called with each mapping.
       * @param Object aContext
       *        Optional. If specified, this object will be the value of `this` every
       *        time that `aCallback` is called.
       * @param aOrder
       *        Either `SourceMapConsumer.GENERATED_ORDER` or
       *        `SourceMapConsumer.ORIGINAL_ORDER`. Specifies whether you want to
       *        iterate over the mappings sorted by the generated file's line/column
       *        order or the original's source/line/column order, respectively. Defaults to
       *        `SourceMapConsumer.GENERATED_ORDER`.
       */
      SourceMapConsumer.prototype.eachMapping = function SourceMapConsumer_eachMapping(
        aCallback,
        aContext,
        aOrder
      ) {
        var context = aContext || null;
        var order = aOrder || SourceMapConsumer.GENERATED_ORDER;

        var mappings;
        switch (order) {
          case SourceMapConsumer.GENERATED_ORDER:
            mappings = this._generatedMappings;
            break;
          case SourceMapConsumer.ORIGINAL_ORDER:
            mappings = this._originalMappings;
            break;
          default:
            throw new Error('Unknown order of iteration.');
        }

        var sourceRoot = this.sourceRoot;
        mappings
          .map(function (mapping) {
            var source = mapping.source === null ? null : this._sources.at(mapping.source);
            source = util.computeSourceURL(sourceRoot, source, this._sourceMapURL);
            return {
              source: source,
              generatedLine: mapping.generatedLine,
              generatedColumn: mapping.generatedColumn,
              originalLine: mapping.originalLine,
              originalColumn: mapping.originalColumn,
              name: mapping.name === null ? null : this._names.at(mapping.name),
            };
          }, this)
          .forEach(aCallback, context);
      };

      /**
       * Returns all generated line and column information for the original source,
       * line, and column provided. If no column is provided, returns all mappings
       * corresponding to a either the line we are searching for or the next
       * closest line that has any mappings. Otherwise, returns all mappings
       * corresponding to the given line and either the column we are searching for
       * or the next closest column that has any offsets.
       *
       * The only argument is an object with the following properties:
       *
       *   - source: The filename of the original source.
       *   - line: The line number in the original source.  The line number is 1-based.
       *   - column: Optional. the column number in the original source.
       *    The column number is 0-based.
       *
       * and an array of objects is returned, each with the following properties:
       *
       *   - line: The line number in the generated source, or null.  The
       *    line number is 1-based.
       *   - column: The column number in the generated source, or null.
       *    The column number is 0-based.
       */
      SourceMapConsumer.prototype.allGeneratedPositionsFor = function SourceMapConsumer_allGeneratedPositionsFor(
        aArgs
      ) {
        var line = util.getArg(aArgs, 'line');

        // When there is no exact match, BasicSourceMapConsumer.prototype._findMapping
        // returns the index of the closest mapping less than the needle. By
        // setting needle.originalColumn to 0, we thus find the last mapping for
        // the given line, provided such a mapping exists.
        var needle = {
          source: util.getArg(aArgs, 'source'),
          originalLine: line,
          originalColumn: util.getArg(aArgs, 'column', 0),
        };

        needle.source = this._findSourceIndex(needle.source);
        if (needle.source < 0) {
          return [];
        }

        var mappings = [];

        var index = this._findMapping(
          needle,
          this._originalMappings,
          'originalLine',
          'originalColumn',
          util.compareByOriginalPositions,
          binarySearch.LEAST_UPPER_BOUND
        );
        if (index >= 0) {
          var mapping = this._originalMappings[index];

          if (aArgs.column === undefined) {
            var originalLine = mapping.originalLine;

            // Iterate until either we run out of mappings, or we run into
            // a mapping for a different line than the one we found. Since
            // mappings are sorted, this is guaranteed to find all mappings for
            // the line we found.
            while (mapping && mapping.originalLine === originalLine) {
              mappings.push({
                line: util.getArg(mapping, 'generatedLine', null),
                column: util.getArg(mapping, 'generatedColumn', null),
                lastColumn: util.getArg(mapping, 'lastGeneratedColumn', null),
              });

              mapping = this._originalMappings[++index];
            }
          } else {
            var originalColumn = mapping.originalColumn;

            // Iterate until either we run out of mappings, or we run into
            // a mapping for a different line than the one we were searching for.
            // Since mappings are sorted, this is guaranteed to find all mappings for
            // the line we are searching for.
            while (
              mapping &&
              mapping.originalLine === line &&
              mapping.originalColumn == originalColumn
            ) {
              mappings.push({
                line: util.getArg(mapping, 'generatedLine', null),
                column: util.getArg(mapping, 'generatedColumn', null),
                lastColumn: util.getArg(mapping, 'lastGeneratedColumn', null),
              });

              mapping = this._originalMappings[++index];
            }
          }
        }

        return mappings;
      };

      exports.SourceMapConsumer = SourceMapConsumer;

      /**
       * A BasicSourceMapConsumer instance represents a parsed source map which we can
       * query for information about the original file positions by giving it a file
       * position in the generated source.
       *
       * The first parameter is the raw source map (either as a JSON string, or
       * already parsed to an object). According to the spec, source maps have the
       * following attributes:
       *
       *   - version: Which version of the source map spec this map is following.
       *   - sources: An array of URLs to the original source files.
       *   - names: An array of identifiers which can be referrenced by individual mappings.
       *   - sourceRoot: Optional. The URL root from which all sources are relative.
       *   - sourcesContent: Optional. An array of contents of the original source files.
       *   - mappings: A string of base64 VLQs which contain the actual mappings.
       *   - file: Optional. The generated file this source map is associated with.
       *
       * Here is an example source map, taken from the source map spec[0]:
       *
       *     {
       *       version : 3,
       *       file: "out.js",
       *       sourceRoot : "",
       *       sources: ["foo.js", "bar.js"],
       *       names: ["src", "maps", "are", "fun"],
       *       mappings: "AA,AB;;ABCDE;"
       *     }
       *
       * The second parameter, if given, is a string whose value is the URL
       * at which the source map was found.  This URL is used to compute the
       * sources array.
       *
       * [0]: https://docs.google.com/document/d/1U1RGAehQwRypUTovF1KRlpiOFze0b-_2gc6fAH0KY0k/edit?pli=1#
       */
      function BasicSourceMapConsumer(aSourceMap, aSourceMapURL) {
        var sourceMap = aSourceMap;
        if (typeof aSourceMap === 'string') {
          sourceMap = util.parseSourceMapInput(aSourceMap);
        }

        var version = util.getArg(sourceMap, 'version');
        var sources = util.getArg(sourceMap, 'sources');
        // Sass 3.3 leaves out the 'names' array, so we deviate from the spec (which
        // requires the array) to play nice here.
        var names = util.getArg(sourceMap, 'names', []);
        var sourceRoot = util.getArg(sourceMap, 'sourceRoot', null);
        var sourcesContent = util.getArg(sourceMap, 'sourcesContent', null);
        var mappings = util.getArg(sourceMap, 'mappings');
        var file = util.getArg(sourceMap, 'file', null);

        // Once again, Sass deviates from the spec and supplies the version as a
        // string rather than a number, so we use loose equality checking here.
        if (version != this._version) {
          throw new Error('Unsupported version: ' + version);
        }

        if (sourceRoot) {
          sourceRoot = util.normalize(sourceRoot);
        }

        sources = sources
          .map(String)
          // Some source maps produce relative source paths like "./foo.js" instead of
          // "foo.js".  Normalize these first so that future comparisons will succeed.
          // See bugzil.la/1090768.
          .map(util.normalize)
          // Always ensure that absolute sources are internally stored relative to
          // the source root, if the source root is absolute. Not doing this would
          // be particularly problematic when the source root is a prefix of the
          // source (valid, but why??). See github issue #199 and bugzil.la/1188982.
          .map(function (source) {
            return sourceRoot && util.isAbsolute(sourceRoot) && util.isAbsolute(source)
              ? util.relative(sourceRoot, source)
              : source;
          });

        // Pass `true` below to allow duplicate names and sources. While source maps
        // are intended to be compressed and deduplicated, the TypeScript compiler
        // sometimes generates source maps with duplicates in them. See Github issue
        // #72 and bugzil.la/889492.
        this._names = ArraySet.fromArray(names.map(String), true);
        this._sources = ArraySet.fromArray(sources, true);

        this._absoluteSources = this._sources.toArray().map(function (s) {
          return util.computeSourceURL(sourceRoot, s, aSourceMapURL);
        });

        this.sourceRoot = sourceRoot;
        this.sourcesContent = sourcesContent;
        this._mappings = mappings;
        this._sourceMapURL = aSourceMapURL;
        this.file = file;
      }

      BasicSourceMapConsumer.prototype = Object.create(SourceMapConsumer.prototype);
      BasicSourceMapConsumer.prototype.consumer = SourceMapConsumer;

      /**
       * Utility function to find the index of a source.  Returns -1 if not
       * found.
       */
      BasicSourceMapConsumer.prototype._findSourceIndex = function (aSource) {
        var relativeSource = aSource;
        if (this.sourceRoot != null) {
          relativeSource = util.relative(this.sourceRoot, relativeSource);
        }

        if (this._sources.has(relativeSource)) {
          return this._sources.indexOf(relativeSource);
        }

        // Maybe aSource is an absolute URL as returned by |sources|.  In
        // this case we can't simply undo the transform.
        var i;
        for (i = 0; i < this._absoluteSources.length; ++i) {
          if (this._absoluteSources[i] == aSource) {
            return i;
          }
        }

        return -1;
      };

      /**
       * Create a BasicSourceMapConsumer from a SourceMapGenerator.
       *
       * @param SourceMapGenerator aSourceMap
       *        The source map that will be consumed.
       * @param String aSourceMapURL
       *        The URL at which the source map can be found (optional)
       * @returns BasicSourceMapConsumer
       */
      BasicSourceMapConsumer.fromSourceMap = function SourceMapConsumer_fromSourceMap(
        aSourceMap,
        aSourceMapURL
      ) {
        var smc = Object.create(BasicSourceMapConsumer.prototype);

        var names = (smc._names = ArraySet.fromArray(aSourceMap._names.toArray(), true));
        var sources = (smc._sources = ArraySet.fromArray(aSourceMap._sources.toArray(), true));
        smc.sourceRoot = aSourceMap._sourceRoot;
        smc.sourcesContent = aSourceMap._generateSourcesContent(
          smc._sources.toArray(),
          smc.sourceRoot
        );
        smc.file = aSourceMap._file;
        smc._sourceMapURL = aSourceMapURL;
        smc._absoluteSources = smc._sources.toArray().map(function (s) {
          return util.computeSourceURL(smc.sourceRoot, s, aSourceMapURL);
        });

        // Because we are modifying the entries (by converting string sources and
        // names to indices into the sources and names ArraySets), we have to make
        // a copy of the entry or else bad things happen. Shared mutable state
        // strikes again! See github issue #191.

        var generatedMappings = aSourceMap._mappings.toArray().slice();
        var destGeneratedMappings = (smc.__generatedMappings = []);
        var destOriginalMappings = (smc.__originalMappings = []);

        for (var i = 0, length = generatedMappings.length; i < length; i++) {
          var srcMapping = generatedMappings[i];
          var destMapping = new Mapping();
          destMapping.generatedLine = srcMapping.generatedLine;
          destMapping.generatedColumn = srcMapping.generatedColumn;

          if (srcMapping.source) {
            destMapping.source = sources.indexOf(srcMapping.source);
            destMapping.originalLine = srcMapping.originalLine;
            destMapping.originalColumn = srcMapping.originalColumn;

            if (srcMapping.name) {
              destMapping.name = names.indexOf(srcMapping.name);
            }

            destOriginalMappings.push(destMapping);
          }

          destGeneratedMappings.push(destMapping);
        }

        quickSort(smc.__originalMappings, util.compareByOriginalPositions);

        return smc;
      };

      /**
       * The version of the source mapping spec that we are consuming.
       */
      BasicSourceMapConsumer.prototype._version = 3;

      /**
       * The list of original sources.
       */
      Object.defineProperty(BasicSourceMapConsumer.prototype, 'sources', {
        get: function () {
          return this._absoluteSources.slice();
        },
      });

      /**
       * Provide the JIT with a nice shape / hidden class.
       */
      function Mapping() {
        this.generatedLine = 0;
        this.generatedColumn = 0;
        this.source = null;
        this.originalLine = null;
        this.originalColumn = null;
        this.name = null;
      }

      /**
       * Parse the mappings in a string in to a data structure which we can easily
       * query (the ordered arrays in the `this.__generatedMappings` and
       * `this.__originalMappings` properties).
       */
      BasicSourceMapConsumer.prototype._parseMappings = function SourceMapConsumer_parseMappings(
        aStr,
        aSourceRoot
      ) {
        var generatedLine = 1;
        var previousGeneratedColumn = 0;
        var previousOriginalLine = 0;
        var previousOriginalColumn = 0;
        var previousSource = 0;
        var previousName = 0;
        var length = aStr.length;
        var index = 0;
        var cachedSegments = {};
        var temp = {};
        var originalMappings = [];
        var generatedMappings = [];
        var mapping, str, segment, end, value;

        while (index < length) {
          if (aStr.charAt(index) === ';') {
            generatedLine++;
            index++;
            previousGeneratedColumn = 0;
          } else if (aStr.charAt(index) === ',') {
            index++;
          } else {
            mapping = new Mapping();
            mapping.generatedLine = generatedLine;

            // Because each offset is encoded relative to the previous one,
            // many segments often have the same encoding. We can exploit this
            // fact by caching the parsed variable length fields of each segment,
            // allowing us to avoid a second parse if we encounter the same
            // segment again.
            for (end = index; end < length; end++) {
              if (this._charIsMappingSeparator(aStr, end)) {
                break;
              }
            }
            str = aStr.slice(index, end);

            segment = cachedSegments[str];
            if (segment) {
              index += str.length;
            } else {
              segment = [];
              while (index < end) {
                base64VLQ.decode(aStr, index, temp);
                value = temp.value;
                index = temp.rest;
                segment.push(value);
              }

              if (segment.length === 2) {
                throw new Error('Found a source, but no line and column');
              }

              if (segment.length === 3) {
                throw new Error('Found a source and line, but no column');
              }

              cachedSegments[str] = segment;
            }

            // Generated column.
            mapping.generatedColumn = previousGeneratedColumn + segment[0];
            previousGeneratedColumn = mapping.generatedColumn;

            if (segment.length > 1) {
              // Original source.
              mapping.source = previousSource + segment[1];
              previousSource += segment[1];

              // Original line.
              mapping.originalLine = previousOriginalLine + segment[2];
              previousOriginalLine = mapping.originalLine;
              // Lines are stored 0-based
              mapping.originalLine += 1;

              // Original column.
              mapping.originalColumn = previousOriginalColumn + segment[3];
              previousOriginalColumn = mapping.originalColumn;

              if (segment.length > 4) {
                // Original name.
                mapping.name = previousName + segment[4];
                previousName += segment[4];
              }
            }

            generatedMappings.push(mapping);
            if (typeof mapping.originalLine === 'number') {
              originalMappings.push(mapping);
            }
          }
        }

        quickSort(generatedMappings, util.compareByGeneratedPositionsDeflated);
        this.__generatedMappings = generatedMappings;

        quickSort(originalMappings, util.compareByOriginalPositions);
        this.__originalMappings = originalMappings;
      };

      /**
       * Find the mapping that best matches the hypothetical "needle" mapping that
       * we are searching for in the given "haystack" of mappings.
       */
      BasicSourceMapConsumer.prototype._findMapping = function SourceMapConsumer_findMapping(
        aNeedle,
        aMappings,
        aLineName,
        aColumnName,
        aComparator,
        aBias
      ) {
        // To return the position we are searching for, we must first find the
        // mapping for the given position and then return the opposite position it
        // points to. Because the mappings are sorted, we can use binary search to
        // find the best mapping.

        if (aNeedle[aLineName] <= 0) {
          throw new TypeError('Line must be greater than or equal to 1, got ' + aNeedle[aLineName]);
        }
        if (aNeedle[aColumnName] < 0) {
          throw new TypeError(
            'Column must be greater than or equal to 0, got ' + aNeedle[aColumnName]
          );
        }

        return binarySearch.search(aNeedle, aMappings, aComparator, aBias);
      };

      /**
       * Compute the last column for each generated mapping. The last column is
       * inclusive.
       */
      BasicSourceMapConsumer.prototype.computeColumnSpans = function SourceMapConsumer_computeColumnSpans() {
        for (var index = 0; index < this._generatedMappings.length; ++index) {
          var mapping = this._generatedMappings[index];

          // Mappings do not contain a field for the last generated columnt. We
          // can come up with an optimistic estimate, however, by assuming that
          // mappings are contiguous (i.e. given two consecutive mappings, the
          // first mapping ends where the second one starts).
          if (index + 1 < this._generatedMappings.length) {
            var nextMapping = this._generatedMappings[index + 1];

            if (mapping.generatedLine === nextMapping.generatedLine) {
              mapping.lastGeneratedColumn = nextMapping.generatedColumn - 1;
              continue;
            }
          }

          // The last mapping for each line spans the entire line.
          mapping.lastGeneratedColumn = Infinity;
        }
      };

      /**
       * Returns the original source, line, and column information for the generated
       * source's line and column positions provided. The only argument is an object
       * with the following properties:
       *
       *   - line: The line number in the generated source.  The line number
       *     is 1-based.
       *   - column: The column number in the generated source.  The column
       *     number is 0-based.
       *   - bias: Either 'SourceMapConsumer.GREATEST_LOWER_BOUND' or
       *     'SourceMapConsumer.LEAST_UPPER_BOUND'. Specifies whether to return the
       *     closest element that is smaller than or greater than the one we are
       *     searching for, respectively, if the exact element cannot be found.
       *     Defaults to 'SourceMapConsumer.GREATEST_LOWER_BOUND'.
       *
       * and an object is returned with the following properties:
       *
       *   - source: The original source file, or null.
       *   - line: The line number in the original source, or null.  The
       *     line number is 1-based.
       *   - column: The column number in the original source, or null.  The
       *     column number is 0-based.
       *   - name: The original identifier, or null.
       */
      BasicSourceMapConsumer.prototype.originalPositionFor = function SourceMapConsumer_originalPositionFor(
        aArgs
      ) {
        var needle = {
          generatedLine: util.getArg(aArgs, 'line'),
          generatedColumn: util.getArg(aArgs, 'column'),
        };

        var index = this._findMapping(
          needle,
          this._generatedMappings,
          'generatedLine',
          'generatedColumn',
          util.compareByGeneratedPositionsDeflated,
          util.getArg(aArgs, 'bias', SourceMapConsumer.GREATEST_LOWER_BOUND)
        );

        if (index >= 0) {
          var mapping = this._generatedMappings[index];

          if (mapping.generatedLine === needle.generatedLine) {
            var source = util.getArg(mapping, 'source', null);
            if (source !== null) {
              source = this._sources.at(source);
              source = util.computeSourceURL(this.sourceRoot, source, this._sourceMapURL);
            }
            var name = util.getArg(mapping, 'name', null);
            if (name !== null) {
              name = this._names.at(name);
            }
            return {
              source: source,
              line: util.getArg(mapping, 'originalLine', null),
              column: util.getArg(mapping, 'originalColumn', null),
              name: name,
            };
          }
        }

        return {
          source: null,
          line: null,
          column: null,
          name: null,
        };
      };

      /**
       * Return true if we have the source content for every source in the source
       * map, false otherwise.
       */
      BasicSourceMapConsumer.prototype.hasContentsOfAllSources = function BasicSourceMapConsumer_hasContentsOfAllSources() {
        if (!this.sourcesContent) {
          return false;
        }
        return (
          this.sourcesContent.length >= this._sources.size() &&
          !this.sourcesContent.some(function (sc) {
            return sc == null;
          })
        );
      };

      /**
       * Returns the original source content. The only argument is the url of the
       * original source file. Returns null if no original source content is
       * available.
       */
      BasicSourceMapConsumer.prototype.sourceContentFor = function SourceMapConsumer_sourceContentFor(
        aSource,
        nullOnMissing
      ) {
        if (!this.sourcesContent) {
          return null;
        }

        var index = this._findSourceIndex(aSource);
        if (index >= 0) {
          return this.sourcesContent[index];
        }

        var relativeSource = aSource;
        if (this.sourceRoot != null) {
          relativeSource = util.relative(this.sourceRoot, relativeSource);
        }

        var url;
        if (this.sourceRoot != null && (url = util.urlParse(this.sourceRoot))) {
          // XXX: file:// URIs and absolute paths lead to unexpected behavior for
          // many users. We can help them out when they expect file:// URIs to
          // behave like it would if they were running a local HTTP server. See
          // https://bugzilla.mozilla.org/show_bug.cgi?id=885597.
          var fileUriAbsPath = relativeSource.replace(/^file:\/\//, '');
          if (url.scheme == 'file' && this._sources.has(fileUriAbsPath)) {
            return this.sourcesContent[this._sources.indexOf(fileUriAbsPath)];
          }

          if ((!url.path || url.path == '/') && this._sources.has('/' + relativeSource)) {
            return this.sourcesContent[this._sources.indexOf('/' + relativeSource)];
          }
        }

        // This function is used recursively from
        // IndexedSourceMapConsumer.prototype.sourceContentFor. In that case, we
        // don't want to throw if we can't find the source - we just want to
        // return null, so we provide a flag to exit gracefully.
        if (nullOnMissing) {
          return null;
        } else {
          throw new Error('"' + relativeSource + '" is not in the SourceMap.');
        }
      };

      /**
       * Returns the generated line and column information for the original source,
       * line, and column positions provided. The only argument is an object with
       * the following properties:
       *
       *   - source: The filename of the original source.
       *   - line: The line number in the original source.  The line number
       *     is 1-based.
       *   - column: The column number in the original source.  The column
       *     number is 0-based.
       *   - bias: Either 'SourceMapConsumer.GREATEST_LOWER_BOUND' or
       *     'SourceMapConsumer.LEAST_UPPER_BOUND'. Specifies whether to return the
       *     closest element that is smaller than or greater than the one we are
       *     searching for, respectively, if the exact element cannot be found.
       *     Defaults to 'SourceMapConsumer.GREATEST_LOWER_BOUND'.
       *
       * and an object is returned with the following properties:
       *
       *   - line: The line number in the generated source, or null.  The
       *     line number is 1-based.
       *   - column: The column number in the generated source, or null.
       *     The column number is 0-based.
       */
      BasicSourceMapConsumer.prototype.generatedPositionFor = function SourceMapConsumer_generatedPositionFor(
        aArgs
      ) {
        var source = util.getArg(aArgs, 'source');
        source = this._findSourceIndex(source);
        if (source < 0) {
          return {
            line: null,
            column: null,
            lastColumn: null,
          };
        }

        var needle = {
          source: source,
          originalLine: util.getArg(aArgs, 'line'),
          originalColumn: util.getArg(aArgs, 'column'),
        };

        var index = this._findMapping(
          needle,
          this._originalMappings,
          'originalLine',
          'originalColumn',
          util.compareByOriginalPositions,
          util.getArg(aArgs, 'bias', SourceMapConsumer.GREATEST_LOWER_BOUND)
        );

        if (index >= 0) {
          var mapping = this._originalMappings[index];

          if (mapping.source === needle.source) {
            return {
              line: util.getArg(mapping, 'generatedLine', null),
              column: util.getArg(mapping, 'generatedColumn', null),
              lastColumn: util.getArg(mapping, 'lastGeneratedColumn', null),
            };
          }
        }

        return {
          line: null,
          column: null,
          lastColumn: null,
        };
      };

      exports.BasicSourceMapConsumer = BasicSourceMapConsumer;

      /**
       * An IndexedSourceMapConsumer instance represents a parsed source map which
       * we can query for information. It differs from BasicSourceMapConsumer in
       * that it takes "indexed" source maps (i.e. ones with a "sections" field) as
       * input.
       *
       * The first parameter is a raw source map (either as a JSON string, or already
       * parsed to an object). According to the spec for indexed source maps, they
       * have the following attributes:
       *
       *   - version: Which version of the source map spec this map is following.
       *   - file: Optional. The generated file this source map is associated with.
       *   - sections: A list of section definitions.
       *
       * Each value under the "sections" field has two fields:
       *   - offset: The offset into the original specified at which this section
       *       begins to apply, defined as an object with a "line" and "column"
       *       field.
       *   - map: A source map definition. This source map could also be indexed,
       *       but doesn't have to be.
       *
       * Instead of the "map" field, it's also possible to have a "url" field
       * specifying a URL to retrieve a source map from, but that's currently
       * unsupported.
       *
       * Here's an example source map, taken from the source map spec[0], but
       * modified to omit a section which uses the "url" field.
       *
       *  {
       *    version : 3,
       *    file: "app.js",
       *    sections: [{
       *      offset: {line:100, column:10},
       *      map: {
       *        version : 3,
       *        file: "section.js",
       *        sources: ["foo.js", "bar.js"],
       *        names: ["src", "maps", "are", "fun"],
       *        mappings: "AAAA,E;;ABCDE;"
       *      }
       *    }],
       *  }
       *
       * The second parameter, if given, is a string whose value is the URL
       * at which the source map was found.  This URL is used to compute the
       * sources array.
       *
       * [0]: https://docs.google.com/document/d/1U1RGAehQwRypUTovF1KRlpiOFze0b-_2gc6fAH0KY0k/edit#heading=h.535es3xeprgt
       */
      function IndexedSourceMapConsumer(aSourceMap, aSourceMapURL) {
        var sourceMap = aSourceMap;
        if (typeof aSourceMap === 'string') {
          sourceMap = util.parseSourceMapInput(aSourceMap);
        }

        var version = util.getArg(sourceMap, 'version');
        var sections = util.getArg(sourceMap, 'sections');

        if (version != this._version) {
          throw new Error('Unsupported version: ' + version);
        }

        this._sources = new ArraySet();
        this._names = new ArraySet();

        var lastOffset = {
          line: -1,
          column: 0,
        };
        this._sections = sections.map(function (s) {
          if (s.url) {
            // The url field will require support for asynchronicity.
            // See https://github.com/mozilla/source-map/issues/16
            throw new Error('Support for url field in sections not implemented.');
          }
          var offset = util.getArg(s, 'offset');
          var offsetLine = util.getArg(offset, 'line');
          var offsetColumn = util.getArg(offset, 'column');

          if (
            offsetLine < lastOffset.line ||
            (offsetLine === lastOffset.line && offsetColumn < lastOffset.column)
          ) {
            throw new Error('Section offsets must be ordered and non-overlapping.');
          }
          lastOffset = offset;

          return {
            generatedOffset: {
              // The offset fields are 0-based, but we use 1-based indices when
              // encoding/decoding from VLQ.
              generatedLine: offsetLine + 1,
              generatedColumn: offsetColumn + 1,
            },
            consumer: new SourceMapConsumer(util.getArg(s, 'map'), aSourceMapURL),
          };
        });
      }

      IndexedSourceMapConsumer.prototype = Object.create(SourceMapConsumer.prototype);
      IndexedSourceMapConsumer.prototype.constructor = SourceMapConsumer;

      /**
       * The version of the source mapping spec that we are consuming.
       */
      IndexedSourceMapConsumer.prototype._version = 3;

      /**
       * The list of original sources.
       */
      Object.defineProperty(IndexedSourceMapConsumer.prototype, 'sources', {
        get: function () {
          var sources = [];
          for (var i = 0; i < this._sections.length; i++) {
            for (var j = 0; j < this._sections[i].consumer.sources.length; j++) {
              sources.push(this._sections[i].consumer.sources[j]);
            }
          }
          return sources;
        },
      });

      /**
       * Returns the original source, line, and column information for the generated
       * source's line and column positions provided. The only argument is an object
       * with the following properties:
       *
       *   - line: The line number in the generated source.  The line number
       *     is 1-based.
       *   - column: The column number in the generated source.  The column
       *     number is 0-based.
       *
       * and an object is returned with the following properties:
       *
       *   - source: The original source file, or null.
       *   - line: The line number in the original source, or null.  The
       *     line number is 1-based.
       *   - column: The column number in the original source, or null.  The
       *     column number is 0-based.
       *   - name: The original identifier, or null.
       */
      IndexedSourceMapConsumer.prototype.originalPositionFor = function IndexedSourceMapConsumer_originalPositionFor(
        aArgs
      ) {
        var needle = {
          generatedLine: util.getArg(aArgs, 'line'),
          generatedColumn: util.getArg(aArgs, 'column'),
        };

        // Find the section containing the generated position we're trying to map
        // to an original position.
        var sectionIndex = binarySearch.search(needle, this._sections, function (needle, section) {
          var cmp = needle.generatedLine - section.generatedOffset.generatedLine;
          if (cmp) {
            return cmp;
          }

          return needle.generatedColumn - section.generatedOffset.generatedColumn;
        });
        var section = this._sections[sectionIndex];

        if (!section) {
          return {
            source: null,
            line: null,
            column: null,
            name: null,
          };
        }

        return section.consumer.originalPositionFor({
          line: needle.generatedLine - (section.generatedOffset.generatedLine - 1),
          column:
            needle.generatedColumn -
            (section.generatedOffset.generatedLine === needle.generatedLine
              ? section.generatedOffset.generatedColumn - 1
              : 0),
          bias: aArgs.bias,
        });
      };

      /**
       * Return true if we have the source content for every source in the source
       * map, false otherwise.
       */
      IndexedSourceMapConsumer.prototype.hasContentsOfAllSources = function IndexedSourceMapConsumer_hasContentsOfAllSources() {
        return this._sections.every(function (s) {
          return s.consumer.hasContentsOfAllSources();
        });
      };

      /**
       * Returns the original source content. The only argument is the url of the
       * original source file. Returns null if no original source content is
       * available.
       */
      IndexedSourceMapConsumer.prototype.sourceContentFor = function IndexedSourceMapConsumer_sourceContentFor(
        aSource,
        nullOnMissing
      ) {
        for (var i = 0; i < this._sections.length; i++) {
          var section = this._sections[i];

          var content = section.consumer.sourceContentFor(aSource, true);
          if (content) {
            return content;
          }
        }
        if (nullOnMissing) {
          return null;
        } else {
          throw new Error('"' + aSource + '" is not in the SourceMap.');
        }
      };

      /**
       * Returns the generated line and column information for the original source,
       * line, and column positions provided. The only argument is an object with
       * the following properties:
       *
       *   - source: The filename of the original source.
       *   - line: The line number in the original source.  The line number
       *     is 1-based.
       *   - column: The column number in the original source.  The column
       *     number is 0-based.
       *
       * and an object is returned with the following properties:
       *
       *   - line: The line number in the generated source, or null.  The
       *     line number is 1-based.
       *   - column: The column number in the generated source, or null.
       *     The column number is 0-based.
       */
      IndexedSourceMapConsumer.prototype.generatedPositionFor = function IndexedSourceMapConsumer_generatedPositionFor(
        aArgs
      ) {
        for (var i = 0; i < this._sections.length; i++) {
          var section = this._sections[i];

          // Only consider this section if the requested source is in the list of
          // sources of the consumer.
          if (section.consumer._findSourceIndex(util.getArg(aArgs, 'source')) === -1) {
            continue;
          }
          var generatedPosition = section.consumer.generatedPositionFor(aArgs);
          if (generatedPosition) {
            var ret = {
              line: generatedPosition.line + (section.generatedOffset.generatedLine - 1),
              column:
                generatedPosition.column +
                (section.generatedOffset.generatedLine === generatedPosition.line
                  ? section.generatedOffset.generatedColumn - 1
                  : 0),
            };
            return ret;
          }
        }

        return {
          line: null,
          column: null,
        };
      };

      /**
       * Parse the mappings in a string in to a data structure which we can easily
       * query (the ordered arrays in the `this.__generatedMappings` and
       * `this.__originalMappings` properties).
       */
      IndexedSourceMapConsumer.prototype._parseMappings = function IndexedSourceMapConsumer_parseMappings(
        aStr,
        aSourceRoot
      ) {
        this.__generatedMappings = [];
        this.__originalMappings = [];
        for (var i = 0; i < this._sections.length; i++) {
          var section = this._sections[i];
          var sectionMappings = section.consumer._generatedMappings;
          for (var j = 0; j < sectionMappings.length; j++) {
            var mapping = sectionMappings[j];

            var source = section.consumer._sources.at(mapping.source);
            source = util.computeSourceURL(section.consumer.sourceRoot, source, this._sourceMapURL);
            this._sources.add(source);
            source = this._sources.indexOf(source);

            var name = null;
            if (mapping.name) {
              name = section.consumer._names.at(mapping.name);
              this._names.add(name);
              name = this._names.indexOf(name);
            }

            // The mappings coming from the consumer for the section have
            // generated positions relative to the start of the section, so we
            // need to offset them to be relative to the start of the concatenated
            // generated file.
            var adjustedMapping = {
              source: source,
              generatedLine: mapping.generatedLine + (section.generatedOffset.generatedLine - 1),
              generatedColumn:
                mapping.generatedColumn +
                (section.generatedOffset.generatedLine === mapping.generatedLine
                  ? section.generatedOffset.generatedColumn - 1
                  : 0),
              originalLine: mapping.originalLine,
              originalColumn: mapping.originalColumn,
              name: name,
            };

            this.__generatedMappings.push(adjustedMapping);
            if (typeof adjustedMapping.originalLine === 'number') {
              this.__originalMappings.push(adjustedMapping);
            }
          }
        }

        quickSort(this.__generatedMappings, util.compareByGeneratedPositionsDeflated);
        quickSort(this.__originalMappings, util.compareByOriginalPositions);
      };

      exports.IndexedSourceMapConsumer = IndexedSourceMapConsumer;

      /***/
    },
    /* 656 */
    /***/ function (module, exports, __webpack_require__) {
      /* -*- Mode: js; js-indent-level: 2; -*- */
      /*
       * Copyright 2011 Mozilla Foundation and contributors
       * Licensed under the New BSD license. See LICENSE or:
       * http://opensource.org/licenses/BSD-3-Clause
       */

      var SourceMapGenerator = __webpack_require__(278).SourceMapGenerator;
      var util = __webpack_require__(96);

      // Matches a Windows-style `\r\n` newline or a `\n` newline used by all other
      // operating systems these days (capturing the result).
      var REGEX_NEWLINE = /(\r?\n)/;

      // Newline character code for charCodeAt() comparisons
      var NEWLINE_CODE = 10;

      // Private symbol for identifying `SourceNode`s when multiple versions of
      // the source-map library are loaded. This MUST NOT CHANGE across
      // versions!
      var isSourceNode = '$$$isSourceNode$$$';

      /**
       * SourceNodes provide a way to abstract over interpolating/concatenating
       * snippets of generated JavaScript source code while maintaining the line and
       * column information associated with the original source code.
       *
       * @param aLine The original line number.
       * @param aColumn The original column number.
       * @param aSource The original source's filename.
       * @param aChunks Optional. An array of strings which are snippets of
       *        generated JS, or other SourceNodes.
       * @param aName The original identifier.
       */
      function SourceNode(aLine, aColumn, aSource, aChunks, aName) {
        this.children = [];
        this.sourceContents = {};
        this.line = aLine == null ? null : aLine;
        this.column = aColumn == null ? null : aColumn;
        this.source = aSource == null ? null : aSource;
        this.name = aName == null ? null : aName;
        this[isSourceNode] = true;
        if (aChunks != null) this.add(aChunks);
      }

      /**
       * Creates a SourceNode from generated code and a SourceMapConsumer.
       *
       * @param aGeneratedCode The generated code
       * @param aSourceMapConsumer The SourceMap for the generated code
       * @param aRelativePath Optional. The path that relative sources in the
       *        SourceMapConsumer should be relative to.
       */
      SourceNode.fromStringWithSourceMap = function SourceNode_fromStringWithSourceMap(
        aGeneratedCode,
        aSourceMapConsumer,
        aRelativePath
      ) {
        // The SourceNode we want to fill with the generated code
        // and the SourceMap
        var node = new SourceNode();

        // All even indices of this array are one line of the generated code,
        // while all odd indices are the newlines between two adjacent lines
        // (since `REGEX_NEWLINE` captures its match).
        // Processed fragments are accessed by calling `shiftNextLine`.
        var remainingLines = aGeneratedCode.split(REGEX_NEWLINE);
        var remainingLinesIndex = 0;
        var shiftNextLine = function () {
          var lineContents = getNextLine();
          // The last line of a file might not have a newline.
          var newLine = getNextLine() || '';
          return lineContents + newLine;

          function getNextLine() {
            return remainingLinesIndex < remainingLines.length
              ? remainingLines[remainingLinesIndex++]
              : undefined;
          }
        };

        // We need to remember the position of "remainingLines"
        var lastGeneratedLine = 1,
          lastGeneratedColumn = 0;

        // The generate SourceNodes we need a code range.
        // To extract it current and last mapping is used.
        // Here we store the last mapping.
        var lastMapping = null;

        aSourceMapConsumer.eachMapping(function (mapping) {
          if (lastMapping !== null) {
            // We add the code from "lastMapping" to "mapping":
            // First check if there is a new line in between.
            if (lastGeneratedLine < mapping.generatedLine) {
              // Associate first line with "lastMapping"
              addMappingWithCode(lastMapping, shiftNextLine());
              lastGeneratedLine++;
              lastGeneratedColumn = 0;
              // The remaining code is added without mapping
            } else {
              // There is no new line in between.
              // Associate the code between "lastGeneratedColumn" and
              // "mapping.generatedColumn" with "lastMapping"
              var nextLine = remainingLines[remainingLinesIndex] || '';
              var code = nextLine.substr(0, mapping.generatedColumn - lastGeneratedColumn);
              remainingLines[remainingLinesIndex] = nextLine.substr(
                mapping.generatedColumn - lastGeneratedColumn
              );
              lastGeneratedColumn = mapping.generatedColumn;
              addMappingWithCode(lastMapping, code);
              // No more remaining code, continue
              lastMapping = mapping;
              return;
            }
          }
          // We add the generated code until the first mapping
          // to the SourceNode without any mapping.
          // Each line is added as separate string.
          while (lastGeneratedLine < mapping.generatedLine) {
            node.add(shiftNextLine());
            lastGeneratedLine++;
          }
          if (lastGeneratedColumn < mapping.generatedColumn) {
            var nextLine = remainingLines[remainingLinesIndex] || '';
            node.add(nextLine.substr(0, mapping.generatedColumn));
            remainingLines[remainingLinesIndex] = nextLine.substr(mapping.generatedColumn);
            lastGeneratedColumn = mapping.generatedColumn;
          }
          lastMapping = mapping;
        }, this);
        // We have processed all mappings.
        if (remainingLinesIndex < remainingLines.length) {
          if (lastMapping) {
            // Associate the remaining code in the current line with "lastMapping"
            addMappingWithCode(lastMapping, shiftNextLine());
          }
          // and add the remaining lines without any mapping
          node.add(remainingLines.splice(remainingLinesIndex).join(''));
        }

        // Copy sourcesContent into SourceNode
        aSourceMapConsumer.sources.forEach(function (sourceFile) {
          var content = aSourceMapConsumer.sourceContentFor(sourceFile);
          if (content != null) {
            if (aRelativePath != null) {
              sourceFile = util.join(aRelativePath, sourceFile);
            }
            node.setSourceContent(sourceFile, content);
          }
        });

        return node;

        function addMappingWithCode(mapping, code) {
          if (mapping === null || mapping.source === undefined) {
            node.add(code);
          } else {
            var source = aRelativePath ? util.join(aRelativePath, mapping.source) : mapping.source;
            node.add(
              new SourceNode(
                mapping.originalLine,
                mapping.originalColumn,
                source,
                code,
                mapping.name
              )
            );
          }
        }
      };

      /**
       * Add a chunk of generated JS to this source node.
       *
       * @param aChunk A string snippet of generated JS code, another instance of
       *        SourceNode, or an array where each member is one of those things.
       */
      SourceNode.prototype.add = function SourceNode_add(aChunk) {
        if (Array.isArray(aChunk)) {
          aChunk.forEach(function (chunk) {
            this.add(chunk);
          }, this);
        } else if (aChunk[isSourceNode] || typeof aChunk === 'string') {
          if (aChunk) {
            this.children.push(aChunk);
          }
        } else {
          throw new TypeError(
            'Expected a SourceNode, string, or an array of SourceNodes and strings. Got ' + aChunk
          );
        }
        return this;
      };

      /**
       * Add a chunk of generated JS to the beginning of this source node.
       *
       * @param aChunk A string snippet of generated JS code, another instance of
       *        SourceNode, or an array where each member is one of those things.
       */
      SourceNode.prototype.prepend = function SourceNode_prepend(aChunk) {
        if (Array.isArray(aChunk)) {
          for (var i = aChunk.length - 1; i >= 0; i--) {
            this.prepend(aChunk[i]);
          }
        } else if (aChunk[isSourceNode] || typeof aChunk === 'string') {
          this.children.unshift(aChunk);
        } else {
          throw new TypeError(
            'Expected a SourceNode, string, or an array of SourceNodes and strings. Got ' + aChunk
          );
        }
        return this;
      };

      /**
       * Walk over the tree of JS snippets in this node and its children. The
       * walking function is called once for each snippet of JS and is passed that
       * snippet and the its original associated source's line/column location.
       *
       * @param aFn The traversal function.
       */
      SourceNode.prototype.walk = function SourceNode_walk(aFn) {
        var chunk;
        for (var i = 0, len = this.children.length; i < len; i++) {
          chunk = this.children[i];
          if (chunk[isSourceNode]) {
            chunk.walk(aFn);
          } else {
            if (chunk !== '') {
              aFn(chunk, {
                source: this.source,
                line: this.line,
                column: this.column,
                name: this.name,
              });
            }
          }
        }
      };

      /**
       * Like `String.prototype.join` except for SourceNodes. Inserts `aStr` between
       * each of `this.children`.
       *
       * @param aSep The separator.
       */
      SourceNode.prototype.join = function SourceNode_join(aSep) {
        var newChildren;
        var i;
        var len = this.children.length;
        if (len > 0) {
          newChildren = [];
          for (i = 0; i < len - 1; i++) {
            newChildren.push(this.children[i]);
            newChildren.push(aSep);
          }
          newChildren.push(this.children[i]);
          this.children = newChildren;
        }
        return this;
      };

      /**
       * Call String.prototype.replace on the very right-most source snippet. Useful
       * for trimming whitespace from the end of a source node, etc.
       *
       * @param aPattern The pattern to replace.
       * @param aReplacement The thing to replace the pattern with.
       */
      SourceNode.prototype.replaceRight = function SourceNode_replaceRight(aPattern, aReplacement) {
        var lastChild = this.children[this.children.length - 1];
        if (lastChild[isSourceNode]) {
          lastChild.replaceRight(aPattern, aReplacement);
        } else if (typeof lastChild === 'string') {
          this.children[this.children.length - 1] = lastChild.replace(aPattern, aReplacement);
        } else {
          this.children.push(''.replace(aPattern, aReplacement));
        }
        return this;
      };

      /**
       * Set the source content for a source file. This will be added to the SourceMapGenerator
       * in the sourcesContent field.
       *
       * @param aSourceFile The filename of the source file
       * @param aSourceContent The content of the source file
       */
      SourceNode.prototype.setSourceContent = function SourceNode_setSourceContent(
        aSourceFile,
        aSourceContent
      ) {
        this.sourceContents[util.toSetString(aSourceFile)] = aSourceContent;
      };

      /**
       * Walk over the tree of SourceNodes. The walking function is called for each
       * source file content and is passed the filename and source content.
       *
       * @param aFn The traversal function.
       */
      SourceNode.prototype.walkSourceContents = function SourceNode_walkSourceContents(aFn) {
        for (var i = 0, len = this.children.length; i < len; i++) {
          if (this.children[i][isSourceNode]) {
            this.children[i].walkSourceContents(aFn);
          }
        }

        var sources = Object.keys(this.sourceContents);
        for (var i = 0, len = sources.length; i < len; i++) {
          aFn(util.fromSetString(sources[i]), this.sourceContents[sources[i]]);
        }
      };

      /**
       * Return the string representation of this source node. Walks over the tree
       * and concatenates all the various snippets together to one string.
       */
      SourceNode.prototype.toString = function SourceNode_toString() {
        var str = '';
        this.walk(function (chunk) {
          str += chunk;
        });
        return str;
      };

      /**
       * Returns the string representation of this source node along with a source
       * map.
       */
      SourceNode.prototype.toStringWithSourceMap = function SourceNode_toStringWithSourceMap(
        aArgs
      ) {
        var generated = {
          code: '',
          line: 1,
          column: 0,
        };
        var map = new SourceMapGenerator(aArgs);
        var sourceMappingActive = false;
        var lastOriginalSource = null;
        var lastOriginalLine = null;
        var lastOriginalColumn = null;
        var lastOriginalName = null;
        this.walk(function (chunk, original) {
          generated.code += chunk;
          if (original.source !== null && original.line !== null && original.column !== null) {
            if (
              lastOriginalSource !== original.source ||
              lastOriginalLine !== original.line ||
              lastOriginalColumn !== original.column ||
              lastOriginalName !== original.name
            ) {
              map.addMapping({
                source: original.source,
                original: {
                  line: original.line,
                  column: original.column,
                },
                generated: {
                  line: generated.line,
                  column: generated.column,
                },
                name: original.name,
              });
            }
            lastOriginalSource = original.source;
            lastOriginalLine = original.line;
            lastOriginalColumn = original.column;
            lastOriginalName = original.name;
            sourceMappingActive = true;
          } else if (sourceMappingActive) {
            map.addMapping({
              generated: {
                line: generated.line,
                column: generated.column,
              },
            });
            lastOriginalSource = null;
            sourceMappingActive = false;
          }
          for (var idx = 0, length = chunk.length; idx < length; idx++) {
            if (chunk.charCodeAt(idx) === NEWLINE_CODE) {
              generated.line++;
              generated.column = 0;
              // Mappings end at eol
              if (idx + 1 === length) {
                lastOriginalSource = null;
                sourceMappingActive = false;
              } else if (sourceMappingActive) {
                map.addMapping({
                  source: original.source,
                  original: {
                    line: original.line,
                    column: original.column,
                  },
                  generated: {
                    line: generated.line,
                    column: generated.column,
                  },
                  name: original.name,
                });
              }
            } else {
              generated.column++;
            }
          }
        });
        this.walkSourceContents(function (sourceFile, sourceContent) {
          map.setSourceContent(sourceFile, sourceContent);
        });

        return { code: generated.code, map: map };
      };

      exports.SourceNode = SourceNode;

      /***/
    },
    /* 657 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';
      /* WEBPACK VAR INJECTION */ (function (process) {
        /**
         * Copyright 2013-present, Facebook, Inc.
         * All rights reserved.
         *
         * This source code is licensed under the BSD-style license found in the
         * LICENSE file in the root directory of this source tree. An additional grant
         * of patent rights can be found in the PATENTS file in the same directory.
         */

        if (process.env.NODE_ENV !== 'production') {
          var invariant = __webpack_require__(2);
          var warning = __webpack_require__(3);
          var ReactPropTypesSecret = __webpack_require__(184);
          var loggedTypeFailures = {};
        }

        /**
         * Assert that the values match with the type specs.
         * Error messages are memorized and will only be shown once.
         *
         * @param {object} typeSpecs Map of name to a ReactPropType
         * @param {object} values Runtime values that need to be type-checked
         * @param {string} location e.g. "prop", "context", "child context"
         * @param {string} componentName Name of the component for error messages.
         * @param {?Function} getStack Returns the component stack.
         * @private
         */
        function checkPropTypes(typeSpecs, values, location, componentName, getStack) {
          if (process.env.NODE_ENV !== 'production') {
            for (var typeSpecName in typeSpecs) {
              if (typeSpecs.hasOwnProperty(typeSpecName)) {
                var error;
                // Prop type validation may throw. In case they do, we don't want to
                // fail the render phase where it didn't fail before. So we log it.
                // After these have been cleaned up, we'll let them throw.
                try {
                  // This is intentionally an invariant that gets caught. It's the same
                  // behavior as without this statement except with a better message.
                  invariant(
                    typeof typeSpecs[typeSpecName] === 'function',
                    '%s: %s type `%s` is invalid; it must be a function, usually from ' +
                      'React.PropTypes.',
                    componentName || 'React class',
                    location,
                    typeSpecName
                  );
                  error = typeSpecs[typeSpecName](
                    values,
                    typeSpecName,
                    componentName,
                    location,
                    null,
                    ReactPropTypesSecret
                  );
                } catch (ex) {
                  error = ex;
                }
                warning(
                  !error || error instanceof Error,
                  '%s: type specification of %s `%s` is invalid; the type checker ' +
                    'function must return `null` or an `Error` but returned a %s. ' +
                    'You may have forgotten to pass an argument to the type checker ' +
                    'creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and ' +
                    'shape all require an argument).',
                  componentName || 'React class',
                  location,
                  typeSpecName,
                  typeof error
                );
                if (error instanceof Error && !(error.message in loggedTypeFailures)) {
                  // Only monitor this failure once because there tends to be a lot of the
                  // same error.
                  loggedTypeFailures[error.message] = true;

                  var stack = getStack ? getStack() : '';

                  warning(
                    false,
                    'Failed %s type: %s%s',
                    location,
                    error.message,
                    stack != null ? stack : ''
                  );
                }
              }
            }
          }
        }

        module.exports = checkPropTypes;

        /* WEBPACK VAR INJECTION */
      }.call(exports, __webpack_require__(1)));

      /***/
    },
    /* 658 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';
      /**
       * Copyright 2013-present, Facebook, Inc.
       * All rights reserved.
       *
       * This source code is licensed under the BSD-style license found in the
       * LICENSE file in the root directory of this source tree. An additional grant
       * of patent rights can be found in the PATENTS file in the same directory.
       */

      var emptyFunction = __webpack_require__(28);
      var invariant = __webpack_require__(2);
      var ReactPropTypesSecret = __webpack_require__(184);

      module.exports = function () {
        function shim(props, propName, componentName, location, propFullName, secret) {
          if (secret === ReactPropTypesSecret) {
            // It is still safe when called from React.
            return;
          }
          invariant(
            false,
            'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +
              'Use PropTypes.checkPropTypes() to call them. ' +
              'Read more at http://fb.me/use-check-prop-types'
          );
        }
        shim.isRequired = shim;
        function getShim() {
          return shim;
        }
        // Important!
        // Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.
        var ReactPropTypes = {
          array: shim,
          bool: shim,
          func: shim,
          number: shim,
          object: shim,
          string: shim,
          symbol: shim,

          any: shim,
          arrayOf: getShim,
          element: shim,
          instanceOf: getShim,
          node: shim,
          objectOf: getShim,
          oneOf: getShim,
          oneOfType: getShim,
          shape: getShim,
        };

        ReactPropTypes.checkPropTypes = emptyFunction;
        ReactPropTypes.PropTypes = ReactPropTypes;

        return ReactPropTypes;
      };

      /***/
    },
    /* 659 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';
      /* WEBPACK VAR INJECTION */ (function (process) {
        /**
         * Copyright 2013-present, Facebook, Inc.
         * All rights reserved.
         *
         * This source code is licensed under the BSD-style license found in the
         * LICENSE file in the root directory of this source tree. An additional grant
         * of patent rights can be found in the PATENTS file in the same directory.
         */

        var emptyFunction = __webpack_require__(28);
        var invariant = __webpack_require__(2);
        var warning = __webpack_require__(3);

        var ReactPropTypesSecret = __webpack_require__(184);
        var checkPropTypes = __webpack_require__(657);

        module.exports = function (isValidElement, throwOnDirectAccess) {
          /* global Symbol */
          var ITERATOR_SYMBOL = typeof Symbol === 'function' && Symbol.iterator;
          var FAUX_ITERATOR_SYMBOL = '@@iterator'; // Before Symbol spec.

          /**
           * Returns the iterator method function contained on the iterable object.
           *
           * Be sure to invoke the function with the iterable as context:
           *
           *     var iteratorFn = getIteratorFn(myIterable);
           *     if (iteratorFn) {
           *       var iterator = iteratorFn.call(myIterable);
           *       ...
           *     }
           *
           * @param {?object} maybeIterable
           * @return {?function}
           */
          function getIteratorFn(maybeIterable) {
            var iteratorFn =
              maybeIterable &&
              ((ITERATOR_SYMBOL && maybeIterable[ITERATOR_SYMBOL]) ||
                maybeIterable[FAUX_ITERATOR_SYMBOL]);
            if (typeof iteratorFn === 'function') {
              return iteratorFn;
            }
          }

          /**
           * Collection of methods that allow declaration and validation of props that are
           * supplied to React components. Example usage:
           *
           *   var Props = require('ReactPropTypes');
           *   var MyArticle = React.createClass({
           *     propTypes: {
           *       // An optional string prop named "description".
           *       description: Props.string,
           *
           *       // A required enum prop named "category".
           *       category: Props.oneOf(['News','Photos']).isRequired,
           *
           *       // A prop named "dialog" that requires an instance of Dialog.
           *       dialog: Props.instanceOf(Dialog).isRequired
           *     },
           *     render: function() { ... }
           *   });
           *
           * A more formal specification of how these methods are used:
           *
           *   type := array|bool|func|object|number|string|oneOf([...])|instanceOf(...)
           *   decl := ReactPropTypes.{type}(.isRequired)?
           *
           * Each and every declaration produces a function with the same signature. This
           * allows the creation of custom validation functions. For example:
           *
           *  var MyLink = React.createClass({
           *    propTypes: {
           *      // An optional string or URI prop named "href".
           *      href: function(props, propName, componentName) {
           *        var propValue = props[propName];
           *        if (propValue != null && typeof propValue !== 'string' &&
           *            !(propValue instanceof URI)) {
           *          return new Error(
           *            'Expected a string or an URI for ' + propName + ' in ' +
           *            componentName
           *          );
           *        }
           *      }
           *    },
           *    render: function() {...}
           *  });
           *
           * @internal
           */

          var ANONYMOUS = '<<anonymous>>';

          // Important!
          // Keep this list in sync with production version in `./factoryWithThrowingShims.js`.
          var ReactPropTypes = {
            array: createPrimitiveTypeChecker('array'),
            bool: createPrimitiveTypeChecker('boolean'),
            func: createPrimitiveTypeChecker('function'),
            number: createPrimitiveTypeChecker('number'),
            object: createPrimitiveTypeChecker('object'),
            string: createPrimitiveTypeChecker('string'),
            symbol: createPrimitiveTypeChecker('symbol'),

            any: createAnyTypeChecker(),
            arrayOf: createArrayOfTypeChecker,
            element: createElementTypeChecker(),
            instanceOf: createInstanceTypeChecker,
            node: createNodeChecker(),
            objectOf: createObjectOfTypeChecker,
            oneOf: createEnumTypeChecker,
            oneOfType: createUnionTypeChecker,
            shape: createShapeTypeChecker,
          };

          /**
           * inlined Object.is polyfill to avoid requiring consumers ship their own
           * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is
           */
          /*eslint-disable no-self-compare*/
          function is(x, y) {
            // SameValue algorithm
            if (x === y) {
              // Steps 1-5, 7-10
              // Steps 6.b-6.e: +0 != -0
              return x !== 0 || 1 / x === 1 / y;
            } else {
              // Step 6.a: NaN == NaN
              return x !== x && y !== y;
            }
          }
          /*eslint-enable no-self-compare*/

          /**
           * We use an Error-like object for backward compatibility as people may call
           * PropTypes directly and inspect their output. However, we don't use real
           * Errors anymore. We don't inspect their stack anyway, and creating them
           * is prohibitively expensive if they are created too often, such as what
           * happens in oneOfType() for any type before the one that matched.
           */
          function PropTypeError(message) {
            this.message = message;
            this.stack = '';
          }
          // Make `instanceof Error` still work for returned errors.
          PropTypeError.prototype = Error.prototype;

          function createChainableTypeChecker(validate) {
            if (process.env.NODE_ENV !== 'production') {
              var manualPropTypeCallCache = {};
              var manualPropTypeWarningCount = 0;
            }
            function checkType(
              isRequired,
              props,
              propName,
              componentName,
              location,
              propFullName,
              secret
            ) {
              componentName = componentName || ANONYMOUS;
              propFullName = propFullName || propName;

              if (secret !== ReactPropTypesSecret) {
                if (throwOnDirectAccess) {
                  // New behavior only for users of `prop-types` package
                  invariant(
                    false,
                    'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +
                      'Use `PropTypes.checkPropTypes()` to call them. ' +
                      'Read more at http://fb.me/use-check-prop-types'
                  );
                } else if (
                  process.env.NODE_ENV !== 'production' &&
                  typeof console !== 'undefined'
                ) {
                  // Old behavior for people using React.PropTypes
                  var cacheKey = componentName + ':' + propName;
                  if (
                    !manualPropTypeCallCache[cacheKey] &&
                    // Avoid spamming the console because they are often not actionable except for lib authors
                    manualPropTypeWarningCount < 3
                  ) {
                    warning(
                      false,
                      'You are manually calling a React.PropTypes validation ' +
                        'function for the `%s` prop on `%s`. This is deprecated ' +
                        'and will throw in the standalone `prop-types` package. ' +
                        'You may be seeing this warning due to a third-party PropTypes ' +
                        'library. See https://fb.me/react-warning-dont-call-proptypes ' +
                        'for details.',
                      propFullName,
                      componentName
                    );
                    manualPropTypeCallCache[cacheKey] = true;
                    manualPropTypeWarningCount++;
                  }
                }
              }
              if (props[propName] == null) {
                if (isRequired) {
                  if (props[propName] === null) {
                    return new PropTypeError(
                      'The ' +
                        location +
                        ' `' +
                        propFullName +
                        '` is marked as required ' +
                        ('in `' + componentName + '`, but its value is `null`.')
                    );
                  }
                  return new PropTypeError(
                    'The ' +
                      location +
                      ' `' +
                      propFullName +
                      '` is marked as required in ' +
                      ('`' + componentName + '`, but its value is `undefined`.')
                  );
                }
                return null;
              } else {
                return validate(props, propName, componentName, location, propFullName);
              }
            }

            var chainedCheckType = checkType.bind(null, false);
            chainedCheckType.isRequired = checkType.bind(null, true);

            return chainedCheckType;
          }

          function createPrimitiveTypeChecker(expectedType) {
            function validate(props, propName, componentName, location, propFullName, secret) {
              var propValue = props[propName];
              var propType = getPropType(propValue);
              if (propType !== expectedType) {
                // `propValue` being instance of, say, date/regexp, pass the 'object'
                // check, but we can offer a more precise error message here rather than
                // 'of type `object`'.
                var preciseType = getPreciseType(propValue);

                return new PropTypeError(
                  'Invalid ' +
                    location +
                    ' `' +
                    propFullName +
                    '` of type ' +
                    ('`' + preciseType + '` supplied to `' + componentName + '`, expected ') +
                    ('`' + expectedType + '`.')
                );
              }
              return null;
            }
            return createChainableTypeChecker(validate);
          }

          function createAnyTypeChecker() {
            return createChainableTypeChecker(emptyFunction.thatReturnsNull);
          }

          function createArrayOfTypeChecker(typeChecker) {
            function validate(props, propName, componentName, location, propFullName) {
              if (typeof typeChecker !== 'function') {
                return new PropTypeError(
                  'Property `' +
                    propFullName +
                    '` of component `' +
                    componentName +
                    '` has invalid PropType notation inside arrayOf.'
                );
              }
              var propValue = props[propName];
              if (!Array.isArray(propValue)) {
                var propType = getPropType(propValue);
                return new PropTypeError(
                  'Invalid ' +
                    location +
                    ' `' +
                    propFullName +
                    '` of type ' +
                    ('`' + propType + '` supplied to `' + componentName + '`, expected an array.')
                );
              }
              for (var i = 0; i < propValue.length; i++) {
                var error = typeChecker(
                  propValue,
                  i,
                  componentName,
                  location,
                  propFullName + '[' + i + ']',
                  ReactPropTypesSecret
                );
                if (error instanceof Error) {
                  return error;
                }
              }
              return null;
            }
            return createChainableTypeChecker(validate);
          }

          function createElementTypeChecker() {
            function validate(props, propName, componentName, location, propFullName) {
              var propValue = props[propName];
              if (!isValidElement(propValue)) {
                var propType = getPropType(propValue);
                return new PropTypeError(
                  'Invalid ' +
                    location +
                    ' `' +
                    propFullName +
                    '` of type ' +
                    ('`' +
                      propType +
                      '` supplied to `' +
                      componentName +
                      '`, expected a single ReactElement.')
                );
              }
              return null;
            }
            return createChainableTypeChecker(validate);
          }

          function createInstanceTypeChecker(expectedClass) {
            function validate(props, propName, componentName, location, propFullName) {
              if (!(props[propName] instanceof expectedClass)) {
                var expectedClassName = expectedClass.name || ANONYMOUS;
                var actualClassName = getClassName(props[propName]);
                return new PropTypeError(
                  'Invalid ' +
                    location +
                    ' `' +
                    propFullName +
                    '` of type ' +
                    ('`' + actualClassName + '` supplied to `' + componentName + '`, expected ') +
                    ('instance of `' + expectedClassName + '`.')
                );
              }
              return null;
            }
            return createChainableTypeChecker(validate);
          }

          function createEnumTypeChecker(expectedValues) {
            if (!Array.isArray(expectedValues)) {
              process.env.NODE_ENV !== 'production'
                ? warning(
                    false,
                    'Invalid argument supplied to oneOf, expected an instance of array.'
                  )
                : void 0;
              return emptyFunction.thatReturnsNull;
            }

            function validate(props, propName, componentName, location, propFullName) {
              var propValue = props[propName];
              for (var i = 0; i < expectedValues.length; i++) {
                if (is(propValue, expectedValues[i])) {
                  return null;
                }
              }

              var valuesString = JSON.stringify(expectedValues);
              return new PropTypeError(
                'Invalid ' +
                  location +
                  ' `' +
                  propFullName +
                  '` of value `' +
                  propValue +
                  '` ' +
                  ('supplied to `' + componentName + '`, expected one of ' + valuesString + '.')
              );
            }
            return createChainableTypeChecker(validate);
          }

          function createObjectOfTypeChecker(typeChecker) {
            function validate(props, propName, componentName, location, propFullName) {
              if (typeof typeChecker !== 'function') {
                return new PropTypeError(
                  'Property `' +
                    propFullName +
                    '` of component `' +
                    componentName +
                    '` has invalid PropType notation inside objectOf.'
                );
              }
              var propValue = props[propName];
              var propType = getPropType(propValue);
              if (propType !== 'object') {
                return new PropTypeError(
                  'Invalid ' +
                    location +
                    ' `' +
                    propFullName +
                    '` of type ' +
                    ('`' + propType + '` supplied to `' + componentName + '`, expected an object.')
                );
              }
              for (var key in propValue) {
                if (propValue.hasOwnProperty(key)) {
                  var error = typeChecker(
                    propValue,
                    key,
                    componentName,
                    location,
                    propFullName + '.' + key,
                    ReactPropTypesSecret
                  );
                  if (error instanceof Error) {
                    return error;
                  }
                }
              }
              return null;
            }
            return createChainableTypeChecker(validate);
          }

          function createUnionTypeChecker(arrayOfTypeCheckers) {
            if (!Array.isArray(arrayOfTypeCheckers)) {
              process.env.NODE_ENV !== 'production'
                ? warning(
                    false,
                    'Invalid argument supplied to oneOfType, expected an instance of array.'
                  )
                : void 0;
              return emptyFunction.thatReturnsNull;
            }

            for (var i = 0; i < arrayOfTypeCheckers.length; i++) {
              var checker = arrayOfTypeCheckers[i];
              if (typeof checker !== 'function') {
                warning(
                  false,
                  'Invalid argument supplid to oneOfType. Expected an array of check functions, but ' +
                    'received %s at index %s.',
                  getPostfixForTypeWarning(checker),
                  i
                );
                return emptyFunction.thatReturnsNull;
              }
            }

            function validate(props, propName, componentName, location, propFullName) {
              for (var i = 0; i < arrayOfTypeCheckers.length; i++) {
                var checker = arrayOfTypeCheckers[i];
                if (
                  checker(
                    props,
                    propName,
                    componentName,
                    location,
                    propFullName,
                    ReactPropTypesSecret
                  ) == null
                ) {
                  return null;
                }
              }

              return new PropTypeError(
                'Invalid ' +
                  location +
                  ' `' +
                  propFullName +
                  '` supplied to ' +
                  ('`' + componentName + '`.')
              );
            }
            return createChainableTypeChecker(validate);
          }

          function createNodeChecker() {
            function validate(props, propName, componentName, location, propFullName) {
              if (!isNode(props[propName])) {
                return new PropTypeError(
                  'Invalid ' +
                    location +
                    ' `' +
                    propFullName +
                    '` supplied to ' +
                    ('`' + componentName + '`, expected a ReactNode.')
                );
              }
              return null;
            }
            return createChainableTypeChecker(validate);
          }

          function createShapeTypeChecker(shapeTypes) {
            function validate(props, propName, componentName, location, propFullName) {
              var propValue = props[propName];
              var propType = getPropType(propValue);
              if (propType !== 'object') {
                return new PropTypeError(
                  'Invalid ' +
                    location +
                    ' `' +
                    propFullName +
                    '` of type `' +
                    propType +
                    '` ' +
                    ('supplied to `' + componentName + '`, expected `object`.')
                );
              }
              for (var key in shapeTypes) {
                var checker = shapeTypes[key];
                if (!checker) {
                  continue;
                }
                var error = checker(
                  propValue,
                  key,
                  componentName,
                  location,
                  propFullName + '.' + key,
                  ReactPropTypesSecret
                );
                if (error) {
                  return error;
                }
              }
              return null;
            }
            return createChainableTypeChecker(validate);
          }

          function isNode(propValue) {
            switch (typeof propValue) {
              case 'number':
              case 'string':
              case 'undefined':
                return true;
              case 'boolean':
                return !propValue;
              case 'object':
                if (Array.isArray(propValue)) {
                  return propValue.every(isNode);
                }
                if (propValue === null || isValidElement(propValue)) {
                  return true;
                }

                var iteratorFn = getIteratorFn(propValue);
                if (iteratorFn) {
                  var iterator = iteratorFn.call(propValue);
                  var step;
                  if (iteratorFn !== propValue.entries) {
                    while (!(step = iterator.next()).done) {
                      if (!isNode(step.value)) {
                        return false;
                      }
                    }
                  } else {
                    // Iterator will provide entry [k,v] tuples rather than values.
                    while (!(step = iterator.next()).done) {
                      var entry = step.value;
                      if (entry) {
                        if (!isNode(entry[1])) {
                          return false;
                        }
                      }
                    }
                  }
                } else {
                  return false;
                }

                return true;
              default:
                return false;
            }
          }

          function isSymbol(propType, propValue) {
            // Native Symbol.
            if (propType === 'symbol') {
              return true;
            }

            // 19.4.3.5 Symbol.prototype[@@toStringTag] === 'Symbol'
            if (propValue['@@toStringTag'] === 'Symbol') {
              return true;
            }

            // Fallback for non-spec compliant Symbols which are polyfilled.
            if (typeof Symbol === 'function' && propValue instanceof Symbol) {
              return true;
            }

            return false;
          }

          // Equivalent of `typeof` but with special handling for array and regexp.
          function getPropType(propValue) {
            var propType = typeof propValue;
            if (Array.isArray(propValue)) {
              return 'array';
            }
            if (propValue instanceof RegExp) {
              // Old webkits (at least until Android 4.0) return 'function' rather than
              // 'object' for typeof a RegExp. We'll normalize this here so that /bla/
              // passes PropTypes.object.
              return 'object';
            }
            if (isSymbol(propType, propValue)) {
              return 'symbol';
            }
            return propType;
          }

          // This handles more types than `getPropType`. Only used for error messages.
          // See `createPrimitiveTypeChecker`.
          function getPreciseType(propValue) {
            if (typeof propValue === 'undefined' || propValue === null) {
              return '' + propValue;
            }
            var propType = getPropType(propValue);
            if (propType === 'object') {
              if (propValue instanceof Date) {
                return 'date';
              } else if (propValue instanceof RegExp) {
                return 'regexp';
              }
            }
            return propType;
          }

          // Returns a string that is postfixed to a warning about an invalid type.
          // For example, "undefined" or "of type array"
          function getPostfixForTypeWarning(value) {
            var type = getPreciseType(value);
            switch (type) {
              case 'array':
              case 'object':
                return 'an ' + type;
              case 'boolean':
              case 'date':
              case 'regexp':
                return 'a ' + type;
              default:
                return type;
            }
          }

          // Returns class name of the object, if any.
          function getClassName(propValue) {
            if (!propValue.constructor || !propValue.constructor.name) {
              return ANONYMOUS;
            }
            return propValue.constructor.name;
          }

          ReactPropTypes.checkPropTypes = checkPropTypes;
          ReactPropTypes.PropTypes = ReactPropTypes;

          return ReactPropTypes;
        };

        /* WEBPACK VAR INJECTION */
      }.call(exports, __webpack_require__(1)));

      /***/
    },
    /* 660 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';

      var strictUriEncode = __webpack_require__(786);
      var objectAssign = __webpack_require__(12);
      var decodeComponent = __webpack_require__(591);

      function encoderForArrayFormat(opts) {
        switch (opts.arrayFormat) {
          case 'index':
            return function (key, value, index) {
              return value === null
                ? [encode(key, opts), '[', index, ']'].join('')
                : [encode(key, opts), '[', encode(index, opts), ']=', encode(value, opts)].join('');
            };

          case 'bracket':
            return function (key, value) {
              return value === null
                ? encode(key, opts)
                : [encode(key, opts), '[]=', encode(value, opts)].join('');
            };

          default:
            return function (key, value) {
              return value === null
                ? encode(key, opts)
                : [encode(key, opts), '=', encode(value, opts)].join('');
            };
        }
      }

      function parserForArrayFormat(opts) {
        var result;

        switch (opts.arrayFormat) {
          case 'index':
            return function (key, value, accumulator) {
              result = /\[(\d*)\]$/.exec(key);

              key = key.replace(/\[\d*\]$/, '');

              if (!result) {
                accumulator[key] = value;
                return;
              }

              if (accumulator[key] === undefined) {
                accumulator[key] = {};
              }

              accumulator[key][result[1]] = value;
            };

          case 'bracket':
            return function (key, value, accumulator) {
              result = /(\[\])$/.exec(key);
              key = key.replace(/\[\]$/, '');

              if (!result) {
                accumulator[key] = value;
                return;
              } else if (accumulator[key] === undefined) {
                accumulator[key] = [value];
                return;
              }

              accumulator[key] = [].concat(accumulator[key], value);
            };

          default:
            return function (key, value, accumulator) {
              if (accumulator[key] === undefined) {
                accumulator[key] = value;
                return;
              }

              accumulator[key] = [].concat(accumulator[key], value);
            };
        }
      }

      function encode(value, opts) {
        if (opts.encode) {
          return opts.strict ? strictUriEncode(value) : encodeURIComponent(value);
        }

        return value;
      }

      function keysSorter(input) {
        if (Array.isArray(input)) {
          return input.sort();
        } else if (typeof input === 'object') {
          return keysSorter(Object.keys(input))
            .sort(function (a, b) {
              return Number(a) - Number(b);
            })
            .map(function (key) {
              return input[key];
            });
        }

        return input;
      }

      function extract(str) {
        var queryStart = str.indexOf('?');
        if (queryStart === -1) {
          return '';
        }
        return str.slice(queryStart + 1);
      }

      function parse(str, opts) {
        opts = objectAssign({ arrayFormat: 'none' }, opts);

        var formatter = parserForArrayFormat(opts);

        // Create an object with no prototype
        // https://github.com/sindresorhus/query-string/issues/47
        var ret = Object.create(null);

        if (typeof str !== 'string') {
          return ret;
        }

        str = str.trim().replace(/^[?#&]/, '');

        if (!str) {
          return ret;
        }

        str.split('&').forEach(function (param) {
          var parts = param.replace(/\+/g, ' ').split('=');
          // Firefox (pre 40) decodes `%3D` to `=`
          // https://github.com/sindresorhus/query-string/pull/37
          var key = parts.shift();
          var val = parts.length > 0 ? parts.join('=') : undefined;

          // missing `=` should be `null`:
          // http://w3.org/TR/2012/WD-url-20120524/#collect-url-parameters
          val = val === undefined ? null : decodeComponent(val);

          formatter(decodeComponent(key), val, ret);
        });

        return Object.keys(ret)
          .sort()
          .reduce(function (result, key) {
            var val = ret[key];
            if (Boolean(val) && typeof val === 'object' && !Array.isArray(val)) {
              // Sort object keys, not values
              result[key] = keysSorter(val);
            } else {
              result[key] = val;
            }

            return result;
          }, Object.create(null));
      }

      exports.extract = extract;
      exports.parse = parse;

      exports.stringify = function (obj, opts) {
        var defaults = {
          encode: true,
          strict: true,
          arrayFormat: 'none',
        };

        opts = objectAssign(defaults, opts);

        if (opts.sort === false) {
          opts.sort = function () {};
        }

        var formatter = encoderForArrayFormat(opts);

        return obj
          ? Object.keys(obj)
              .sort(opts.sort)
              .map(function (key) {
                var val = obj[key];

                if (val === undefined) {
                  return '';
                }

                if (val === null) {
                  return encode(key, opts);
                }

                if (Array.isArray(val)) {
                  var result = [];

                  val.slice().forEach(function (val2) {
                    if (val2 === undefined) {
                      return;
                    }

                    result.push(formatter(key, val2, result.length));
                  });

                  return result.join('&');
                }

                return encode(key, opts) + '=' + encode(val, opts);
              })
              .filter(function (x) {
                return x.length > 0;
              })
              .join('&')
          : '';
      };

      exports.parseUrl = function (str, opts) {
        return {
          url: str.split('?')[0] || '',
          query: parse(extract(str), opts),
        };
      };

      /***/
    },
    /* 661 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';
      /**
       * Copyright 2013-present, Facebook, Inc.
       * All rights reserved.
       *
       * This source code is licensed under the BSD-style license found in the
       * LICENSE file in the root directory of this source tree. An additional grant
       * of patent rights can be found in the PATENTS file in the same directory.
       *
       */

      var ARIADOMPropertyConfig = {
        Properties: {
          // Global States and Properties
          'aria-current': 0, // state
          'aria-details': 0,
          'aria-disabled': 0, // state
          'aria-hidden': 0, // state
          'aria-invalid': 0, // state
          'aria-keyshortcuts': 0,
          'aria-label': 0,
          'aria-roledescription': 0,
          // Widget Attributes
          'aria-autocomplete': 0,
          'aria-checked': 0,
          'aria-expanded': 0,
          'aria-haspopup': 0,
          'aria-level': 0,
          'aria-modal': 0,
          'aria-multiline': 0,
          'aria-multiselectable': 0,
          'aria-orientation': 0,
          'aria-placeholder': 0,
          'aria-pressed': 0,
          'aria-readonly': 0,
          'aria-required': 0,
          'aria-selected': 0,
          'aria-sort': 0,
          'aria-valuemax': 0,
          'aria-valuemin': 0,
          'aria-valuenow': 0,
          'aria-valuetext': 0,
          // Live Region Attributes
          'aria-atomic': 0,
          'aria-busy': 0,
          'aria-live': 0,
          'aria-relevant': 0,
          // Drag-and-Drop Attributes
          'aria-dropeffect': 0,
          'aria-grabbed': 0,
          // Relationship Attributes
          'aria-activedescendant': 0,
          'aria-colcount': 0,
          'aria-colindex': 0,
          'aria-colspan': 0,
          'aria-controls': 0,
          'aria-describedby': 0,
          'aria-errormessage': 0,
          'aria-flowto': 0,
          'aria-labelledby': 0,
          'aria-owns': 0,
          'aria-posinset': 0,
          'aria-rowcount': 0,
          'aria-rowindex': 0,
          'aria-rowspan': 0,
          'aria-setsize': 0,
        },
        DOMAttributeNames: {},
        DOMPropertyNames: {},
      };

      module.exports = ARIADOMPropertyConfig;

      /***/
    },
    /* 662 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';
      /**
       * Copyright 2013-present, Facebook, Inc.
       * All rights reserved.
       *
       * This source code is licensed under the BSD-style license found in the
       * LICENSE file in the root directory of this source tree. An additional grant
       * of patent rights can be found in the PATENTS file in the same directory.
       *
       */

      var ReactDOMComponentTree = __webpack_require__(15);

      var focusNode = __webpack_require__(261);

      var AutoFocusUtils = {
        focusDOMComponent: function () {
          focusNode(ReactDOMComponentTree.getNodeFromInstance(this));
        },
      };

      module.exports = AutoFocusUtils;

      /***/
    },
    /* 663 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';
      /**
       * Copyright 2013-present Facebook, Inc.
       * All rights reserved.
       *
       * This source code is licensed under the BSD-style license found in the
       * LICENSE file in the root directory of this source tree. An additional grant
       * of patent rights can be found in the PATENTS file in the same directory.
       *
       */

      var EventPropagators = __webpack_require__(98);
      var ExecutionEnvironment = __webpack_require__(18);
      var FallbackCompositionState = __webpack_require__(669);
      var SyntheticCompositionEvent = __webpack_require__(712);
      var SyntheticInputEvent = __webpack_require__(715);

      var END_KEYCODES = [9, 13, 27, 32]; // Tab, Return, Esc, Space
      var START_KEYCODE = 229;

      var canUseCompositionEvent = ExecutionEnvironment.canUseDOM && 'CompositionEvent' in window;

      var documentMode = null;
      if (ExecutionEnvironment.canUseDOM && 'documentMode' in document) {
        documentMode = document.documentMode;
      }

      // Webkit offers a very useful `textInput` event that can be used to
      // directly represent `beforeInput`. The IE `textinput` event is not as
      // useful, so we don't use it.
      var canUseTextInputEvent =
        ExecutionEnvironment.canUseDOM && 'TextEvent' in window && !documentMode && !isPresto();

      // In IE9+, we have access to composition events, but the data supplied
      // by the native compositionend event may be incorrect. Japanese ideographic
      // spaces, for instance (\u3000) are not recorded correctly.
      var useFallbackCompositionData =
        ExecutionEnvironment.canUseDOM &&
        (!canUseCompositionEvent || (documentMode && documentMode > 8 && documentMode <= 11));

      /**
       * Opera <= 12 includes TextEvent in window, but does not fire
       * text input events. Rely on keypress instead.
       */
      function isPresto() {
        var opera = window.opera;
        return (
          typeof opera === 'object' &&
          typeof opera.version === 'function' &&
          parseInt(opera.version(), 10) <= 12
        );
      }

      var SPACEBAR_CODE = 32;
      var SPACEBAR_CHAR = String.fromCharCode(SPACEBAR_CODE);

      // Events and their corresponding property names.
      var eventTypes = {
        beforeInput: {
          phasedRegistrationNames: {
            bubbled: 'onBeforeInput',
            captured: 'onBeforeInputCapture',
          },
          dependencies: ['topCompositionEnd', 'topKeyPress', 'topTextInput', 'topPaste'],
        },
        compositionEnd: {
          phasedRegistrationNames: {
            bubbled: 'onCompositionEnd',
            captured: 'onCompositionEndCapture',
          },
          dependencies: [
            'topBlur',
            'topCompositionEnd',
            'topKeyDown',
            'topKeyPress',
            'topKeyUp',
            'topMouseDown',
          ],
        },
        compositionStart: {
          phasedRegistrationNames: {
            bubbled: 'onCompositionStart',
            captured: 'onCompositionStartCapture',
          },
          dependencies: [
            'topBlur',
            'topCompositionStart',
            'topKeyDown',
            'topKeyPress',
            'topKeyUp',
            'topMouseDown',
          ],
        },
        compositionUpdate: {
          phasedRegistrationNames: {
            bubbled: 'onCompositionUpdate',
            captured: 'onCompositionUpdateCapture',
          },
          dependencies: [
            'topBlur',
            'topCompositionUpdate',
            'topKeyDown',
            'topKeyPress',
            'topKeyUp',
            'topMouseDown',
          ],
        },
      };

      // Track whether we've ever handled a keypress on the space key.
      var hasSpaceKeypress = false;

      /**
       * Return whether a native keypress event is assumed to be a command.
       * This is required because Firefox fires `keypress` events for key commands
       * (cut, copy, select-all, etc.) even though no character is inserted.
       */
      function isKeypressCommand(nativeEvent) {
        return (
          (nativeEvent.ctrlKey || nativeEvent.altKey || nativeEvent.metaKey) &&
          // ctrlKey && altKey is equivalent to AltGr, and is not a command.
          !(nativeEvent.ctrlKey && nativeEvent.altKey)
        );
      }

      /**
       * Translate native top level events into event types.
       *
       * @param {string} topLevelType
       * @return {object}
       */
      function getCompositionEventType(topLevelType) {
        switch (topLevelType) {
          case 'topCompositionStart':
            return eventTypes.compositionStart;
          case 'topCompositionEnd':
            return eventTypes.compositionEnd;
          case 'topCompositionUpdate':
            return eventTypes.compositionUpdate;
        }
      }

      /**
       * Does our fallback best-guess model think this event signifies that
       * composition has begun?
       *
       * @param {string} topLevelType
       * @param {object} nativeEvent
       * @return {boolean}
       */
      function isFallbackCompositionStart(topLevelType, nativeEvent) {
        return topLevelType === 'topKeyDown' && nativeEvent.keyCode === START_KEYCODE;
      }

      /**
       * Does our fallback mode think that this event is the end of composition?
       *
       * @param {string} topLevelType
       * @param {object} nativeEvent
       * @return {boolean}
       */
      function isFallbackCompositionEnd(topLevelType, nativeEvent) {
        switch (topLevelType) {
          case 'topKeyUp':
            // Command keys insert or clear IME input.
            return END_KEYCODES.indexOf(nativeEvent.keyCode) !== -1;
          case 'topKeyDown':
            // Expect IME keyCode on each keydown. If we get any other
            // code we must have exited earlier.
            return nativeEvent.keyCode !== START_KEYCODE;
          case 'topKeyPress':
          case 'topMouseDown':
          case 'topBlur':
            // Events are not possible without cancelling IME.
            return true;
          default:
            return false;
        }
      }

      /**
       * Google Input Tools provides composition data via a CustomEvent,
       * with the `data` property populated in the `detail` object. If this
       * is available on the event object, use it. If not, this is a plain
       * composition event and we have nothing special to extract.
       *
       * @param {object} nativeEvent
       * @return {?string}
       */
      function getDataFromCustomEvent(nativeEvent) {
        var detail = nativeEvent.detail;
        if (typeof detail === 'object' && 'data' in detail) {
          return detail.data;
        }
        return null;
      }

      // Track the current IME composition fallback object, if any.
      var currentComposition = null;

      /**
       * @return {?object} A SyntheticCompositionEvent.
       */
      function extractCompositionEvent(topLevelType, targetInst, nativeEvent, nativeEventTarget) {
        var eventType;
        var fallbackData;

        if (canUseCompositionEvent) {
          eventType = getCompositionEventType(topLevelType);
        } else if (!currentComposition) {
          if (isFallbackCompositionStart(topLevelType, nativeEvent)) {
            eventType = eventTypes.compositionStart;
          }
        } else if (isFallbackCompositionEnd(topLevelType, nativeEvent)) {
          eventType = eventTypes.compositionEnd;
        }

        if (!eventType) {
          return null;
        }

        if (useFallbackCompositionData) {
          // The current composition is stored statically and must not be
          // overwritten while composition continues.
          if (!currentComposition && eventType === eventTypes.compositionStart) {
            currentComposition = FallbackCompositionState.getPooled(nativeEventTarget);
          } else if (eventType === eventTypes.compositionEnd) {
            if (currentComposition) {
              fallbackData = currentComposition.getData();
            }
          }
        }

        var event = SyntheticCompositionEvent.getPooled(
          eventType,
          targetInst,
          nativeEvent,
          nativeEventTarget
        );

        if (fallbackData) {
          // Inject data generated from fallback path into the synthetic event.
          // This matches the property of native CompositionEventInterface.
          event.data = fallbackData;
        } else {
          var customData = getDataFromCustomEvent(nativeEvent);
          if (customData !== null) {
            event.data = customData;
          }
        }

        EventPropagators.accumulateTwoPhaseDispatches(event);
        return event;
      }

      /**
       * @param {string} topLevelType Record from `EventConstants`.
       * @param {object} nativeEvent Native browser event.
       * @return {?string} The string corresponding to this `beforeInput` event.
       */
      function getNativeBeforeInputChars(topLevelType, nativeEvent) {
        switch (topLevelType) {
          case 'topCompositionEnd':
            return getDataFromCustomEvent(nativeEvent);
          case 'topKeyPress':
            /**
             * If native `textInput` events are available, our goal is to make
             * use of them. However, there is a special case: the spacebar key.
             * In Webkit, preventing default on a spacebar `textInput` event
             * cancels character insertion, but it *also* causes the browser
             * to fall back to its default spacebar behavior of scrolling the
             * page.
             *
             * Tracking at:
             * https://code.google.com/p/chromium/issues/detail?id=355103
             *
             * To avoid this issue, use the keypress event as if no `textInput`
             * event is available.
             */
            var which = nativeEvent.which;
            if (which !== SPACEBAR_CODE) {
              return null;
            }

            hasSpaceKeypress = true;
            return SPACEBAR_CHAR;

          case 'topTextInput':
            // Record the characters to be added to the DOM.
            var chars = nativeEvent.data;

            // If it's a spacebar character, assume that we have already handled
            // it at the keypress level and bail immediately. Android Chrome
            // doesn't give us keycodes, so we need to blacklist it.
            if (chars === SPACEBAR_CHAR && hasSpaceKeypress) {
              return null;
            }

            return chars;

          default:
            // For other native event types, do nothing.
            return null;
        }
      }

      /**
       * For browsers that do not provide the `textInput` event, extract the
       * appropriate string to use for SyntheticInputEvent.
       *
       * @param {string} topLevelType Record from `EventConstants`.
       * @param {object} nativeEvent Native browser event.
       * @return {?string} The fallback string for this `beforeInput` event.
       */
      function getFallbackBeforeInputChars(topLevelType, nativeEvent) {
        // If we are currently composing (IME) and using a fallback to do so,
        // try to extract the composed characters from the fallback object.
        // If composition event is available, we extract a string only at
        // compositionevent, otherwise extract it at fallback events.
        if (currentComposition) {
          if (
            topLevelType === 'topCompositionEnd' ||
            (!canUseCompositionEvent && isFallbackCompositionEnd(topLevelType, nativeEvent))
          ) {
            var chars = currentComposition.getData();
            FallbackCompositionState.release(currentComposition);
            currentComposition = null;
            return chars;
          }
          return null;
        }

        switch (topLevelType) {
          case 'topPaste':
            // If a paste event occurs after a keypress, throw out the input
            // chars. Paste events should not lead to BeforeInput events.
            return null;
          case 'topKeyPress':
            /**
             * As of v27, Firefox may fire keypress events even when no character
             * will be inserted. A few possibilities:
             *
             * - `which` is `0`. Arrow keys, Esc key, etc.
             *
             * - `which` is the pressed key code, but no char is available.
             *   Ex: 'AltGr + d` in Polish. There is no modified character for
             *   this key combination and no character is inserted into the
             *   document, but FF fires the keypress for char code `100` anyway.
             *   No `input` event will occur.
             *
             * - `which` is the pressed key code, but a command combination is
             *   being used. Ex: `Cmd+C`. No character is inserted, and no
             *   `input` event will occur.
             */
            if (nativeEvent.which && !isKeypressCommand(nativeEvent)) {
              return String.fromCharCode(nativeEvent.which);
            }
            return null;
          case 'topCompositionEnd':
            return useFallbackCompositionData ? null : nativeEvent.data;
          default:
            return null;
        }
      }

      /**
       * Extract a SyntheticInputEvent for `beforeInput`, based on either native
       * `textInput` or fallback behavior.
       *
       * @return {?object} A SyntheticInputEvent.
       */
      function extractBeforeInputEvent(topLevelType, targetInst, nativeEvent, nativeEventTarget) {
        var chars;

        if (canUseTextInputEvent) {
          chars = getNativeBeforeInputChars(topLevelType, nativeEvent);
        } else {
          chars = getFallbackBeforeInputChars(topLevelType, nativeEvent);
        }

        // If no characters are being inserted, no BeforeInput event should
        // be fired.
        if (!chars) {
          return null;
        }

        var event = SyntheticInputEvent.getPooled(
          eventTypes.beforeInput,
          targetInst,
          nativeEvent,
          nativeEventTarget
        );

        event.data = chars;
        EventPropagators.accumulateTwoPhaseDispatches(event);
        return event;
      }

      /**
       * Create an `onBeforeInput` event to match
       * http://www.w3.org/TR/2013/WD-DOM-Level-3-Events-20131105/#events-inputevents.
       *
       * This event plugin is based on the native `textInput` event
       * available in Chrome, Safari, Opera, and IE. This event fires after
       * `onKeyPress` and `onCompositionEnd`, but before `onInput`.
       *
       * `beforeInput` is spec'd but not implemented in any browsers, and
       * the `input` event does not provide any useful information about what has
       * actually been added, contrary to the spec. Thus, `textInput` is the best
       * available event to identify the characters that have actually been inserted
       * into the target node.
       *
       * This plugin is also responsible for emitting `composition` events, thus
       * allowing us to share composition fallback code for both `beforeInput` and
       * `composition` event types.
       */
      var BeforeInputEventPlugin = {
        eventTypes: eventTypes,

        extractEvents: function (topLevelType, targetInst, nativeEvent, nativeEventTarget) {
          return [
            extractCompositionEvent(topLevelType, targetInst, nativeEvent, nativeEventTarget),
            extractBeforeInputEvent(topLevelType, targetInst, nativeEvent, nativeEventTarget),
          ];
        },
      };

      module.exports = BeforeInputEventPlugin;

      /***/
    },
    /* 664 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';
      /* WEBPACK VAR INJECTION */ (function (process) {
        /**
         * Copyright 2013-present, Facebook, Inc.
         * All rights reserved.
         *
         * This source code is licensed under the BSD-style license found in the
         * LICENSE file in the root directory of this source tree. An additional grant
         * of patent rights can be found in the PATENTS file in the same directory.
         *
         */

        var CSSProperty = __webpack_require__(281);
        var ExecutionEnvironment = __webpack_require__(18);
        var ReactInstrumentation = __webpack_require__(32);

        var camelizeStyleName = __webpack_require__(608);
        var dangerousStyleValue = __webpack_require__(722);
        var hyphenateStyleName = __webpack_require__(615);
        var memoizeStringOnly = __webpack_require__(618);
        var warning = __webpack_require__(3);

        var processStyleName = memoizeStringOnly(function (styleName) {
          return hyphenateStyleName(styleName);
        });

        var hasShorthandPropertyBug = false;
        var styleFloatAccessor = 'cssFloat';
        if (ExecutionEnvironment.canUseDOM) {
          var tempStyle = document.createElement('div').style;
          try {
            // IE8 throws "Invalid argument." if resetting shorthand style properties.
            tempStyle.font = '';
          } catch (e) {
            hasShorthandPropertyBug = true;
          }
          // IE8 only supports accessing cssFloat (standard) as styleFloat
          if (document.documentElement.style.cssFloat === undefined) {
            styleFloatAccessor = 'styleFloat';
          }
        }

        if (process.env.NODE_ENV !== 'production') {
          // 'msTransform' is correct, but the other prefixes should be capitalized
          var badVendoredStyleNamePattern = /^(?:webkit|moz|o)[A-Z]/;

          // style values shouldn't contain a semicolon
          var badStyleValueWithSemicolonPattern = /;\s*$/;

          var warnedStyleNames = {};
          var warnedStyleValues = {};
          var warnedForNaNValue = false;

          var warnHyphenatedStyleName = function (name, owner) {
            if (warnedStyleNames.hasOwnProperty(name) && warnedStyleNames[name]) {
              return;
            }

            warnedStyleNames[name] = true;
            process.env.NODE_ENV !== 'production'
              ? warning(
                  false,
                  'Unsupported style property %s. Did you mean %s?%s',
                  name,
                  camelizeStyleName(name),
                  checkRenderMessage(owner)
                )
              : void 0;
          };

          var warnBadVendoredStyleName = function (name, owner) {
            if (warnedStyleNames.hasOwnProperty(name) && warnedStyleNames[name]) {
              return;
            }

            warnedStyleNames[name] = true;
            process.env.NODE_ENV !== 'production'
              ? warning(
                  false,
                  'Unsupported vendor-prefixed style property %s. Did you mean %s?%s',
                  name,
                  name.charAt(0).toUpperCase() + name.slice(1),
                  checkRenderMessage(owner)
                )
              : void 0;
          };

          var warnStyleValueWithSemicolon = function (name, value, owner) {
            if (warnedStyleValues.hasOwnProperty(value) && warnedStyleValues[value]) {
              return;
            }

            warnedStyleValues[value] = true;
            process.env.NODE_ENV !== 'production'
              ? warning(
                  false,
                  "Style property values shouldn't contain a semicolon.%s " +
                    'Try "%s: %s" instead.',
                  checkRenderMessage(owner),
                  name,
                  value.replace(badStyleValueWithSemicolonPattern, '')
                )
              : void 0;
          };

          var warnStyleValueIsNaN = function (name, value, owner) {
            if (warnedForNaNValue) {
              return;
            }

            warnedForNaNValue = true;
            process.env.NODE_ENV !== 'production'
              ? warning(
                  false,
                  '`NaN` is an invalid value for the `%s` css style property.%s',
                  name,
                  checkRenderMessage(owner)
                )
              : void 0;
          };

          var checkRenderMessage = function (owner) {
            if (owner) {
              var name = owner.getName();
              if (name) {
                return ' Check the render method of `' + name + '`.';
              }
            }
            return '';
          };

          /**
           * @param {string} name
           * @param {*} value
           * @param {ReactDOMComponent} component
           */
          var warnValidStyle = function (name, value, component) {
            var owner;
            if (component) {
              owner = component._currentElement._owner;
            }
            if (name.indexOf('-') > -1) {
              warnHyphenatedStyleName(name, owner);
            } else if (badVendoredStyleNamePattern.test(name)) {
              warnBadVendoredStyleName(name, owner);
            } else if (badStyleValueWithSemicolonPattern.test(value)) {
              warnStyleValueWithSemicolon(name, value, owner);
            }

            if (typeof value === 'number' && isNaN(value)) {
              warnStyleValueIsNaN(name, value, owner);
            }
          };
        }

        /**
         * Operations for dealing with CSS properties.
         */
        var CSSPropertyOperations = {
          /**
           * Serializes a mapping of style properties for use as inline styles:
           *
           *   > createMarkupForStyles({width: '200px', height: 0})
           *   "width:200px;height:0;"
           *
           * Undefined values are ignored so that declarative programming is easier.
           * The result should be HTML-escaped before insertion into the DOM.
           *
           * @param {object} styles
           * @param {ReactDOMComponent} component
           * @return {?string}
           */
          createMarkupForStyles: function (styles, component) {
            var serialized = '';
            for (var styleName in styles) {
              if (!styles.hasOwnProperty(styleName)) {
                continue;
              }
              var styleValue = styles[styleName];
              if (process.env.NODE_ENV !== 'production') {
                warnValidStyle(styleName, styleValue, component);
              }
              if (styleValue != null) {
                serialized += processStyleName(styleName) + ':';
                serialized += dangerousStyleValue(styleName, styleValue, component) + ';';
              }
            }
            return serialized || null;
          },

          /**
           * Sets the value for multiple styles on a node.  If a value is specified as
           * '' (empty string), the corresponding style property will be unset.
           *
           * @param {DOMElement} node
           * @param {object} styles
           * @param {ReactDOMComponent} component
           */
          setValueForStyles: function (node, styles, component) {
            if (process.env.NODE_ENV !== 'production') {
              ReactInstrumentation.debugTool.onHostOperation({
                instanceID: component._debugID,
                type: 'update styles',
                payload: styles,
              });
            }

            var style = node.style;
            for (var styleName in styles) {
              if (!styles.hasOwnProperty(styleName)) {
                continue;
              }
              if (process.env.NODE_ENV !== 'production') {
                warnValidStyle(styleName, styles[styleName], component);
              }
              var styleValue = dangerousStyleValue(styleName, styles[styleName], component);
              if (styleName === 'float' || styleName === 'cssFloat') {
                styleName = styleFloatAccessor;
              }
              if (styleValue) {
                style[styleName] = styleValue;
              } else {
                var expansion =
                  hasShorthandPropertyBug && CSSProperty.shorthandPropertyExpansions[styleName];
                if (expansion) {
                  // Shorthand property that IE8 won't like unsetting, so unset each
                  // component to placate it
                  for (var individualStyleName in expansion) {
                    style[individualStyleName] = '';
                  }
                } else {
                  style[styleName] = '';
                }
              }
            }
          },
        };

        module.exports = CSSPropertyOperations;
        /* WEBPACK VAR INJECTION */
      }.call(exports, __webpack_require__(1)));

      /***/
    },
    /* 665 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';
      /**
       * Copyright 2013-present, Facebook, Inc.
       * All rights reserved.
       *
       * This source code is licensed under the BSD-style license found in the
       * LICENSE file in the root directory of this source tree. An additional grant
       * of patent rights can be found in the PATENTS file in the same directory.
       *
       */

      var EventPluginHub = __webpack_require__(97);
      var EventPropagators = __webpack_require__(98);
      var ExecutionEnvironment = __webpack_require__(18);
      var ReactDOMComponentTree = __webpack_require__(15);
      var ReactUpdates = __webpack_require__(41);
      var SyntheticEvent = __webpack_require__(48);

      var getEventTarget = __webpack_require__(196);
      var isEventSupported = __webpack_require__(197);
      var isTextInputElement = __webpack_require__(299);

      var eventTypes = {
        change: {
          phasedRegistrationNames: {
            bubbled: 'onChange',
            captured: 'onChangeCapture',
          },
          dependencies: [
            'topBlur',
            'topChange',
            'topClick',
            'topFocus',
            'topInput',
            'topKeyDown',
            'topKeyUp',
            'topSelectionChange',
          ],
        },
      };

      /**
       * For IE shims
       */
      var activeElement = null;
      var activeElementInst = null;
      var activeElementValue = null;
      var activeElementValueProp = null;

      /**
       * SECTION: handle `change` event
       */
      function shouldUseChangeEvent(elem) {
        var nodeName = elem.nodeName && elem.nodeName.toLowerCase();
        return nodeName === 'select' || (nodeName === 'input' && elem.type === 'file');
      }

      var doesChangeEventBubble = false;
      if (ExecutionEnvironment.canUseDOM) {
        // See `handleChange` comment below
        doesChangeEventBubble =
          isEventSupported('change') && (!document.documentMode || document.documentMode > 8);
      }

      function manualDispatchChangeEvent(nativeEvent) {
        var event = SyntheticEvent.getPooled(
          eventTypes.change,
          activeElementInst,
          nativeEvent,
          getEventTarget(nativeEvent)
        );
        EventPropagators.accumulateTwoPhaseDispatches(event);

        // If change and propertychange bubbled, we'd just bind to it like all the
        // other events and have it go through ReactBrowserEventEmitter. Since it
        // doesn't, we manually listen for the events and so we have to enqueue and
        // process the abstract event manually.
        //
        // Batching is necessary here in order to ensure that all event handlers run
        // before the next rerender (including event handlers attached to ancestor
        // elements instead of directly on the input). Without this, controlled
        // components don't work properly in conjunction with event bubbling because
        // the component is rerendered and the value reverted before all the event
        // handlers can run. See https://github.com/facebook/react/issues/708.
        ReactUpdates.batchedUpdates(runEventInBatch, event);
      }

      function runEventInBatch(event) {
        EventPluginHub.enqueueEvents(event);
        EventPluginHub.processEventQueue(false);
      }

      function startWatchingForChangeEventIE8(target, targetInst) {
        activeElement = target;
        activeElementInst = targetInst;
        activeElement.attachEvent('onchange', manualDispatchChangeEvent);
      }

      function stopWatchingForChangeEventIE8() {
        if (!activeElement) {
          return;
        }
        activeElement.detachEvent('onchange', manualDispatchChangeEvent);
        activeElement = null;
        activeElementInst = null;
      }

      function getTargetInstForChangeEvent(topLevelType, targetInst) {
        if (topLevelType === 'topChange') {
          return targetInst;
        }
      }
      function handleEventsForChangeEventIE8(topLevelType, target, targetInst) {
        if (topLevelType === 'topFocus') {
          // stopWatching() should be a noop here but we call it just in case we
          // missed a blur event somehow.
          stopWatchingForChangeEventIE8();
          startWatchingForChangeEventIE8(target, targetInst);
        } else if (topLevelType === 'topBlur') {
          stopWatchingForChangeEventIE8();
        }
      }

      /**
       * SECTION: handle `input` event
       */
      var isInputEventSupported = false;
      if (ExecutionEnvironment.canUseDOM) {
        // IE9 claims to support the input event but fails to trigger it when
        // deleting text, so we ignore its input events.
        // IE10+ fire input events to often, such when a placeholder
        // changes or when an input with a placeholder is focused.
        isInputEventSupported =
          isEventSupported('input') && (!document.documentMode || document.documentMode > 11);
      }

      /**
       * (For IE <=11) Replacement getter/setter for the `value` property that gets
       * set on the active element.
       */
      var newValueProp = {
        get: function () {
          return activeElementValueProp.get.call(this);
        },
        set: function (val) {
          // Cast to a string so we can do equality checks.
          activeElementValue = '' + val;
          activeElementValueProp.set.call(this, val);
        },
      };

      /**
       * (For IE <=11) Starts tracking propertychange events on the passed-in element
       * and override the value property so that we can distinguish user events from
       * value changes in JS.
       */
      function startWatchingForValueChange(target, targetInst) {
        activeElement = target;
        activeElementInst = targetInst;
        activeElementValue = target.value;
        activeElementValueProp = Object.getOwnPropertyDescriptor(
          target.constructor.prototype,
          'value'
        );

        // Not guarded in a canDefineProperty check: IE8 supports defineProperty only
        // on DOM elements
        Object.defineProperty(activeElement, 'value', newValueProp);
        if (activeElement.attachEvent) {
          activeElement.attachEvent('onpropertychange', handlePropertyChange);
        } else {
          activeElement.addEventListener('propertychange', handlePropertyChange, false);
        }
      }

      /**
       * (For IE <=11) Removes the event listeners from the currently-tracked element,
       * if any exists.
       */
      function stopWatchingForValueChange() {
        if (!activeElement) {
          return;
        }

        // delete restores the original property definition
        delete activeElement.value;

        if (activeElement.detachEvent) {
          activeElement.detachEvent('onpropertychange', handlePropertyChange);
        } else {
          activeElement.removeEventListener('propertychange', handlePropertyChange, false);
        }

        activeElement = null;
        activeElementInst = null;
        activeElementValue = null;
        activeElementValueProp = null;
      }

      /**
       * (For IE <=11) Handles a propertychange event, sending a `change` event if
       * the value of the active element has changed.
       */
      function handlePropertyChange(nativeEvent) {
        if (nativeEvent.propertyName !== 'value') {
          return;
        }
        var value = nativeEvent.srcElement.value;
        if (value === activeElementValue) {
          return;
        }
        activeElementValue = value;

        manualDispatchChangeEvent(nativeEvent);
      }

      /**
       * If a `change` event should be fired, returns the target's ID.
       */
      function getTargetInstForInputEvent(topLevelType, targetInst) {
        if (topLevelType === 'topInput') {
          // In modern browsers (i.e., not IE8 or IE9), the input event is exactly
          // what we want so fall through here and trigger an abstract event
          return targetInst;
        }
      }

      function handleEventsForInputEventIE(topLevelType, target, targetInst) {
        if (topLevelType === 'topFocus') {
          // In IE8, we can capture almost all .value changes by adding a
          // propertychange handler and looking for events with propertyName
          // equal to 'value'
          // In IE9-11, propertychange fires for most input events but is buggy and
          // doesn't fire when text is deleted, but conveniently, selectionchange
          // appears to fire in all of the remaining cases so we catch those and
          // forward the event if the value has changed
          // In either case, we don't want to call the event handler if the value
          // is changed from JS so we redefine a setter for `.value` that updates
          // our activeElementValue variable, allowing us to ignore those changes
          //
          // stopWatching() should be a noop here but we call it just in case we
          // missed a blur event somehow.
          stopWatchingForValueChange();
          startWatchingForValueChange(target, targetInst);
        } else if (topLevelType === 'topBlur') {
          stopWatchingForValueChange();
        }
      }

      // For IE8 and IE9.
      function getTargetInstForInputEventIE(topLevelType, targetInst) {
        if (
          topLevelType === 'topSelectionChange' ||
          topLevelType === 'topKeyUp' ||
          topLevelType === 'topKeyDown'
        ) {
          // On the selectionchange event, the target is just document which isn't
          // helpful for us so just check activeElement instead.
          //
          // 99% of the time, keydown and keyup aren't necessary. IE8 fails to fire
          // propertychange on the first input event after setting `value` from a
          // script and fires only keydown, keypress, keyup. Catching keyup usually
          // gets it and catching keydown lets us fire an event for the first
          // keystroke if user does a key repeat (it'll be a little delayed: right
          // before the second keystroke). Other input methods (e.g., paste) seem to
          // fire selectionchange normally.
          if (activeElement && activeElement.value !== activeElementValue) {
            activeElementValue = activeElement.value;
            return activeElementInst;
          }
        }
      }

      /**
       * SECTION: handle `click` event
       */
      function shouldUseClickEvent(elem) {
        // Use the `click` event to detect changes to checkbox and radio inputs.
        // This approach works across all browsers, whereas `change` does not fire
        // until `blur` in IE8.
        return (
          elem.nodeName &&
          elem.nodeName.toLowerCase() === 'input' &&
          (elem.type === 'checkbox' || elem.type === 'radio')
        );
      }

      function getTargetInstForClickEvent(topLevelType, targetInst) {
        if (topLevelType === 'topClick') {
          return targetInst;
        }
      }

      /**
       * This plugin creates an `onChange` event that normalizes change events
       * across form elements. This event fires at a time when it's possible to
       * change the element's value without seeing a flicker.
       *
       * Supported elements are:
       * - input (see `isTextInputElement`)
       * - textarea
       * - select
       */
      var ChangeEventPlugin = {
        eventTypes: eventTypes,

        extractEvents: function (topLevelType, targetInst, nativeEvent, nativeEventTarget) {
          var targetNode = targetInst
            ? ReactDOMComponentTree.getNodeFromInstance(targetInst)
            : window;

          var getTargetInstFunc, handleEventFunc;
          if (shouldUseChangeEvent(targetNode)) {
            if (doesChangeEventBubble) {
              getTargetInstFunc = getTargetInstForChangeEvent;
            } else {
              handleEventFunc = handleEventsForChangeEventIE8;
            }
          } else if (isTextInputElement(targetNode)) {
            if (isInputEventSupported) {
              getTargetInstFunc = getTargetInstForInputEvent;
            } else {
              getTargetInstFunc = getTargetInstForInputEventIE;
              handleEventFunc = handleEventsForInputEventIE;
            }
          } else if (shouldUseClickEvent(targetNode)) {
            getTargetInstFunc = getTargetInstForClickEvent;
          }

          if (getTargetInstFunc) {
            var inst = getTargetInstFunc(topLevelType, targetInst);
            if (inst) {
              var event = SyntheticEvent.getPooled(
                eventTypes.change,
                inst,
                nativeEvent,
                nativeEventTarget
              );
              event.type = 'change';
              EventPropagators.accumulateTwoPhaseDispatches(event);
              return event;
            }
          }

          if (handleEventFunc) {
            handleEventFunc(topLevelType, targetNode, targetInst);
          }
        },
      };

      module.exports = ChangeEventPlugin;

      /***/
    },
    /* 666 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';
      /* WEBPACK VAR INJECTION */ (function (process) {
        /**
         * Copyright 2013-present, Facebook, Inc.
         * All rights reserved.
         *
         * This source code is licensed under the BSD-style license found in the
         * LICENSE file in the root directory of this source tree. An additional grant
         * of patent rights can be found in the PATENTS file in the same directory.
         *
         */

        var _prodInvariant = __webpack_require__(8);

        var DOMLazyTree = __webpack_require__(83);
        var ExecutionEnvironment = __webpack_require__(18);

        var createNodesFromMarkup = __webpack_require__(611);
        var emptyFunction = __webpack_require__(28);
        var invariant = __webpack_require__(2);

        var Danger = {
          /**
           * Replaces a node with a string of markup at its current position within its
           * parent. The markup must render into a single root node.
           *
           * @param {DOMElement} oldChild Child node to replace.
           * @param {string} markup Markup to render in place of the child node.
           * @internal
           */
          dangerouslyReplaceNodeWithMarkup: function (oldChild, markup) {
            !ExecutionEnvironment.canUseDOM
              ? process.env.NODE_ENV !== 'production'
                ? invariant(
                    false,
                    'dangerouslyReplaceNodeWithMarkup(...): Cannot render markup in a worker thread. Make sure `window` and `document` are available globally before requiring React when unit testing or use ReactDOMServer.renderToString() for server rendering.'
                  )
                : _prodInvariant('56')
              : void 0;
            !markup
              ? process.env.NODE_ENV !== 'production'
                ? invariant(false, 'dangerouslyReplaceNodeWithMarkup(...): Missing markup.')
                : _prodInvariant('57')
              : void 0;
            !(oldChild.nodeName !== 'HTML')
              ? process.env.NODE_ENV !== 'production'
                ? invariant(
                    false,
                    'dangerouslyReplaceNodeWithMarkup(...): Cannot replace markup of the <html> node. This is because browser quirks make this unreliable and/or slow. If you want to render to the root you must use server rendering. See ReactDOMServer.renderToString().'
                  )
                : _prodInvariant('58')
              : void 0;

            if (typeof markup === 'string') {
              var newChild = createNodesFromMarkup(markup, emptyFunction)[0];
              oldChild.parentNode.replaceChild(newChild, oldChild);
            } else {
              DOMLazyTree.replaceChildWithTree(oldChild, markup);
            }
          },
        };

        module.exports = Danger;
        /* WEBPACK VAR INJECTION */
      }.call(exports, __webpack_require__(1)));

      /***/
    },
    /* 667 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';
      /**
       * Copyright 2013-present, Facebook, Inc.
       * All rights reserved.
       *
       * This source code is licensed under the BSD-style license found in the
       * LICENSE file in the root directory of this source tree. An additional grant
       * of patent rights can be found in the PATENTS file in the same directory.
       *
       */

      /**
       * Module that is injectable into `EventPluginHub`, that specifies a
       * deterministic ordering of `EventPlugin`s. A convenient way to reason about
       * plugins, without having to package every one of them. This is better than
       * having plugins be ordered in the same order that they are injected because
       * that ordering would be influenced by the packaging order.
       * `ResponderEventPlugin` must occur before `SimpleEventPlugin` so that
       * preventing default on events is convenient in `SimpleEventPlugin` handlers.
       */

      var DefaultEventPluginOrder = [
        'ResponderEventPlugin',
        'SimpleEventPlugin',
        'TapEventPlugin',
        'EnterLeaveEventPlugin',
        'ChangeEventPlugin',
        'SelectEventPlugin',
        'BeforeInputEventPlugin',
      ];

      module.exports = DefaultEventPluginOrder;

      /***/
    },
    /* 668 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';
      /**
       * Copyright 2013-present, Facebook, Inc.
       * All rights reserved.
       *
       * This source code is licensed under the BSD-style license found in the
       * LICENSE file in the root directory of this source tree. An additional grant
       * of patent rights can be found in the PATENTS file in the same directory.
       *
       */

      var EventPropagators = __webpack_require__(98);
      var ReactDOMComponentTree = __webpack_require__(15);
      var SyntheticMouseEvent = __webpack_require__(122);

      var eventTypes = {
        mouseEnter: {
          registrationName: 'onMouseEnter',
          dependencies: ['topMouseOut', 'topMouseOver'],
        },
        mouseLeave: {
          registrationName: 'onMouseLeave',
          dependencies: ['topMouseOut', 'topMouseOver'],
        },
      };

      var EnterLeaveEventPlugin = {
        eventTypes: eventTypes,

        /**
         * For almost every interaction we care about, there will be both a top-level
         * `mouseover` and `mouseout` event that occurs. Only use `mouseout` so that
         * we do not extract duplicate events. However, moving the mouse into the
         * browser from outside will not fire a `mouseout` event. In this case, we use
         * the `mouseover` top-level event.
         */
        extractEvents: function (topLevelType, targetInst, nativeEvent, nativeEventTarget) {
          if (
            topLevelType === 'topMouseOver' &&
            (nativeEvent.relatedTarget || nativeEvent.fromElement)
          ) {
            return null;
          }
          if (topLevelType !== 'topMouseOut' && topLevelType !== 'topMouseOver') {
            // Must not be a mouse in or mouse out - ignoring.
            return null;
          }

          var win;
          if (nativeEventTarget.window === nativeEventTarget) {
            // `nativeEventTarget` is probably a window object.
            win = nativeEventTarget;
          } else {
            // TODO: Figure out why `ownerDocument` is sometimes undefined in IE8.
            var doc = nativeEventTarget.ownerDocument;
            if (doc) {
              win = doc.defaultView || doc.parentWindow;
            } else {
              win = window;
            }
          }

          var from;
          var to;
          if (topLevelType === 'topMouseOut') {
            from = targetInst;
            var related = nativeEvent.relatedTarget || nativeEvent.toElement;
            to = related ? ReactDOMComponentTree.getClosestInstanceFromNode(related) : null;
          } else {
            // Moving to a node from outside the window.
            from = null;
            to = targetInst;
          }

          if (from === to) {
            // Nothing pertains to our managed components.
            return null;
          }

          var fromNode = from == null ? win : ReactDOMComponentTree.getNodeFromInstance(from);
          var toNode = to == null ? win : ReactDOMComponentTree.getNodeFromInstance(to);

          var leave = SyntheticMouseEvent.getPooled(
            eventTypes.mouseLeave,
            from,
            nativeEvent,
            nativeEventTarget
          );
          leave.type = 'mouseleave';
          leave.target = fromNode;
          leave.relatedTarget = toNode;

          var enter = SyntheticMouseEvent.getPooled(
            eventTypes.mouseEnter,
            to,
            nativeEvent,
            nativeEventTarget
          );
          enter.type = 'mouseenter';
          enter.target = toNode;
          enter.relatedTarget = fromNode;

          EventPropagators.accumulateEnterLeaveDispatches(leave, enter, from, to);

          return [leave, enter];
        },
      };

      module.exports = EnterLeaveEventPlugin;

      /***/
    },
    /* 669 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';
      /**
       * Copyright 2013-present, Facebook, Inc.
       * All rights reserved.
       *
       * This source code is licensed under the BSD-style license found in the
       * LICENSE file in the root directory of this source tree. An additional grant
       * of patent rights can be found in the PATENTS file in the same directory.
       *
       */

      var _assign = __webpack_require__(12);

      var PooledClass = __webpack_require__(68);

      var getTextContentAccessor = __webpack_require__(297);

      /**
       * This helper class stores information about text content of a target node,
       * allowing comparison of content before and after a given event.
       *
       * Identify the node where selection currently begins, then observe
       * both its text content and its current position in the DOM. Since the
       * browser may natively replace the target node during composition, we can
       * use its position to find its replacement.
       *
       * @param {DOMEventTarget} root
       */
      function FallbackCompositionState(root) {
        this._root = root;
        this._startText = this.getText();
        this._fallbackText = null;
      }

      _assign(FallbackCompositionState.prototype, {
        destructor: function () {
          this._root = null;
          this._startText = null;
          this._fallbackText = null;
        },

        /**
         * Get current text of input.
         *
         * @return {string}
         */
        getText: function () {
          if ('value' in this._root) {
            return this._root.value;
          }
          return this._root[getTextContentAccessor()];
        },

        /**
         * Determine the differing substring between the initially stored
         * text content and the current content.
         *
         * @return {string}
         */
        getData: function () {
          if (this._fallbackText) {
            return this._fallbackText;
          }

          var start;
          var startValue = this._startText;
          var startLength = startValue.length;
          var end;
          var endValue = this.getText();
          var endLength = endValue.length;

          for (start = 0; start < startLength; start++) {
            if (startValue[start] !== endValue[start]) {
              break;
            }
          }

          var minEnd = startLength - start;
          for (end = 1; end <= minEnd; end++) {
            if (startValue[startLength - end] !== endValue[endLength - end]) {
              break;
            }
          }

          var sliceTail = end > 1 ? 1 - end : undefined;
          this._fallbackText = endValue.slice(start, sliceTail);
          return this._fallbackText;
        },
      });

      PooledClass.addPoolingTo(FallbackCompositionState);

      module.exports = FallbackCompositionState;

      /***/
    },
    /* 670 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';
      /**
       * Copyright 2013-present, Facebook, Inc.
       * All rights reserved.
       *
       * This source code is licensed under the BSD-style license found in the
       * LICENSE file in the root directory of this source tree. An additional grant
       * of patent rights can be found in the PATENTS file in the same directory.
       *
       */

      var DOMProperty = __webpack_require__(53);

      var MUST_USE_PROPERTY = DOMProperty.injection.MUST_USE_PROPERTY;
      var HAS_BOOLEAN_VALUE = DOMProperty.injection.HAS_BOOLEAN_VALUE;
      var HAS_NUMERIC_VALUE = DOMProperty.injection.HAS_NUMERIC_VALUE;
      var HAS_POSITIVE_NUMERIC_VALUE = DOMProperty.injection.HAS_POSITIVE_NUMERIC_VALUE;
      var HAS_OVERLOADED_BOOLEAN_VALUE = DOMProperty.injection.HAS_OVERLOADED_BOOLEAN_VALUE;

      var HTMLDOMPropertyConfig = {
        isCustomAttribute: RegExp.prototype.test.bind(
          new RegExp('^(data|aria)-[' + DOMProperty.ATTRIBUTE_NAME_CHAR + ']*$')
        ),
        Properties: {
          /**
           * Standard Properties
           */
          accept: 0,
          acceptCharset: 0,
          accessKey: 0,
          action: 0,
          allowFullScreen: HAS_BOOLEAN_VALUE,
          allowTransparency: 0,
          alt: 0,
          // specifies target context for links with `preload` type
          as: 0,
          async: HAS_BOOLEAN_VALUE,
          autoComplete: 0,
          // autoFocus is polyfilled/normalized by AutoFocusUtils
          // autoFocus: HAS_BOOLEAN_VALUE,
          autoPlay: HAS_BOOLEAN_VALUE,
          capture: HAS_BOOLEAN_VALUE,
          cellPadding: 0,
          cellSpacing: 0,
          charSet: 0,
          challenge: 0,
          checked: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,
          cite: 0,
          classID: 0,
          className: 0,
          cols: HAS_POSITIVE_NUMERIC_VALUE,
          colSpan: 0,
          content: 0,
          contentEditable: 0,
          contextMenu: 0,
          controls: HAS_BOOLEAN_VALUE,
          coords: 0,
          crossOrigin: 0,
          data: 0, // For `<object />` acts as `src`.
          dateTime: 0,
          default: HAS_BOOLEAN_VALUE,
          defer: HAS_BOOLEAN_VALUE,
          dir: 0,
          disabled: HAS_BOOLEAN_VALUE,
          download: HAS_OVERLOADED_BOOLEAN_VALUE,
          draggable: 0,
          encType: 0,
          form: 0,
          formAction: 0,
          formEncType: 0,
          formMethod: 0,
          formNoValidate: HAS_BOOLEAN_VALUE,
          formTarget: 0,
          frameBorder: 0,
          headers: 0,
          height: 0,
          hidden: HAS_BOOLEAN_VALUE,
          high: 0,
          href: 0,
          hrefLang: 0,
          htmlFor: 0,
          httpEquiv: 0,
          icon: 0,
          id: 0,
          inputMode: 0,
          integrity: 0,
          is: 0,
          keyParams: 0,
          keyType: 0,
          kind: 0,
          label: 0,
          lang: 0,
          list: 0,
          loop: HAS_BOOLEAN_VALUE,
          low: 0,
          manifest: 0,
          marginHeight: 0,
          marginWidth: 0,
          max: 0,
          maxLength: 0,
          media: 0,
          mediaGroup: 0,
          method: 0,
          min: 0,
          minLength: 0,
          // Caution; `option.selected` is not updated if `select.multiple` is
          // disabled with `removeAttribute`.
          multiple: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,
          muted: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,
          name: 0,
          nonce: 0,
          noValidate: HAS_BOOLEAN_VALUE,
          open: HAS_BOOLEAN_VALUE,
          optimum: 0,
          pattern: 0,
          placeholder: 0,
          playsInline: HAS_BOOLEAN_VALUE,
          poster: 0,
          preload: 0,
          profile: 0,
          radioGroup: 0,
          readOnly: HAS_BOOLEAN_VALUE,
          referrerPolicy: 0,
          rel: 0,
          required: HAS_BOOLEAN_VALUE,
          reversed: HAS_BOOLEAN_VALUE,
          role: 0,
          rows: HAS_POSITIVE_NUMERIC_VALUE,
          rowSpan: HAS_NUMERIC_VALUE,
          sandbox: 0,
          scope: 0,
          scoped: HAS_BOOLEAN_VALUE,
          scrolling: 0,
          seamless: HAS_BOOLEAN_VALUE,
          selected: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,
          shape: 0,
          size: HAS_POSITIVE_NUMERIC_VALUE,
          sizes: 0,
          span: HAS_POSITIVE_NUMERIC_VALUE,
          spellCheck: 0,
          src: 0,
          srcDoc: 0,
          srcLang: 0,
          srcSet: 0,
          start: HAS_NUMERIC_VALUE,
          step: 0,
          style: 0,
          summary: 0,
          tabIndex: 0,
          target: 0,
          title: 0,
          // Setting .type throws on non-<input> tags
          type: 0,
          useMap: 0,
          value: 0,
          width: 0,
          wmode: 0,
          wrap: 0,

          /**
           * RDFa Properties
           */
          about: 0,
          datatype: 0,
          inlist: 0,
          prefix: 0,
          // property is also supported for OpenGraph in meta tags.
          property: 0,
          resource: 0,
          typeof: 0,
          vocab: 0,

          /**
           * Non-standard Properties
           */
          // autoCapitalize and autoCorrect are supported in Mobile Safari for
          // keyboard hints.
          autoCapitalize: 0,
          autoCorrect: 0,
          // autoSave allows WebKit/Blink to persist values of input fields on page reloads
          autoSave: 0,
          // color is for Safari mask-icon link
          color: 0,
          // itemProp, itemScope, itemType are for
          // Microdata support. See http://schema.org/docs/gs.html
          itemProp: 0,
          itemScope: HAS_BOOLEAN_VALUE,
          itemType: 0,
          // itemID and itemRef are for Microdata support as well but
          // only specified in the WHATWG spec document. See
          // https://html.spec.whatwg.org/multipage/microdata.html#microdata-dom-api
          itemID: 0,
          itemRef: 0,
          // results show looking glass icon and recent searches on input
          // search fields in WebKit/Blink
          results: 0,
          // IE-only attribute that specifies security restrictions on an iframe
          // as an alternative to the sandbox attribute on IE<10
          security: 0,
          // IE-only attribute that controls focus behavior
          unselectable: 0,
        },
        DOMAttributeNames: {
          acceptCharset: 'accept-charset',
          className: 'class',
          htmlFor: 'for',
          httpEquiv: 'http-equiv',
        },
        DOMPropertyNames: {},
      };

      module.exports = HTMLDOMPropertyConfig;

      /***/
    },
    /* 671 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';
      /* WEBPACK VAR INJECTION */ (function (process) {
        /**
         * Copyright 2014-present, Facebook, Inc.
         * All rights reserved.
         *
         * This source code is licensed under the BSD-style license found in the
         * LICENSE file in the root directory of this source tree. An additional grant
         * of patent rights can be found in the PATENTS file in the same directory.
         *
         */

        var ReactReconciler = __webpack_require__(84);

        var instantiateReactComponent = __webpack_require__(298);
        var KeyEscapeUtils = __webpack_require__(188);
        var shouldUpdateReactComponent = __webpack_require__(198);
        var traverseAllChildren = __webpack_require__(301);
        var warning = __webpack_require__(3);

        var ReactComponentTreeHook;

        if (typeof process !== 'undefined' && process.env && process.env.NODE_ENV === 'test') {
          // Temporary hack.
          // Inline requires don't work well with Jest:
          // https://github.com/facebook/react/issues/7240
          // Remove the inline requires when we don't need them anymore:
          // https://github.com/facebook/react/pull/7178
          ReactComponentTreeHook = __webpack_require__(29);
        }

        function instantiateChild(childInstances, child, name, selfDebugID) {
          // We found a component instance.
          var keyUnique = childInstances[name] === undefined;
          if (process.env.NODE_ENV !== 'production') {
            if (!ReactComponentTreeHook) {
              ReactComponentTreeHook = __webpack_require__(29);
            }
            if (!keyUnique) {
              process.env.NODE_ENV !== 'production'
                ? warning(
                    false,
                    'flattenChildren(...): Encountered two children with the same key, ' +
                      '`%s`. Child keys must be unique; when two children share a key, only ' +
                      'the first child will be used.%s',
                    KeyEscapeUtils.unescape(name),
                    ReactComponentTreeHook.getStackAddendumByID(selfDebugID)
                  )
                : void 0;
            }
          }
          if (child != null && keyUnique) {
            childInstances[name] = instantiateReactComponent(child, true);
          }
        }

        /**
         * ReactChildReconciler provides helpers for initializing or updating a set of
         * children. Its output is suitable for passing it onto ReactMultiChild which
         * does diffed reordering and insertion.
         */
        var ReactChildReconciler = {
          /**
           * Generates a "mount image" for each of the supplied children. In the case
           * of `ReactDOMComponent`, a mount image is a string of markup.
           *
           * @param {?object} nestedChildNodes Nested child maps.
           * @return {?object} A set of child instances.
           * @internal
           */
          instantiateChildren: function (
            nestedChildNodes,
            transaction,
            context,
            selfDebugID // 0 in production and for roots
          ) {
            if (nestedChildNodes == null) {
              return null;
            }
            var childInstances = {};

            if (process.env.NODE_ENV !== 'production') {
              traverseAllChildren(
                nestedChildNodes,
                function (childInsts, child, name) {
                  return instantiateChild(childInsts, child, name, selfDebugID);
                },
                childInstances
              );
            } else {
              traverseAllChildren(nestedChildNodes, instantiateChild, childInstances);
            }
            return childInstances;
          },

          /**
           * Updates the rendered children and returns a new set of children.
           *
           * @param {?object} prevChildren Previously initialized set of children.
           * @param {?object} nextChildren Flat child element maps.
           * @param {ReactReconcileTransaction} transaction
           * @param {object} context
           * @return {?object} A new set of child instances.
           * @internal
           */
          updateChildren: function (
            prevChildren,
            nextChildren,
            mountImages,
            removedNodes,
            transaction,
            hostParent,
            hostContainerInfo,
            context,
            selfDebugID // 0 in production and for roots
          ) {
            // We currently don't have a way to track moves here but if we use iterators
            // instead of for..in we can zip the iterators and check if an item has
            // moved.
            // TODO: If nothing has changed, return the prevChildren object so that we
            // can quickly bailout if nothing has changed.
            if (!nextChildren && !prevChildren) {
              return;
            }
            var name;
            var prevChild;
            for (name in nextChildren) {
              if (!nextChildren.hasOwnProperty(name)) {
                continue;
              }
              prevChild = prevChildren && prevChildren[name];
              var prevElement = prevChild && prevChild._currentElement;
              var nextElement = nextChildren[name];
              if (prevChild != null && shouldUpdateReactComponent(prevElement, nextElement)) {
                ReactReconciler.receiveComponent(prevChild, nextElement, transaction, context);
                nextChildren[name] = prevChild;
              } else {
                if (prevChild) {
                  removedNodes[name] = ReactReconciler.getHostNode(prevChild);
                  ReactReconciler.unmountComponent(prevChild, false);
                }
                // The child must be instantiated before it's mounted.
                var nextChildInstance = instantiateReactComponent(nextElement, true);
                nextChildren[name] = nextChildInstance;
                // Creating mount image now ensures refs are resolved in right order
                // (see https://github.com/facebook/react/pull/7101 for explanation).
                var nextChildMountImage = ReactReconciler.mountComponent(
                  nextChildInstance,
                  transaction,
                  hostParent,
                  hostContainerInfo,
                  context,
                  selfDebugID
                );
                mountImages.push(nextChildMountImage);
              }
            }
            // Unmount children that are no longer present.
            for (name in prevChildren) {
              if (
                prevChildren.hasOwnProperty(name) &&
                !(nextChildren && nextChildren.hasOwnProperty(name))
              ) {
                prevChild = prevChildren[name];
                removedNodes[name] = ReactReconciler.getHostNode(prevChild);
                ReactReconciler.unmountComponent(prevChild, false);
              }
            }
          },

          /**
           * Unmounts all rendered children. This should be used to clean up children
           * when this component is unmounted.
           *
           * @param {?object} renderedChildren Previously initialized set of children.
           * @internal
           */
          unmountChildren: function (renderedChildren, safely) {
            for (var name in renderedChildren) {
              if (renderedChildren.hasOwnProperty(name)) {
                var renderedChild = renderedChildren[name];
                ReactReconciler.unmountComponent(renderedChild, safely);
              }
            }
          },
        };

        module.exports = ReactChildReconciler;
        /* WEBPACK VAR INJECTION */
      }.call(exports, __webpack_require__(1)));

      /***/
    },
    /* 672 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';
      /**
       * Copyright 2013-present, Facebook, Inc.
       * All rights reserved.
       *
       * This source code is licensed under the BSD-style license found in the
       * LICENSE file in the root directory of this source tree. An additional grant
       * of patent rights can be found in the PATENTS file in the same directory.
       *
       */

      var DOMChildrenOperations = __webpack_require__(185);
      var ReactDOMIDOperations = __webpack_require__(679);

      /**
       * Abstracts away all functionality of the reconciler that requires knowledge of
       * the browser context. TODO: These callers should be refactored to avoid the
       * need for this injection.
       */
      var ReactComponentBrowserEnvironment = {
        processChildrenUpdates: ReactDOMIDOperations.dangerouslyProcessChildrenUpdates,

        replaceNodeWithMarkup: DOMChildrenOperations.dangerouslyReplaceNodeWithMarkup,
      };

      module.exports = ReactComponentBrowserEnvironment;

      /***/
    },
    /* 673 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';
      /* WEBPACK VAR INJECTION */ (function (process) {
        /**
         * Copyright 2013-present, Facebook, Inc.
         * All rights reserved.
         *
         * This source code is licensed under the BSD-style license found in the
         * LICENSE file in the root directory of this source tree. An additional grant
         * of patent rights can be found in the PATENTS file in the same directory.
         *
         */

        var _prodInvariant = __webpack_require__(8),
          _assign = __webpack_require__(12);

        var React = __webpack_require__(85);
        var ReactComponentEnvironment = __webpack_require__(190);
        var ReactCurrentOwner = __webpack_require__(42);
        var ReactErrorUtils = __webpack_require__(191);
        var ReactInstanceMap = __webpack_require__(99);
        var ReactInstrumentation = __webpack_require__(32);
        var ReactNodeTypes = __webpack_require__(291);
        var ReactReconciler = __webpack_require__(84);

        if (process.env.NODE_ENV !== 'production') {
          var checkReactTypeSpec = __webpack_require__(721);
        }

        var emptyObject = __webpack_require__(94);
        var invariant = __webpack_require__(2);
        var shallowEqual = __webpack_require__(173);
        var shouldUpdateReactComponent = __webpack_require__(198);
        var warning = __webpack_require__(3);

        var CompositeTypes = {
          ImpureClass: 0,
          PureClass: 1,
          StatelessFunctional: 2,
        };

        function StatelessComponent(Component) {}
        StatelessComponent.prototype.render = function () {
          var Component = ReactInstanceMap.get(this)._currentElement.type;
          var element = Component(this.props, this.context, this.updater);
          warnIfInvalidElement(Component, element);
          return element;
        };

        function warnIfInvalidElement(Component, element) {
          if (process.env.NODE_ENV !== 'production') {
            process.env.NODE_ENV !== 'production'
              ? warning(
                  element === null || element === false || React.isValidElement(element),
                  '%s(...): A valid React element (or null) must be returned. You may have ' +
                    'returned undefined, an array or some other invalid object.',
                  Component.displayName || Component.name || 'Component'
                )
              : void 0;
            process.env.NODE_ENV !== 'production'
              ? warning(
                  !Component.childContextTypes,
                  '%s(...): childContextTypes cannot be defined on a functional component.',
                  Component.displayName || Component.name || 'Component'
                )
              : void 0;
          }
        }

        function shouldConstruct(Component) {
          return !!(Component.prototype && Component.prototype.isReactComponent);
        }

        function isPureComponent(Component) {
          return !!(Component.prototype && Component.prototype.isPureReactComponent);
        }

        // Separated into a function to contain deoptimizations caused by try/finally.
        function measureLifeCyclePerf(fn, debugID, timerType) {
          if (debugID === 0) {
            // Top-level wrappers (see ReactMount) and empty components (see
            // ReactDOMEmptyComponent) are invisible to hooks and devtools.
            // Both are implementation details that should go away in the future.
            return fn();
          }

          ReactInstrumentation.debugTool.onBeginLifeCycleTimer(debugID, timerType);
          try {
            return fn();
          } finally {
            ReactInstrumentation.debugTool.onEndLifeCycleTimer(debugID, timerType);
          }
        }

        /**
         * ------------------ The Life-Cycle of a Composite Component ------------------
         *
         * - constructor: Initialization of state. The instance is now retained.
         *   - componentWillMount
         *   - render
         *   - [children's constructors]
         *     - [children's componentWillMount and render]
         *     - [children's componentDidMount]
         *     - componentDidMount
         *
         *       Update Phases:
         *       - componentWillReceiveProps (only called if parent updated)
         *       - shouldComponentUpdate
         *         - componentWillUpdate
         *           - render
         *           - [children's constructors or receive props phases]
         *         - componentDidUpdate
         *
         *     - componentWillUnmount
         *     - [children's componentWillUnmount]
         *   - [children destroyed]
         * - (destroyed): The instance is now blank, released by React and ready for GC.
         *
         * -----------------------------------------------------------------------------
         */

        /**
         * An incrementing ID assigned to each component when it is mounted. This is
         * used to enforce the order in which `ReactUpdates` updates dirty components.
         *
         * @private
         */
        var nextMountID = 1;

        /**
         * @lends {ReactCompositeComponent.prototype}
         */
        var ReactCompositeComponent = {
          /**
           * Base constructor for all composite component.
           *
           * @param {ReactElement} element
           * @final
           * @internal
           */
          construct: function (element) {
            this._currentElement = element;
            this._rootNodeID = 0;
            this._compositeType = null;
            this._instance = null;
            this._hostParent = null;
            this._hostContainerInfo = null;

            // See ReactUpdateQueue
            this._updateBatchNumber = null;
            this._pendingElement = null;
            this._pendingStateQueue = null;
            this._pendingReplaceState = false;
            this._pendingForceUpdate = false;

            this._renderedNodeType = null;
            this._renderedComponent = null;
            this._context = null;
            this._mountOrder = 0;
            this._topLevelWrapper = null;

            // See ReactUpdates and ReactUpdateQueue.
            this._pendingCallbacks = null;

            // ComponentWillUnmount shall only be called once
            this._calledComponentWillUnmount = false;

            if (process.env.NODE_ENV !== 'production') {
              this._warnedAboutRefsInRender = false;
            }
          },

          /**
           * Initializes the component, renders markup, and registers event listeners.
           *
           * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction
           * @param {?object} hostParent
           * @param {?object} hostContainerInfo
           * @param {?object} context
           * @return {?string} Rendered markup to be inserted into the DOM.
           * @final
           * @internal
           */
          mountComponent: function (transaction, hostParent, hostContainerInfo, context) {
            var _this = this;

            this._context = context;
            this._mountOrder = nextMountID++;
            this._hostParent = hostParent;
            this._hostContainerInfo = hostContainerInfo;

            var publicProps = this._currentElement.props;
            var publicContext = this._processContext(context);

            var Component = this._currentElement.type;

            var updateQueue = transaction.getUpdateQueue();

            // Initialize the public class
            var doConstruct = shouldConstruct(Component);
            var inst = this._constructComponent(
              doConstruct,
              publicProps,
              publicContext,
              updateQueue
            );
            var renderedElement;

            // Support functional components
            if (!doConstruct && (inst == null || inst.render == null)) {
              renderedElement = inst;
              warnIfInvalidElement(Component, renderedElement);
              !(inst === null || inst === false || React.isValidElement(inst))
                ? process.env.NODE_ENV !== 'production'
                  ? invariant(
                      false,
                      '%s(...): A valid React element (or null) must be returned. You may have returned undefined, an array or some other invalid object.',
                      Component.displayName || Component.name || 'Component'
                    )
                  : _prodInvariant('105', Component.displayName || Component.name || 'Component')
                : void 0;
              inst = new StatelessComponent(Component);
              this._compositeType = CompositeTypes.StatelessFunctional;
            } else {
              if (isPureComponent(Component)) {
                this._compositeType = CompositeTypes.PureClass;
              } else {
                this._compositeType = CompositeTypes.ImpureClass;
              }
            }

            if (process.env.NODE_ENV !== 'production') {
              // This will throw later in _renderValidatedComponent, but add an early
              // warning now to help debugging
              if (inst.render == null) {
                process.env.NODE_ENV !== 'production'
                  ? warning(
                      false,
                      '%s(...): No `render` method found on the returned component ' +
                        'instance: you may have forgotten to define `render`.',
                      Component.displayName || Component.name || 'Component'
                    )
                  : void 0;
              }

              var propsMutated = inst.props !== publicProps;
              var componentName = Component.displayName || Component.name || 'Component';

              process.env.NODE_ENV !== 'production'
                ? warning(
                    inst.props === undefined || !propsMutated,
                    '%s(...): When calling super() in `%s`, make sure to pass ' +
                      "up the same props that your component's constructor was passed.",
                    componentName,
                    componentName
                  )
                : void 0;
            }

            // These should be set up in the constructor, but as a convenience for
            // simpler class abstractions, we set them up after the fact.
            inst.props = publicProps;
            inst.context = publicContext;
            inst.refs = emptyObject;
            inst.updater = updateQueue;

            this._instance = inst;

            // Store a reference from the instance back to the internal representation
            ReactInstanceMap.set(inst, this);

            if (process.env.NODE_ENV !== 'production') {
              // Since plain JS classes are defined without any special initialization
              // logic, we can not catch common errors early. Therefore, we have to
              // catch them here, at initialization time, instead.
              process.env.NODE_ENV !== 'production'
                ? warning(
                    !inst.getInitialState ||
                      inst.getInitialState.isReactClassApproved ||
                      inst.state,
                    'getInitialState was defined on %s, a plain JavaScript class. ' +
                      'This is only supported for classes created using React.createClass. ' +
                      'Did you mean to define a state property instead?',
                    this.getName() || 'a component'
                  )
                : void 0;
              process.env.NODE_ENV !== 'production'
                ? warning(
                    !inst.getDefaultProps || inst.getDefaultProps.isReactClassApproved,
                    'getDefaultProps was defined on %s, a plain JavaScript class. ' +
                      'This is only supported for classes created using React.createClass. ' +
                      'Use a static property to define defaultProps instead.',
                    this.getName() || 'a component'
                  )
                : void 0;
              process.env.NODE_ENV !== 'production'
                ? warning(
                    !inst.propTypes,
                    'propTypes was defined as an instance property on %s. Use a static ' +
                      'property to define propTypes instead.',
                    this.getName() || 'a component'
                  )
                : void 0;
              process.env.NODE_ENV !== 'production'
                ? warning(
                    !inst.contextTypes,
                    'contextTypes was defined as an instance property on %s. Use a ' +
                      'static property to define contextTypes instead.',
                    this.getName() || 'a component'
                  )
                : void 0;
              process.env.NODE_ENV !== 'production'
                ? warning(
                    typeof inst.componentShouldUpdate !== 'function',
                    '%s has a method called ' +
                      'componentShouldUpdate(). Did you mean shouldComponentUpdate()? ' +
                      'The name is phrased as a question because the function is ' +
                      'expected to return a value.',
                    this.getName() || 'A component'
                  )
                : void 0;
              process.env.NODE_ENV !== 'production'
                ? warning(
                    typeof inst.componentDidUnmount !== 'function',
                    '%s has a method called ' +
                      'componentDidUnmount(). But there is no such lifecycle method. ' +
                      'Did you mean componentWillUnmount()?',
                    this.getName() || 'A component'
                  )
                : void 0;
              process.env.NODE_ENV !== 'production'
                ? warning(
                    typeof inst.componentWillRecieveProps !== 'function',
                    '%s has a method called ' +
                      'componentWillRecieveProps(). Did you mean componentWillReceiveProps()?',
                    this.getName() || 'A component'
                  )
                : void 0;
            }

            var initialState = inst.state;
            if (initialState === undefined) {
              inst.state = initialState = null;
            }
            !(typeof initialState === 'object' && !Array.isArray(initialState))
              ? process.env.NODE_ENV !== 'production'
                ? invariant(
                    false,
                    '%s.state: must be set to an object or null',
                    this.getName() || 'ReactCompositeComponent'
                  )
                : _prodInvariant('106', this.getName() || 'ReactCompositeComponent')
              : void 0;

            this._pendingStateQueue = null;
            this._pendingReplaceState = false;
            this._pendingForceUpdate = false;

            var markup;
            if (inst.unstable_handleError) {
              markup = this.performInitialMountWithErrorHandling(
                renderedElement,
                hostParent,
                hostContainerInfo,
                transaction,
                context
              );
            } else {
              markup = this.performInitialMount(
                renderedElement,
                hostParent,
                hostContainerInfo,
                transaction,
                context
              );
            }

            if (inst.componentDidMount) {
              if (process.env.NODE_ENV !== 'production') {
                transaction.getReactMountReady().enqueue(function () {
                  measureLifeCyclePerf(
                    function () {
                      return inst.componentDidMount();
                    },
                    _this._debugID,
                    'componentDidMount'
                  );
                });
              } else {
                transaction.getReactMountReady().enqueue(inst.componentDidMount, inst);
              }
            }

            return markup;
          },

          _constructComponent: function (doConstruct, publicProps, publicContext, updateQueue) {
            if (process.env.NODE_ENV !== 'production') {
              ReactCurrentOwner.current = this;
              try {
                return this._constructComponentWithoutOwner(
                  doConstruct,
                  publicProps,
                  publicContext,
                  updateQueue
                );
              } finally {
                ReactCurrentOwner.current = null;
              }
            } else {
              return this._constructComponentWithoutOwner(
                doConstruct,
                publicProps,
                publicContext,
                updateQueue
              );
            }
          },

          _constructComponentWithoutOwner: function (
            doConstruct,
            publicProps,
            publicContext,
            updateQueue
          ) {
            var Component = this._currentElement.type;

            if (doConstruct) {
              if (process.env.NODE_ENV !== 'production') {
                return measureLifeCyclePerf(
                  function () {
                    return new Component(publicProps, publicContext, updateQueue);
                  },
                  this._debugID,
                  'ctor'
                );
              } else {
                return new Component(publicProps, publicContext, updateQueue);
              }
            }

            // This can still be an instance in case of factory components
            // but we'll count this as time spent rendering as the more common case.
            if (process.env.NODE_ENV !== 'production') {
              return measureLifeCyclePerf(
                function () {
                  return Component(publicProps, publicContext, updateQueue);
                },
                this._debugID,
                'render'
              );
            } else {
              return Component(publicProps, publicContext, updateQueue);
            }
          },

          performInitialMountWithErrorHandling: function (
            renderedElement,
            hostParent,
            hostContainerInfo,
            transaction,
            context
          ) {
            var markup;
            var checkpoint = transaction.checkpoint();
            try {
              markup = this.performInitialMount(
                renderedElement,
                hostParent,
                hostContainerInfo,
                transaction,
                context
              );
            } catch (e) {
              // Roll back to checkpoint, handle error (which may add items to the transaction), and take a new checkpoint
              transaction.rollback(checkpoint);
              this._instance.unstable_handleError(e);
              if (this._pendingStateQueue) {
                this._instance.state = this._processPendingState(
                  this._instance.props,
                  this._instance.context
                );
              }
              checkpoint = transaction.checkpoint();

              this._renderedComponent.unmountComponent(true);
              transaction.rollback(checkpoint);

              // Try again - we've informed the component about the error, so they can render an error message this time.
              // If this throws again, the error will bubble up (and can be caught by a higher error boundary).
              markup = this.performInitialMount(
                renderedElement,
                hostParent,
                hostContainerInfo,
                transaction,
                context
              );
            }
            return markup;
          },

          performInitialMount: function (
            renderedElement,
            hostParent,
            hostContainerInfo,
            transaction,
            context
          ) {
            var inst = this._instance;

            var debugID = 0;
            if (process.env.NODE_ENV !== 'production') {
              debugID = this._debugID;
            }

            if (inst.componentWillMount) {
              if (process.env.NODE_ENV !== 'production') {
                measureLifeCyclePerf(
                  function () {
                    return inst.componentWillMount();
                  },
                  debugID,
                  'componentWillMount'
                );
              } else {
                inst.componentWillMount();
              }
              // When mounting, calls to `setState` by `componentWillMount` will set
              // `this._pendingStateQueue` without triggering a re-render.
              if (this._pendingStateQueue) {
                inst.state = this._processPendingState(inst.props, inst.context);
              }
            }

            // If not a stateless component, we now render
            if (renderedElement === undefined) {
              renderedElement = this._renderValidatedComponent();
            }

            var nodeType = ReactNodeTypes.getType(renderedElement);
            this._renderedNodeType = nodeType;
            var child = this._instantiateReactComponent(
              renderedElement,
              nodeType !== ReactNodeTypes.EMPTY /* shouldHaveDebugID */
            );
            this._renderedComponent = child;

            var markup = ReactReconciler.mountComponent(
              child,
              transaction,
              hostParent,
              hostContainerInfo,
              this._processChildContext(context),
              debugID
            );

            if (process.env.NODE_ENV !== 'production') {
              if (debugID !== 0) {
                var childDebugIDs = child._debugID !== 0 ? [child._debugID] : [];
                ReactInstrumentation.debugTool.onSetChildren(debugID, childDebugIDs);
              }
            }

            return markup;
          },

          getHostNode: function () {
            return ReactReconciler.getHostNode(this._renderedComponent);
          },

          /**
           * Releases any resources allocated by `mountComponent`.
           *
           * @final
           * @internal
           */
          unmountComponent: function (safely) {
            if (!this._renderedComponent) {
              return;
            }

            var inst = this._instance;

            if (inst.componentWillUnmount && !inst._calledComponentWillUnmount) {
              inst._calledComponentWillUnmount = true;

              if (safely) {
                var name = this.getName() + '.componentWillUnmount()';
                ReactErrorUtils.invokeGuardedCallback(name, inst.componentWillUnmount.bind(inst));
              } else {
                if (process.env.NODE_ENV !== 'production') {
                  measureLifeCyclePerf(
                    function () {
                      return inst.componentWillUnmount();
                    },
                    this._debugID,
                    'componentWillUnmount'
                  );
                } else {
                  inst.componentWillUnmount();
                }
              }
            }

            if (this._renderedComponent) {
              ReactReconciler.unmountComponent(this._renderedComponent, safely);
              this._renderedNodeType = null;
              this._renderedComponent = null;
              this._instance = null;
            }

            // Reset pending fields
            // Even if this component is scheduled for another update in ReactUpdates,
            // it would still be ignored because these fields are reset.
            this._pendingStateQueue = null;
            this._pendingReplaceState = false;
            this._pendingForceUpdate = false;
            this._pendingCallbacks = null;
            this._pendingElement = null;

            // These fields do not really need to be reset since this object is no
            // longer accessible.
            this._context = null;
            this._rootNodeID = 0;
            this._topLevelWrapper = null;

            // Delete the reference from the instance to this internal representation
            // which allow the internals to be properly cleaned up even if the user
            // leaks a reference to the public instance.
            ReactInstanceMap.remove(inst);

            // Some existing components rely on inst.props even after they've been
            // destroyed (in event handlers).
            // TODO: inst.props = null;
            // TODO: inst.state = null;
            // TODO: inst.context = null;
          },

          /**
           * Filters the context object to only contain keys specified in
           * `contextTypes`
           *
           * @param {object} context
           * @return {?object}
           * @private
           */
          _maskContext: function (context) {
            var Component = this._currentElement.type;
            var contextTypes = Component.contextTypes;
            if (!contextTypes) {
              return emptyObject;
            }
            var maskedContext = {};
            for (var contextName in contextTypes) {
              maskedContext[contextName] = context[contextName];
            }
            return maskedContext;
          },

          /**
           * Filters the context object to only contain keys specified in
           * `contextTypes`, and asserts that they are valid.
           *
           * @param {object} context
           * @return {?object}
           * @private
           */
          _processContext: function (context) {
            var maskedContext = this._maskContext(context);
            if (process.env.NODE_ENV !== 'production') {
              var Component = this._currentElement.type;
              if (Component.contextTypes) {
                this._checkContextTypes(Component.contextTypes, maskedContext, 'context');
              }
            }
            return maskedContext;
          },

          /**
           * @param {object} currentContext
           * @return {object}
           * @private
           */
          _processChildContext: function (currentContext) {
            var Component = this._currentElement.type;
            var inst = this._instance;
            var childContext;

            if (inst.getChildContext) {
              if (process.env.NODE_ENV !== 'production') {
                ReactInstrumentation.debugTool.onBeginProcessingChildContext();
                try {
                  childContext = inst.getChildContext();
                } finally {
                  ReactInstrumentation.debugTool.onEndProcessingChildContext();
                }
              } else {
                childContext = inst.getChildContext();
              }
            }

            if (childContext) {
              !(typeof Component.childContextTypes === 'object')
                ? process.env.NODE_ENV !== 'production'
                  ? invariant(
                      false,
                      '%s.getChildContext(): childContextTypes must be defined in order to use getChildContext().',
                      this.getName() || 'ReactCompositeComponent'
                    )
                  : _prodInvariant('107', this.getName() || 'ReactCompositeComponent')
                : void 0;
              if (process.env.NODE_ENV !== 'production') {
                this._checkContextTypes(Component.childContextTypes, childContext, 'childContext');
              }
              for (var name in childContext) {
                !(name in Component.childContextTypes)
                  ? process.env.NODE_ENV !== 'production'
                    ? invariant(
                        false,
                        '%s.getChildContext(): key "%s" is not defined in childContextTypes.',
                        this.getName() || 'ReactCompositeComponent',
                        name
                      )
                    : _prodInvariant('108', this.getName() || 'ReactCompositeComponent', name)
                  : void 0;
              }
              return _assign({}, currentContext, childContext);
            }
            return currentContext;
          },

          /**
           * Assert that the context types are valid
           *
           * @param {object} typeSpecs Map of context field to a ReactPropType
           * @param {object} values Runtime values that need to be type-checked
           * @param {string} location e.g. "prop", "context", "child context"
           * @private
           */
          _checkContextTypes: function (typeSpecs, values, location) {
            if (process.env.NODE_ENV !== 'production') {
              checkReactTypeSpec(typeSpecs, values, location, this.getName(), null, this._debugID);
            }
          },

          receiveComponent: function (nextElement, transaction, nextContext) {
            var prevElement = this._currentElement;
            var prevContext = this._context;

            this._pendingElement = null;

            this.updateComponent(transaction, prevElement, nextElement, prevContext, nextContext);
          },

          /**
           * If any of `_pendingElement`, `_pendingStateQueue`, or `_pendingForceUpdate`
           * is set, update the component.
           *
           * @param {ReactReconcileTransaction} transaction
           * @internal
           */
          performUpdateIfNecessary: function (transaction) {
            if (this._pendingElement != null) {
              ReactReconciler.receiveComponent(
                this,
                this._pendingElement,
                transaction,
                this._context
              );
            } else if (this._pendingStateQueue !== null || this._pendingForceUpdate) {
              this.updateComponent(
                transaction,
                this._currentElement,
                this._currentElement,
                this._context,
                this._context
              );
            } else {
              this._updateBatchNumber = null;
            }
          },

          /**
           * Perform an update to a mounted component. The componentWillReceiveProps and
           * shouldComponentUpdate methods are called, then (assuming the update isn't
           * skipped) the remaining update lifecycle methods are called and the DOM
           * representation is updated.
           *
           * By default, this implements React's rendering and reconciliation algorithm.
           * Sophisticated clients may wish to override this.
           *
           * @param {ReactReconcileTransaction} transaction
           * @param {ReactElement} prevParentElement
           * @param {ReactElement} nextParentElement
           * @internal
           * @overridable
           */
          updateComponent: function (
            transaction,
            prevParentElement,
            nextParentElement,
            prevUnmaskedContext,
            nextUnmaskedContext
          ) {
            var inst = this._instance;
            !(inst != null)
              ? process.env.NODE_ENV !== 'production'
                ? invariant(
                    false,
                    'Attempted to update component `%s` that has already been unmounted (or failed to mount).',
                    this.getName() || 'ReactCompositeComponent'
                  )
                : _prodInvariant('136', this.getName() || 'ReactCompositeComponent')
              : void 0;

            var willReceive = false;
            var nextContext;

            // Determine if the context has changed or not
            if (this._context === nextUnmaskedContext) {
              nextContext = inst.context;
            } else {
              nextContext = this._processContext(nextUnmaskedContext);
              willReceive = true;
            }

            var prevProps = prevParentElement.props;
            var nextProps = nextParentElement.props;

            // Not a simple state update but a props update
            if (prevParentElement !== nextParentElement) {
              willReceive = true;
            }

            // An update here will schedule an update but immediately set
            // _pendingStateQueue which will ensure that any state updates gets
            // immediately reconciled instead of waiting for the next batch.
            if (willReceive && inst.componentWillReceiveProps) {
              if (process.env.NODE_ENV !== 'production') {
                measureLifeCyclePerf(
                  function () {
                    return inst.componentWillReceiveProps(nextProps, nextContext);
                  },
                  this._debugID,
                  'componentWillReceiveProps'
                );
              } else {
                inst.componentWillReceiveProps(nextProps, nextContext);
              }
            }

            var nextState = this._processPendingState(nextProps, nextContext);
            var shouldUpdate = true;

            if (!this._pendingForceUpdate) {
              if (inst.shouldComponentUpdate) {
                if (process.env.NODE_ENV !== 'production') {
                  shouldUpdate = measureLifeCyclePerf(
                    function () {
                      return inst.shouldComponentUpdate(nextProps, nextState, nextContext);
                    },
                    this._debugID,
                    'shouldComponentUpdate'
                  );
                } else {
                  shouldUpdate = inst.shouldComponentUpdate(nextProps, nextState, nextContext);
                }
              } else {
                if (this._compositeType === CompositeTypes.PureClass) {
                  shouldUpdate =
                    !shallowEqual(prevProps, nextProps) || !shallowEqual(inst.state, nextState);
                }
              }
            }

            if (process.env.NODE_ENV !== 'production') {
              process.env.NODE_ENV !== 'production'
                ? warning(
                    shouldUpdate !== undefined,
                    '%s.shouldComponentUpdate(): Returned undefined instead of a ' +
                      'boolean value. Make sure to return true or false.',
                    this.getName() || 'ReactCompositeComponent'
                  )
                : void 0;
            }

            this._updateBatchNumber = null;
            if (shouldUpdate) {
              this._pendingForceUpdate = false;
              // Will set `this.props`, `this.state` and `this.context`.
              this._performComponentUpdate(
                nextParentElement,
                nextProps,
                nextState,
                nextContext,
                transaction,
                nextUnmaskedContext
              );
            } else {
              // If it's determined that a component should not update, we still want
              // to set props and state but we shortcut the rest of the update.
              this._currentElement = nextParentElement;
              this._context = nextUnmaskedContext;
              inst.props = nextProps;
              inst.state = nextState;
              inst.context = nextContext;
            }
          },

          _processPendingState: function (props, context) {
            var inst = this._instance;
            var queue = this._pendingStateQueue;
            var replace = this._pendingReplaceState;
            this._pendingReplaceState = false;
            this._pendingStateQueue = null;

            if (!queue) {
              return inst.state;
            }

            if (replace && queue.length === 1) {
              return queue[0];
            }

            var nextState = _assign({}, replace ? queue[0] : inst.state);
            for (var i = replace ? 1 : 0; i < queue.length; i++) {
              var partial = queue[i];
              _assign(
                nextState,
                typeof partial === 'function'
                  ? partial.call(inst, nextState, props, context)
                  : partial
              );
            }

            return nextState;
          },

          /**
           * Merges new props and state, notifies delegate methods of update and
           * performs update.
           *
           * @param {ReactElement} nextElement Next element
           * @param {object} nextProps Next public object to set as properties.
           * @param {?object} nextState Next object to set as state.
           * @param {?object} nextContext Next public object to set as context.
           * @param {ReactReconcileTransaction} transaction
           * @param {?object} unmaskedContext
           * @private
           */
          _performComponentUpdate: function (
            nextElement,
            nextProps,
            nextState,
            nextContext,
            transaction,
            unmaskedContext
          ) {
            var _this2 = this;

            var inst = this._instance;

            var hasComponentDidUpdate = Boolean(inst.componentDidUpdate);
            var prevProps;
            var prevState;
            var prevContext;
            if (hasComponentDidUpdate) {
              prevProps = inst.props;
              prevState = inst.state;
              prevContext = inst.context;
            }

            if (inst.componentWillUpdate) {
              if (process.env.NODE_ENV !== 'production') {
                measureLifeCyclePerf(
                  function () {
                    return inst.componentWillUpdate(nextProps, nextState, nextContext);
                  },
                  this._debugID,
                  'componentWillUpdate'
                );
              } else {
                inst.componentWillUpdate(nextProps, nextState, nextContext);
              }
            }

            this._currentElement = nextElement;
            this._context = unmaskedContext;
            inst.props = nextProps;
            inst.state = nextState;
            inst.context = nextContext;

            this._updateRenderedComponent(transaction, unmaskedContext);

            if (hasComponentDidUpdate) {
              if (process.env.NODE_ENV !== 'production') {
                transaction.getReactMountReady().enqueue(function () {
                  measureLifeCyclePerf(
                    inst.componentDidUpdate.bind(inst, prevProps, prevState, prevContext),
                    _this2._debugID,
                    'componentDidUpdate'
                  );
                });
              } else {
                transaction
                  .getReactMountReady()
                  .enqueue(
                    inst.componentDidUpdate.bind(inst, prevProps, prevState, prevContext),
                    inst
                  );
              }
            }
          },

          /**
           * Call the component's `render` method and update the DOM accordingly.
           *
           * @param {ReactReconcileTransaction} transaction
           * @internal
           */
          _updateRenderedComponent: function (transaction, context) {
            var prevComponentInstance = this._renderedComponent;
            var prevRenderedElement = prevComponentInstance._currentElement;
            var nextRenderedElement = this._renderValidatedComponent();

            var debugID = 0;
            if (process.env.NODE_ENV !== 'production') {
              debugID = this._debugID;
            }

            if (shouldUpdateReactComponent(prevRenderedElement, nextRenderedElement)) {
              ReactReconciler.receiveComponent(
                prevComponentInstance,
                nextRenderedElement,
                transaction,
                this._processChildContext(context)
              );
            } else {
              var oldHostNode = ReactReconciler.getHostNode(prevComponentInstance);
              ReactReconciler.unmountComponent(prevComponentInstance, false);

              var nodeType = ReactNodeTypes.getType(nextRenderedElement);
              this._renderedNodeType = nodeType;
              var child = this._instantiateReactComponent(
                nextRenderedElement,
                nodeType !== ReactNodeTypes.EMPTY /* shouldHaveDebugID */
              );
              this._renderedComponent = child;

              var nextMarkup = ReactReconciler.mountComponent(
                child,
                transaction,
                this._hostParent,
                this._hostContainerInfo,
                this._processChildContext(context),
                debugID
              );

              if (process.env.NODE_ENV !== 'production') {
                if (debugID !== 0) {
                  var childDebugIDs = child._debugID !== 0 ? [child._debugID] : [];
                  ReactInstrumentation.debugTool.onSetChildren(debugID, childDebugIDs);
                }
              }

              this._replaceNodeWithMarkup(oldHostNode, nextMarkup, prevComponentInstance);
            }
          },

          /**
           * Overridden in shallow rendering.
           *
           * @protected
           */
          _replaceNodeWithMarkup: function (oldHostNode, nextMarkup, prevInstance) {
            ReactComponentEnvironment.replaceNodeWithMarkup(oldHostNode, nextMarkup, prevInstance);
          },

          /**
           * @protected
           */
          _renderValidatedComponentWithoutOwnerOrContext: function () {
            var inst = this._instance;
            var renderedElement;

            if (process.env.NODE_ENV !== 'production') {
              renderedElement = measureLifeCyclePerf(
                function () {
                  return inst.render();
                },
                this._debugID,
                'render'
              );
            } else {
              renderedElement = inst.render();
            }

            if (process.env.NODE_ENV !== 'production') {
              // We allow auto-mocks to proceed as if they're returning null.
              if (renderedElement === undefined && inst.render._isMockFunction) {
                // This is probably bad practice. Consider warning here and
                // deprecating this convenience.
                renderedElement = null;
              }
            }

            return renderedElement;
          },

          /**
           * @private
           */
          _renderValidatedComponent: function () {
            var renderedElement;
            if (
              process.env.NODE_ENV !== 'production' ||
              this._compositeType !== CompositeTypes.StatelessFunctional
            ) {
              ReactCurrentOwner.current = this;
              try {
                renderedElement = this._renderValidatedComponentWithoutOwnerOrContext();
              } finally {
                ReactCurrentOwner.current = null;
              }
            } else {
              renderedElement = this._renderValidatedComponentWithoutOwnerOrContext();
            }
            !(
              // TODO: An `isValidNode` function would probably be more appropriate
              (
                renderedElement === null ||
                renderedElement === false ||
                React.isValidElement(renderedElement)
              )
            )
              ? process.env.NODE_ENV !== 'production'
                ? invariant(
                    false,
                    '%s.render(): A valid React element (or null) must be returned. You may have returned undefined, an array or some other invalid object.',
                    this.getName() || 'ReactCompositeComponent'
                  )
                : _prodInvariant('109', this.getName() || 'ReactCompositeComponent')
              : void 0;

            return renderedElement;
          },

          /**
           * Lazily allocates the refs object and stores `component` as `ref`.
           *
           * @param {string} ref Reference name.
           * @param {component} component Component to store as `ref`.
           * @final
           * @private
           */
          attachRef: function (ref, component) {
            var inst = this.getPublicInstance();
            !(inst != null)
              ? process.env.NODE_ENV !== 'production'
                ? invariant(false, 'Stateless function components cannot have refs.')
                : _prodInvariant('110')
              : void 0;
            var publicComponentInstance = component.getPublicInstance();
            if (process.env.NODE_ENV !== 'production') {
              var componentName =
                component && component.getName ? component.getName() : 'a component';
              process.env.NODE_ENV !== 'production'
                ? warning(
                    publicComponentInstance != null ||
                      component._compositeType !== CompositeTypes.StatelessFunctional,
                    'Stateless function components cannot be given refs ' +
                      '(See ref "%s" in %s created by %s). ' +
                      'Attempts to access this ref will fail.',
                    ref,
                    componentName,
                    this.getName()
                  )
                : void 0;
            }
            var refs = inst.refs === emptyObject ? (inst.refs = {}) : inst.refs;
            refs[ref] = publicComponentInstance;
          },

          /**
           * Detaches a reference name.
           *
           * @param {string} ref Name to dereference.
           * @final
           * @private
           */
          detachRef: function (ref) {
            var refs = this.getPublicInstance().refs;
            delete refs[ref];
          },

          /**
           * Get a text description of the component that can be used to identify it
           * in error messages.
           * @return {string} The name or null.
           * @internal
           */
          getName: function () {
            var type = this._currentElement.type;
            var constructor = this._instance && this._instance.constructor;
            return (
              type.displayName ||
              (constructor && constructor.displayName) ||
              type.name ||
              (constructor && constructor.name) ||
              null
            );
          },

          /**
           * Get the publicly accessible representation of this component - i.e. what
           * is exposed by refs and returned by render. Can be null for stateless
           * components.
           *
           * @return {ReactComponent} the public component instance.
           * @internal
           */
          getPublicInstance: function () {
            var inst = this._instance;
            if (this._compositeType === CompositeTypes.StatelessFunctional) {
              return null;
            }
            return inst;
          },

          // Stub
          _instantiateReactComponent: null,
        };

        module.exports = ReactCompositeComponent;
        /* WEBPACK VAR INJECTION */
      }.call(exports, __webpack_require__(1)));

      /***/
    },
    /* 674 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';
      /* WEBPACK VAR INJECTION */ (function (process) {
        /**
         * Copyright 2013-present, Facebook, Inc.
         * All rights reserved.
         *
         * This source code is licensed under the BSD-style license found in the
         * LICENSE file in the root directory of this source tree. An additional grant
         * of patent rights can be found in the PATENTS file in the same directory.
         *
         */

        /* globals __REACT_DEVTOOLS_GLOBAL_HOOK__*/

        var ReactDOMComponentTree = __webpack_require__(15);
        var ReactDefaultInjection = __webpack_require__(691);
        var ReactMount = __webpack_require__(290);
        var ReactReconciler = __webpack_require__(84);
        var ReactUpdates = __webpack_require__(41);
        var ReactVersion = __webpack_require__(706);

        var findDOMNode = __webpack_require__(723);
        var getHostComponentFromComposite = __webpack_require__(296);
        var renderSubtreeIntoContainer = __webpack_require__(731);
        var warning = __webpack_require__(3);

        ReactDefaultInjection.inject();

        var ReactDOM = {
          findDOMNode: findDOMNode,
          render: ReactMount.render,
          unmountComponentAtNode: ReactMount.unmountComponentAtNode,
          version: ReactVersion,

          /* eslint-disable camelcase */
          unstable_batchedUpdates: ReactUpdates.batchedUpdates,
          unstable_renderSubtreeIntoContainer: renderSubtreeIntoContainer,
        };

        // Inject the runtime into a devtools global hook regardless of browser.
        // Allows for debugging when the hook is injected on the page.
        if (
          typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ !== 'undefined' &&
          typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.inject === 'function'
        ) {
          __REACT_DEVTOOLS_GLOBAL_HOOK__.inject({
            ComponentTree: {
              getClosestInstanceFromNode: ReactDOMComponentTree.getClosestInstanceFromNode,
              getNodeFromInstance: function (inst) {
                // inst is an internal instance (but could be a composite)
                if (inst._renderedComponent) {
                  inst = getHostComponentFromComposite(inst);
                }
                if (inst) {
                  return ReactDOMComponentTree.getNodeFromInstance(inst);
                } else {
                  return null;
                }
              },
            },
            Mount: ReactMount,
            Reconciler: ReactReconciler,
          });
        }

        if (process.env.NODE_ENV !== 'production') {
          var ExecutionEnvironment = __webpack_require__(18);
          if (ExecutionEnvironment.canUseDOM && window.top === window.self) {
            // First check if devtools is not installed
            if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ === 'undefined') {
              // If we're in Chrome or Firefox, provide a download link if not installed.
              if (
                (navigator.userAgent.indexOf('Chrome') > -1 &&
                  navigator.userAgent.indexOf('Edge') === -1) ||
                navigator.userAgent.indexOf('Firefox') > -1
              ) {
                // Firefox does not have the issue with devtools loaded over file://
                var showFileUrlMessage =
                  window.location.protocol.indexOf('http') === -1 &&
                  navigator.userAgent.indexOf('Firefox') === -1;
                console.debug(
                  'Download the React DevTools ' +
                    (showFileUrlMessage ? 'and use an HTTP server (instead of a file: URL) ' : '') +
                    'for a better development experience: ' +
                    'https://fb.me/react-devtools'
                );
              }
            }

            var testFunc = function testFn() {};
            process.env.NODE_ENV !== 'production'
              ? warning(
                  (testFunc.name || testFunc.toString()).indexOf('testFn') !== -1,
                  "It looks like you're using a minified copy of the development build " +
                    'of React. When deploying React apps to production, make sure to use ' +
                    'the production build which skips development warnings and is faster. ' +
                    'See https://fb.me/react-minification for more details.'
                )
              : void 0;

            // If we're in IE8, check to see if we are in compatibility mode and provide
            // information on preventing compatibility mode
            var ieCompatibilityMode = document.documentMode && document.documentMode < 8;

            process.env.NODE_ENV !== 'production'
              ? warning(
                  !ieCompatibilityMode,
                  'Internet Explorer is running in compatibility mode; please add the ' +
                    'following tag to your HTML to prevent this from happening: ' +
                    '<meta http-equiv="X-UA-Compatible" content="IE=edge" />'
                )
              : void 0;

            var expectedFeatures = [
              // shims
              Array.isArray,
              Array.prototype.every,
              Array.prototype.forEach,
              Array.prototype.indexOf,
              Array.prototype.map,
              Date.now,
              Function.prototype.bind,
              Object.keys,
              String.prototype.trim,
            ];

            for (var i = 0; i < expectedFeatures.length; i++) {
              if (!expectedFeatures[i]) {
                process.env.NODE_ENV !== 'production'
                  ? warning(
                      false,
                      'One or more ES5 shims expected by React are not available: ' +
                        'https://fb.me/react-warning-polyfills'
                    )
                  : void 0;
                break;
              }
            }
          }
        }

        if (process.env.NODE_ENV !== 'production') {
          var ReactInstrumentation = __webpack_require__(32);
          var ReactDOMUnknownPropertyHook = __webpack_require__(688);
          var ReactDOMNullInputValuePropHook = __webpack_require__(682);
          var ReactDOMInvalidARIAHook = __webpack_require__(681);

          ReactInstrumentation.debugTool.addHook(ReactDOMUnknownPropertyHook);
          ReactInstrumentation.debugTool.addHook(ReactDOMNullInputValuePropHook);
          ReactInstrumentation.debugTool.addHook(ReactDOMInvalidARIAHook);
        }

        module.exports = ReactDOM;
        /* WEBPACK VAR INJECTION */
      }.call(exports, __webpack_require__(1)));

      /***/
    },
    /* 675 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';
      /* WEBPACK VAR INJECTION */ (function (process) {
        /**
         * Copyright 2013-present, Facebook, Inc.
         * All rights reserved.
         *
         * This source code is licensed under the BSD-style license found in the
         * LICENSE file in the root directory of this source tree. An additional grant
         * of patent rights can be found in the PATENTS file in the same directory.
         *
         */

        /* global hasOwnProperty:true */

        var _prodInvariant = __webpack_require__(8),
          _assign = __webpack_require__(12);

        var AutoFocusUtils = __webpack_require__(662);
        var CSSPropertyOperations = __webpack_require__(664);
        var DOMLazyTree = __webpack_require__(83);
        var DOMNamespaces = __webpack_require__(186);
        var DOMProperty = __webpack_require__(53);
        var DOMPropertyOperations = __webpack_require__(283);
        var EventPluginHub = __webpack_require__(97);
        var EventPluginRegistry = __webpack_require__(120);
        var ReactBrowserEventEmitter = __webpack_require__(121);
        var ReactDOMComponentFlags = __webpack_require__(284);
        var ReactDOMComponentTree = __webpack_require__(15);
        var ReactDOMInput = __webpack_require__(680);
        var ReactDOMOption = __webpack_require__(683);
        var ReactDOMSelect = __webpack_require__(285);
        var ReactDOMTextarea = __webpack_require__(686);
        var ReactInstrumentation = __webpack_require__(32);
        var ReactMultiChild = __webpack_require__(699);
        var ReactServerRenderingTransaction = __webpack_require__(704);

        var emptyFunction = __webpack_require__(28);
        var escapeTextContentForBrowser = __webpack_require__(124);
        var invariant = __webpack_require__(2);
        var isEventSupported = __webpack_require__(197);
        var shallowEqual = __webpack_require__(173);
        var validateDOMNesting = __webpack_require__(199);
        var warning = __webpack_require__(3);

        var Flags = ReactDOMComponentFlags;
        var deleteListener = EventPluginHub.deleteListener;
        var getNode = ReactDOMComponentTree.getNodeFromInstance;
        var listenTo = ReactBrowserEventEmitter.listenTo;
        var registrationNameModules = EventPluginRegistry.registrationNameModules;

        // For quickly matching children type, to test if can be treated as content.
        var CONTENT_TYPES = { string: true, number: true };

        var STYLE = 'style';
        var HTML = '__html';
        var RESERVED_PROPS = {
          children: null,
          dangerouslySetInnerHTML: null,
          suppressContentEditableWarning: null,
        };

        // Node type for document fragments (Node.DOCUMENT_FRAGMENT_NODE).
        var DOC_FRAGMENT_TYPE = 11;

        function getDeclarationErrorAddendum(internalInstance) {
          if (internalInstance) {
            var owner = internalInstance._currentElement._owner || null;
            if (owner) {
              var name = owner.getName();
              if (name) {
                return ' This DOM node was rendered by `' + name + '`.';
              }
            }
          }
          return '';
        }

        function friendlyStringify(obj) {
          if (typeof obj === 'object') {
            if (Array.isArray(obj)) {
              return '[' + obj.map(friendlyStringify).join(', ') + ']';
            } else {
              var pairs = [];
              for (var key in obj) {
                if (Object.prototype.hasOwnProperty.call(obj, key)) {
                  var keyEscaped = /^[a-z$_][\w$_]*$/i.test(key) ? key : JSON.stringify(key);
                  pairs.push(keyEscaped + ': ' + friendlyStringify(obj[key]));
                }
              }
              return '{' + pairs.join(', ') + '}';
            }
          } else if (typeof obj === 'string') {
            return JSON.stringify(obj);
          } else if (typeof obj === 'function') {
            return '[function object]';
          }
          // Differs from JSON.stringify in that undefined because undefined and that
          // inf and nan don't become null
          return String(obj);
        }

        var styleMutationWarning = {};

        function checkAndWarnForMutatedStyle(style1, style2, component) {
          if (style1 == null || style2 == null) {
            return;
          }
          if (shallowEqual(style1, style2)) {
            return;
          }

          var componentName = component._tag;
          var owner = component._currentElement._owner;
          var ownerName;
          if (owner) {
            ownerName = owner.getName();
          }

          var hash = ownerName + '|' + componentName;

          if (styleMutationWarning.hasOwnProperty(hash)) {
            return;
          }

          styleMutationWarning[hash] = true;

          process.env.NODE_ENV !== 'production'
            ? warning(
                false,
                '`%s` was passed a style object that has previously been mutated. ' +
                  'Mutating `style` is deprecated. Consider cloning it beforehand. Check ' +
                  'the `render` %s. Previous style: %s. Mutated style: %s.',
                componentName,
                owner ? 'of `' + ownerName + '`' : 'using <' + componentName + '>',
                friendlyStringify(style1),
                friendlyStringify(style2)
              )
            : void 0;
        }

        /**
         * @param {object} component
         * @param {?object} props
         */
        function assertValidProps(component, props) {
          if (!props) {
            return;
          }
          // Note the use of `==` which checks for null or undefined.
          if (voidElementTags[component._tag]) {
            !(props.children == null && props.dangerouslySetInnerHTML == null)
              ? process.env.NODE_ENV !== 'production'
                ? invariant(
                    false,
                    '%s is a void element tag and must neither have `children` nor use `dangerouslySetInnerHTML`.%s',
                    component._tag,
                    component._currentElement._owner
                      ? ' Check the render method of ' +
                          component._currentElement._owner.getName() +
                          '.'
                      : ''
                  )
                : _prodInvariant(
                    '137',
                    component._tag,
                    component._currentElement._owner
                      ? ' Check the render method of ' +
                          component._currentElement._owner.getName() +
                          '.'
                      : ''
                  )
              : void 0;
          }
          if (props.dangerouslySetInnerHTML != null) {
            !(props.children == null)
              ? process.env.NODE_ENV !== 'production'
                ? invariant(
                    false,
                    'Can only set one of `children` or `props.dangerouslySetInnerHTML`.'
                  )
                : _prodInvariant('60')
              : void 0;
            !(
              typeof props.dangerouslySetInnerHTML === 'object' &&
              HTML in props.dangerouslySetInnerHTML
            )
              ? process.env.NODE_ENV !== 'production'
                ? invariant(
                    false,
                    '`props.dangerouslySetInnerHTML` must be in the form `{__html: ...}`. Please visit https://fb.me/react-invariant-dangerously-set-inner-html for more information.'
                  )
                : _prodInvariant('61')
              : void 0;
          }
          if (process.env.NODE_ENV !== 'production') {
            process.env.NODE_ENV !== 'production'
              ? warning(
                  props.innerHTML == null,
                  'Directly setting property `innerHTML` is not permitted. ' +
                    'For more information, lookup documentation on `dangerouslySetInnerHTML`.'
                )
              : void 0;
            process.env.NODE_ENV !== 'production'
              ? warning(
                  props.suppressContentEditableWarning ||
                    !props.contentEditable ||
                    props.children == null,
                  'A component is `contentEditable` and contains `children` managed by ' +
                    'React. It is now your responsibility to guarantee that none of ' +
                    'those nodes are unexpectedly modified or duplicated. This is ' +
                    'probably not intentional.'
                )
              : void 0;
            process.env.NODE_ENV !== 'production'
              ? warning(
                  props.onFocusIn == null && props.onFocusOut == null,
                  'React uses onFocus and onBlur instead of onFocusIn and onFocusOut. ' +
                    'All React events are normalized to bubble, so onFocusIn and onFocusOut ' +
                    'are not needed/supported by React.'
                )
              : void 0;
          }
          !(props.style == null || typeof props.style === 'object')
            ? process.env.NODE_ENV !== 'production'
              ? invariant(
                  false,
                  "The `style` prop expects a mapping from style properties to values, not a string. For example, style={{marginRight: spacing + 'em'}} when using JSX.%s",
                  getDeclarationErrorAddendum(component)
                )
              : _prodInvariant('62', getDeclarationErrorAddendum(component))
            : void 0;
        }

        function enqueuePutListener(inst, registrationName, listener, transaction) {
          if (transaction instanceof ReactServerRenderingTransaction) {
            return;
          }
          if (process.env.NODE_ENV !== 'production') {
            // IE8 has no API for event capturing and the `onScroll` event doesn't
            // bubble.
            process.env.NODE_ENV !== 'production'
              ? warning(
                  registrationName !== 'onScroll' || isEventSupported('scroll', true),
                  "This browser doesn't support the `onScroll` event"
                )
              : void 0;
          }
          var containerInfo = inst._hostContainerInfo;
          var isDocumentFragment =
            containerInfo._node && containerInfo._node.nodeType === DOC_FRAGMENT_TYPE;
          var doc = isDocumentFragment ? containerInfo._node : containerInfo._ownerDocument;
          listenTo(registrationName, doc);
          transaction.getReactMountReady().enqueue(putListener, {
            inst: inst,
            registrationName: registrationName,
            listener: listener,
          });
        }

        function putListener() {
          var listenerToPut = this;
          EventPluginHub.putListener(
            listenerToPut.inst,
            listenerToPut.registrationName,
            listenerToPut.listener
          );
        }

        function inputPostMount() {
          var inst = this;
          ReactDOMInput.postMountWrapper(inst);
        }

        function textareaPostMount() {
          var inst = this;
          ReactDOMTextarea.postMountWrapper(inst);
        }

        function optionPostMount() {
          var inst = this;
          ReactDOMOption.postMountWrapper(inst);
        }

        var setAndValidateContentChildDev = emptyFunction;
        if (process.env.NODE_ENV !== 'production') {
          setAndValidateContentChildDev = function (content) {
            var hasExistingContent = this._contentDebugID != null;
            var debugID = this._debugID;
            // This ID represents the inlined child that has no backing instance:
            var contentDebugID = -debugID;

            if (content == null) {
              if (hasExistingContent) {
                ReactInstrumentation.debugTool.onUnmountComponent(this._contentDebugID);
              }
              this._contentDebugID = null;
              return;
            }

            validateDOMNesting(null, String(content), this, this._ancestorInfo);
            this._contentDebugID = contentDebugID;
            if (hasExistingContent) {
              ReactInstrumentation.debugTool.onBeforeUpdateComponent(contentDebugID, content);
              ReactInstrumentation.debugTool.onUpdateComponent(contentDebugID);
            } else {
              ReactInstrumentation.debugTool.onBeforeMountComponent(
                contentDebugID,
                content,
                debugID
              );
              ReactInstrumentation.debugTool.onMountComponent(contentDebugID);
              ReactInstrumentation.debugTool.onSetChildren(debugID, [contentDebugID]);
            }
          };
        }

        // There are so many media events, it makes sense to just
        // maintain a list rather than create a `trapBubbledEvent` for each
        var mediaEvents = {
          topAbort: 'abort',
          topCanPlay: 'canplay',
          topCanPlayThrough: 'canplaythrough',
          topDurationChange: 'durationchange',
          topEmptied: 'emptied',
          topEncrypted: 'encrypted',
          topEnded: 'ended',
          topError: 'error',
          topLoadedData: 'loadeddata',
          topLoadedMetadata: 'loadedmetadata',
          topLoadStart: 'loadstart',
          topPause: 'pause',
          topPlay: 'play',
          topPlaying: 'playing',
          topProgress: 'progress',
          topRateChange: 'ratechange',
          topSeeked: 'seeked',
          topSeeking: 'seeking',
          topStalled: 'stalled',
          topSuspend: 'suspend',
          topTimeUpdate: 'timeupdate',
          topVolumeChange: 'volumechange',
          topWaiting: 'waiting',
        };

        function trapBubbledEventsLocal() {
          var inst = this;
          // If a component renders to null or if another component fatals and causes
          // the state of the tree to be corrupted, `node` here can be null.
          !inst._rootNodeID
            ? process.env.NODE_ENV !== 'production'
              ? invariant(false, 'Must be mounted to trap events')
              : _prodInvariant('63')
            : void 0;
          var node = getNode(inst);
          !node
            ? process.env.NODE_ENV !== 'production'
              ? invariant(false, 'trapBubbledEvent(...): Requires node to be rendered.')
              : _prodInvariant('64')
            : void 0;

          switch (inst._tag) {
            case 'iframe':
            case 'object':
              inst._wrapperState.listeners = [
                ReactBrowserEventEmitter.trapBubbledEvent('topLoad', 'load', node),
              ];
              break;
            case 'video':
            case 'audio':
              inst._wrapperState.listeners = [];
              // Create listener for each media event
              for (var event in mediaEvents) {
                if (mediaEvents.hasOwnProperty(event)) {
                  inst._wrapperState.listeners.push(
                    ReactBrowserEventEmitter.trapBubbledEvent(event, mediaEvents[event], node)
                  );
                }
              }
              break;
            case 'source':
              inst._wrapperState.listeners = [
                ReactBrowserEventEmitter.trapBubbledEvent('topError', 'error', node),
              ];
              break;
            case 'img':
              inst._wrapperState.listeners = [
                ReactBrowserEventEmitter.trapBubbledEvent('topError', 'error', node),
                ReactBrowserEventEmitter.trapBubbledEvent('topLoad', 'load', node),
              ];
              break;
            case 'form':
              inst._wrapperState.listeners = [
                ReactBrowserEventEmitter.trapBubbledEvent('topReset', 'reset', node),
                ReactBrowserEventEmitter.trapBubbledEvent('topSubmit', 'submit', node),
              ];
              break;
            case 'input':
            case 'select':
            case 'textarea':
              inst._wrapperState.listeners = [
                ReactBrowserEventEmitter.trapBubbledEvent('topInvalid', 'invalid', node),
              ];
              break;
          }
        }

        function postUpdateSelectWrapper() {
          ReactDOMSelect.postUpdateWrapper(this);
        }

        // For HTML, certain tags should omit their close tag. We keep a whitelist for
        // those special-case tags.

        var omittedCloseTags = {
          area: true,
          base: true,
          br: true,
          col: true,
          embed: true,
          hr: true,
          img: true,
          input: true,
          keygen: true,
          link: true,
          meta: true,
          param: true,
          source: true,
          track: true,
          wbr: true,
        };

        var newlineEatingTags = {
          listing: true,
          pre: true,
          textarea: true,
        };

        // For HTML, certain tags cannot have children. This has the same purpose as
        // `omittedCloseTags` except that `menuitem` should still have its closing tag.

        var voidElementTags = _assign(
          {
            menuitem: true,
          },
          omittedCloseTags
        );

        // We accept any tag to be rendered but since this gets injected into arbitrary
        // HTML, we want to make sure that it's a safe tag.
        // http://www.w3.org/TR/REC-xml/#NT-Name

        var VALID_TAG_REGEX = /^[a-zA-Z][a-zA-Z:_\.\-\d]*$/; // Simplified subset
        var validatedTagCache = {};
        var hasOwnProperty = {}.hasOwnProperty;

        function validateDangerousTag(tag) {
          if (!hasOwnProperty.call(validatedTagCache, tag)) {
            !VALID_TAG_REGEX.test(tag)
              ? process.env.NODE_ENV !== 'production'
                ? invariant(false, 'Invalid tag: %s', tag)
                : _prodInvariant('65', tag)
              : void 0;
            validatedTagCache[tag] = true;
          }
        }

        function isCustomComponent(tagName, props) {
          return tagName.indexOf('-') >= 0 || props.is != null;
        }

        var globalIdCounter = 1;

        /**
         * Creates a new React class that is idempotent and capable of containing other
         * React components. It accepts event listeners and DOM properties that are
         * valid according to `DOMProperty`.
         *
         *  - Event listeners: `onClick`, `onMouseDown`, etc.
         *  - DOM properties: `className`, `name`, `title`, etc.
         *
         * The `style` property functions differently from the DOM API. It accepts an
         * object mapping of style properties to values.
         *
         * @constructor ReactDOMComponent
         * @extends ReactMultiChild
         */
        function ReactDOMComponent(element) {
          var tag = element.type;
          validateDangerousTag(tag);
          this._currentElement = element;
          this._tag = tag.toLowerCase();
          this._namespaceURI = null;
          this._renderedChildren = null;
          this._previousStyle = null;
          this._previousStyleCopy = null;
          this._hostNode = null;
          this._hostParent = null;
          this._rootNodeID = 0;
          this._domID = 0;
          this._hostContainerInfo = null;
          this._wrapperState = null;
          this._topLevelWrapper = null;
          this._flags = 0;
          if (process.env.NODE_ENV !== 'production') {
            this._ancestorInfo = null;
            setAndValidateContentChildDev.call(this, null);
          }
        }

        ReactDOMComponent.displayName = 'ReactDOMComponent';

        ReactDOMComponent.Mixin = {
          /**
           * Generates root tag markup then recurses. This method has side effects and
           * is not idempotent.
           *
           * @internal
           * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction
           * @param {?ReactDOMComponent} the parent component instance
           * @param {?object} info about the host container
           * @param {object} context
           * @return {string} The computed markup.
           */
          mountComponent: function (transaction, hostParent, hostContainerInfo, context) {
            this._rootNodeID = globalIdCounter++;
            this._domID = hostContainerInfo._idCounter++;
            this._hostParent = hostParent;
            this._hostContainerInfo = hostContainerInfo;

            var props = this._currentElement.props;

            switch (this._tag) {
              case 'audio':
              case 'form':
              case 'iframe':
              case 'img':
              case 'link':
              case 'object':
              case 'source':
              case 'video':
                this._wrapperState = {
                  listeners: null,
                };
                transaction.getReactMountReady().enqueue(trapBubbledEventsLocal, this);
                break;
              case 'input':
                ReactDOMInput.mountWrapper(this, props, hostParent);
                props = ReactDOMInput.getHostProps(this, props);
                transaction.getReactMountReady().enqueue(trapBubbledEventsLocal, this);
                break;
              case 'option':
                ReactDOMOption.mountWrapper(this, props, hostParent);
                props = ReactDOMOption.getHostProps(this, props);
                break;
              case 'select':
                ReactDOMSelect.mountWrapper(this, props, hostParent);
                props = ReactDOMSelect.getHostProps(this, props);
                transaction.getReactMountReady().enqueue(trapBubbledEventsLocal, this);
                break;
              case 'textarea':
                ReactDOMTextarea.mountWrapper(this, props, hostParent);
                props = ReactDOMTextarea.getHostProps(this, props);
                transaction.getReactMountReady().enqueue(trapBubbledEventsLocal, this);
                break;
            }

            assertValidProps(this, props);

            // We create tags in the namespace of their parent container, except HTML
            // tags get no namespace.
            var namespaceURI;
            var parentTag;
            if (hostParent != null) {
              namespaceURI = hostParent._namespaceURI;
              parentTag = hostParent._tag;
            } else if (hostContainerInfo._tag) {
              namespaceURI = hostContainerInfo._namespaceURI;
              parentTag = hostContainerInfo._tag;
            }
            if (
              namespaceURI == null ||
              (namespaceURI === DOMNamespaces.svg && parentTag === 'foreignobject')
            ) {
              namespaceURI = DOMNamespaces.html;
            }
            if (namespaceURI === DOMNamespaces.html) {
              if (this._tag === 'svg') {
                namespaceURI = DOMNamespaces.svg;
              } else if (this._tag === 'math') {
                namespaceURI = DOMNamespaces.mathml;
              }
            }
            this._namespaceURI = namespaceURI;

            if (process.env.NODE_ENV !== 'production') {
              var parentInfo;
              if (hostParent != null) {
                parentInfo = hostParent._ancestorInfo;
              } else if (hostContainerInfo._tag) {
                parentInfo = hostContainerInfo._ancestorInfo;
              }
              if (parentInfo) {
                // parentInfo should always be present except for the top-level
                // component when server rendering
                validateDOMNesting(this._tag, null, this, parentInfo);
              }
              this._ancestorInfo = validateDOMNesting.updatedAncestorInfo(
                parentInfo,
                this._tag,
                this
              );
            }

            var mountImage;
            if (transaction.useCreateElement) {
              var ownerDocument = hostContainerInfo._ownerDocument;
              var el;
              if (namespaceURI === DOMNamespaces.html) {
                if (this._tag === 'script') {
                  // Create the script via .innerHTML so its "parser-inserted" flag is
                  // set to true and it does not execute
                  var div = ownerDocument.createElement('div');
                  var type = this._currentElement.type;
                  div.innerHTML = '<' + type + '></' + type + '>';
                  el = div.removeChild(div.firstChild);
                } else if (props.is) {
                  el = ownerDocument.createElement(this._currentElement.type, props.is);
                } else {
                  // Separate else branch instead of using `props.is || undefined` above becuase of a Firefox bug.
                  // See discussion in https://github.com/facebook/react/pull/6896
                  // and discussion in https://bugzilla.mozilla.org/show_bug.cgi?id=1276240
                  el = ownerDocument.createElement(this._currentElement.type);
                }
              } else {
                el = ownerDocument.createElementNS(namespaceURI, this._currentElement.type);
              }
              ReactDOMComponentTree.precacheNode(this, el);
              this._flags |= Flags.hasCachedChildNodes;
              if (!this._hostParent) {
                DOMPropertyOperations.setAttributeForRoot(el);
              }
              this._updateDOMProperties(null, props, transaction);
              var lazyTree = DOMLazyTree(el);
              this._createInitialChildren(transaction, props, context, lazyTree);
              mountImage = lazyTree;
            } else {
              var tagOpen = this._createOpenTagMarkupAndPutListeners(transaction, props);
              var tagContent = this._createContentMarkup(transaction, props, context);
              if (!tagContent && omittedCloseTags[this._tag]) {
                mountImage = tagOpen + '/>';
              } else {
                mountImage = tagOpen + '>' + tagContent + '</' + this._currentElement.type + '>';
              }
            }

            switch (this._tag) {
              case 'input':
                transaction.getReactMountReady().enqueue(inputPostMount, this);
                if (props.autoFocus) {
                  transaction.getReactMountReady().enqueue(AutoFocusUtils.focusDOMComponent, this);
                }
                break;
              case 'textarea':
                transaction.getReactMountReady().enqueue(textareaPostMount, this);
                if (props.autoFocus) {
                  transaction.getReactMountReady().enqueue(AutoFocusUtils.focusDOMComponent, this);
                }
                break;
              case 'select':
                if (props.autoFocus) {
                  transaction.getReactMountReady().enqueue(AutoFocusUtils.focusDOMComponent, this);
                }
                break;
              case 'button':
                if (props.autoFocus) {
                  transaction.getReactMountReady().enqueue(AutoFocusUtils.focusDOMComponent, this);
                }
                break;
              case 'option':
                transaction.getReactMountReady().enqueue(optionPostMount, this);
                break;
            }

            return mountImage;
          },

          /**
           * Creates markup for the open tag and all attributes.
           *
           * This method has side effects because events get registered.
           *
           * Iterating over object properties is faster than iterating over arrays.
           * @see http://jsperf.com/obj-vs-arr-iteration
           *
           * @private
           * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction
           * @param {object} props
           * @return {string} Markup of opening tag.
           */
          _createOpenTagMarkupAndPutListeners: function (transaction, props) {
            var ret = '<' + this._currentElement.type;

            for (var propKey in props) {
              if (!props.hasOwnProperty(propKey)) {
                continue;
              }
              var propValue = props[propKey];
              if (propValue == null) {
                continue;
              }
              if (registrationNameModules.hasOwnProperty(propKey)) {
                if (propValue) {
                  enqueuePutListener(this, propKey, propValue, transaction);
                }
              } else {
                if (propKey === STYLE) {
                  if (propValue) {
                    if (process.env.NODE_ENV !== 'production') {
                      // See `_updateDOMProperties`. style block
                      this._previousStyle = propValue;
                    }
                    propValue = this._previousStyleCopy = _assign({}, props.style);
                  }
                  propValue = CSSPropertyOperations.createMarkupForStyles(propValue, this);
                }
                var markup = null;
                if (this._tag != null && isCustomComponent(this._tag, props)) {
                  if (!RESERVED_PROPS.hasOwnProperty(propKey)) {
                    markup = DOMPropertyOperations.createMarkupForCustomAttribute(
                      propKey,
                      propValue
                    );
                  }
                } else {
                  markup = DOMPropertyOperations.createMarkupForProperty(propKey, propValue);
                }
                if (markup) {
                  ret += ' ' + markup;
                }
              }
            }

            // For static pages, no need to put React ID and checksum. Saves lots of
            // bytes.
            if (transaction.renderToStaticMarkup) {
              return ret;
            }

            if (!this._hostParent) {
              ret += ' ' + DOMPropertyOperations.createMarkupForRoot();
            }
            ret += ' ' + DOMPropertyOperations.createMarkupForID(this._domID);
            return ret;
          },

          /**
           * Creates markup for the content between the tags.
           *
           * @private
           * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction
           * @param {object} props
           * @param {object} context
           * @return {string} Content markup.
           */
          _createContentMarkup: function (transaction, props, context) {
            var ret = '';

            // Intentional use of != to avoid catching zero/false.
            var innerHTML = props.dangerouslySetInnerHTML;
            if (innerHTML != null) {
              if (innerHTML.__html != null) {
                ret = innerHTML.__html;
              }
            } else {
              var contentToUse = CONTENT_TYPES[typeof props.children] ? props.children : null;
              var childrenToUse = contentToUse != null ? null : props.children;
              if (contentToUse != null) {
                // TODO: Validate that text is allowed as a child of this node
                ret = escapeTextContentForBrowser(contentToUse);
                if (process.env.NODE_ENV !== 'production') {
                  setAndValidateContentChildDev.call(this, contentToUse);
                }
              } else if (childrenToUse != null) {
                var mountImages = this.mountChildren(childrenToUse, transaction, context);
                ret = mountImages.join('');
              }
            }
            if (newlineEatingTags[this._tag] && ret.charAt(0) === '\n') {
              // text/html ignores the first character in these tags if it's a newline
              // Prefer to break application/xml over text/html (for now) by adding
              // a newline specifically to get eaten by the parser. (Alternately for
              // textareas, replacing "^\n" with "\r\n" doesn't get eaten, and the first
              // \r is normalized out by HTMLTextAreaElement#value.)
              // See: <http://www.w3.org/TR/html-polyglot/#newlines-in-textarea-and-pre>
              // See: <http://www.w3.org/TR/html5/syntax.html#element-restrictions>
              // See: <http://www.w3.org/TR/html5/syntax.html#newlines>
              // See: Parsing of "textarea" "listing" and "pre" elements
              //  from <http://www.w3.org/TR/html5/syntax.html#parsing-main-inbody>
              return '\n' + ret;
            } else {
              return ret;
            }
          },

          _createInitialChildren: function (transaction, props, context, lazyTree) {
            // Intentional use of != to avoid catching zero/false.
            var innerHTML = props.dangerouslySetInnerHTML;
            if (innerHTML != null) {
              if (innerHTML.__html != null) {
                DOMLazyTree.queueHTML(lazyTree, innerHTML.__html);
              }
            } else {
              var contentToUse = CONTENT_TYPES[typeof props.children] ? props.children : null;
              var childrenToUse = contentToUse != null ? null : props.children;
              // TODO: Validate that text is allowed as a child of this node
              if (contentToUse != null) {
                // Avoid setting textContent when the text is empty. In IE11 setting
                // textContent on a text area will cause the placeholder to not
                // show within the textarea until it has been focused and blurred again.
                // https://github.com/facebook/react/issues/6731#issuecomment-254874553
                if (contentToUse !== '') {
                  if (process.env.NODE_ENV !== 'production') {
                    setAndValidateContentChildDev.call(this, contentToUse);
                  }
                  DOMLazyTree.queueText(lazyTree, contentToUse);
                }
              } else if (childrenToUse != null) {
                var mountImages = this.mountChildren(childrenToUse, transaction, context);
                for (var i = 0; i < mountImages.length; i++) {
                  DOMLazyTree.queueChild(lazyTree, mountImages[i]);
                }
              }
            }
          },

          /**
           * Receives a next element and updates the component.
           *
           * @internal
           * @param {ReactElement} nextElement
           * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction
           * @param {object} context
           */
          receiveComponent: function (nextElement, transaction, context) {
            var prevElement = this._currentElement;
            this._currentElement = nextElement;
            this.updateComponent(transaction, prevElement, nextElement, context);
          },

          /**
           * Updates a DOM component after it has already been allocated and
           * attached to the DOM. Reconciles the root DOM node, then recurses.
           *
           * @param {ReactReconcileTransaction} transaction
           * @param {ReactElement} prevElement
           * @param {ReactElement} nextElement
           * @internal
           * @overridable
           */
          updateComponent: function (transaction, prevElement, nextElement, context) {
            var lastProps = prevElement.props;
            var nextProps = this._currentElement.props;

            switch (this._tag) {
              case 'input':
                lastProps = ReactDOMInput.getHostProps(this, lastProps);
                nextProps = ReactDOMInput.getHostProps(this, nextProps);
                break;
              case 'option':
                lastProps = ReactDOMOption.getHostProps(this, lastProps);
                nextProps = ReactDOMOption.getHostProps(this, nextProps);
                break;
              case 'select':
                lastProps = ReactDOMSelect.getHostProps(this, lastProps);
                nextProps = ReactDOMSelect.getHostProps(this, nextProps);
                break;
              case 'textarea':
                lastProps = ReactDOMTextarea.getHostProps(this, lastProps);
                nextProps = ReactDOMTextarea.getHostProps(this, nextProps);
                break;
            }

            assertValidProps(this, nextProps);
            this._updateDOMProperties(lastProps, nextProps, transaction);
            this._updateDOMChildren(lastProps, nextProps, transaction, context);

            switch (this._tag) {
              case 'input':
                // Update the wrapper around inputs *after* updating props. This has to
                // happen after `_updateDOMProperties`. Otherwise HTML5 input validations
                // raise warnings and prevent the new value from being assigned.
                ReactDOMInput.updateWrapper(this);
                break;
              case 'textarea':
                ReactDOMTextarea.updateWrapper(this);
                break;
              case 'select':
                // <select> value update needs to occur after <option> children
                // reconciliation
                transaction.getReactMountReady().enqueue(postUpdateSelectWrapper, this);
                break;
            }
          },

          /**
           * Reconciles the properties by detecting differences in property values and
           * updating the DOM as necessary. This function is probably the single most
           * critical path for performance optimization.
           *
           * TODO: Benchmark whether checking for changed values in memory actually
           *       improves performance (especially statically positioned elements).
           * TODO: Benchmark the effects of putting this at the top since 99% of props
           *       do not change for a given reconciliation.
           * TODO: Benchmark areas that can be improved with caching.
           *
           * @private
           * @param {object} lastProps
           * @param {object} nextProps
           * @param {?DOMElement} node
           */
          _updateDOMProperties: function (lastProps, nextProps, transaction) {
            var propKey;
            var styleName;
            var styleUpdates;
            for (propKey in lastProps) {
              if (
                nextProps.hasOwnProperty(propKey) ||
                !lastProps.hasOwnProperty(propKey) ||
                lastProps[propKey] == null
              ) {
                continue;
              }
              if (propKey === STYLE) {
                var lastStyle = this._previousStyleCopy;
                for (styleName in lastStyle) {
                  if (lastStyle.hasOwnProperty(styleName)) {
                    styleUpdates = styleUpdates || {};
                    styleUpdates[styleName] = '';
                  }
                }
                this._previousStyleCopy = null;
              } else if (registrationNameModules.hasOwnProperty(propKey)) {
                if (lastProps[propKey]) {
                  // Only call deleteListener if there was a listener previously or
                  // else willDeleteListener gets called when there wasn't actually a
                  // listener (e.g., onClick={null})
                  deleteListener(this, propKey);
                }
              } else if (isCustomComponent(this._tag, lastProps)) {
                if (!RESERVED_PROPS.hasOwnProperty(propKey)) {
                  DOMPropertyOperations.deleteValueForAttribute(getNode(this), propKey);
                }
              } else if (
                DOMProperty.properties[propKey] ||
                DOMProperty.isCustomAttribute(propKey)
              ) {
                DOMPropertyOperations.deleteValueForProperty(getNode(this), propKey);
              }
            }
            for (propKey in nextProps) {
              var nextProp = nextProps[propKey];
              var lastProp =
                propKey === STYLE
                  ? this._previousStyleCopy
                  : lastProps != null
                  ? lastProps[propKey]
                  : undefined;
              if (
                !nextProps.hasOwnProperty(propKey) ||
                nextProp === lastProp ||
                (nextProp == null && lastProp == null)
              ) {
                continue;
              }
              if (propKey === STYLE) {
                if (nextProp) {
                  if (process.env.NODE_ENV !== 'production') {
                    checkAndWarnForMutatedStyle(this._previousStyleCopy, this._previousStyle, this);
                    this._previousStyle = nextProp;
                  }
                  nextProp = this._previousStyleCopy = _assign({}, nextProp);
                } else {
                  this._previousStyleCopy = null;
                }
                if (lastProp) {
                  // Unset styles on `lastProp` but not on `nextProp`.
                  for (styleName in lastProp) {
                    if (
                      lastProp.hasOwnProperty(styleName) &&
                      (!nextProp || !nextProp.hasOwnProperty(styleName))
                    ) {
                      styleUpdates = styleUpdates || {};
                      styleUpdates[styleName] = '';
                    }
                  }
                  // Update styles that changed since `lastProp`.
                  for (styleName in nextProp) {
                    if (
                      nextProp.hasOwnProperty(styleName) &&
                      lastProp[styleName] !== nextProp[styleName]
                    ) {
                      styleUpdates = styleUpdates || {};
                      styleUpdates[styleName] = nextProp[styleName];
                    }
                  }
                } else {
                  // Relies on `updateStylesByID` not mutating `styleUpdates`.
                  styleUpdates = nextProp;
                }
              } else if (registrationNameModules.hasOwnProperty(propKey)) {
                if (nextProp) {
                  enqueuePutListener(this, propKey, nextProp, transaction);
                } else if (lastProp) {
                  deleteListener(this, propKey);
                }
              } else if (isCustomComponent(this._tag, nextProps)) {
                if (!RESERVED_PROPS.hasOwnProperty(propKey)) {
                  DOMPropertyOperations.setValueForAttribute(getNode(this), propKey, nextProp);
                }
              } else if (
                DOMProperty.properties[propKey] ||
                DOMProperty.isCustomAttribute(propKey)
              ) {
                var node = getNode(this);
                // If we're updating to null or undefined, we should remove the property
                // from the DOM node instead of inadvertently setting to a string. This
                // brings us in line with the same behavior we have on initial render.
                if (nextProp != null) {
                  DOMPropertyOperations.setValueForProperty(node, propKey, nextProp);
                } else {
                  DOMPropertyOperations.deleteValueForProperty(node, propKey);
                }
              }
            }
            if (styleUpdates) {
              CSSPropertyOperations.setValueForStyles(getNode(this), styleUpdates, this);
            }
          },

          /**
           * Reconciles the children with the various properties that affect the
           * children content.
           *
           * @param {object} lastProps
           * @param {object} nextProps
           * @param {ReactReconcileTransaction} transaction
           * @param {object} context
           */
          _updateDOMChildren: function (lastProps, nextProps, transaction, context) {
            var lastContent = CONTENT_TYPES[typeof lastProps.children] ? lastProps.children : null;
            var nextContent = CONTENT_TYPES[typeof nextProps.children] ? nextProps.children : null;

            var lastHtml =
              lastProps.dangerouslySetInnerHTML && lastProps.dangerouslySetInnerHTML.__html;
            var nextHtml =
              nextProps.dangerouslySetInnerHTML && nextProps.dangerouslySetInnerHTML.__html;

            // Note the use of `!=` which checks for null or undefined.
            var lastChildren = lastContent != null ? null : lastProps.children;
            var nextChildren = nextContent != null ? null : nextProps.children;

            // If we're switching from children to content/html or vice versa, remove
            // the old content
            var lastHasContentOrHtml = lastContent != null || lastHtml != null;
            var nextHasContentOrHtml = nextContent != null || nextHtml != null;
            if (lastChildren != null && nextChildren == null) {
              this.updateChildren(null, transaction, context);
            } else if (lastHasContentOrHtml && !nextHasContentOrHtml) {
              this.updateTextContent('');
              if (process.env.NODE_ENV !== 'production') {
                ReactInstrumentation.debugTool.onSetChildren(this._debugID, []);
              }
            }

            if (nextContent != null) {
              if (lastContent !== nextContent) {
                this.updateTextContent('' + nextContent);
                if (process.env.NODE_ENV !== 'production') {
                  setAndValidateContentChildDev.call(this, nextContent);
                }
              }
            } else if (nextHtml != null) {
              if (lastHtml !== nextHtml) {
                this.updateMarkup('' + nextHtml);
              }
              if (process.env.NODE_ENV !== 'production') {
                ReactInstrumentation.debugTool.onSetChildren(this._debugID, []);
              }
            } else if (nextChildren != null) {
              if (process.env.NODE_ENV !== 'production') {
                setAndValidateContentChildDev.call(this, null);
              }

              this.updateChildren(nextChildren, transaction, context);
            }
          },

          getHostNode: function () {
            return getNode(this);
          },

          /**
           * Destroys all event registrations for this instance. Does not remove from
           * the DOM. That must be done by the parent.
           *
           * @internal
           */
          unmountComponent: function (safely) {
            switch (this._tag) {
              case 'audio':
              case 'form':
              case 'iframe':
              case 'img':
              case 'link':
              case 'object':
              case 'source':
              case 'video':
                var listeners = this._wrapperState.listeners;
                if (listeners) {
                  for (var i = 0; i < listeners.length; i++) {
                    listeners[i].remove();
                  }
                }
                break;
              case 'html':
              case 'head':
              case 'body':
                /**
                 * Components like <html> <head> and <body> can't be removed or added
                 * easily in a cross-browser way, however it's valuable to be able to
                 * take advantage of React's reconciliation for styling and <title>
                 * management. So we just document it and throw in dangerous cases.
                 */
                true
                  ? process.env.NODE_ENV !== 'production'
                    ? invariant(
                        false,
                        '<%s> tried to unmount. Because of cross-browser quirks it is impossible to unmount some top-level components (eg <html>, <head>, and <body>) reliably and efficiently. To fix this, have a single top-level component that never unmounts render these elements.',
                        this._tag
                      )
                    : _prodInvariant('66', this._tag)
                  : void 0;
                break;
            }

            this.unmountChildren(safely);
            ReactDOMComponentTree.uncacheNode(this);
            EventPluginHub.deleteAllListeners(this);
            this._rootNodeID = 0;
            this._domID = 0;
            this._wrapperState = null;

            if (process.env.NODE_ENV !== 'production') {
              setAndValidateContentChildDev.call(this, null);
            }
          },

          getPublicInstance: function () {
            return getNode(this);
          },
        };

        _assign(ReactDOMComponent.prototype, ReactDOMComponent.Mixin, ReactMultiChild.Mixin);

        module.exports = ReactDOMComponent;
        /* WEBPACK VAR INJECTION */
      }.call(exports, __webpack_require__(1)));

      /***/
    },
    /* 676 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';
      /* WEBPACK VAR INJECTION */ (function (process) {
        /**
         * Copyright 2013-present, Facebook, Inc.
         * All rights reserved.
         *
         * This source code is licensed under the BSD-style license found in the
         * LICENSE file in the root directory of this source tree. An additional grant
         * of patent rights can be found in the PATENTS file in the same directory.
         *
         */

        var validateDOMNesting = __webpack_require__(199);

        var DOC_NODE_TYPE = 9;

        function ReactDOMContainerInfo(topLevelWrapper, node) {
          var info = {
            _topLevelWrapper: topLevelWrapper,
            _idCounter: 1,
            _ownerDocument: node
              ? node.nodeType === DOC_NODE_TYPE
                ? node
                : node.ownerDocument
              : null,
            _node: node,
            _tag: node ? node.nodeName.toLowerCase() : null,
            _namespaceURI: node ? node.namespaceURI : null,
          };
          if (process.env.NODE_ENV !== 'production') {
            info._ancestorInfo = node
              ? validateDOMNesting.updatedAncestorInfo(null, info._tag, null)
              : null;
          }
          return info;
        }

        module.exports = ReactDOMContainerInfo;
        /* WEBPACK VAR INJECTION */
      }.call(exports, __webpack_require__(1)));

      /***/
    },
    /* 677 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';
      /**
       * Copyright 2014-present, Facebook, Inc.
       * All rights reserved.
       *
       * This source code is licensed under the BSD-style license found in the
       * LICENSE file in the root directory of this source tree. An additional grant
       * of patent rights can be found in the PATENTS file in the same directory.
       *
       */

      var _assign = __webpack_require__(12);

      var DOMLazyTree = __webpack_require__(83);
      var ReactDOMComponentTree = __webpack_require__(15);

      var ReactDOMEmptyComponent = function (instantiate) {
        // ReactCompositeComponent uses this:
        this._currentElement = null;
        // ReactDOMComponentTree uses these:
        this._hostNode = null;
        this._hostParent = null;
        this._hostContainerInfo = null;
        this._domID = 0;
      };
      _assign(ReactDOMEmptyComponent.prototype, {
        mountComponent: function (transaction, hostParent, hostContainerInfo, context) {
          var domID = hostContainerInfo._idCounter++;
          this._domID = domID;
          this._hostParent = hostParent;
          this._hostContainerInfo = hostContainerInfo;

          var nodeValue = ' react-empty: ' + this._domID + ' ';
          if (transaction.useCreateElement) {
            var ownerDocument = hostContainerInfo._ownerDocument;
            var node = ownerDocument.createComment(nodeValue);
            ReactDOMComponentTree.precacheNode(this, node);
            return DOMLazyTree(node);
          } else {
            if (transaction.renderToStaticMarkup) {
              // Normally we'd insert a comment node, but since this is a situation
              // where React won't take over (static pages), we can simply return
              // nothing.
              return '';
            }
            return '<!--' + nodeValue + '-->';
          }
        },
        receiveComponent: function () {},
        getHostNode: function () {
          return ReactDOMComponentTree.getNodeFromInstance(this);
        },
        unmountComponent: function () {
          ReactDOMComponentTree.uncacheNode(this);
        },
      });

      module.exports = ReactDOMEmptyComponent;

      /***/
    },
    /* 678 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';
      /**
       * Copyright 2013-present, Facebook, Inc.
       * All rights reserved.
       *
       * This source code is licensed under the BSD-style license found in the
       * LICENSE file in the root directory of this source tree. An additional grant
       * of patent rights can be found in the PATENTS file in the same directory.
       *
       */

      var ReactDOMFeatureFlags = {
        useCreateElement: true,
        useFiber: false,
      };

      module.exports = ReactDOMFeatureFlags;

      /***/
    },
    /* 679 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';
      /**
       * Copyright 2013-present, Facebook, Inc.
       * All rights reserved.
       *
       * This source code is licensed under the BSD-style license found in the
       * LICENSE file in the root directory of this source tree. An additional grant
       * of patent rights can be found in the PATENTS file in the same directory.
       *
       */

      var DOMChildrenOperations = __webpack_require__(185);
      var ReactDOMComponentTree = __webpack_require__(15);

      /**
       * Operations used to process updates to DOM nodes.
       */
      var ReactDOMIDOperations = {
        /**
         * Updates a component's children by processing a series of updates.
         *
         * @param {array<object>} updates List of update configurations.
         * @internal
         */
        dangerouslyProcessChildrenUpdates: function (parentInst, updates) {
          var node = ReactDOMComponentTree.getNodeFromInstance(parentInst);
          DOMChildrenOperations.processUpdates(node, updates);
        },
      };

      module.exports = ReactDOMIDOperations;

      /***/
    },
    /* 680 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';
      /* WEBPACK VAR INJECTION */ (function (process) {
        /**
         * Copyright 2013-present, Facebook, Inc.
         * All rights reserved.
         *
         * This source code is licensed under the BSD-style license found in the
         * LICENSE file in the root directory of this source tree. An additional grant
         * of patent rights can be found in the PATENTS file in the same directory.
         *
         */

        var _prodInvariant = __webpack_require__(8),
          _assign = __webpack_require__(12);

        var DOMPropertyOperations = __webpack_require__(283);
        var LinkedValueUtils = __webpack_require__(189);
        var ReactDOMComponentTree = __webpack_require__(15);
        var ReactUpdates = __webpack_require__(41);

        var invariant = __webpack_require__(2);
        var warning = __webpack_require__(3);

        var didWarnValueLink = false;
        var didWarnCheckedLink = false;
        var didWarnValueDefaultValue = false;
        var didWarnCheckedDefaultChecked = false;
        var didWarnControlledToUncontrolled = false;
        var didWarnUncontrolledToControlled = false;

        function forceUpdateIfMounted() {
          if (this._rootNodeID) {
            // DOM component is still mounted; update
            ReactDOMInput.updateWrapper(this);
          }
        }

        function isControlled(props) {
          var usesChecked = props.type === 'checkbox' || props.type === 'radio';
          return usesChecked ? props.checked != null : props.value != null;
        }

        /**
         * Implements an <input> host component that allows setting these optional
         * props: `checked`, `value`, `defaultChecked`, and `defaultValue`.
         *
         * If `checked` or `value` are not supplied (or null/undefined), user actions
         * that affect the checked state or value will trigger updates to the element.
         *
         * If they are supplied (and not null/undefined), the rendered element will not
         * trigger updates to the element. Instead, the props must change in order for
         * the rendered element to be updated.
         *
         * The rendered element will be initialized as unchecked (or `defaultChecked`)
         * with an empty value (or `defaultValue`).
         *
         * @see http://www.w3.org/TR/2012/WD-html5-20121025/the-input-element.html
         */
        var ReactDOMInput = {
          getHostProps: function (inst, props) {
            var value = LinkedValueUtils.getValue(props);
            var checked = LinkedValueUtils.getChecked(props);

            var hostProps = _assign(
              {
                // Make sure we set .type before any other properties (setting .value
                // before .type means .value is lost in IE11 and below)
                type: undefined,
                // Make sure we set .step before .value (setting .value before .step
                // means .value is rounded on mount, based upon step precision)
                step: undefined,
                // Make sure we set .min & .max before .value (to ensure proper order
                // in corner cases such as min or max deriving from value, e.g. Issue #7170)
                min: undefined,
                max: undefined,
              },
              props,
              {
                defaultChecked: undefined,
                defaultValue: undefined,
                value: value != null ? value : inst._wrapperState.initialValue,
                checked: checked != null ? checked : inst._wrapperState.initialChecked,
                onChange: inst._wrapperState.onChange,
              }
            );

            return hostProps;
          },

          mountWrapper: function (inst, props) {
            if (process.env.NODE_ENV !== 'production') {
              LinkedValueUtils.checkPropTypes('input', props, inst._currentElement._owner);

              var owner = inst._currentElement._owner;

              if (props.valueLink !== undefined && !didWarnValueLink) {
                process.env.NODE_ENV !== 'production'
                  ? warning(
                      false,
                      '`valueLink` prop on `input` is deprecated; set `value` and `onChange` instead.'
                    )
                  : void 0;
                didWarnValueLink = true;
              }
              if (props.checkedLink !== undefined && !didWarnCheckedLink) {
                process.env.NODE_ENV !== 'production'
                  ? warning(
                      false,
                      '`checkedLink` prop on `input` is deprecated; set `value` and `onChange` instead.'
                    )
                  : void 0;
                didWarnCheckedLink = true;
              }
              if (
                props.checked !== undefined &&
                props.defaultChecked !== undefined &&
                !didWarnCheckedDefaultChecked
              ) {
                process.env.NODE_ENV !== 'production'
                  ? warning(
                      false,
                      '%s contains an input of type %s with both checked and defaultChecked props. ' +
                        'Input elements must be either controlled or uncontrolled ' +
                        '(specify either the checked prop, or the defaultChecked prop, but not ' +
                        'both). Decide between using a controlled or uncontrolled input ' +
                        'element and remove one of these props. More info: ' +
                        'https://fb.me/react-controlled-components',
                      (owner && owner.getName()) || 'A component',
                      props.type
                    )
                  : void 0;
                didWarnCheckedDefaultChecked = true;
              }
              if (
                props.value !== undefined &&
                props.defaultValue !== undefined &&
                !didWarnValueDefaultValue
              ) {
                process.env.NODE_ENV !== 'production'
                  ? warning(
                      false,
                      '%s contains an input of type %s with both value and defaultValue props. ' +
                        'Input elements must be either controlled or uncontrolled ' +
                        '(specify either the value prop, or the defaultValue prop, but not ' +
                        'both). Decide between using a controlled or uncontrolled input ' +
                        'element and remove one of these props. More info: ' +
                        'https://fb.me/react-controlled-components',
                      (owner && owner.getName()) || 'A component',
                      props.type
                    )
                  : void 0;
                didWarnValueDefaultValue = true;
              }
            }

            var defaultValue = props.defaultValue;
            inst._wrapperState = {
              initialChecked: props.checked != null ? props.checked : props.defaultChecked,
              initialValue: props.value != null ? props.value : defaultValue,
              listeners: null,
              onChange: _handleChange.bind(inst),
            };

            if (process.env.NODE_ENV !== 'production') {
              inst._wrapperState.controlled = isControlled(props);
            }
          },

          updateWrapper: function (inst) {
            var props = inst._currentElement.props;

            if (process.env.NODE_ENV !== 'production') {
              var controlled = isControlled(props);
              var owner = inst._currentElement._owner;

              if (
                !inst._wrapperState.controlled &&
                controlled &&
                !didWarnUncontrolledToControlled
              ) {
                process.env.NODE_ENV !== 'production'
                  ? warning(
                      false,
                      '%s is changing an uncontrolled input of type %s to be controlled. ' +
                        'Input elements should not switch from uncontrolled to controlled (or vice versa). ' +
                        'Decide between using a controlled or uncontrolled input ' +
                        'element for the lifetime of the component. More info: https://fb.me/react-controlled-components',
                      (owner && owner.getName()) || 'A component',
                      props.type
                    )
                  : void 0;
                didWarnUncontrolledToControlled = true;
              }
              if (
                inst._wrapperState.controlled &&
                !controlled &&
                !didWarnControlledToUncontrolled
              ) {
                process.env.NODE_ENV !== 'production'
                  ? warning(
                      false,
                      '%s is changing a controlled input of type %s to be uncontrolled. ' +
                        'Input elements should not switch from controlled to uncontrolled (or vice versa). ' +
                        'Decide between using a controlled or uncontrolled input ' +
                        'element for the lifetime of the component. More info: https://fb.me/react-controlled-components',
                      (owner && owner.getName()) || 'A component',
                      props.type
                    )
                  : void 0;
                didWarnControlledToUncontrolled = true;
              }
            }

            // TODO: Shouldn't this be getChecked(props)?
            var checked = props.checked;
            if (checked != null) {
              DOMPropertyOperations.setValueForProperty(
                ReactDOMComponentTree.getNodeFromInstance(inst),
                'checked',
                checked || false
              );
            }

            var node = ReactDOMComponentTree.getNodeFromInstance(inst);
            var value = LinkedValueUtils.getValue(props);
            if (value != null) {
              // Cast `value` to a string to ensure the value is set correctly. While
              // browsers typically do this as necessary, jsdom doesn't.
              var newValue = '' + value;

              // To avoid side effects (such as losing text selection), only set value if changed
              if (newValue !== node.value) {
                node.value = newValue;
              }
            } else {
              if (props.value == null && props.defaultValue != null) {
                // In Chrome, assigning defaultValue to certain input types triggers input validation.
                // For number inputs, the display value loses trailing decimal points. For email inputs,
                // Chrome raises "The specified value <x> is not a valid email address".
                //
                // Here we check to see if the defaultValue has actually changed, avoiding these problems
                // when the user is inputting text
                //
                // https://github.com/facebook/react/issues/7253
                if (node.defaultValue !== '' + props.defaultValue) {
                  node.defaultValue = '' + props.defaultValue;
                }
              }
              if (props.checked == null && props.defaultChecked != null) {
                node.defaultChecked = !!props.defaultChecked;
              }
            }
          },

          postMountWrapper: function (inst) {
            var props = inst._currentElement.props;

            // This is in postMount because we need access to the DOM node, which is not
            // available until after the component has mounted.
            var node = ReactDOMComponentTree.getNodeFromInstance(inst);

            // Detach value from defaultValue. We won't do anything if we're working on
            // submit or reset inputs as those values & defaultValues are linked. They
            // are not resetable nodes so this operation doesn't matter and actually
            // removes browser-default values (eg "Submit Query") when no value is
            // provided.

            switch (props.type) {
              case 'submit':
              case 'reset':
                break;
              case 'color':
              case 'date':
              case 'datetime':
              case 'datetime-local':
              case 'month':
              case 'time':
              case 'week':
                // This fixes the no-show issue on iOS Safari and Android Chrome:
                // https://github.com/facebook/react/issues/7233
                node.value = '';
                node.value = node.defaultValue;
                break;
              default:
                node.value = node.value;
                break;
            }

            // Normally, we'd just do `node.checked = node.checked` upon initial mount, less this bug
            // this is needed to work around a chrome bug where setting defaultChecked
            // will sometimes influence the value of checked (even after detachment).
            // Reference: https://bugs.chromium.org/p/chromium/issues/detail?id=608416
            // We need to temporarily unset name to avoid disrupting radio button groups.
            var name = node.name;
            if (name !== '') {
              node.name = '';
            }
            node.defaultChecked = !node.defaultChecked;
            node.defaultChecked = !node.defaultChecked;
            if (name !== '') {
              node.name = name;
            }
          },
        };

        function _handleChange(event) {
          var props = this._currentElement.props;

          var returnValue = LinkedValueUtils.executeOnChange(props, event);

          // Here we use asap to wait until all updates have propagated, which
          // is important when using controlled components within layers:
          // https://github.com/facebook/react/issues/1698
          ReactUpdates.asap(forceUpdateIfMounted, this);

          var name = props.name;
          if (props.type === 'radio' && name != null) {
            var rootNode = ReactDOMComponentTree.getNodeFromInstance(this);
            var queryRoot = rootNode;

            while (queryRoot.parentNode) {
              queryRoot = queryRoot.parentNode;
            }

            // If `rootNode.form` was non-null, then we could try `form.elements`,
            // but that sometimes behaves strangely in IE8. We could also try using
            // `form.getElementsByName`, but that will only return direct children
            // and won't include inputs that use the HTML5 `form=` attribute. Since
            // the input might not even be in a form, let's just use the global
            // `querySelectorAll` to ensure we don't miss anything.
            var group = queryRoot.querySelectorAll(
              'input[name=' + JSON.stringify('' + name) + '][type="radio"]'
            );

            for (var i = 0; i < group.length; i++) {
              var otherNode = group[i];
              if (otherNode === rootNode || otherNode.form !== rootNode.form) {
                continue;
              }
              // This will throw if radio buttons rendered by different copies of React
              // and the same name are rendered into the same form (same as #1939).
              // That's probably okay; we don't support it just as we don't support
              // mixing React radio buttons with non-React ones.
              var otherInstance = ReactDOMComponentTree.getInstanceFromNode(otherNode);
              !otherInstance
                ? process.env.NODE_ENV !== 'production'
                  ? invariant(
                      false,
                      'ReactDOMInput: Mixing React and non-React radio inputs with the same `name` is not supported.'
                    )
                  : _prodInvariant('90')
                : void 0;
              // If this is a controlled radio button group, forcing the input that
              // was previously checked to update will cause it to be come re-checked
              // as appropriate.
              ReactUpdates.asap(forceUpdateIfMounted, otherInstance);
            }
          }

          return returnValue;
        }

        module.exports = ReactDOMInput;
        /* WEBPACK VAR INJECTION */
      }.call(exports, __webpack_require__(1)));

      /***/
    },
    /* 681 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';
      /* WEBPACK VAR INJECTION */ (function (process) {
        /**
         * Copyright 2013-present, Facebook, Inc.
         * All rights reserved.
         *
         * This source code is licensed under the BSD-style license found in the
         * LICENSE file in the root directory of this source tree. An additional grant
         * of patent rights can be found in the PATENTS file in the same directory.
         *
         */

        var DOMProperty = __webpack_require__(53);
        var ReactComponentTreeHook = __webpack_require__(29);

        var warning = __webpack_require__(3);

        var warnedProperties = {};
        var rARIA = new RegExp('^(aria)-[' + DOMProperty.ATTRIBUTE_NAME_CHAR + ']*$');

        function validateProperty(tagName, name, debugID) {
          if (warnedProperties.hasOwnProperty(name) && warnedProperties[name]) {
            return true;
          }

          if (rARIA.test(name)) {
            var lowerCasedName = name.toLowerCase();
            var standardName = DOMProperty.getPossibleStandardName.hasOwnProperty(lowerCasedName)
              ? DOMProperty.getPossibleStandardName[lowerCasedName]
              : null;

            // If this is an aria-* attribute, but is not listed in the known DOM
            // DOM properties, then it is an invalid aria-* attribute.
            if (standardName == null) {
              warnedProperties[name] = true;
              return false;
            }
            // aria-* attributes should be lowercase; suggest the lowercase version.
            if (name !== standardName) {
              process.env.NODE_ENV !== 'production'
                ? warning(
                    false,
                    'Unknown ARIA attribute %s. Did you mean %s?%s',
                    name,
                    standardName,
                    ReactComponentTreeHook.getStackAddendumByID(debugID)
                  )
                : void 0;
              warnedProperties[name] = true;
              return true;
            }
          }

          return true;
        }

        function warnInvalidARIAProps(debugID, element) {
          var invalidProps = [];

          for (var key in element.props) {
            var isValid = validateProperty(element.type, key, debugID);
            if (!isValid) {
              invalidProps.push(key);
            }
          }

          var unknownPropString = invalidProps
            .map(function (prop) {
              return '`' + prop + '`';
            })
            .join(', ');

          if (invalidProps.length === 1) {
            process.env.NODE_ENV !== 'production'
              ? warning(
                  false,
                  'Invalid aria prop %s on <%s> tag. ' +
                    'For details, see https://fb.me/invalid-aria-prop%s',
                  unknownPropString,
                  element.type,
                  ReactComponentTreeHook.getStackAddendumByID(debugID)
                )
              : void 0;
          } else if (invalidProps.length > 1) {
            process.env.NODE_ENV !== 'production'
              ? warning(
                  false,
                  'Invalid aria props %s on <%s> tag. ' +
                    'For details, see https://fb.me/invalid-aria-prop%s',
                  unknownPropString,
                  element.type,
                  ReactComponentTreeHook.getStackAddendumByID(debugID)
                )
              : void 0;
          }
        }

        function handleElement(debugID, element) {
          if (element == null || typeof element.type !== 'string') {
            return;
          }
          if (element.type.indexOf('-') >= 0 || element.props.is) {
            return;
          }

          warnInvalidARIAProps(debugID, element);
        }

        var ReactDOMInvalidARIAHook = {
          onBeforeMountComponent: function (debugID, element) {
            if (process.env.NODE_ENV !== 'production') {
              handleElement(debugID, element);
            }
          },
          onBeforeUpdateComponent: function (debugID, element) {
            if (process.env.NODE_ENV !== 'production') {
              handleElement(debugID, element);
            }
          },
        };

        module.exports = ReactDOMInvalidARIAHook;
        /* WEBPACK VAR INJECTION */
      }.call(exports, __webpack_require__(1)));

      /***/
    },
    /* 682 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';
      /* WEBPACK VAR INJECTION */ (function (process) {
        /**
         * Copyright 2013-present, Facebook, Inc.
         * All rights reserved.
         *
         * This source code is licensed under the BSD-style license found in the
         * LICENSE file in the root directory of this source tree. An additional grant
         * of patent rights can be found in the PATENTS file in the same directory.
         *
         */

        var ReactComponentTreeHook = __webpack_require__(29);

        var warning = __webpack_require__(3);

        var didWarnValueNull = false;

        function handleElement(debugID, element) {
          if (element == null) {
            return;
          }
          if (
            element.type !== 'input' &&
            element.type !== 'textarea' &&
            element.type !== 'select'
          ) {
            return;
          }
          if (element.props != null && element.props.value === null && !didWarnValueNull) {
            process.env.NODE_ENV !== 'production'
              ? warning(
                  false,
                  '`value` prop on `%s` should not be null. ' +
                    'Consider using the empty string to clear the component or `undefined` ' +
                    'for uncontrolled components.%s',
                  element.type,
                  ReactComponentTreeHook.getStackAddendumByID(debugID)
                )
              : void 0;

            didWarnValueNull = true;
          }
        }

        var ReactDOMNullInputValuePropHook = {
          onBeforeMountComponent: function (debugID, element) {
            handleElement(debugID, element);
          },
          onBeforeUpdateComponent: function (debugID, element) {
            handleElement(debugID, element);
          },
        };

        module.exports = ReactDOMNullInputValuePropHook;
        /* WEBPACK VAR INJECTION */
      }.call(exports, __webpack_require__(1)));

      /***/
    },
    /* 683 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';
      /* WEBPACK VAR INJECTION */ (function (process) {
        /**
         * Copyright 2013-present, Facebook, Inc.
         * All rights reserved.
         *
         * This source code is licensed under the BSD-style license found in the
         * LICENSE file in the root directory of this source tree. An additional grant
         * of patent rights can be found in the PATENTS file in the same directory.
         *
         */

        var _assign = __webpack_require__(12);

        var React = __webpack_require__(85);
        var ReactDOMComponentTree = __webpack_require__(15);
        var ReactDOMSelect = __webpack_require__(285);

        var warning = __webpack_require__(3);
        var didWarnInvalidOptionChildren = false;

        function flattenChildren(children) {
          var content = '';

          // Flatten children and warn if they aren't strings or numbers;
          // invalid types are ignored.
          React.Children.forEach(children, function (child) {
            if (child == null) {
              return;
            }
            if (typeof child === 'string' || typeof child === 'number') {
              content += child;
            } else if (!didWarnInvalidOptionChildren) {
              didWarnInvalidOptionChildren = true;
              process.env.NODE_ENV !== 'production'
                ? warning(false, 'Only strings and numbers are supported as <option> children.')
                : void 0;
            }
          });

          return content;
        }

        /**
         * Implements an <option> host component that warns when `selected` is set.
         */
        var ReactDOMOption = {
          mountWrapper: function (inst, props, hostParent) {
            // TODO (yungsters): Remove support for `selected` in <option>.
            if (process.env.NODE_ENV !== 'production') {
              process.env.NODE_ENV !== 'production'
                ? warning(
                    props.selected == null,
                    'Use the `defaultValue` or `value` props on <select> instead of ' +
                      'setting `selected` on <option>.'
                  )
                : void 0;
            }

            // Look up whether this option is 'selected'
            var selectValue = null;
            if (hostParent != null) {
              var selectParent = hostParent;

              if (selectParent._tag === 'optgroup') {
                selectParent = selectParent._hostParent;
              }

              if (selectParent != null && selectParent._tag === 'select') {
                selectValue = ReactDOMSelect.getSelectValueContext(selectParent);
              }
            }

            // If the value is null (e.g., no specified value or after initial mount)
            // or missing (e.g., for <datalist>), we don't change props.selected
            var selected = null;
            if (selectValue != null) {
              var value;
              if (props.value != null) {
                value = props.value + '';
              } else {
                value = flattenChildren(props.children);
              }
              selected = false;
              if (Array.isArray(selectValue)) {
                // multiple
                for (var i = 0; i < selectValue.length; i++) {
                  if ('' + selectValue[i] === value) {
                    selected = true;
                    break;
                  }
                }
              } else {
                selected = '' + selectValue === value;
              }
            }

            inst._wrapperState = { selected: selected };
          },

          postMountWrapper: function (inst) {
            // value="" should make a value attribute (#6219)
            var props = inst._currentElement.props;
            if (props.value != null) {
              var node = ReactDOMComponentTree.getNodeFromInstance(inst);
              node.setAttribute('value', props.value);
            }
          },

          getHostProps: function (inst, props) {
            var hostProps = _assign({ selected: undefined, children: undefined }, props);

            // Read state only from initial mount because <select> updates value
            // manually; we need the initial state only for server rendering
            if (inst._wrapperState.selected != null) {
              hostProps.selected = inst._wrapperState.selected;
            }

            var content = flattenChildren(props.children);

            if (content) {
              hostProps.children = content;
            }

            return hostProps;
          },
        };

        module.exports = ReactDOMOption;
        /* WEBPACK VAR INJECTION */
      }.call(exports, __webpack_require__(1)));

      /***/
    },
    /* 684 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';
      /**
       * Copyright 2013-present, Facebook, Inc.
       * All rights reserved.
       *
       * This source code is licensed under the BSD-style license found in the
       * LICENSE file in the root directory of this source tree. An additional grant
       * of patent rights can be found in the PATENTS file in the same directory.
       *
       */

      var ExecutionEnvironment = __webpack_require__(18);

      var getNodeForCharacterOffset = __webpack_require__(728);
      var getTextContentAccessor = __webpack_require__(297);

      /**
       * While `isCollapsed` is available on the Selection object and `collapsed`
       * is available on the Range object, IE11 sometimes gets them wrong.
       * If the anchor/focus nodes and offsets are the same, the range is collapsed.
       */
      function isCollapsed(anchorNode, anchorOffset, focusNode, focusOffset) {
        return anchorNode === focusNode && anchorOffset === focusOffset;
      }

      /**
       * Get the appropriate anchor and focus node/offset pairs for IE.
       *
       * The catch here is that IE's selection API doesn't provide information
       * about whether the selection is forward or backward, so we have to
       * behave as though it's always forward.
       *
       * IE text differs from modern selection in that it behaves as though
       * block elements end with a new line. This means character offsets will
       * differ between the two APIs.
       *
       * @param {DOMElement} node
       * @return {object}
       */
      function getIEOffsets(node) {
        var selection = document.selection;
        var selectedRange = selection.createRange();
        var selectedLength = selectedRange.text.length;

        // Duplicate selection so we can move range without breaking user selection.
        var fromStart = selectedRange.duplicate();
        fromStart.moveToElementText(node);
        fromStart.setEndPoint('EndToStart', selectedRange);

        var startOffset = fromStart.text.length;
        var endOffset = startOffset + selectedLength;

        return {
          start: startOffset,
          end: endOffset,
        };
      }

      /**
       * @param {DOMElement} node
       * @return {?object}
       */
      function getModernOffsets(node) {
        var selection = window.getSelection && window.getSelection();

        if (!selection || selection.rangeCount === 0) {
          return null;
        }

        var anchorNode = selection.anchorNode;
        var anchorOffset = selection.anchorOffset;
        var focusNode = selection.focusNode;
        var focusOffset = selection.focusOffset;

        var currentRange = selection.getRangeAt(0);

        // In Firefox, range.startContainer and range.endContainer can be "anonymous
        // divs", e.g. the up/down buttons on an <input type="number">. Anonymous
        // divs do not seem to expose properties, triggering a "Permission denied
        // error" if any of its properties are accessed. The only seemingly possible
        // way to avoid erroring is to access a property that typically works for
        // non-anonymous divs and catch any error that may otherwise arise. See
        // https://bugzilla.mozilla.org/show_bug.cgi?id=208427
        try {
          /* eslint-disable no-unused-expressions */
          currentRange.startContainer.nodeType;
          currentRange.endContainer.nodeType;
          /* eslint-enable no-unused-expressions */
        } catch (e) {
          return null;
        }

        // If the node and offset values are the same, the selection is collapsed.
        // `Selection.isCollapsed` is available natively, but IE sometimes gets
        // this value wrong.
        var isSelectionCollapsed = isCollapsed(
          selection.anchorNode,
          selection.anchorOffset,
          selection.focusNode,
          selection.focusOffset
        );

        var rangeLength = isSelectionCollapsed ? 0 : currentRange.toString().length;

        var tempRange = currentRange.cloneRange();
        tempRange.selectNodeContents(node);
        tempRange.setEnd(currentRange.startContainer, currentRange.startOffset);

        var isTempRangeCollapsed = isCollapsed(
          tempRange.startContainer,
          tempRange.startOffset,
          tempRange.endContainer,
          tempRange.endOffset
        );

        var start = isTempRangeCollapsed ? 0 : tempRange.toString().length;
        var end = start + rangeLength;

        // Detect whether the selection is backward.
        var detectionRange = document.createRange();
        detectionRange.setStart(anchorNode, anchorOffset);
        detectionRange.setEnd(focusNode, focusOffset);
        var isBackward = detectionRange.collapsed;

        return {
          start: isBackward ? end : start,
          end: isBackward ? start : end,
        };
      }

      /**
       * @param {DOMElement|DOMTextNode} node
       * @param {object} offsets
       */
      function setIEOffsets(node, offsets) {
        var range = document.selection.createRange().duplicate();
        var start, end;

        if (offsets.end === undefined) {
          start = offsets.start;
          end = start;
        } else if (offsets.start > offsets.end) {
          start = offsets.end;
          end = offsets.start;
        } else {
          start = offsets.start;
          end = offsets.end;
        }

        range.moveToElementText(node);
        range.moveStart('character', start);
        range.setEndPoint('EndToStart', range);
        range.moveEnd('character', end - start);
        range.select();
      }

      /**
       * In modern non-IE browsers, we can support both forward and backward
       * selections.
       *
       * Note: IE10+ supports the Selection object, but it does not support
       * the `extend` method, which means that even in modern IE, it's not possible
       * to programmatically create a backward selection. Thus, for all IE
       * versions, we use the old IE API to create our selections.
       *
       * @param {DOMElement|DOMTextNode} node
       * @param {object} offsets
       */
      function setModernOffsets(node, offsets) {
        if (!window.getSelection) {
          return;
        }

        var selection = window.getSelection();
        var length = node[getTextContentAccessor()].length;
        var start = Math.min(offsets.start, length);
        var end = offsets.end === undefined ? start : Math.min(offsets.end, length);

        // IE 11 uses modern selection, but doesn't support the extend method.
        // Flip backward selections, so we can set with a single range.
        if (!selection.extend && start > end) {
          var temp = end;
          end = start;
          start = temp;
        }

        var startMarker = getNodeForCharacterOffset(node, start);
        var endMarker = getNodeForCharacterOffset(node, end);

        if (startMarker && endMarker) {
          var range = document.createRange();
          range.setStart(startMarker.node, startMarker.offset);
          selection.removeAllRanges();

          if (start > end) {
            selection.addRange(range);
            selection.extend(endMarker.node, endMarker.offset);
          } else {
            range.setEnd(endMarker.node, endMarker.offset);
            selection.addRange(range);
          }
        }
      }

      var useIEOffsets =
        ExecutionEnvironment.canUseDOM && 'selection' in document && !('getSelection' in window);

      var ReactDOMSelection = {
        /**
         * @param {DOMElement} node
         */
        getOffsets: useIEOffsets ? getIEOffsets : getModernOffsets,

        /**
         * @param {DOMElement|DOMTextNode} node
         * @param {object} offsets
         */
        setOffsets: useIEOffsets ? setIEOffsets : setModernOffsets,
      };

      module.exports = ReactDOMSelection;

      /***/
    },
    /* 685 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';
      /* WEBPACK VAR INJECTION */ (function (process) {
        /**
         * Copyright 2013-present, Facebook, Inc.
         * All rights reserved.
         *
         * This source code is licensed under the BSD-style license found in the
         * LICENSE file in the root directory of this source tree. An additional grant
         * of patent rights can be found in the PATENTS file in the same directory.
         *
         */

        var _prodInvariant = __webpack_require__(8),
          _assign = __webpack_require__(12);

        var DOMChildrenOperations = __webpack_require__(185);
        var DOMLazyTree = __webpack_require__(83);
        var ReactDOMComponentTree = __webpack_require__(15);

        var escapeTextContentForBrowser = __webpack_require__(124);
        var invariant = __webpack_require__(2);
        var validateDOMNesting = __webpack_require__(199);

        /**
         * Text nodes violate a couple assumptions that React makes about components:
         *
         *  - When mounting text into the DOM, adjacent text nodes are merged.
         *  - Text nodes cannot be assigned a React root ID.
         *
         * This component is used to wrap strings between comment nodes so that they
         * can undergo the same reconciliation that is applied to elements.
         *
         * TODO: Investigate representing React components in the DOM with text nodes.
         *
         * @class ReactDOMTextComponent
         * @extends ReactComponent
         * @internal
         */
        var ReactDOMTextComponent = function (text) {
          // TODO: This is really a ReactText (ReactNode), not a ReactElement
          this._currentElement = text;
          this._stringText = '' + text;
          // ReactDOMComponentTree uses these:
          this._hostNode = null;
          this._hostParent = null;

          // Properties
          this._domID = 0;
          this._mountIndex = 0;
          this._closingComment = null;
          this._commentNodes = null;
        };

        _assign(ReactDOMTextComponent.prototype, {
          /**
           * Creates the markup for this text node. This node is not intended to have
           * any features besides containing text content.
           *
           * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction
           * @return {string} Markup for this text node.
           * @internal
           */
          mountComponent: function (transaction, hostParent, hostContainerInfo, context) {
            if (process.env.NODE_ENV !== 'production') {
              var parentInfo;
              if (hostParent != null) {
                parentInfo = hostParent._ancestorInfo;
              } else if (hostContainerInfo != null) {
                parentInfo = hostContainerInfo._ancestorInfo;
              }
              if (parentInfo) {
                // parentInfo should always be present except for the top-level
                // component when server rendering
                validateDOMNesting(null, this._stringText, this, parentInfo);
              }
            }

            var domID = hostContainerInfo._idCounter++;
            var openingValue = ' react-text: ' + domID + ' ';
            var closingValue = ' /react-text ';
            this._domID = domID;
            this._hostParent = hostParent;
            if (transaction.useCreateElement) {
              var ownerDocument = hostContainerInfo._ownerDocument;
              var openingComment = ownerDocument.createComment(openingValue);
              var closingComment = ownerDocument.createComment(closingValue);
              var lazyTree = DOMLazyTree(ownerDocument.createDocumentFragment());
              DOMLazyTree.queueChild(lazyTree, DOMLazyTree(openingComment));
              if (this._stringText) {
                DOMLazyTree.queueChild(
                  lazyTree,
                  DOMLazyTree(ownerDocument.createTextNode(this._stringText))
                );
              }
              DOMLazyTree.queueChild(lazyTree, DOMLazyTree(closingComment));
              ReactDOMComponentTree.precacheNode(this, openingComment);
              this._closingComment = closingComment;
              return lazyTree;
            } else {
              var escapedText = escapeTextContentForBrowser(this._stringText);

              if (transaction.renderToStaticMarkup) {
                // Normally we'd wrap this between comment nodes for the reasons stated
                // above, but since this is a situation where React won't take over
                // (static pages), we can simply return the text as it is.
                return escapedText;
              }

              return '<!--' + openingValue + '-->' + escapedText + '<!--' + closingValue + '-->';
            }
          },

          /**
           * Updates this component by updating the text content.
           *
           * @param {ReactText} nextText The next text content
           * @param {ReactReconcileTransaction} transaction
           * @internal
           */
          receiveComponent: function (nextText, transaction) {
            if (nextText !== this._currentElement) {
              this._currentElement = nextText;
              var nextStringText = '' + nextText;
              if (nextStringText !== this._stringText) {
                // TODO: Save this as pending props and use performUpdateIfNecessary
                // and/or updateComponent to do the actual update for consistency with
                // other component types?
                this._stringText = nextStringText;
                var commentNodes = this.getHostNode();
                DOMChildrenOperations.replaceDelimitedText(
                  commentNodes[0],
                  commentNodes[1],
                  nextStringText
                );
              }
            }
          },

          getHostNode: function () {
            var hostNode = this._commentNodes;
            if (hostNode) {
              return hostNode;
            }
            if (!this._closingComment) {
              var openingComment = ReactDOMComponentTree.getNodeFromInstance(this);
              var node = openingComment.nextSibling;
              while (true) {
                !(node != null)
                  ? process.env.NODE_ENV !== 'production'
                    ? invariant(false, 'Missing closing comment for text component %s', this._domID)
                    : _prodInvariant('67', this._domID)
                  : void 0;
                if (node.nodeType === 8 && node.nodeValue === ' /react-text ') {
                  this._closingComment = node;
                  break;
                }
                node = node.nextSibling;
              }
            }
            hostNode = [this._hostNode, this._closingComment];
            this._commentNodes = hostNode;
            return hostNode;
          },

          unmountComponent: function () {
            this._closingComment = null;
            this._commentNodes = null;
            ReactDOMComponentTree.uncacheNode(this);
          },
        });

        module.exports = ReactDOMTextComponent;
        /* WEBPACK VAR INJECTION */
      }.call(exports, __webpack_require__(1)));

      /***/
    },
    /* 686 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';
      /* WEBPACK VAR INJECTION */ (function (process) {
        /**
         * Copyright 2013-present, Facebook, Inc.
         * All rights reserved.
         *
         * This source code is licensed under the BSD-style license found in the
         * LICENSE file in the root directory of this source tree. An additional grant
         * of patent rights can be found in the PATENTS file in the same directory.
         *
         */

        var _prodInvariant = __webpack_require__(8),
          _assign = __webpack_require__(12);

        var LinkedValueUtils = __webpack_require__(189);
        var ReactDOMComponentTree = __webpack_require__(15);
        var ReactUpdates = __webpack_require__(41);

        var invariant = __webpack_require__(2);
        var warning = __webpack_require__(3);

        var didWarnValueLink = false;
        var didWarnValDefaultVal = false;

        function forceUpdateIfMounted() {
          if (this._rootNodeID) {
            // DOM component is still mounted; update
            ReactDOMTextarea.updateWrapper(this);
          }
        }

        /**
         * Implements a <textarea> host component that allows setting `value`, and
         * `defaultValue`. This differs from the traditional DOM API because value is
         * usually set as PCDATA children.
         *
         * If `value` is not supplied (or null/undefined), user actions that affect the
         * value will trigger updates to the element.
         *
         * If `value` is supplied (and not null/undefined), the rendered element will
         * not trigger updates to the element. Instead, the `value` prop must change in
         * order for the rendered element to be updated.
         *
         * The rendered element will be initialized with an empty value, the prop
         * `defaultValue` if specified, or the children content (deprecated).
         */
        var ReactDOMTextarea = {
          getHostProps: function (inst, props) {
            !(props.dangerouslySetInnerHTML == null)
              ? process.env.NODE_ENV !== 'production'
                ? invariant(false, '`dangerouslySetInnerHTML` does not make sense on <textarea>.')
                : _prodInvariant('91')
              : void 0;

            // Always set children to the same thing. In IE9, the selection range will
            // get reset if `textContent` is mutated.  We could add a check in setTextContent
            // to only set the value if/when the value differs from the node value (which would
            // completely solve this IE9 bug), but Sebastian+Ben seemed to like this solution.
            // The value can be a boolean or object so that's why it's forced to be a string.
            var hostProps = _assign({}, props, {
              value: undefined,
              defaultValue: undefined,
              children: '' + inst._wrapperState.initialValue,
              onChange: inst._wrapperState.onChange,
            });

            return hostProps;
          },

          mountWrapper: function (inst, props) {
            if (process.env.NODE_ENV !== 'production') {
              LinkedValueUtils.checkPropTypes('textarea', props, inst._currentElement._owner);
              if (props.valueLink !== undefined && !didWarnValueLink) {
                process.env.NODE_ENV !== 'production'
                  ? warning(
                      false,
                      '`valueLink` prop on `textarea` is deprecated; set `value` and `onChange` instead.'
                    )
                  : void 0;
                didWarnValueLink = true;
              }
              if (
                props.value !== undefined &&
                props.defaultValue !== undefined &&
                !didWarnValDefaultVal
              ) {
                process.env.NODE_ENV !== 'production'
                  ? warning(
                      false,
                      'Textarea elements must be either controlled or uncontrolled ' +
                        '(specify either the value prop, or the defaultValue prop, but not ' +
                        'both). Decide between using a controlled or uncontrolled textarea ' +
                        'and remove one of these props. More info: ' +
                        'https://fb.me/react-controlled-components'
                    )
                  : void 0;
                didWarnValDefaultVal = true;
              }
            }

            var value = LinkedValueUtils.getValue(props);
            var initialValue = value;

            // Only bother fetching default value if we're going to use it
            if (value == null) {
              var defaultValue = props.defaultValue;
              // TODO (yungsters): Remove support for children content in <textarea>.
              var children = props.children;
              if (children != null) {
                if (process.env.NODE_ENV !== 'production') {
                  process.env.NODE_ENV !== 'production'
                    ? warning(
                        false,
                        'Use the `defaultValue` or `value` props instead of setting ' +
                          'children on <textarea>.'
                      )
                    : void 0;
                }
                !(defaultValue == null)
                  ? process.env.NODE_ENV !== 'production'
                    ? invariant(
                        false,
                        'If you supply `defaultValue` on a <textarea>, do not pass children.'
                      )
                    : _prodInvariant('92')
                  : void 0;
                if (Array.isArray(children)) {
                  !(children.length <= 1)
                    ? process.env.NODE_ENV !== 'production'
                      ? invariant(false, '<textarea> can only have at most one child.')
                      : _prodInvariant('93')
                    : void 0;
                  children = children[0];
                }

                defaultValue = '' + children;
              }
              if (defaultValue == null) {
                defaultValue = '';
              }
              initialValue = defaultValue;
            }

            inst._wrapperState = {
              initialValue: '' + initialValue,
              listeners: null,
              onChange: _handleChange.bind(inst),
            };
          },

          updateWrapper: function (inst) {
            var props = inst._currentElement.props;

            var node = ReactDOMComponentTree.getNodeFromInstance(inst);
            var value = LinkedValueUtils.getValue(props);
            if (value != null) {
              // Cast `value` to a string to ensure the value is set correctly. While
              // browsers typically do this as necessary, jsdom doesn't.
              var newValue = '' + value;

              // To avoid side effects (such as losing text selection), only set value if changed
              if (newValue !== node.value) {
                node.value = newValue;
              }
              if (props.defaultValue == null) {
                node.defaultValue = newValue;
              }
            }
            if (props.defaultValue != null) {
              node.defaultValue = props.defaultValue;
            }
          },

          postMountWrapper: function (inst) {
            // This is in postMount because we need access to the DOM node, which is not
            // available until after the component has mounted.
            var node = ReactDOMComponentTree.getNodeFromInstance(inst);
            var textContent = node.textContent;

            // Only set node.value if textContent is equal to the expected
            // initial value. In IE10/IE11 there is a bug where the placeholder attribute
            // will populate textContent as well.
            // https://developer.microsoft.com/microsoft-edge/platform/issues/101525/
            if (textContent === inst._wrapperState.initialValue) {
              node.value = textContent;
            }
          },
        };

        function _handleChange(event) {
          var props = this._currentElement.props;
          var returnValue = LinkedValueUtils.executeOnChange(props, event);
          ReactUpdates.asap(forceUpdateIfMounted, this);
          return returnValue;
        }

        module.exports = ReactDOMTextarea;
        /* WEBPACK VAR INJECTION */
      }.call(exports, __webpack_require__(1)));

      /***/
    },
    /* 687 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';
      /* WEBPACK VAR INJECTION */ (function (process) {
        /**
         * Copyright 2015-present, Facebook, Inc.
         * All rights reserved.
         *
         * This source code is licensed under the BSD-style license found in the
         * LICENSE file in the root directory of this source tree. An additional grant
         * of patent rights can be found in the PATENTS file in the same directory.
         *
         */

        var _prodInvariant = __webpack_require__(8);

        var invariant = __webpack_require__(2);

        /**
         * Return the lowest common ancestor of A and B, or null if they are in
         * different trees.
         */
        function getLowestCommonAncestor(instA, instB) {
          !('_hostNode' in instA)
            ? process.env.NODE_ENV !== 'production'
              ? invariant(false, 'getNodeFromInstance: Invalid argument.')
              : _prodInvariant('33')
            : void 0;
          !('_hostNode' in instB)
            ? process.env.NODE_ENV !== 'production'
              ? invariant(false, 'getNodeFromInstance: Invalid argument.')
              : _prodInvariant('33')
            : void 0;

          var depthA = 0;
          for (var tempA = instA; tempA; tempA = tempA._hostParent) {
            depthA++;
          }
          var depthB = 0;
          for (var tempB = instB; tempB; tempB = tempB._hostParent) {
            depthB++;
          }

          // If A is deeper, crawl up.
          while (depthA - depthB > 0) {
            instA = instA._hostParent;
            depthA--;
          }

          // If B is deeper, crawl up.
          while (depthB - depthA > 0) {
            instB = instB._hostParent;
            depthB--;
          }

          // Walk in lockstep until we find a match.
          var depth = depthA;
          while (depth--) {
            if (instA === instB) {
              return instA;
            }
            instA = instA._hostParent;
            instB = instB._hostParent;
          }
          return null;
        }

        /**
         * Return if A is an ancestor of B.
         */
        function isAncestor(instA, instB) {
          !('_hostNode' in instA)
            ? process.env.NODE_ENV !== 'production'
              ? invariant(false, 'isAncestor: Invalid argument.')
              : _prodInvariant('35')
            : void 0;
          !('_hostNode' in instB)
            ? process.env.NODE_ENV !== 'production'
              ? invariant(false, 'isAncestor: Invalid argument.')
              : _prodInvariant('35')
            : void 0;

          while (instB) {
            if (instB === instA) {
              return true;
            }
            instB = instB._hostParent;
          }
          return false;
        }

        /**
         * Return the parent instance of the passed-in instance.
         */
        function getParentInstance(inst) {
          !('_hostNode' in inst)
            ? process.env.NODE_ENV !== 'production'
              ? invariant(false, 'getParentInstance: Invalid argument.')
              : _prodInvariant('36')
            : void 0;

          return inst._hostParent;
        }

        /**
         * Simulates the traversal of a two-phase, capture/bubble event dispatch.
         */
        function traverseTwoPhase(inst, fn, arg) {
          var path = [];
          while (inst) {
            path.push(inst);
            inst = inst._hostParent;
          }
          var i;
          for (i = path.length; i-- > 0; ) {
            fn(path[i], 'captured', arg);
          }
          for (i = 0; i < path.length; i++) {
            fn(path[i], 'bubbled', arg);
          }
        }

        /**
         * Traverses the ID hierarchy and invokes the supplied `cb` on any IDs that
         * should would receive a `mouseEnter` or `mouseLeave` event.
         *
         * Does not invoke the callback on the nearest common ancestor because nothing
         * "entered" or "left" that element.
         */
        function traverseEnterLeave(from, to, fn, argFrom, argTo) {
          var common = from && to ? getLowestCommonAncestor(from, to) : null;
          var pathFrom = [];
          while (from && from !== common) {
            pathFrom.push(from);
            from = from._hostParent;
          }
          var pathTo = [];
          while (to && to !== common) {
            pathTo.push(to);
            to = to._hostParent;
          }
          var i;
          for (i = 0; i < pathFrom.length; i++) {
            fn(pathFrom[i], 'bubbled', argFrom);
          }
          for (i = pathTo.length; i-- > 0; ) {
            fn(pathTo[i], 'captured', argTo);
          }
        }

        module.exports = {
          isAncestor: isAncestor,
          getLowestCommonAncestor: getLowestCommonAncestor,
          getParentInstance: getParentInstance,
          traverseTwoPhase: traverseTwoPhase,
          traverseEnterLeave: traverseEnterLeave,
        };
        /* WEBPACK VAR INJECTION */
      }.call(exports, __webpack_require__(1)));

      /***/
    },
    /* 688 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';
      /* WEBPACK VAR INJECTION */ (function (process) {
        /**
         * Copyright 2013-present, Facebook, Inc.
         * All rights reserved.
         *
         * This source code is licensed under the BSD-style license found in the
         * LICENSE file in the root directory of this source tree. An additional grant
         * of patent rights can be found in the PATENTS file in the same directory.
         *
         */

        var DOMProperty = __webpack_require__(53);
        var EventPluginRegistry = __webpack_require__(120);
        var ReactComponentTreeHook = __webpack_require__(29);

        var warning = __webpack_require__(3);

        if (process.env.NODE_ENV !== 'production') {
          var reactProps = {
            children: true,
            dangerouslySetInnerHTML: true,
            key: true,
            ref: true,

            autoFocus: true,
            defaultValue: true,
            valueLink: true,
            defaultChecked: true,
            checkedLink: true,
            innerHTML: true,
            suppressContentEditableWarning: true,
            onFocusIn: true,
            onFocusOut: true,
          };
          var warnedProperties = {};

          var validateProperty = function (tagName, name, debugID) {
            if (
              DOMProperty.properties.hasOwnProperty(name) ||
              DOMProperty.isCustomAttribute(name)
            ) {
              return true;
            }
            if (
              (reactProps.hasOwnProperty(name) && reactProps[name]) ||
              (warnedProperties.hasOwnProperty(name) && warnedProperties[name])
            ) {
              return true;
            }
            if (EventPluginRegistry.registrationNameModules.hasOwnProperty(name)) {
              return true;
            }
            warnedProperties[name] = true;
            var lowerCasedName = name.toLowerCase();

            // data-* attributes should be lowercase; suggest the lowercase version
            var standardName = DOMProperty.isCustomAttribute(lowerCasedName)
              ? lowerCasedName
              : DOMProperty.getPossibleStandardName.hasOwnProperty(lowerCasedName)
              ? DOMProperty.getPossibleStandardName[lowerCasedName]
              : null;

            var registrationName = EventPluginRegistry.possibleRegistrationNames.hasOwnProperty(
              lowerCasedName
            )
              ? EventPluginRegistry.possibleRegistrationNames[lowerCasedName]
              : null;

            if (standardName != null) {
              process.env.NODE_ENV !== 'production'
                ? warning(
                    false,
                    'Unknown DOM property %s. Did you mean %s?%s',
                    name,
                    standardName,
                    ReactComponentTreeHook.getStackAddendumByID(debugID)
                  )
                : void 0;
              return true;
            } else if (registrationName != null) {
              process.env.NODE_ENV !== 'production'
                ? warning(
                    false,
                    'Unknown event handler property %s. Did you mean `%s`?%s',
                    name,
                    registrationName,
                    ReactComponentTreeHook.getStackAddendumByID(debugID)
                  )
                : void 0;
              return true;
            } else {
              // We were unable to guess which prop the user intended.
              // It is likely that the user was just blindly spreading/forwarding props
              // Components should be careful to only render valid props/attributes.
              // Warning will be invoked in warnUnknownProperties to allow grouping.
              return false;
            }
          };
        }

        var warnUnknownProperties = function (debugID, element) {
          var unknownProps = [];
          for (var key in element.props) {
            var isValid = validateProperty(element.type, key, debugID);
            if (!isValid) {
              unknownProps.push(key);
            }
          }

          var unknownPropString = unknownProps
            .map(function (prop) {
              return '`' + prop + '`';
            })
            .join(', ');

          if (unknownProps.length === 1) {
            process.env.NODE_ENV !== 'production'
              ? warning(
                  false,
                  'Unknown prop %s on <%s> tag. Remove this prop from the element. ' +
                    'For details, see https://fb.me/react-unknown-prop%s',
                  unknownPropString,
                  element.type,
                  ReactComponentTreeHook.getStackAddendumByID(debugID)
                )
              : void 0;
          } else if (unknownProps.length > 1) {
            process.env.NODE_ENV !== 'production'
              ? warning(
                  false,
                  'Unknown props %s on <%s> tag. Remove these props from the element. ' +
                    'For details, see https://fb.me/react-unknown-prop%s',
                  unknownPropString,
                  element.type,
                  ReactComponentTreeHook.getStackAddendumByID(debugID)
                )
              : void 0;
          }
        };

        function handleElement(debugID, element) {
          if (element == null || typeof element.type !== 'string') {
            return;
          }
          if (element.type.indexOf('-') >= 0 || element.props.is) {
            return;
          }
          warnUnknownProperties(debugID, element);
        }

        var ReactDOMUnknownPropertyHook = {
          onBeforeMountComponent: function (debugID, element) {
            handleElement(debugID, element);
          },
          onBeforeUpdateComponent: function (debugID, element) {
            handleElement(debugID, element);
          },
        };

        module.exports = ReactDOMUnknownPropertyHook;
        /* WEBPACK VAR INJECTION */
      }.call(exports, __webpack_require__(1)));

      /***/
    },
    /* 689 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';
      /* WEBPACK VAR INJECTION */ (function (process) {
        /**
         * Copyright 2016-present, Facebook, Inc.
         * All rights reserved.
         *
         * This source code is licensed under the BSD-style license found in the
         * LICENSE file in the root directory of this source tree. An additional grant
         * of patent rights can be found in the PATENTS file in the same directory.
         *
         *
         */

        var ReactInvalidSetStateWarningHook = __webpack_require__(697);
        var ReactHostOperationHistoryHook = __webpack_require__(695);
        var ReactComponentTreeHook = __webpack_require__(29);
        var ExecutionEnvironment = __webpack_require__(18);

        var performanceNow = __webpack_require__(620);
        var warning = __webpack_require__(3);

        var hooks = [];
        var didHookThrowForEvent = {};

        function callHook(event, fn, context, arg1, arg2, arg3, arg4, arg5) {
          try {
            fn.call(context, arg1, arg2, arg3, arg4, arg5);
          } catch (e) {
            process.env.NODE_ENV !== 'production'
              ? warning(
                  didHookThrowForEvent[event],
                  'Exception thrown by hook while handling %s: %s',
                  event,
                  e + '\n' + e.stack
                )
              : void 0;
            didHookThrowForEvent[event] = true;
          }
        }

        function emitEvent(event, arg1, arg2, arg3, arg4, arg5) {
          for (var i = 0; i < hooks.length; i++) {
            var hook = hooks[i];
            var fn = hook[event];
            if (fn) {
              callHook(event, fn, hook, arg1, arg2, arg3, arg4, arg5);
            }
          }
        }

        var isProfiling = false;
        var flushHistory = [];
        var lifeCycleTimerStack = [];
        var currentFlushNesting = 0;
        var currentFlushMeasurements = [];
        var currentFlushStartTime = 0;
        var currentTimerDebugID = null;
        var currentTimerStartTime = 0;
        var currentTimerNestedFlushDuration = 0;
        var currentTimerType = null;

        var lifeCycleTimerHasWarned = false;

        function clearHistory() {
          ReactComponentTreeHook.purgeUnmountedComponents();
          ReactHostOperationHistoryHook.clearHistory();
        }

        function getTreeSnapshot(registeredIDs) {
          return registeredIDs.reduce(function (tree, id) {
            var ownerID = ReactComponentTreeHook.getOwnerID(id);
            var parentID = ReactComponentTreeHook.getParentID(id);
            tree[id] = {
              displayName: ReactComponentTreeHook.getDisplayName(id),
              text: ReactComponentTreeHook.getText(id),
              updateCount: ReactComponentTreeHook.getUpdateCount(id),
              childIDs: ReactComponentTreeHook.getChildIDs(id),
              // Text nodes don't have owners but this is close enough.
              ownerID: ownerID || (parentID && ReactComponentTreeHook.getOwnerID(parentID)) || 0,
              parentID: parentID,
            };
            return tree;
          }, {});
        }

        function resetMeasurements() {
          var previousStartTime = currentFlushStartTime;
          var previousMeasurements = currentFlushMeasurements;
          var previousOperations = ReactHostOperationHistoryHook.getHistory();

          if (currentFlushNesting === 0) {
            currentFlushStartTime = 0;
            currentFlushMeasurements = [];
            clearHistory();
            return;
          }

          if (previousMeasurements.length || previousOperations.length) {
            var registeredIDs = ReactComponentTreeHook.getRegisteredIDs();
            flushHistory.push({
              duration: performanceNow() - previousStartTime,
              measurements: previousMeasurements || [],
              operations: previousOperations || [],
              treeSnapshot: getTreeSnapshot(registeredIDs),
            });
          }

          clearHistory();
          currentFlushStartTime = performanceNow();
          currentFlushMeasurements = [];
        }

        function checkDebugID(debugID) {
          var allowRoot = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;

          if (allowRoot && debugID === 0) {
            return;
          }
          if (!debugID) {
            process.env.NODE_ENV !== 'production'
              ? warning(false, 'ReactDebugTool: debugID may not be empty.')
              : void 0;
          }
        }

        function beginLifeCycleTimer(debugID, timerType) {
          if (currentFlushNesting === 0) {
            return;
          }
          if (currentTimerType && !lifeCycleTimerHasWarned) {
            process.env.NODE_ENV !== 'production'
              ? warning(
                  false,
                  'There is an internal error in the React performance measurement code. ' +
                    'Did not expect %s timer to start while %s timer is still in ' +
                    'progress for %s instance.',
                  timerType,
                  currentTimerType || 'no',
                  debugID === currentTimerDebugID ? 'the same' : 'another'
                )
              : void 0;
            lifeCycleTimerHasWarned = true;
          }
          currentTimerStartTime = performanceNow();
          currentTimerNestedFlushDuration = 0;
          currentTimerDebugID = debugID;
          currentTimerType = timerType;
        }

        function endLifeCycleTimer(debugID, timerType) {
          if (currentFlushNesting === 0) {
            return;
          }
          if (currentTimerType !== timerType && !lifeCycleTimerHasWarned) {
            process.env.NODE_ENV !== 'production'
              ? warning(
                  false,
                  'There is an internal error in the React performance measurement code. ' +
                    'We did not expect %s timer to stop while %s timer is still in ' +
                    'progress for %s instance. Please report this as a bug in React.',
                  timerType,
                  currentTimerType || 'no',
                  debugID === currentTimerDebugID ? 'the same' : 'another'
                )
              : void 0;
            lifeCycleTimerHasWarned = true;
          }
          if (isProfiling) {
            currentFlushMeasurements.push({
              timerType: timerType,
              instanceID: debugID,
              duration: performanceNow() - currentTimerStartTime - currentTimerNestedFlushDuration,
            });
          }
          currentTimerStartTime = 0;
          currentTimerNestedFlushDuration = 0;
          currentTimerDebugID = null;
          currentTimerType = null;
        }

        function pauseCurrentLifeCycleTimer() {
          var currentTimer = {
            startTime: currentTimerStartTime,
            nestedFlushStartTime: performanceNow(),
            debugID: currentTimerDebugID,
            timerType: currentTimerType,
          };
          lifeCycleTimerStack.push(currentTimer);
          currentTimerStartTime = 0;
          currentTimerNestedFlushDuration = 0;
          currentTimerDebugID = null;
          currentTimerType = null;
        }

        function resumeCurrentLifeCycleTimer() {
          var _lifeCycleTimerStack$ = lifeCycleTimerStack.pop(),
            startTime = _lifeCycleTimerStack$.startTime,
            nestedFlushStartTime = _lifeCycleTimerStack$.nestedFlushStartTime,
            debugID = _lifeCycleTimerStack$.debugID,
            timerType = _lifeCycleTimerStack$.timerType;

          var nestedFlushDuration = performanceNow() - nestedFlushStartTime;
          currentTimerStartTime = startTime;
          currentTimerNestedFlushDuration += nestedFlushDuration;
          currentTimerDebugID = debugID;
          currentTimerType = timerType;
        }

        var lastMarkTimeStamp = 0;
        var canUsePerformanceMeasure =
          // $FlowFixMe https://github.com/facebook/flow/issues/2345
          typeof performance !== 'undefined' &&
          typeof performance.mark === 'function' &&
          typeof performance.clearMarks === 'function' &&
          typeof performance.measure === 'function' &&
          typeof performance.clearMeasures === 'function';

        function shouldMark(debugID) {
          if (!isProfiling || !canUsePerformanceMeasure) {
            return false;
          }
          var element = ReactComponentTreeHook.getElement(debugID);
          if (element == null || typeof element !== 'object') {
            return false;
          }
          var isHostElement = typeof element.type === 'string';
          if (isHostElement) {
            return false;
          }
          return true;
        }

        function markBegin(debugID, markType) {
          if (!shouldMark(debugID)) {
            return;
          }

          var markName = debugID + '::' + markType;
          lastMarkTimeStamp = performanceNow();
          performance.mark(markName);
        }

        function markEnd(debugID, markType) {
          if (!shouldMark(debugID)) {
            return;
          }

          var markName = debugID + '::' + markType;
          var displayName = ReactComponentTreeHook.getDisplayName(debugID) || 'Unknown';

          // Chrome has an issue of dropping markers recorded too fast:
          // https://bugs.chromium.org/p/chromium/issues/detail?id=640652
          // To work around this, we will not report very small measurements.
          // I determined the magic number by tweaking it back and forth.
          // 0.05ms was enough to prevent the issue, but I set it to 0.1ms to be safe.
          // When the bug is fixed, we can `measure()` unconditionally if we want to.
          var timeStamp = performanceNow();
          if (timeStamp - lastMarkTimeStamp > 0.1) {
            var measurementName = displayName + ' [' + markType + ']';
            performance.measure(measurementName, markName);
          }

          performance.clearMarks(markName);
          performance.clearMeasures(measurementName);
        }

        var ReactDebugTool = {
          addHook: function (hook) {
            hooks.push(hook);
          },
          removeHook: function (hook) {
            for (var i = 0; i < hooks.length; i++) {
              if (hooks[i] === hook) {
                hooks.splice(i, 1);
                i--;
              }
            }
          },
          isProfiling: function () {
            return isProfiling;
          },
          beginProfiling: function () {
            if (isProfiling) {
              return;
            }

            isProfiling = true;
            flushHistory.length = 0;
            resetMeasurements();
            ReactDebugTool.addHook(ReactHostOperationHistoryHook);
          },
          endProfiling: function () {
            if (!isProfiling) {
              return;
            }

            isProfiling = false;
            resetMeasurements();
            ReactDebugTool.removeHook(ReactHostOperationHistoryHook);
          },
          getFlushHistory: function () {
            return flushHistory;
          },
          onBeginFlush: function () {
            currentFlushNesting++;
            resetMeasurements();
            pauseCurrentLifeCycleTimer();
            emitEvent('onBeginFlush');
          },
          onEndFlush: function () {
            resetMeasurements();
            currentFlushNesting--;
            resumeCurrentLifeCycleTimer();
            emitEvent('onEndFlush');
          },
          onBeginLifeCycleTimer: function (debugID, timerType) {
            checkDebugID(debugID);
            emitEvent('onBeginLifeCycleTimer', debugID, timerType);
            markBegin(debugID, timerType);
            beginLifeCycleTimer(debugID, timerType);
          },
          onEndLifeCycleTimer: function (debugID, timerType) {
            checkDebugID(debugID);
            endLifeCycleTimer(debugID, timerType);
            markEnd(debugID, timerType);
            emitEvent('onEndLifeCycleTimer', debugID, timerType);
          },
          onBeginProcessingChildContext: function () {
            emitEvent('onBeginProcessingChildContext');
          },
          onEndProcessingChildContext: function () {
            emitEvent('onEndProcessingChildContext');
          },
          onHostOperation: function (operation) {
            checkDebugID(operation.instanceID);
            emitEvent('onHostOperation', operation);
          },
          onSetState: function () {
            emitEvent('onSetState');
          },
          onSetChildren: function (debugID, childDebugIDs) {
            checkDebugID(debugID);
            childDebugIDs.forEach(checkDebugID);
            emitEvent('onSetChildren', debugID, childDebugIDs);
          },
          onBeforeMountComponent: function (debugID, element, parentDebugID) {
            checkDebugID(debugID);
            checkDebugID(parentDebugID, true);
            emitEvent('onBeforeMountComponent', debugID, element, parentDebugID);
            markBegin(debugID, 'mount');
          },
          onMountComponent: function (debugID) {
            checkDebugID(debugID);
            markEnd(debugID, 'mount');
            emitEvent('onMountComponent', debugID);
          },
          onBeforeUpdateComponent: function (debugID, element) {
            checkDebugID(debugID);
            emitEvent('onBeforeUpdateComponent', debugID, element);
            markBegin(debugID, 'update');
          },
          onUpdateComponent: function (debugID) {
            checkDebugID(debugID);
            markEnd(debugID, 'update');
            emitEvent('onUpdateComponent', debugID);
          },
          onBeforeUnmountComponent: function (debugID) {
            checkDebugID(debugID);
            emitEvent('onBeforeUnmountComponent', debugID);
            markBegin(debugID, 'unmount');
          },
          onUnmountComponent: function (debugID) {
            checkDebugID(debugID);
            markEnd(debugID, 'unmount');
            emitEvent('onUnmountComponent', debugID);
          },
          onTestEvent: function () {
            emitEvent('onTestEvent');
          },
        };

        // TODO remove these when RN/www gets updated
        ReactDebugTool.addDevtool = ReactDebugTool.addHook;
        ReactDebugTool.removeDevtool = ReactDebugTool.removeHook;

        ReactDebugTool.addHook(ReactInvalidSetStateWarningHook);
        ReactDebugTool.addHook(ReactComponentTreeHook);
        var url = (ExecutionEnvironment.canUseDOM && window.location.href) || '';
        if (/[?&]react_perf\b/.test(url)) {
          ReactDebugTool.beginProfiling();
        }

        module.exports = ReactDebugTool;
        /* WEBPACK VAR INJECTION */
      }.call(exports, __webpack_require__(1)));

      /***/
    },
    /* 690 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';
      /**
       * Copyright 2013-present, Facebook, Inc.
       * All rights reserved.
       *
       * This source code is licensed under the BSD-style license found in the
       * LICENSE file in the root directory of this source tree. An additional grant
       * of patent rights can be found in the PATENTS file in the same directory.
       *
       */

      var _assign = __webpack_require__(12);

      var ReactUpdates = __webpack_require__(41);
      var Transaction = __webpack_require__(123);

      var emptyFunction = __webpack_require__(28);

      var RESET_BATCHED_UPDATES = {
        initialize: emptyFunction,
        close: function () {
          ReactDefaultBatchingStrategy.isBatchingUpdates = false;
        },
      };

      var FLUSH_BATCHED_UPDATES = {
        initialize: emptyFunction,
        close: ReactUpdates.flushBatchedUpdates.bind(ReactUpdates),
      };

      var TRANSACTION_WRAPPERS = [FLUSH_BATCHED_UPDATES, RESET_BATCHED_UPDATES];

      function ReactDefaultBatchingStrategyTransaction() {
        this.reinitializeTransaction();
      }

      _assign(ReactDefaultBatchingStrategyTransaction.prototype, Transaction, {
        getTransactionWrappers: function () {
          return TRANSACTION_WRAPPERS;
        },
      });

      var transaction = new ReactDefaultBatchingStrategyTransaction();

      var ReactDefaultBatchingStrategy = {
        isBatchingUpdates: false,

        /**
         * Call the provided function in a context within which calls to `setState`
         * and friends are batched such that components aren't updated unnecessarily.
         */
        batchedUpdates: function (callback, a, b, c, d, e) {
          var alreadyBatchingUpdates = ReactDefaultBatchingStrategy.isBatchingUpdates;

          ReactDefaultBatchingStrategy.isBatchingUpdates = true;

          // The code is written this way to avoid extra allocations
          if (alreadyBatchingUpdates) {
            return callback(a, b, c, d, e);
          } else {
            return transaction.perform(callback, null, a, b, c, d, e);
          }
        },
      };

      module.exports = ReactDefaultBatchingStrategy;

      /***/
    },
    /* 691 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';
      /**
       * Copyright 2013-present, Facebook, Inc.
       * All rights reserved.
       *
       * This source code is licensed under the BSD-style license found in the
       * LICENSE file in the root directory of this source tree. An additional grant
       * of patent rights can be found in the PATENTS file in the same directory.
       *
       */

      var ARIADOMPropertyConfig = __webpack_require__(661);
      var BeforeInputEventPlugin = __webpack_require__(663);
      var ChangeEventPlugin = __webpack_require__(665);
      var DefaultEventPluginOrder = __webpack_require__(667);
      var EnterLeaveEventPlugin = __webpack_require__(668);
      var HTMLDOMPropertyConfig = __webpack_require__(670);
      var ReactComponentBrowserEnvironment = __webpack_require__(672);
      var ReactDOMComponent = __webpack_require__(675);
      var ReactDOMComponentTree = __webpack_require__(15);
      var ReactDOMEmptyComponent = __webpack_require__(677);
      var ReactDOMTreeTraversal = __webpack_require__(687);
      var ReactDOMTextComponent = __webpack_require__(685);
      var ReactDefaultBatchingStrategy = __webpack_require__(690);
      var ReactEventListener = __webpack_require__(694);
      var ReactInjection = __webpack_require__(696);
      var ReactReconcileTransaction = __webpack_require__(702);
      var SVGDOMPropertyConfig = __webpack_require__(707);
      var SelectEventPlugin = __webpack_require__(708);
      var SimpleEventPlugin = __webpack_require__(709);

      var alreadyInjected = false;

      function inject() {
        if (alreadyInjected) {
          // TODO: This is currently true because these injections are shared between
          // the client and the server package. They should be built independently
          // and not share any injection state. Then this problem will be solved.
          return;
        }
        alreadyInjected = true;

        ReactInjection.EventEmitter.injectReactEventListener(ReactEventListener);

        /**
         * Inject modules for resolving DOM hierarchy and plugin ordering.
         */
        ReactInjection.EventPluginHub.injectEventPluginOrder(DefaultEventPluginOrder);
        ReactInjection.EventPluginUtils.injectComponentTree(ReactDOMComponentTree);
        ReactInjection.EventPluginUtils.injectTreeTraversal(ReactDOMTreeTraversal);

        /**
         * Some important event plugins included by default (without having to require
         * them).
         */
        ReactInjection.EventPluginHub.injectEventPluginsByName({
          SimpleEventPlugin: SimpleEventPlugin,
          EnterLeaveEventPlugin: EnterLeaveEventPlugin,
          ChangeEventPlugin: ChangeEventPlugin,
          SelectEventPlugin: SelectEventPlugin,
          BeforeInputEventPlugin: BeforeInputEventPlugin,
        });

        ReactInjection.HostComponent.injectGenericComponentClass(ReactDOMComponent);

        ReactInjection.HostComponent.injectTextComponentClass(ReactDOMTextComponent);

        ReactInjection.DOMProperty.injectDOMPropertyConfig(ARIADOMPropertyConfig);
        ReactInjection.DOMProperty.injectDOMPropertyConfig(HTMLDOMPropertyConfig);
        ReactInjection.DOMProperty.injectDOMPropertyConfig(SVGDOMPropertyConfig);

        ReactInjection.EmptyComponent.injectEmptyComponentFactory(function (instantiate) {
          return new ReactDOMEmptyComponent(instantiate);
        });

        ReactInjection.Updates.injectReconcileTransaction(ReactReconcileTransaction);
        ReactInjection.Updates.injectBatchingStrategy(ReactDefaultBatchingStrategy);

        ReactInjection.Component.injectEnvironment(ReactComponentBrowserEnvironment);
      }

      module.exports = {
        inject: inject,
      };

      /***/
    },
    /* 692 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';
      /**
       * Copyright 2014-present, Facebook, Inc.
       * All rights reserved.
       *
       * This source code is licensed under the BSD-style license found in the
       * LICENSE file in the root directory of this source tree. An additional grant
       * of patent rights can be found in the PATENTS file in the same directory.
       *
       *
       */

      // The Symbol used to tag the ReactElement type. If there is no native Symbol
      // nor polyfill, then a plain number is used for performance.

      var REACT_ELEMENT_TYPE =
        (typeof Symbol === 'function' && Symbol['for'] && Symbol['for']('react.element')) || 0xeac7;

      module.exports = REACT_ELEMENT_TYPE;

      /***/
    },
    /* 693 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';
      /**
       * Copyright 2013-present, Facebook, Inc.
       * All rights reserved.
       *
       * This source code is licensed under the BSD-style license found in the
       * LICENSE file in the root directory of this source tree. An additional grant
       * of patent rights can be found in the PATENTS file in the same directory.
       *
       */

      var EventPluginHub = __webpack_require__(97);

      function runEventQueueInBatch(events) {
        EventPluginHub.enqueueEvents(events);
        EventPluginHub.processEventQueue(false);
      }

      var ReactEventEmitterMixin = {
        /**
         * Streams a fired top-level event to `EventPluginHub` where plugins have the
         * opportunity to create `ReactEvent`s to be dispatched.
         */
        handleTopLevel: function (topLevelType, targetInst, nativeEvent, nativeEventTarget) {
          var events = EventPluginHub.extractEvents(
            topLevelType,
            targetInst,
            nativeEvent,
            nativeEventTarget
          );
          runEventQueueInBatch(events);
        },
      };

      module.exports = ReactEventEmitterMixin;

      /***/
    },
    /* 694 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';
      /**
       * Copyright 2013-present, Facebook, Inc.
       * All rights reserved.
       *
       * This source code is licensed under the BSD-style license found in the
       * LICENSE file in the root directory of this source tree. An additional grant
       * of patent rights can be found in the PATENTS file in the same directory.
       *
       */

      var _assign = __webpack_require__(12);

      var EventListener = __webpack_require__(260);
      var ExecutionEnvironment = __webpack_require__(18);
      var PooledClass = __webpack_require__(68);
      var ReactDOMComponentTree = __webpack_require__(15);
      var ReactUpdates = __webpack_require__(41);

      var getEventTarget = __webpack_require__(196);
      var getUnboundedScrollPosition = __webpack_require__(613);

      /**
       * Find the deepest React component completely containing the root of the
       * passed-in instance (for use when entire React trees are nested within each
       * other). If React trees are not nested, returns null.
       */
      function findParent(inst) {
        // TODO: It may be a good idea to cache this to prevent unnecessary DOM
        // traversal, but caching is difficult to do correctly without using a
        // mutation observer to listen for all DOM changes.
        while (inst._hostParent) {
          inst = inst._hostParent;
        }
        var rootNode = ReactDOMComponentTree.getNodeFromInstance(inst);
        var container = rootNode.parentNode;
        return ReactDOMComponentTree.getClosestInstanceFromNode(container);
      }

      // Used to store ancestor hierarchy in top level callback
      function TopLevelCallbackBookKeeping(topLevelType, nativeEvent) {
        this.topLevelType = topLevelType;
        this.nativeEvent = nativeEvent;
        this.ancestors = [];
      }
      _assign(TopLevelCallbackBookKeeping.prototype, {
        destructor: function () {
          this.topLevelType = null;
          this.nativeEvent = null;
          this.ancestors.length = 0;
        },
      });
      PooledClass.addPoolingTo(TopLevelCallbackBookKeeping, PooledClass.twoArgumentPooler);

      function handleTopLevelImpl(bookKeeping) {
        var nativeEventTarget = getEventTarget(bookKeeping.nativeEvent);
        var targetInst = ReactDOMComponentTree.getClosestInstanceFromNode(nativeEventTarget);

        // Loop through the hierarchy, in case there's any nested components.
        // It's important that we build the array of ancestors before calling any
        // event handlers, because event handlers can modify the DOM, leading to
        // inconsistencies with ReactMount's node cache. See #1105.
        var ancestor = targetInst;
        do {
          bookKeeping.ancestors.push(ancestor);
          ancestor = ancestor && findParent(ancestor);
        } while (ancestor);

        for (var i = 0; i < bookKeeping.ancestors.length; i++) {
          targetInst = bookKeeping.ancestors[i];
          ReactEventListener._handleTopLevel(
            bookKeeping.topLevelType,
            targetInst,
            bookKeeping.nativeEvent,
            getEventTarget(bookKeeping.nativeEvent)
          );
        }
      }

      function scrollValueMonitor(cb) {
        var scrollPosition = getUnboundedScrollPosition(window);
        cb(scrollPosition);
      }

      var ReactEventListener = {
        _enabled: true,
        _handleTopLevel: null,

        WINDOW_HANDLE: ExecutionEnvironment.canUseDOM ? window : null,

        setHandleTopLevel: function (handleTopLevel) {
          ReactEventListener._handleTopLevel = handleTopLevel;
        },

        setEnabled: function (enabled) {
          ReactEventListener._enabled = !!enabled;
        },

        isEnabled: function () {
          return ReactEventListener._enabled;
        },

        /**
         * Traps top-level events by using event bubbling.
         *
         * @param {string} topLevelType Record from `EventConstants`.
         * @param {string} handlerBaseName Event name (e.g. "click").
         * @param {object} element Element on which to attach listener.
         * @return {?object} An object with a remove function which will forcefully
         *                  remove the listener.
         * @internal
         */
        trapBubbledEvent: function (topLevelType, handlerBaseName, element) {
          if (!element) {
            return null;
          }
          return EventListener.listen(
            element,
            handlerBaseName,
            ReactEventListener.dispatchEvent.bind(null, topLevelType)
          );
        },

        /**
         * Traps a top-level event by using event capturing.
         *
         * @param {string} topLevelType Record from `EventConstants`.
         * @param {string} handlerBaseName Event name (e.g. "click").
         * @param {object} element Element on which to attach listener.
         * @return {?object} An object with a remove function which will forcefully
         *                  remove the listener.
         * @internal
         */
        trapCapturedEvent: function (topLevelType, handlerBaseName, element) {
          if (!element) {
            return null;
          }
          return EventListener.capture(
            element,
            handlerBaseName,
            ReactEventListener.dispatchEvent.bind(null, topLevelType)
          );
        },

        monitorScrollValue: function (refresh) {
          var callback = scrollValueMonitor.bind(null, refresh);
          EventListener.listen(window, 'scroll', callback);
        },

        dispatchEvent: function (topLevelType, nativeEvent) {
          if (!ReactEventListener._enabled) {
            return;
          }

          var bookKeeping = TopLevelCallbackBookKeeping.getPooled(topLevelType, nativeEvent);
          try {
            // Event queue being processed in the same cycle allows
            // `preventDefault`.
            ReactUpdates.batchedUpdates(handleTopLevelImpl, bookKeeping);
          } finally {
            TopLevelCallbackBookKeeping.release(bookKeeping);
          }
        },
      };

      module.exports = ReactEventListener;

      /***/
    },
    /* 695 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';
      /**
       * Copyright 2016-present, Facebook, Inc.
       * All rights reserved.
       *
       * This source code is licensed under the BSD-style license found in the
       * LICENSE file in the root directory of this source tree. An additional grant
       * of patent rights can be found in the PATENTS file in the same directory.
       *
       *
       */

      var history = [];

      var ReactHostOperationHistoryHook = {
        onHostOperation: function (operation) {
          history.push(operation);
        },
        clearHistory: function () {
          if (ReactHostOperationHistoryHook._preventClearing) {
            // Should only be used for tests.
            return;
          }

          history = [];
        },
        getHistory: function () {
          return history;
        },
      };

      module.exports = ReactHostOperationHistoryHook;

      /***/
    },
    /* 696 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';
      /**
       * Copyright 2013-present, Facebook, Inc.
       * All rights reserved.
       *
       * This source code is licensed under the BSD-style license found in the
       * LICENSE file in the root directory of this source tree. An additional grant
       * of patent rights can be found in the PATENTS file in the same directory.
       *
       */

      var DOMProperty = __webpack_require__(53);
      var EventPluginHub = __webpack_require__(97);
      var EventPluginUtils = __webpack_require__(187);
      var ReactComponentEnvironment = __webpack_require__(190);
      var ReactEmptyComponent = __webpack_require__(286);
      var ReactBrowserEventEmitter = __webpack_require__(121);
      var ReactHostComponent = __webpack_require__(288);
      var ReactUpdates = __webpack_require__(41);

      var ReactInjection = {
        Component: ReactComponentEnvironment.injection,
        DOMProperty: DOMProperty.injection,
        EmptyComponent: ReactEmptyComponent.injection,
        EventPluginHub: EventPluginHub.injection,
        EventPluginUtils: EventPluginUtils.injection,
        EventEmitter: ReactBrowserEventEmitter.injection,
        HostComponent: ReactHostComponent.injection,
        Updates: ReactUpdates.injection,
      };

      module.exports = ReactInjection;

      /***/
    },
    /* 697 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';
      /* WEBPACK VAR INJECTION */ (function (process) {
        /**
         * Copyright 2016-present, Facebook, Inc.
         * All rights reserved.
         *
         * This source code is licensed under the BSD-style license found in the
         * LICENSE file in the root directory of this source tree. An additional grant
         * of patent rights can be found in the PATENTS file in the same directory.
         *
         *
         */

        var warning = __webpack_require__(3);

        if (process.env.NODE_ENV !== 'production') {
          var processingChildContext = false;

          var warnInvalidSetState = function () {
            process.env.NODE_ENV !== 'production'
              ? warning(
                  !processingChildContext,
                  'setState(...): Cannot call setState() inside getChildContext()'
                )
              : void 0;
          };
        }

        var ReactInvalidSetStateWarningHook = {
          onBeginProcessingChildContext: function () {
            processingChildContext = true;
          },
          onEndProcessingChildContext: function () {
            processingChildContext = false;
          },
          onSetState: function () {
            warnInvalidSetState();
          },
        };

        module.exports = ReactInvalidSetStateWarningHook;
        /* WEBPACK VAR INJECTION */
      }.call(exports, __webpack_require__(1)));

      /***/
    },
    /* 698 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';
      /**
       * Copyright 2013-present, Facebook, Inc.
       * All rights reserved.
       *
       * This source code is licensed under the BSD-style license found in the
       * LICENSE file in the root directory of this source tree. An additional grant
       * of patent rights can be found in the PATENTS file in the same directory.
       *
       */

      var adler32 = __webpack_require__(720);

      var TAG_END = /\/?>/;
      var COMMENT_START = /^<\!\-\-/;

      var ReactMarkupChecksum = {
        CHECKSUM_ATTR_NAME: 'data-react-checksum',

        /**
         * @param {string} markup Markup string
         * @return {string} Markup string with checksum attribute attached
         */
        addChecksumToMarkup: function (markup) {
          var checksum = adler32(markup);

          // Add checksum (handle both parent tags, comments and self-closing tags)
          if (COMMENT_START.test(markup)) {
            return markup;
          } else {
            return markup.replace(
              TAG_END,
              ' ' + ReactMarkupChecksum.CHECKSUM_ATTR_NAME + '="' + checksum + '"$&'
            );
          }
        },

        /**
         * @param {string} markup to use
         * @param {DOMElement} element root React element
         * @returns {boolean} whether or not the markup is the same
         */
        canReuseMarkup: function (markup, element) {
          var existingChecksum = element.getAttribute(ReactMarkupChecksum.CHECKSUM_ATTR_NAME);
          existingChecksum = existingChecksum && parseInt(existingChecksum, 10);
          var markupChecksum = adler32(markup);
          return markupChecksum === existingChecksum;
        },
      };

      module.exports = ReactMarkupChecksum;

      /***/
    },
    /* 699 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';
      /* WEBPACK VAR INJECTION */ (function (process) {
        /**
         * Copyright 2013-present, Facebook, Inc.
         * All rights reserved.
         *
         * This source code is licensed under the BSD-style license found in the
         * LICENSE file in the root directory of this source tree. An additional grant
         * of patent rights can be found in the PATENTS file in the same directory.
         *
         */

        var _prodInvariant = __webpack_require__(8);

        var ReactComponentEnvironment = __webpack_require__(190);
        var ReactInstanceMap = __webpack_require__(99);
        var ReactInstrumentation = __webpack_require__(32);

        var ReactCurrentOwner = __webpack_require__(42);
        var ReactReconciler = __webpack_require__(84);
        var ReactChildReconciler = __webpack_require__(671);

        var emptyFunction = __webpack_require__(28);
        var flattenChildren = __webpack_require__(724);
        var invariant = __webpack_require__(2);

        /**
         * Make an update for markup to be rendered and inserted at a supplied index.
         *
         * @param {string} markup Markup that renders into an element.
         * @param {number} toIndex Destination index.
         * @private
         */
        function makeInsertMarkup(markup, afterNode, toIndex) {
          // NOTE: Null values reduce hidden classes.
          return {
            type: 'INSERT_MARKUP',
            content: markup,
            fromIndex: null,
            fromNode: null,
            toIndex: toIndex,
            afterNode: afterNode,
          };
        }

        /**
         * Make an update for moving an existing element to another index.
         *
         * @param {number} fromIndex Source index of the existing element.
         * @param {number} toIndex Destination index of the element.
         * @private
         */
        function makeMove(child, afterNode, toIndex) {
          // NOTE: Null values reduce hidden classes.
          return {
            type: 'MOVE_EXISTING',
            content: null,
            fromIndex: child._mountIndex,
            fromNode: ReactReconciler.getHostNode(child),
            toIndex: toIndex,
            afterNode: afterNode,
          };
        }

        /**
         * Make an update for removing an element at an index.
         *
         * @param {number} fromIndex Index of the element to remove.
         * @private
         */
        function makeRemove(child, node) {
          // NOTE: Null values reduce hidden classes.
          return {
            type: 'REMOVE_NODE',
            content: null,
            fromIndex: child._mountIndex,
            fromNode: node,
            toIndex: null,
            afterNode: null,
          };
        }

        /**
         * Make an update for setting the markup of a node.
         *
         * @param {string} markup Markup that renders into an element.
         * @private
         */
        function makeSetMarkup(markup) {
          // NOTE: Null values reduce hidden classes.
          return {
            type: 'SET_MARKUP',
            content: markup,
            fromIndex: null,
            fromNode: null,
            toIndex: null,
            afterNode: null,
          };
        }

        /**
         * Make an update for setting the text content.
         *
         * @param {string} textContent Text content to set.
         * @private
         */
        function makeTextContent(textContent) {
          // NOTE: Null values reduce hidden classes.
          return {
            type: 'TEXT_CONTENT',
            content: textContent,
            fromIndex: null,
            fromNode: null,
            toIndex: null,
            afterNode: null,
          };
        }

        /**
         * Push an update, if any, onto the queue. Creates a new queue if none is
         * passed and always returns the queue. Mutative.
         */
        function enqueue(queue, update) {
          if (update) {
            queue = queue || [];
            queue.push(update);
          }
          return queue;
        }

        /**
         * Processes any enqueued updates.
         *
         * @private
         */
        function processQueue(inst, updateQueue) {
          ReactComponentEnvironment.processChildrenUpdates(inst, updateQueue);
        }

        var setChildrenForInstrumentation = emptyFunction;
        if (process.env.NODE_ENV !== 'production') {
          var getDebugID = function (inst) {
            if (!inst._debugID) {
              // Check for ART-like instances. TODO: This is silly/gross.
              var internal;
              if ((internal = ReactInstanceMap.get(inst))) {
                inst = internal;
              }
            }
            return inst._debugID;
          };
          setChildrenForInstrumentation = function (children) {
            var debugID = getDebugID(this);
            // TODO: React Native empty components are also multichild.
            // This means they still get into this method but don't have _debugID.
            if (debugID !== 0) {
              ReactInstrumentation.debugTool.onSetChildren(
                debugID,
                children
                  ? Object.keys(children).map(function (key) {
                      return children[key]._debugID;
                    })
                  : []
              );
            }
          };
        }

        /**
         * ReactMultiChild are capable of reconciling multiple children.
         *
         * @class ReactMultiChild
         * @internal
         */
        var ReactMultiChild = {
          /**
           * Provides common functionality for components that must reconcile multiple
           * children. This is used by `ReactDOMComponent` to mount, update, and
           * unmount child components.
           *
           * @lends {ReactMultiChild.prototype}
           */
          Mixin: {
            _reconcilerInstantiateChildren: function (nestedChildren, transaction, context) {
              if (process.env.NODE_ENV !== 'production') {
                var selfDebugID = getDebugID(this);
                if (this._currentElement) {
                  try {
                    ReactCurrentOwner.current = this._currentElement._owner;
                    return ReactChildReconciler.instantiateChildren(
                      nestedChildren,
                      transaction,
                      context,
                      selfDebugID
                    );
                  } finally {
                    ReactCurrentOwner.current = null;
                  }
                }
              }
              return ReactChildReconciler.instantiateChildren(nestedChildren, transaction, context);
            },

            _reconcilerUpdateChildren: function (
              prevChildren,
              nextNestedChildrenElements,
              mountImages,
              removedNodes,
              transaction,
              context
            ) {
              var nextChildren;
              var selfDebugID = 0;
              if (process.env.NODE_ENV !== 'production') {
                selfDebugID = getDebugID(this);
                if (this._currentElement) {
                  try {
                    ReactCurrentOwner.current = this._currentElement._owner;
                    nextChildren = flattenChildren(nextNestedChildrenElements, selfDebugID);
                  } finally {
                    ReactCurrentOwner.current = null;
                  }
                  ReactChildReconciler.updateChildren(
                    prevChildren,
                    nextChildren,
                    mountImages,
                    removedNodes,
                    transaction,
                    this,
                    this._hostContainerInfo,
                    context,
                    selfDebugID
                  );
                  return nextChildren;
                }
              }
              nextChildren = flattenChildren(nextNestedChildrenElements, selfDebugID);
              ReactChildReconciler.updateChildren(
                prevChildren,
                nextChildren,
                mountImages,
                removedNodes,
                transaction,
                this,
                this._hostContainerInfo,
                context,
                selfDebugID
              );
              return nextChildren;
            },

            /**
             * Generates a "mount image" for each of the supplied children. In the case
             * of `ReactDOMComponent`, a mount image is a string of markup.
             *
             * @param {?object} nestedChildren Nested child maps.
             * @return {array} An array of mounted representations.
             * @internal
             */
            mountChildren: function (nestedChildren, transaction, context) {
              var children = this._reconcilerInstantiateChildren(
                nestedChildren,
                transaction,
                context
              );
              this._renderedChildren = children;

              var mountImages = [];
              var index = 0;
              for (var name in children) {
                if (children.hasOwnProperty(name)) {
                  var child = children[name];
                  var selfDebugID = 0;
                  if (process.env.NODE_ENV !== 'production') {
                    selfDebugID = getDebugID(this);
                  }
                  var mountImage = ReactReconciler.mountComponent(
                    child,
                    transaction,
                    this,
                    this._hostContainerInfo,
                    context,
                    selfDebugID
                  );
                  child._mountIndex = index++;
                  mountImages.push(mountImage);
                }
              }

              if (process.env.NODE_ENV !== 'production') {
                setChildrenForInstrumentation.call(this, children);
              }

              return mountImages;
            },

            /**
             * Replaces any rendered children with a text content string.
             *
             * @param {string} nextContent String of content.
             * @internal
             */
            updateTextContent: function (nextContent) {
              var prevChildren = this._renderedChildren;
              // Remove any rendered children.
              ReactChildReconciler.unmountChildren(prevChildren, false);
              for (var name in prevChildren) {
                if (prevChildren.hasOwnProperty(name)) {
                  true
                    ? process.env.NODE_ENV !== 'production'
                      ? invariant(false, 'updateTextContent called on non-empty component.')
                      : _prodInvariant('118')
                    : void 0;
                }
              }
              // Set new text content.
              var updates = [makeTextContent(nextContent)];
              processQueue(this, updates);
            },

            /**
             * Replaces any rendered children with a markup string.
             *
             * @param {string} nextMarkup String of markup.
             * @internal
             */
            updateMarkup: function (nextMarkup) {
              var prevChildren = this._renderedChildren;
              // Remove any rendered children.
              ReactChildReconciler.unmountChildren(prevChildren, false);
              for (var name in prevChildren) {
                if (prevChildren.hasOwnProperty(name)) {
                  true
                    ? process.env.NODE_ENV !== 'production'
                      ? invariant(false, 'updateTextContent called on non-empty component.')
                      : _prodInvariant('118')
                    : void 0;
                }
              }
              var updates = [makeSetMarkup(nextMarkup)];
              processQueue(this, updates);
            },

            /**
             * Updates the rendered children with new children.
             *
             * @param {?object} nextNestedChildrenElements Nested child element maps.
             * @param {ReactReconcileTransaction} transaction
             * @internal
             */
            updateChildren: function (nextNestedChildrenElements, transaction, context) {
              // Hook used by React ART
              this._updateChildren(nextNestedChildrenElements, transaction, context);
            },

            /**
             * @param {?object} nextNestedChildrenElements Nested child element maps.
             * @param {ReactReconcileTransaction} transaction
             * @final
             * @protected
             */
            _updateChildren: function (nextNestedChildrenElements, transaction, context) {
              var prevChildren = this._renderedChildren;
              var removedNodes = {};
              var mountImages = [];
              var nextChildren = this._reconcilerUpdateChildren(
                prevChildren,
                nextNestedChildrenElements,
                mountImages,
                removedNodes,
                transaction,
                context
              );
              if (!nextChildren && !prevChildren) {
                return;
              }
              var updates = null;
              var name;
              // `nextIndex` will increment for each child in `nextChildren`, but
              // `lastIndex` will be the last index visited in `prevChildren`.
              var nextIndex = 0;
              var lastIndex = 0;
              // `nextMountIndex` will increment for each newly mounted child.
              var nextMountIndex = 0;
              var lastPlacedNode = null;
              for (name in nextChildren) {
                if (!nextChildren.hasOwnProperty(name)) {
                  continue;
                }
                var prevChild = prevChildren && prevChildren[name];
                var nextChild = nextChildren[name];
                if (prevChild === nextChild) {
                  updates = enqueue(
                    updates,
                    this.moveChild(prevChild, lastPlacedNode, nextIndex, lastIndex)
                  );
                  lastIndex = Math.max(prevChild._mountIndex, lastIndex);
                  prevChild._mountIndex = nextIndex;
                } else {
                  if (prevChild) {
                    // Update `lastIndex` before `_mountIndex` gets unset by unmounting.
                    lastIndex = Math.max(prevChild._mountIndex, lastIndex);
                    // The `removedNodes` loop below will actually remove the child.
                  }
                  // The child must be instantiated before it's mounted.
                  updates = enqueue(
                    updates,
                    this._mountChildAtIndex(
                      nextChild,
                      mountImages[nextMountIndex],
                      lastPlacedNode,
                      nextIndex,
                      transaction,
                      context
                    )
                  );
                  nextMountIndex++;
                }
                nextIndex++;
                lastPlacedNode = ReactReconciler.getHostNode(nextChild);
              }
              // Remove children that are no longer present.
              for (name in removedNodes) {
                if (removedNodes.hasOwnProperty(name)) {
                  updates = enqueue(
                    updates,
                    this._unmountChild(prevChildren[name], removedNodes[name])
                  );
                }
              }
              if (updates) {
                processQueue(this, updates);
              }
              this._renderedChildren = nextChildren;

              if (process.env.NODE_ENV !== 'production') {
                setChildrenForInstrumentation.call(this, nextChildren);
              }
            },

            /**
             * Unmounts all rendered children. This should be used to clean up children
             * when this component is unmounted. It does not actually perform any
             * backend operations.
             *
             * @internal
             */
            unmountChildren: function (safely) {
              var renderedChildren = this._renderedChildren;
              ReactChildReconciler.unmountChildren(renderedChildren, safely);
              this._renderedChildren = null;
            },

            /**
             * Moves a child component to the supplied index.
             *
             * @param {ReactComponent} child Component to move.
             * @param {number} toIndex Destination index of the element.
             * @param {number} lastIndex Last index visited of the siblings of `child`.
             * @protected
             */
            moveChild: function (child, afterNode, toIndex, lastIndex) {
              // If the index of `child` is less than `lastIndex`, then it needs to
              // be moved. Otherwise, we do not need to move it because a child will be
              // inserted or moved before `child`.
              if (child._mountIndex < lastIndex) {
                return makeMove(child, afterNode, toIndex);
              }
            },

            /**
             * Creates a child component.
             *
             * @param {ReactComponent} child Component to create.
             * @param {string} mountImage Markup to insert.
             * @protected
             */
            createChild: function (child, afterNode, mountImage) {
              return makeInsertMarkup(mountImage, afterNode, child._mountIndex);
            },

            /**
             * Removes a child component.
             *
             * @param {ReactComponent} child Child to remove.
             * @protected
             */
            removeChild: function (child, node) {
              return makeRemove(child, node);
            },

            /**
             * Mounts a child with the supplied name.
             *
             * NOTE: This is part of `updateChildren` and is here for readability.
             *
             * @param {ReactComponent} child Component to mount.
             * @param {string} name Name of the child.
             * @param {number} index Index at which to insert the child.
             * @param {ReactReconcileTransaction} transaction
             * @private
             */
            _mountChildAtIndex: function (
              child,
              mountImage,
              afterNode,
              index,
              transaction,
              context
            ) {
              child._mountIndex = index;
              return this.createChild(child, afterNode, mountImage);
            },

            /**
             * Unmounts a rendered child.
             *
             * NOTE: This is part of `updateChildren` and is here for readability.
             *
             * @param {ReactComponent} child Component to unmount.
             * @private
             */
            _unmountChild: function (child, node) {
              var update = this.removeChild(child, node);
              child._mountIndex = null;
              return update;
            },
          },
        };

        module.exports = ReactMultiChild;
        /* WEBPACK VAR INJECTION */
      }.call(exports, __webpack_require__(1)));

      /***/
    },
    /* 700 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';
      /* WEBPACK VAR INJECTION */ (function (process) {
        /**
         * Copyright 2013-present, Facebook, Inc.
         * All rights reserved.
         *
         * This source code is licensed under the BSD-style license found in the
         * LICENSE file in the root directory of this source tree. An additional grant
         * of patent rights can be found in the PATENTS file in the same directory.
         *
         *
         */

        var _prodInvariant = __webpack_require__(8);

        var invariant = __webpack_require__(2);

        /**
         * @param {?object} object
         * @return {boolean} True if `object` is a valid owner.
         * @final
         */
        function isValidOwner(object) {
          return !!(
            object &&
            typeof object.attachRef === 'function' &&
            typeof object.detachRef === 'function'
          );
        }

        /**
         * ReactOwners are capable of storing references to owned components.
         *
         * All components are capable of //being// referenced by owner components, but
         * only ReactOwner components are capable of //referencing// owned components.
         * The named reference is known as a "ref".
         *
         * Refs are available when mounted and updated during reconciliation.
         *
         *   var MyComponent = React.createClass({
         *     render: function() {
         *       return (
         *         <div onClick={this.handleClick}>
         *           <CustomComponent ref="custom" />
         *         </div>
         *       );
         *     },
         *     handleClick: function() {
         *       this.refs.custom.handleClick();
         *     },
         *     componentDidMount: function() {
         *       this.refs.custom.initialize();
         *     }
         *   });
         *
         * Refs should rarely be used. When refs are used, they should only be done to
         * control data that is not handled by React's data flow.
         *
         * @class ReactOwner
         */
        var ReactOwner = {
          /**
           * Adds a component by ref to an owner component.
           *
           * @param {ReactComponent} component Component to reference.
           * @param {string} ref Name by which to refer to the component.
           * @param {ReactOwner} owner Component on which to record the ref.
           * @final
           * @internal
           */
          addComponentAsRefTo: function (component, ref, owner) {
            !isValidOwner(owner)
              ? process.env.NODE_ENV !== 'production'
                ? invariant(
                    false,
                    "addComponentAsRefTo(...): Only a ReactOwner can have refs. You might be adding a ref to a component that was not created inside a component's `render` method, or you have multiple copies of React loaded (details: https://fb.me/react-refs-must-have-owner)."
                  )
                : _prodInvariant('119')
              : void 0;
            owner.attachRef(ref, component);
          },

          /**
           * Removes a component by ref from an owner component.
           *
           * @param {ReactComponent} component Component to dereference.
           * @param {string} ref Name of the ref to remove.
           * @param {ReactOwner} owner Component on which the ref is recorded.
           * @final
           * @internal
           */
          removeComponentAsRefFrom: function (component, ref, owner) {
            !isValidOwner(owner)
              ? process.env.NODE_ENV !== 'production'
                ? invariant(
                    false,
                    "removeComponentAsRefFrom(...): Only a ReactOwner can have refs. You might be removing a ref to a component that was not created inside a component's `render` method, or you have multiple copies of React loaded (details: https://fb.me/react-refs-must-have-owner)."
                  )
                : _prodInvariant('120')
              : void 0;
            var ownerPublicInstance = owner.getPublicInstance();
            // Check that `component`'s owner is still alive and that `component` is still the current ref
            // because we do not want to detach the ref if another component stole it.
            if (
              ownerPublicInstance &&
              ownerPublicInstance.refs[ref] === component.getPublicInstance()
            ) {
              owner.detachRef(ref);
            }
          },
        };

        module.exports = ReactOwner;
        /* WEBPACK VAR INJECTION */
      }.call(exports, __webpack_require__(1)));

      /***/
    },
    /* 701 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';
      /* WEBPACK VAR INJECTION */ (function (process) {
        /**
         * Copyright 2013-present, Facebook, Inc.
         * All rights reserved.
         *
         * This source code is licensed under the BSD-style license found in the
         * LICENSE file in the root directory of this source tree. An additional grant
         * of patent rights can be found in the PATENTS file in the same directory.
         *
         *
         */

        var ReactPropTypeLocationNames = {};

        if (process.env.NODE_ENV !== 'production') {
          ReactPropTypeLocationNames = {
            prop: 'prop',
            context: 'context',
            childContext: 'child context',
          };
        }

        module.exports = ReactPropTypeLocationNames;
        /* WEBPACK VAR INJECTION */
      }.call(exports, __webpack_require__(1)));

      /***/
    },
    /* 702 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';
      /* WEBPACK VAR INJECTION */ (function (process) {
        /**
         * Copyright 2013-present, Facebook, Inc.
         * All rights reserved.
         *
         * This source code is licensed under the BSD-style license found in the
         * LICENSE file in the root directory of this source tree. An additional grant
         * of patent rights can be found in the PATENTS file in the same directory.
         *
         */

        var _assign = __webpack_require__(12);

        var CallbackQueue = __webpack_require__(282);
        var PooledClass = __webpack_require__(68);
        var ReactBrowserEventEmitter = __webpack_require__(121);
        var ReactInputSelection = __webpack_require__(289);
        var ReactInstrumentation = __webpack_require__(32);
        var Transaction = __webpack_require__(123);
        var ReactUpdateQueue = __webpack_require__(192);

        /**
         * Ensures that, when possible, the selection range (currently selected text
         * input) is not disturbed by performing the transaction.
         */
        var SELECTION_RESTORATION = {
          /**
           * @return {Selection} Selection information.
           */
          initialize: ReactInputSelection.getSelectionInformation,
          /**
           * @param {Selection} sel Selection information returned from `initialize`.
           */
          close: ReactInputSelection.restoreSelection,
        };

        /**
         * Suppresses events (blur/focus) that could be inadvertently dispatched due to
         * high level DOM manipulations (like temporarily removing a text input from the
         * DOM).
         */
        var EVENT_SUPPRESSION = {
          /**
           * @return {boolean} The enabled status of `ReactBrowserEventEmitter` before
           * the reconciliation.
           */
          initialize: function () {
            var currentlyEnabled = ReactBrowserEventEmitter.isEnabled();
            ReactBrowserEventEmitter.setEnabled(false);
            return currentlyEnabled;
          },

          /**
           * @param {boolean} previouslyEnabled Enabled status of
           *   `ReactBrowserEventEmitter` before the reconciliation occurred. `close`
           *   restores the previous value.
           */
          close: function (previouslyEnabled) {
            ReactBrowserEventEmitter.setEnabled(previouslyEnabled);
          },
        };

        /**
         * Provides a queue for collecting `componentDidMount` and
         * `componentDidUpdate` callbacks during the transaction.
         */
        var ON_DOM_READY_QUEUEING = {
          /**
           * Initializes the internal `onDOMReady` queue.
           */
          initialize: function () {
            this.reactMountReady.reset();
          },

          /**
           * After DOM is flushed, invoke all registered `onDOMReady` callbacks.
           */
          close: function () {
            this.reactMountReady.notifyAll();
          },
        };

        /**
         * Executed within the scope of the `Transaction` instance. Consider these as
         * being member methods, but with an implied ordering while being isolated from
         * each other.
         */
        var TRANSACTION_WRAPPERS = [
          SELECTION_RESTORATION,
          EVENT_SUPPRESSION,
          ON_DOM_READY_QUEUEING,
        ];

        if (process.env.NODE_ENV !== 'production') {
          TRANSACTION_WRAPPERS.push({
            initialize: ReactInstrumentation.debugTool.onBeginFlush,
            close: ReactInstrumentation.debugTool.onEndFlush,
          });
        }

        /**
         * Currently:
         * - The order that these are listed in the transaction is critical:
         * - Suppresses events.
         * - Restores selection range.
         *
         * Future:
         * - Restore document/overflow scroll positions that were unintentionally
         *   modified via DOM insertions above the top viewport boundary.
         * - Implement/integrate with customized constraint based layout system and keep
         *   track of which dimensions must be remeasured.
         *
         * @class ReactReconcileTransaction
         */
        function ReactReconcileTransaction(useCreateElement) {
          this.reinitializeTransaction();
          // Only server-side rendering really needs this option (see
          // `ReactServerRendering`), but server-side uses
          // `ReactServerRenderingTransaction` instead. This option is here so that it's
          // accessible and defaults to false when `ReactDOMComponent` and
          // `ReactDOMTextComponent` checks it in `mountComponent`.`
          this.renderToStaticMarkup = false;
          this.reactMountReady = CallbackQueue.getPooled(null);
          this.useCreateElement = useCreateElement;
        }

        var Mixin = {
          /**
           * @see Transaction
           * @abstract
           * @final
           * @return {array<object>} List of operation wrap procedures.
           *   TODO: convert to array<TransactionWrapper>
           */
          getTransactionWrappers: function () {
            return TRANSACTION_WRAPPERS;
          },

          /**
           * @return {object} The queue to collect `onDOMReady` callbacks with.
           */
          getReactMountReady: function () {
            return this.reactMountReady;
          },

          /**
           * @return {object} The queue to collect React async events.
           */
          getUpdateQueue: function () {
            return ReactUpdateQueue;
          },

          /**
           * Save current transaction state -- if the return value from this method is
           * passed to `rollback`, the transaction will be reset to that state.
           */
          checkpoint: function () {
            // reactMountReady is the our only stateful wrapper
            return this.reactMountReady.checkpoint();
          },

          rollback: function (checkpoint) {
            this.reactMountReady.rollback(checkpoint);
          },

          /**
           * `PooledClass` looks for this, and will invoke this before allowing this
           * instance to be reused.
           */
          destructor: function () {
            CallbackQueue.release(this.reactMountReady);
            this.reactMountReady = null;
          },
        };

        _assign(ReactReconcileTransaction.prototype, Transaction, Mixin);

        PooledClass.addPoolingTo(ReactReconcileTransaction);

        module.exports = ReactReconcileTransaction;
        /* WEBPACK VAR INJECTION */
      }.call(exports, __webpack_require__(1)));

      /***/
    },
    /* 703 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';
      /**
       * Copyright 2013-present, Facebook, Inc.
       * All rights reserved.
       *
       * This source code is licensed under the BSD-style license found in the
       * LICENSE file in the root directory of this source tree. An additional grant
       * of patent rights can be found in the PATENTS file in the same directory.
       *
       *
       */

      var ReactOwner = __webpack_require__(700);

      var ReactRef = {};

      function attachRef(ref, component, owner) {
        if (typeof ref === 'function') {
          ref(component.getPublicInstance());
        } else {
          // Legacy ref
          ReactOwner.addComponentAsRefTo(component, ref, owner);
        }
      }

      function detachRef(ref, component, owner) {
        if (typeof ref === 'function') {
          ref(null);
        } else {
          // Legacy ref
          ReactOwner.removeComponentAsRefFrom(component, ref, owner);
        }
      }

      ReactRef.attachRefs = function (instance, element) {
        if (element === null || typeof element !== 'object') {
          return;
        }
        var ref = element.ref;
        if (ref != null) {
          attachRef(ref, instance, element._owner);
        }
      };

      ReactRef.shouldUpdateRefs = function (prevElement, nextElement) {
        // If either the owner or a `ref` has changed, make sure the newest owner
        // has stored a reference to `this`, and the previous owner (if different)
        // has forgotten the reference to `this`. We use the element instead
        // of the public this.props because the post processing cannot determine
        // a ref. The ref conceptually lives on the element.

        // TODO: Should this even be possible? The owner cannot change because
        // it's forbidden by shouldUpdateReactComponent. The ref can change
        // if you swap the keys of but not the refs. Reconsider where this check
        // is made. It probably belongs where the key checking and
        // instantiateReactComponent is done.

        var prevRef = null;
        var prevOwner = null;
        if (prevElement !== null && typeof prevElement === 'object') {
          prevRef = prevElement.ref;
          prevOwner = prevElement._owner;
        }

        var nextRef = null;
        var nextOwner = null;
        if (nextElement !== null && typeof nextElement === 'object') {
          nextRef = nextElement.ref;
          nextOwner = nextElement._owner;
        }

        return (
          prevRef !== nextRef ||
          // If owner changes but we have an unchanged function ref, don't update refs
          (typeof nextRef === 'string' && nextOwner !== prevOwner)
        );
      };

      ReactRef.detachRefs = function (instance, element) {
        if (element === null || typeof element !== 'object') {
          return;
        }
        var ref = element.ref;
        if (ref != null) {
          detachRef(ref, instance, element._owner);
        }
      };

      module.exports = ReactRef;

      /***/
    },
    /* 704 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';
      /* WEBPACK VAR INJECTION */ (function (process) {
        /**
         * Copyright 2014-present, Facebook, Inc.
         * All rights reserved.
         *
         * This source code is licensed under the BSD-style license found in the
         * LICENSE file in the root directory of this source tree. An additional grant
         * of patent rights can be found in the PATENTS file in the same directory.
         *
         */

        var _assign = __webpack_require__(12);

        var PooledClass = __webpack_require__(68);
        var Transaction = __webpack_require__(123);
        var ReactInstrumentation = __webpack_require__(32);
        var ReactServerUpdateQueue = __webpack_require__(705);

        /**
         * Executed within the scope of the `Transaction` instance. Consider these as
         * being member methods, but with an implied ordering while being isolated from
         * each other.
         */
        var TRANSACTION_WRAPPERS = [];

        if (process.env.NODE_ENV !== 'production') {
          TRANSACTION_WRAPPERS.push({
            initialize: ReactInstrumentation.debugTool.onBeginFlush,
            close: ReactInstrumentation.debugTool.onEndFlush,
          });
        }

        var noopCallbackQueue = {
          enqueue: function () {},
        };

        /**
         * @class ReactServerRenderingTransaction
         * @param {boolean} renderToStaticMarkup
         */
        function ReactServerRenderingTransaction(renderToStaticMarkup) {
          this.reinitializeTransaction();
          this.renderToStaticMarkup = renderToStaticMarkup;
          this.useCreateElement = false;
          this.updateQueue = new ReactServerUpdateQueue(this);
        }

        var Mixin = {
          /**
           * @see Transaction
           * @abstract
           * @final
           * @return {array} Empty list of operation wrap procedures.
           */
          getTransactionWrappers: function () {
            return TRANSACTION_WRAPPERS;
          },

          /**
           * @return {object} The queue to collect `onDOMReady` callbacks with.
           */
          getReactMountReady: function () {
            return noopCallbackQueue;
          },

          /**
           * @return {object} The queue to collect React async events.
           */
          getUpdateQueue: function () {
            return this.updateQueue;
          },

          /**
           * `PooledClass` looks for this, and will invoke this before allowing this
           * instance to be reused.
           */
          destructor: function () {},

          checkpoint: function () {},

          rollback: function () {},
        };

        _assign(ReactServerRenderingTransaction.prototype, Transaction, Mixin);

        PooledClass.addPoolingTo(ReactServerRenderingTransaction);

        module.exports = ReactServerRenderingTransaction;
        /* WEBPACK VAR INJECTION */
      }.call(exports, __webpack_require__(1)));

      /***/
    },
    /* 705 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';
      /* WEBPACK VAR INJECTION */ (function (process) {
        /**
         * Copyright 2015-present, Facebook, Inc.
         * All rights reserved.
         *
         * This source code is licensed under the BSD-style license found in the
         * LICENSE file in the root directory of this source tree. An additional grant
         * of patent rights can be found in the PATENTS file in the same directory.
         *
         *
         */

        function _classCallCheck(instance, Constructor) {
          if (!(instance instanceof Constructor)) {
            throw new TypeError('Cannot call a class as a function');
          }
        }

        var ReactUpdateQueue = __webpack_require__(192);

        var warning = __webpack_require__(3);

        function warnNoop(publicInstance, callerName) {
          if (process.env.NODE_ENV !== 'production') {
            var constructor = publicInstance.constructor;
            process.env.NODE_ENV !== 'production'
              ? warning(
                  false,
                  '%s(...): Can only update a mounting component. ' +
                    'This usually means you called %s() outside componentWillMount() on the server. ' +
                    'This is a no-op. Please check the code for the %s component.',
                  callerName,
                  callerName,
                  (constructor && (constructor.displayName || constructor.name)) || 'ReactClass'
                )
              : void 0;
          }
        }

        /**
         * This is the update queue used for server rendering.
         * It delegates to ReactUpdateQueue while server rendering is in progress and
         * switches to ReactNoopUpdateQueue after the transaction has completed.
         * @class ReactServerUpdateQueue
         * @param {Transaction} transaction
         */

        var ReactServerUpdateQueue = (function () {
          function ReactServerUpdateQueue(transaction) {
            _classCallCheck(this, ReactServerUpdateQueue);

            this.transaction = transaction;
          }

          /**
           * Checks whether or not this composite component is mounted.
           * @param {ReactClass} publicInstance The instance we want to test.
           * @return {boolean} True if mounted, false otherwise.
           * @protected
           * @final
           */

          ReactServerUpdateQueue.prototype.isMounted = function isMounted(publicInstance) {
            return false;
          };

          /**
           * Enqueue a callback that will be executed after all the pending updates
           * have processed.
           *
           * @param {ReactClass} publicInstance The instance to use as `this` context.
           * @param {?function} callback Called after state is updated.
           * @internal
           */

          ReactServerUpdateQueue.prototype.enqueueCallback = function enqueueCallback(
            publicInstance,
            callback,
            callerName
          ) {
            if (this.transaction.isInTransaction()) {
              ReactUpdateQueue.enqueueCallback(publicInstance, callback, callerName);
            }
          };

          /**
           * Forces an update. This should only be invoked when it is known with
           * certainty that we are **not** in a DOM transaction.
           *
           * You may want to call this when you know that some deeper aspect of the
           * component's state has changed but `setState` was not called.
           *
           * This will not invoke `shouldComponentUpdate`, but it will invoke
           * `componentWillUpdate` and `componentDidUpdate`.
           *
           * @param {ReactClass} publicInstance The instance that should rerender.
           * @internal
           */

          ReactServerUpdateQueue.prototype.enqueueForceUpdate = function enqueueForceUpdate(
            publicInstance
          ) {
            if (this.transaction.isInTransaction()) {
              ReactUpdateQueue.enqueueForceUpdate(publicInstance);
            } else {
              warnNoop(publicInstance, 'forceUpdate');
            }
          };

          /**
           * Replaces all of the state. Always use this or `setState` to mutate state.
           * You should treat `this.state` as immutable.
           *
           * There is no guarantee that `this.state` will be immediately updated, so
           * accessing `this.state` after calling this method may return the old value.
           *
           * @param {ReactClass} publicInstance The instance that should rerender.
           * @param {object|function} completeState Next state.
           * @internal
           */

          ReactServerUpdateQueue.prototype.enqueueReplaceState = function enqueueReplaceState(
            publicInstance,
            completeState
          ) {
            if (this.transaction.isInTransaction()) {
              ReactUpdateQueue.enqueueReplaceState(publicInstance, completeState);
            } else {
              warnNoop(publicInstance, 'replaceState');
            }
          };

          /**
           * Sets a subset of the state. This only exists because _pendingState is
           * internal. This provides a merging strategy that is not available to deep
           * properties which is confusing. TODO: Expose pendingState or don't use it
           * during the merge.
           *
           * @param {ReactClass} publicInstance The instance that should rerender.
           * @param {object|function} partialState Next partial state to be merged with state.
           * @internal
           */

          ReactServerUpdateQueue.prototype.enqueueSetState = function enqueueSetState(
            publicInstance,
            partialState
          ) {
            if (this.transaction.isInTransaction()) {
              ReactUpdateQueue.enqueueSetState(publicInstance, partialState);
            } else {
              warnNoop(publicInstance, 'setState');
            }
          };

          return ReactServerUpdateQueue;
        })();

        module.exports = ReactServerUpdateQueue;
        /* WEBPACK VAR INJECTION */
      }.call(exports, __webpack_require__(1)));

      /***/
    },
    /* 706 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';
      /**
       * Copyright 2013-present, Facebook, Inc.
       * All rights reserved.
       *
       * This source code is licensed under the BSD-style license found in the
       * LICENSE file in the root directory of this source tree. An additional grant
       * of patent rights can be found in the PATENTS file in the same directory.
       *
       */

      module.exports = '15.4.2';

      /***/
    },
    /* 707 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';
      /**
       * Copyright 2013-present, Facebook, Inc.
       * All rights reserved.
       *
       * This source code is licensed under the BSD-style license found in the
       * LICENSE file in the root directory of this source tree. An additional grant
       * of patent rights can be found in the PATENTS file in the same directory.
       *
       */

      var NS = {
        xlink: 'http://www.w3.org/1999/xlink',
        xml: 'http://www.w3.org/XML/1998/namespace',
      };

      // We use attributes for everything SVG so let's avoid some duplication and run
      // code instead.
      // The following are all specified in the HTML config already so we exclude here.
      // - class (as className)
      // - color
      // - height
      // - id
      // - lang
      // - max
      // - media
      // - method
      // - min
      // - name
      // - style
      // - target
      // - type
      // - width
      var ATTRS = {
        accentHeight: 'accent-height',
        accumulate: 0,
        additive: 0,
        alignmentBaseline: 'alignment-baseline',
        allowReorder: 'allowReorder',
        alphabetic: 0,
        amplitude: 0,
        arabicForm: 'arabic-form',
        ascent: 0,
        attributeName: 'attributeName',
        attributeType: 'attributeType',
        autoReverse: 'autoReverse',
        azimuth: 0,
        baseFrequency: 'baseFrequency',
        baseProfile: 'baseProfile',
        baselineShift: 'baseline-shift',
        bbox: 0,
        begin: 0,
        bias: 0,
        by: 0,
        calcMode: 'calcMode',
        capHeight: 'cap-height',
        clip: 0,
        clipPath: 'clip-path',
        clipRule: 'clip-rule',
        clipPathUnits: 'clipPathUnits',
        colorInterpolation: 'color-interpolation',
        colorInterpolationFilters: 'color-interpolation-filters',
        colorProfile: 'color-profile',
        colorRendering: 'color-rendering',
        contentScriptType: 'contentScriptType',
        contentStyleType: 'contentStyleType',
        cursor: 0,
        cx: 0,
        cy: 0,
        d: 0,
        decelerate: 0,
        descent: 0,
        diffuseConstant: 'diffuseConstant',
        direction: 0,
        display: 0,
        divisor: 0,
        dominantBaseline: 'dominant-baseline',
        dur: 0,
        dx: 0,
        dy: 0,
        edgeMode: 'edgeMode',
        elevation: 0,
        enableBackground: 'enable-background',
        end: 0,
        exponent: 0,
        externalResourcesRequired: 'externalResourcesRequired',
        fill: 0,
        fillOpacity: 'fill-opacity',
        fillRule: 'fill-rule',
        filter: 0,
        filterRes: 'filterRes',
        filterUnits: 'filterUnits',
        floodColor: 'flood-color',
        floodOpacity: 'flood-opacity',
        focusable: 0,
        fontFamily: 'font-family',
        fontSize: 'font-size',
        fontSizeAdjust: 'font-size-adjust',
        fontStretch: 'font-stretch',
        fontStyle: 'font-style',
        fontVariant: 'font-variant',
        fontWeight: 'font-weight',
        format: 0,
        from: 0,
        fx: 0,
        fy: 0,
        g1: 0,
        g2: 0,
        glyphName: 'glyph-name',
        glyphOrientationHorizontal: 'glyph-orientation-horizontal',
        glyphOrientationVertical: 'glyph-orientation-vertical',
        glyphRef: 'glyphRef',
        gradientTransform: 'gradientTransform',
        gradientUnits: 'gradientUnits',
        hanging: 0,
        horizAdvX: 'horiz-adv-x',
        horizOriginX: 'horiz-origin-x',
        ideographic: 0,
        imageRendering: 'image-rendering',
        in: 0,
        in2: 0,
        intercept: 0,
        k: 0,
        k1: 0,
        k2: 0,
        k3: 0,
        k4: 0,
        kernelMatrix: 'kernelMatrix',
        kernelUnitLength: 'kernelUnitLength',
        kerning: 0,
        keyPoints: 'keyPoints',
        keySplines: 'keySplines',
        keyTimes: 'keyTimes',
        lengthAdjust: 'lengthAdjust',
        letterSpacing: 'letter-spacing',
        lightingColor: 'lighting-color',
        limitingConeAngle: 'limitingConeAngle',
        local: 0,
        markerEnd: 'marker-end',
        markerMid: 'marker-mid',
        markerStart: 'marker-start',
        markerHeight: 'markerHeight',
        markerUnits: 'markerUnits',
        markerWidth: 'markerWidth',
        mask: 0,
        maskContentUnits: 'maskContentUnits',
        maskUnits: 'maskUnits',
        mathematical: 0,
        mode: 0,
        numOctaves: 'numOctaves',
        offset: 0,
        opacity: 0,
        operator: 0,
        order: 0,
        orient: 0,
        orientation: 0,
        origin: 0,
        overflow: 0,
        overlinePosition: 'overline-position',
        overlineThickness: 'overline-thickness',
        paintOrder: 'paint-order',
        panose1: 'panose-1',
        pathLength: 'pathLength',
        patternContentUnits: 'patternContentUnits',
        patternTransform: 'patternTransform',
        patternUnits: 'patternUnits',
        pointerEvents: 'pointer-events',
        points: 0,
        pointsAtX: 'pointsAtX',
        pointsAtY: 'pointsAtY',
        pointsAtZ: 'pointsAtZ',
        preserveAlpha: 'preserveAlpha',
        preserveAspectRatio: 'preserveAspectRatio',
        primitiveUnits: 'primitiveUnits',
        r: 0,
        radius: 0,
        refX: 'refX',
        refY: 'refY',
        renderingIntent: 'rendering-intent',
        repeatCount: 'repeatCount',
        repeatDur: 'repeatDur',
        requiredExtensions: 'requiredExtensions',
        requiredFeatures: 'requiredFeatures',
        restart: 0,
        result: 0,
        rotate: 0,
        rx: 0,
        ry: 0,
        scale: 0,
        seed: 0,
        shapeRendering: 'shape-rendering',
        slope: 0,
        spacing: 0,
        specularConstant: 'specularConstant',
        specularExponent: 'specularExponent',
        speed: 0,
        spreadMethod: 'spreadMethod',
        startOffset: 'startOffset',
        stdDeviation: 'stdDeviation',
        stemh: 0,
        stemv: 0,
        stitchTiles: 'stitchTiles',
        stopColor: 'stop-color',
        stopOpacity: 'stop-opacity',
        strikethroughPosition: 'strikethrough-position',
        strikethroughThickness: 'strikethrough-thickness',
        string: 0,
        stroke: 0,
        strokeDasharray: 'stroke-dasharray',
        strokeDashoffset: 'stroke-dashoffset',
        strokeLinecap: 'stroke-linecap',
        strokeLinejoin: 'stroke-linejoin',
        strokeMiterlimit: 'stroke-miterlimit',
        strokeOpacity: 'stroke-opacity',
        strokeWidth: 'stroke-width',
        surfaceScale: 'surfaceScale',
        systemLanguage: 'systemLanguage',
        tableValues: 'tableValues',
        targetX: 'targetX',
        targetY: 'targetY',
        textAnchor: 'text-anchor',
        textDecoration: 'text-decoration',
        textRendering: 'text-rendering',
        textLength: 'textLength',
        to: 0,
        transform: 0,
        u1: 0,
        u2: 0,
        underlinePosition: 'underline-position',
        underlineThickness: 'underline-thickness',
        unicode: 0,
        unicodeBidi: 'unicode-bidi',
        unicodeRange: 'unicode-range',
        unitsPerEm: 'units-per-em',
        vAlphabetic: 'v-alphabetic',
        vHanging: 'v-hanging',
        vIdeographic: 'v-ideographic',
        vMathematical: 'v-mathematical',
        values: 0,
        vectorEffect: 'vector-effect',
        version: 0,
        vertAdvY: 'vert-adv-y',
        vertOriginX: 'vert-origin-x',
        vertOriginY: 'vert-origin-y',
        viewBox: 'viewBox',
        viewTarget: 'viewTarget',
        visibility: 0,
        widths: 0,
        wordSpacing: 'word-spacing',
        writingMode: 'writing-mode',
        x: 0,
        xHeight: 'x-height',
        x1: 0,
        x2: 0,
        xChannelSelector: 'xChannelSelector',
        xlinkActuate: 'xlink:actuate',
        xlinkArcrole: 'xlink:arcrole',
        xlinkHref: 'xlink:href',
        xlinkRole: 'xlink:role',
        xlinkShow: 'xlink:show',
        xlinkTitle: 'xlink:title',
        xlinkType: 'xlink:type',
        xmlBase: 'xml:base',
        xmlns: 0,
        xmlnsXlink: 'xmlns:xlink',
        xmlLang: 'xml:lang',
        xmlSpace: 'xml:space',
        y: 0,
        y1: 0,
        y2: 0,
        yChannelSelector: 'yChannelSelector',
        z: 0,
        zoomAndPan: 'zoomAndPan',
      };

      var SVGDOMPropertyConfig = {
        Properties: {},
        DOMAttributeNamespaces: {
          xlinkActuate: NS.xlink,
          xlinkArcrole: NS.xlink,
          xlinkHref: NS.xlink,
          xlinkRole: NS.xlink,
          xlinkShow: NS.xlink,
          xlinkTitle: NS.xlink,
          xlinkType: NS.xlink,
          xmlBase: NS.xml,
          xmlLang: NS.xml,
          xmlSpace: NS.xml,
        },
        DOMAttributeNames: {},
      };

      Object.keys(ATTRS).forEach(function (key) {
        SVGDOMPropertyConfig.Properties[key] = 0;
        if (ATTRS[key]) {
          SVGDOMPropertyConfig.DOMAttributeNames[key] = ATTRS[key];
        }
      });

      module.exports = SVGDOMPropertyConfig;

      /***/
    },
    /* 708 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';
      /**
       * Copyright 2013-present, Facebook, Inc.
       * All rights reserved.
       *
       * This source code is licensed under the BSD-style license found in the
       * LICENSE file in the root directory of this source tree. An additional grant
       * of patent rights can be found in the PATENTS file in the same directory.
       *
       */

      var EventPropagators = __webpack_require__(98);
      var ExecutionEnvironment = __webpack_require__(18);
      var ReactDOMComponentTree = __webpack_require__(15);
      var ReactInputSelection = __webpack_require__(289);
      var SyntheticEvent = __webpack_require__(48);

      var getActiveElement = __webpack_require__(262);
      var isTextInputElement = __webpack_require__(299);
      var shallowEqual = __webpack_require__(173);

      var skipSelectionChangeEvent =
        ExecutionEnvironment.canUseDOM && 'documentMode' in document && document.documentMode <= 11;

      var eventTypes = {
        select: {
          phasedRegistrationNames: {
            bubbled: 'onSelect',
            captured: 'onSelectCapture',
          },
          dependencies: [
            'topBlur',
            'topContextMenu',
            'topFocus',
            'topKeyDown',
            'topKeyUp',
            'topMouseDown',
            'topMouseUp',
            'topSelectionChange',
          ],
        },
      };

      var activeElement = null;
      var activeElementInst = null;
      var lastSelection = null;
      var mouseDown = false;

      // Track whether a listener exists for this plugin. If none exist, we do
      // not extract events. See #3639.
      var hasListener = false;

      /**
       * Get an object which is a unique representation of the current selection.
       *
       * The return value will not be consistent across nodes or browsers, but
       * two identical selections on the same node will return identical objects.
       *
       * @param {DOMElement} node
       * @return {object}
       */
      function getSelection(node) {
        if ('selectionStart' in node && ReactInputSelection.hasSelectionCapabilities(node)) {
          return {
            start: node.selectionStart,
            end: node.selectionEnd,
          };
        } else if (window.getSelection) {
          var selection = window.getSelection();
          return {
            anchorNode: selection.anchorNode,
            anchorOffset: selection.anchorOffset,
            focusNode: selection.focusNode,
            focusOffset: selection.focusOffset,
          };
        } else if (document.selection) {
          var range = document.selection.createRange();
          return {
            parentElement: range.parentElement(),
            text: range.text,
            top: range.boundingTop,
            left: range.boundingLeft,
          };
        }
      }

      /**
       * Poll selection to see whether it's changed.
       *
       * @param {object} nativeEvent
       * @return {?SyntheticEvent}
       */
      function constructSelectEvent(nativeEvent, nativeEventTarget) {
        // Ensure we have the right element, and that the user is not dragging a
        // selection (this matches native `select` event behavior). In HTML5, select
        // fires only on input and textarea thus if there's no focused element we
        // won't dispatch.
        if (mouseDown || activeElement == null || activeElement !== getActiveElement()) {
          return null;
        }

        // Only fire when selection has actually changed.
        var currentSelection = getSelection(activeElement);
        if (!lastSelection || !shallowEqual(lastSelection, currentSelection)) {
          lastSelection = currentSelection;

          var syntheticEvent = SyntheticEvent.getPooled(
            eventTypes.select,
            activeElementInst,
            nativeEvent,
            nativeEventTarget
          );

          syntheticEvent.type = 'select';
          syntheticEvent.target = activeElement;

          EventPropagators.accumulateTwoPhaseDispatches(syntheticEvent);

          return syntheticEvent;
        }

        return null;
      }

      /**
       * This plugin creates an `onSelect` event that normalizes select events
       * across form elements.
       *
       * Supported elements are:
       * - input (see `isTextInputElement`)
       * - textarea
       * - contentEditable
       *
       * This differs from native browser implementations in the following ways:
       * - Fires on contentEditable fields as well as inputs.
       * - Fires for collapsed selection.
       * - Fires after user input.
       */
      var SelectEventPlugin = {
        eventTypes: eventTypes,

        extractEvents: function (topLevelType, targetInst, nativeEvent, nativeEventTarget) {
          if (!hasListener) {
            return null;
          }

          var targetNode = targetInst
            ? ReactDOMComponentTree.getNodeFromInstance(targetInst)
            : window;

          switch (topLevelType) {
            // Track the input node that has focus.
            case 'topFocus':
              if (isTextInputElement(targetNode) || targetNode.contentEditable === 'true') {
                activeElement = targetNode;
                activeElementInst = targetInst;
                lastSelection = null;
              }
              break;
            case 'topBlur':
              activeElement = null;
              activeElementInst = null;
              lastSelection = null;
              break;

            // Don't fire the event while the user is dragging. This matches the
            // semantics of the native select event.
            case 'topMouseDown':
              mouseDown = true;
              break;
            case 'topContextMenu':
            case 'topMouseUp':
              mouseDown = false;
              return constructSelectEvent(nativeEvent, nativeEventTarget);

            // Chrome and IE fire non-standard event when selection is changed (and
            // sometimes when it hasn't). IE's event fires out of order with respect
            // to key and input events on deletion, so we discard it.
            //
            // Firefox doesn't support selectionchange, so check selection status
            // after each key entry. The selection changes after keydown and before
            // keyup, but we check on keydown as well in the case of holding down a
            // key, when multiple keydown events are fired but only one keyup is.
            // This is also our approach for IE handling, for the reason above.
            case 'topSelectionChange':
              if (skipSelectionChangeEvent) {
                break;
              }
            // falls through
            case 'topKeyDown':
            case 'topKeyUp':
              return constructSelectEvent(nativeEvent, nativeEventTarget);
          }

          return null;
        },

        didPutListener: function (inst, registrationName, listener) {
          if (registrationName === 'onSelect') {
            hasListener = true;
          }
        },
      };

      module.exports = SelectEventPlugin;

      /***/
    },
    /* 709 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';
      /* WEBPACK VAR INJECTION */ (function (process) {
        /**
         * Copyright 2013-present, Facebook, Inc.
         * All rights reserved.
         *
         * This source code is licensed under the BSD-style license found in the
         * LICENSE file in the root directory of this source tree. An additional grant
         * of patent rights can be found in the PATENTS file in the same directory.
         *
         *
         */

        var _prodInvariant = __webpack_require__(8);

        var EventListener = __webpack_require__(260);
        var EventPropagators = __webpack_require__(98);
        var ReactDOMComponentTree = __webpack_require__(15);
        var SyntheticAnimationEvent = __webpack_require__(710);
        var SyntheticClipboardEvent = __webpack_require__(711);
        var SyntheticEvent = __webpack_require__(48);
        var SyntheticFocusEvent = __webpack_require__(714);
        var SyntheticKeyboardEvent = __webpack_require__(716);
        var SyntheticMouseEvent = __webpack_require__(122);
        var SyntheticDragEvent = __webpack_require__(713);
        var SyntheticTouchEvent = __webpack_require__(717);
        var SyntheticTransitionEvent = __webpack_require__(718);
        var SyntheticUIEvent = __webpack_require__(100);
        var SyntheticWheelEvent = __webpack_require__(719);

        var emptyFunction = __webpack_require__(28);
        var getEventCharCode = __webpack_require__(194);
        var invariant = __webpack_require__(2);

        /**
         * Turns
         * ['abort', ...]
         * into
         * eventTypes = {
         *   'abort': {
         *     phasedRegistrationNames: {
         *       bubbled: 'onAbort',
         *       captured: 'onAbortCapture',
         *     },
         *     dependencies: ['topAbort'],
         *   },
         *   ...
         * };
         * topLevelEventsToDispatchConfig = {
         *   'topAbort': { sameConfig }
         * };
         */
        var eventTypes = {};
        var topLevelEventsToDispatchConfig = {};
        [
          'abort',
          'animationEnd',
          'animationIteration',
          'animationStart',
          'blur',
          'canPlay',
          'canPlayThrough',
          'click',
          'contextMenu',
          'copy',
          'cut',
          'doubleClick',
          'drag',
          'dragEnd',
          'dragEnter',
          'dragExit',
          'dragLeave',
          'dragOver',
          'dragStart',
          'drop',
          'durationChange',
          'emptied',
          'encrypted',
          'ended',
          'error',
          'focus',
          'input',
          'invalid',
          'keyDown',
          'keyPress',
          'keyUp',
          'load',
          'loadedData',
          'loadedMetadata',
          'loadStart',
          'mouseDown',
          'mouseMove',
          'mouseOut',
          'mouseOver',
          'mouseUp',
          'paste',
          'pause',
          'play',
          'playing',
          'progress',
          'rateChange',
          'reset',
          'scroll',
          'seeked',
          'seeking',
          'stalled',
          'submit',
          'suspend',
          'timeUpdate',
          'touchCancel',
          'touchEnd',
          'touchMove',
          'touchStart',
          'transitionEnd',
          'volumeChange',
          'waiting',
          'wheel',
        ].forEach(function (event) {
          var capitalizedEvent = event[0].toUpperCase() + event.slice(1);
          var onEvent = 'on' + capitalizedEvent;
          var topEvent = 'top' + capitalizedEvent;

          var type = {
            phasedRegistrationNames: {
              bubbled: onEvent,
              captured: onEvent + 'Capture',
            },
            dependencies: [topEvent],
          };
          eventTypes[event] = type;
          topLevelEventsToDispatchConfig[topEvent] = type;
        });

        var onClickListeners = {};

        function getDictionaryKey(inst) {
          // Prevents V8 performance issue:
          // https://github.com/facebook/react/pull/7232
          return '.' + inst._rootNodeID;
        }

        function isInteractive(tag) {
          return tag === 'button' || tag === 'input' || tag === 'select' || tag === 'textarea';
        }

        var SimpleEventPlugin = {
          eventTypes: eventTypes,

          extractEvents: function (topLevelType, targetInst, nativeEvent, nativeEventTarget) {
            var dispatchConfig = topLevelEventsToDispatchConfig[topLevelType];
            if (!dispatchConfig) {
              return null;
            }
            var EventConstructor;
            switch (topLevelType) {
              case 'topAbort':
              case 'topCanPlay':
              case 'topCanPlayThrough':
              case 'topDurationChange':
              case 'topEmptied':
              case 'topEncrypted':
              case 'topEnded':
              case 'topError':
              case 'topInput':
              case 'topInvalid':
              case 'topLoad':
              case 'topLoadedData':
              case 'topLoadedMetadata':
              case 'topLoadStart':
              case 'topPause':
              case 'topPlay':
              case 'topPlaying':
              case 'topProgress':
              case 'topRateChange':
              case 'topReset':
              case 'topSeeked':
              case 'topSeeking':
              case 'topStalled':
              case 'topSubmit':
              case 'topSuspend':
              case 'topTimeUpdate':
              case 'topVolumeChange':
              case 'topWaiting':
                // HTML Events
                // @see http://www.w3.org/TR/html5/index.html#events-0
                EventConstructor = SyntheticEvent;
                break;
              case 'topKeyPress':
                // Firefox creates a keypress event for function keys too. This removes
                // the unwanted keypress events. Enter is however both printable and
                // non-printable. One would expect Tab to be as well (but it isn't).
                if (getEventCharCode(nativeEvent) === 0) {
                  return null;
                }
              /* falls through */
              case 'topKeyDown':
              case 'topKeyUp':
                EventConstructor = SyntheticKeyboardEvent;
                break;
              case 'topBlur':
              case 'topFocus':
                EventConstructor = SyntheticFocusEvent;
                break;
              case 'topClick':
                // Firefox creates a click event on right mouse clicks. This removes the
                // unwanted click events.
                if (nativeEvent.button === 2) {
                  return null;
                }
              /* falls through */
              case 'topDoubleClick':
              case 'topMouseDown':
              case 'topMouseMove':
              case 'topMouseUp':
              // TODO: Disabled elements should not respond to mouse events
              /* falls through */
              case 'topMouseOut':
              case 'topMouseOver':
              case 'topContextMenu':
                EventConstructor = SyntheticMouseEvent;
                break;
              case 'topDrag':
              case 'topDragEnd':
              case 'topDragEnter':
              case 'topDragExit':
              case 'topDragLeave':
              case 'topDragOver':
              case 'topDragStart':
              case 'topDrop':
                EventConstructor = SyntheticDragEvent;
                break;
              case 'topTouchCancel':
              case 'topTouchEnd':
              case 'topTouchMove':
              case 'topTouchStart':
                EventConstructor = SyntheticTouchEvent;
                break;
              case 'topAnimationEnd':
              case 'topAnimationIteration':
              case 'topAnimationStart':
                EventConstructor = SyntheticAnimationEvent;
                break;
              case 'topTransitionEnd':
                EventConstructor = SyntheticTransitionEvent;
                break;
              case 'topScroll':
                EventConstructor = SyntheticUIEvent;
                break;
              case 'topWheel':
                EventConstructor = SyntheticWheelEvent;
                break;
              case 'topCopy':
              case 'topCut':
              case 'topPaste':
                EventConstructor = SyntheticClipboardEvent;
                break;
            }
            !EventConstructor
              ? process.env.NODE_ENV !== 'production'
                ? invariant(false, 'SimpleEventPlugin: Unhandled event type, `%s`.', topLevelType)
                : _prodInvariant('86', topLevelType)
              : void 0;
            var event = EventConstructor.getPooled(
              dispatchConfig,
              targetInst,
              nativeEvent,
              nativeEventTarget
            );
            EventPropagators.accumulateTwoPhaseDispatches(event);
            return event;
          },

          didPutListener: function (inst, registrationName, listener) {
            // Mobile Safari does not fire properly bubble click events on
            // non-interactive elements, which means delegated click listeners do not
            // fire. The workaround for this bug involves attaching an empty click
            // listener on the target node.
            // http://www.quirksmode.org/blog/archives/2010/09/click_event_del.html
            if (registrationName === 'onClick' && !isInteractive(inst._tag)) {
              var key = getDictionaryKey(inst);
              var node = ReactDOMComponentTree.getNodeFromInstance(inst);
              if (!onClickListeners[key]) {
                onClickListeners[key] = EventListener.listen(node, 'click', emptyFunction);
              }
            }
          },

          willDeleteListener: function (inst, registrationName) {
            if (registrationName === 'onClick' && !isInteractive(inst._tag)) {
              var key = getDictionaryKey(inst);
              onClickListeners[key].remove();
              delete onClickListeners[key];
            }
          },
        };

        module.exports = SimpleEventPlugin;
        /* WEBPACK VAR INJECTION */
      }.call(exports, __webpack_require__(1)));

      /***/
    },
    /* 710 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';
      /**
       * Copyright 2013-present, Facebook, Inc.
       * All rights reserved.
       *
       * This source code is licensed under the BSD-style license found in the
       * LICENSE file in the root directory of this source tree. An additional grant
       * of patent rights can be found in the PATENTS file in the same directory.
       *
       */

      var SyntheticEvent = __webpack_require__(48);

      /**
       * @interface Event
       * @see http://www.w3.org/TR/css3-animations/#AnimationEvent-interface
       * @see https://developer.mozilla.org/en-US/docs/Web/API/AnimationEvent
       */
      var AnimationEventInterface = {
        animationName: null,
        elapsedTime: null,
        pseudoElement: null,
      };

      /**
       * @param {object} dispatchConfig Configuration used to dispatch this event.
       * @param {string} dispatchMarker Marker identifying the event target.
       * @param {object} nativeEvent Native browser event.
       * @extends {SyntheticEvent}
       */
      function SyntheticAnimationEvent(
        dispatchConfig,
        dispatchMarker,
        nativeEvent,
        nativeEventTarget
      ) {
        return SyntheticEvent.call(
          this,
          dispatchConfig,
          dispatchMarker,
          nativeEvent,
          nativeEventTarget
        );
      }

      SyntheticEvent.augmentClass(SyntheticAnimationEvent, AnimationEventInterface);

      module.exports = SyntheticAnimationEvent;

      /***/
    },
    /* 711 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';
      /**
       * Copyright 2013-present, Facebook, Inc.
       * All rights reserved.
       *
       * This source code is licensed under the BSD-style license found in the
       * LICENSE file in the root directory of this source tree. An additional grant
       * of patent rights can be found in the PATENTS file in the same directory.
       *
       */

      var SyntheticEvent = __webpack_require__(48);

      /**
       * @interface Event
       * @see http://www.w3.org/TR/clipboard-apis/
       */
      var ClipboardEventInterface = {
        clipboardData: function (event) {
          return 'clipboardData' in event ? event.clipboardData : window.clipboardData;
        },
      };

      /**
       * @param {object} dispatchConfig Configuration used to dispatch this event.
       * @param {string} dispatchMarker Marker identifying the event target.
       * @param {object} nativeEvent Native browser event.
       * @extends {SyntheticUIEvent}
       */
      function SyntheticClipboardEvent(
        dispatchConfig,
        dispatchMarker,
        nativeEvent,
        nativeEventTarget
      ) {
        return SyntheticEvent.call(
          this,
          dispatchConfig,
          dispatchMarker,
          nativeEvent,
          nativeEventTarget
        );
      }

      SyntheticEvent.augmentClass(SyntheticClipboardEvent, ClipboardEventInterface);

      module.exports = SyntheticClipboardEvent;

      /***/
    },
    /* 712 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';
      /**
       * Copyright 2013-present, Facebook, Inc.
       * All rights reserved.
       *
       * This source code is licensed under the BSD-style license found in the
       * LICENSE file in the root directory of this source tree. An additional grant
       * of patent rights can be found in the PATENTS file in the same directory.
       *
       */

      var SyntheticEvent = __webpack_require__(48);

      /**
       * @interface Event
       * @see http://www.w3.org/TR/DOM-Level-3-Events/#events-compositionevents
       */
      var CompositionEventInterface = {
        data: null,
      };

      /**
       * @param {object} dispatchConfig Configuration used to dispatch this event.
       * @param {string} dispatchMarker Marker identifying the event target.
       * @param {object} nativeEvent Native browser event.
       * @extends {SyntheticUIEvent}
       */
      function SyntheticCompositionEvent(
        dispatchConfig,
        dispatchMarker,
        nativeEvent,
        nativeEventTarget
      ) {
        return SyntheticEvent.call(
          this,
          dispatchConfig,
          dispatchMarker,
          nativeEvent,
          nativeEventTarget
        );
      }

      SyntheticEvent.augmentClass(SyntheticCompositionEvent, CompositionEventInterface);

      module.exports = SyntheticCompositionEvent;

      /***/
    },
    /* 713 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';
      /**
       * Copyright 2013-present, Facebook, Inc.
       * All rights reserved.
       *
       * This source code is licensed under the BSD-style license found in the
       * LICENSE file in the root directory of this source tree. An additional grant
       * of patent rights can be found in the PATENTS file in the same directory.
       *
       */

      var SyntheticMouseEvent = __webpack_require__(122);

      /**
       * @interface DragEvent
       * @see http://www.w3.org/TR/DOM-Level-3-Events/
       */
      var DragEventInterface = {
        dataTransfer: null,
      };

      /**
       * @param {object} dispatchConfig Configuration used to dispatch this event.
       * @param {string} dispatchMarker Marker identifying the event target.
       * @param {object} nativeEvent Native browser event.
       * @extends {SyntheticUIEvent}
       */
      function SyntheticDragEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
        return SyntheticMouseEvent.call(
          this,
          dispatchConfig,
          dispatchMarker,
          nativeEvent,
          nativeEventTarget
        );
      }

      SyntheticMouseEvent.augmentClass(SyntheticDragEvent, DragEventInterface);

      module.exports = SyntheticDragEvent;

      /***/
    },
    /* 714 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';
      /**
       * Copyright 2013-present, Facebook, Inc.
       * All rights reserved.
       *
       * This source code is licensed under the BSD-style license found in the
       * LICENSE file in the root directory of this source tree. An additional grant
       * of patent rights can be found in the PATENTS file in the same directory.
       *
       */

      var SyntheticUIEvent = __webpack_require__(100);

      /**
       * @interface FocusEvent
       * @see http://www.w3.org/TR/DOM-Level-3-Events/
       */
      var FocusEventInterface = {
        relatedTarget: null,
      };

      /**
       * @param {object} dispatchConfig Configuration used to dispatch this event.
       * @param {string} dispatchMarker Marker identifying the event target.
       * @param {object} nativeEvent Native browser event.
       * @extends {SyntheticUIEvent}
       */
      function SyntheticFocusEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
        return SyntheticUIEvent.call(
          this,
          dispatchConfig,
          dispatchMarker,
          nativeEvent,
          nativeEventTarget
        );
      }

      SyntheticUIEvent.augmentClass(SyntheticFocusEvent, FocusEventInterface);

      module.exports = SyntheticFocusEvent;

      /***/
    },
    /* 715 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';
      /**
       * Copyright 2013-present, Facebook, Inc.
       * All rights reserved.
       *
       * This source code is licensed under the BSD-style license found in the
       * LICENSE file in the root directory of this source tree. An additional grant
       * of patent rights can be found in the PATENTS file in the same directory.
       *
       */

      var SyntheticEvent = __webpack_require__(48);

      /**
       * @interface Event
       * @see http://www.w3.org/TR/2013/WD-DOM-Level-3-Events-20131105
       *      /#events-inputevents
       */
      var InputEventInterface = {
        data: null,
      };

      /**
       * @param {object} dispatchConfig Configuration used to dispatch this event.
       * @param {string} dispatchMarker Marker identifying the event target.
       * @param {object} nativeEvent Native browser event.
       * @extends {SyntheticUIEvent}
       */
      function SyntheticInputEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
        return SyntheticEvent.call(
          this,
          dispatchConfig,
          dispatchMarker,
          nativeEvent,
          nativeEventTarget
        );
      }

      SyntheticEvent.augmentClass(SyntheticInputEvent, InputEventInterface);

      module.exports = SyntheticInputEvent;

      /***/
    },
    /* 716 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';
      /**
       * Copyright 2013-present, Facebook, Inc.
       * All rights reserved.
       *
       * This source code is licensed under the BSD-style license found in the
       * LICENSE file in the root directory of this source tree. An additional grant
       * of patent rights can be found in the PATENTS file in the same directory.
       *
       */

      var SyntheticUIEvent = __webpack_require__(100);

      var getEventCharCode = __webpack_require__(194);
      var getEventKey = __webpack_require__(725);
      var getEventModifierState = __webpack_require__(195);

      /**
       * @interface KeyboardEvent
       * @see http://www.w3.org/TR/DOM-Level-3-Events/
       */
      var KeyboardEventInterface = {
        key: getEventKey,
        location: null,
        ctrlKey: null,
        shiftKey: null,
        altKey: null,
        metaKey: null,
        repeat: null,
        locale: null,
        getModifierState: getEventModifierState,
        // Legacy Interface
        charCode: function (event) {
          // `charCode` is the result of a KeyPress event and represents the value of
          // the actual printable character.

          // KeyPress is deprecated, but its replacement is not yet final and not
          // implemented in any major browser. Only KeyPress has charCode.
          if (event.type === 'keypress') {
            return getEventCharCode(event);
          }
          return 0;
        },
        keyCode: function (event) {
          // `keyCode` is the result of a KeyDown/Up event and represents the value of
          // physical keyboard key.

          // The actual meaning of the value depends on the users' keyboard layout
          // which cannot be detected. Assuming that it is a US keyboard layout
          // provides a surprisingly accurate mapping for US and European users.
          // Due to this, it is left to the user to implement at this time.
          if (event.type === 'keydown' || event.type === 'keyup') {
            return event.keyCode;
          }
          return 0;
        },
        which: function (event) {
          // `which` is an alias for either `keyCode` or `charCode` depending on the
          // type of the event.
          if (event.type === 'keypress') {
            return getEventCharCode(event);
          }
          if (event.type === 'keydown' || event.type === 'keyup') {
            return event.keyCode;
          }
          return 0;
        },
      };

      /**
       * @param {object} dispatchConfig Configuration used to dispatch this event.
       * @param {string} dispatchMarker Marker identifying the event target.
       * @param {object} nativeEvent Native browser event.
       * @extends {SyntheticUIEvent}
       */
      function SyntheticKeyboardEvent(
        dispatchConfig,
        dispatchMarker,
        nativeEvent,
        nativeEventTarget
      ) {
        return SyntheticUIEvent.call(
          this,
          dispatchConfig,
          dispatchMarker,
          nativeEvent,
          nativeEventTarget
        );
      }

      SyntheticUIEvent.augmentClass(SyntheticKeyboardEvent, KeyboardEventInterface);

      module.exports = SyntheticKeyboardEvent;

      /***/
    },
    /* 717 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';
      /**
       * Copyright 2013-present, Facebook, Inc.
       * All rights reserved.
       *
       * This source code is licensed under the BSD-style license found in the
       * LICENSE file in the root directory of this source tree. An additional grant
       * of patent rights can be found in the PATENTS file in the same directory.
       *
       */

      var SyntheticUIEvent = __webpack_require__(100);

      var getEventModifierState = __webpack_require__(195);

      /**
       * @interface TouchEvent
       * @see http://www.w3.org/TR/touch-events/
       */
      var TouchEventInterface = {
        touches: null,
        targetTouches: null,
        changedTouches: null,
        altKey: null,
        metaKey: null,
        ctrlKey: null,
        shiftKey: null,
        getModifierState: getEventModifierState,
      };

      /**
       * @param {object} dispatchConfig Configuration used to dispatch this event.
       * @param {string} dispatchMarker Marker identifying the event target.
       * @param {object} nativeEvent Native browser event.
       * @extends {SyntheticUIEvent}
       */
      function SyntheticTouchEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
        return SyntheticUIEvent.call(
          this,
          dispatchConfig,
          dispatchMarker,
          nativeEvent,
          nativeEventTarget
        );
      }

      SyntheticUIEvent.augmentClass(SyntheticTouchEvent, TouchEventInterface);

      module.exports = SyntheticTouchEvent;

      /***/
    },
    /* 718 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';
      /**
       * Copyright 2013-present, Facebook, Inc.
       * All rights reserved.
       *
       * This source code is licensed under the BSD-style license found in the
       * LICENSE file in the root directory of this source tree. An additional grant
       * of patent rights can be found in the PATENTS file in the same directory.
       *
       */

      var SyntheticEvent = __webpack_require__(48);

      /**
       * @interface Event
       * @see http://www.w3.org/TR/2009/WD-css3-transitions-20090320/#transition-events-
       * @see https://developer.mozilla.org/en-US/docs/Web/API/TransitionEvent
       */
      var TransitionEventInterface = {
        propertyName: null,
        elapsedTime: null,
        pseudoElement: null,
      };

      /**
       * @param {object} dispatchConfig Configuration used to dispatch this event.
       * @param {string} dispatchMarker Marker identifying the event target.
       * @param {object} nativeEvent Native browser event.
       * @extends {SyntheticEvent}
       */
      function SyntheticTransitionEvent(
        dispatchConfig,
        dispatchMarker,
        nativeEvent,
        nativeEventTarget
      ) {
        return SyntheticEvent.call(
          this,
          dispatchConfig,
          dispatchMarker,
          nativeEvent,
          nativeEventTarget
        );
      }

      SyntheticEvent.augmentClass(SyntheticTransitionEvent, TransitionEventInterface);

      module.exports = SyntheticTransitionEvent;

      /***/
    },
    /* 719 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';
      /**
       * Copyright 2013-present, Facebook, Inc.
       * All rights reserved.
       *
       * This source code is licensed under the BSD-style license found in the
       * LICENSE file in the root directory of this source tree. An additional grant
       * of patent rights can be found in the PATENTS file in the same directory.
       *
       */

      var SyntheticMouseEvent = __webpack_require__(122);

      /**
       * @interface WheelEvent
       * @see http://www.w3.org/TR/DOM-Level-3-Events/
       */
      var WheelEventInterface = {
        deltaX: function (event) {
          return 'deltaX' in event
            ? event.deltaX
            : // Fallback to `wheelDeltaX` for Webkit and normalize (right is positive).
            'wheelDeltaX' in event
            ? -event.wheelDeltaX
            : 0;
        },
        deltaY: function (event) {
          return 'deltaY' in event
            ? event.deltaY
            : // Fallback to `wheelDeltaY` for Webkit and normalize (down is positive).
            'wheelDeltaY' in event
            ? -event.wheelDeltaY
            : // Fallback to `wheelDelta` for IE<9 and normalize (down is positive).
            'wheelDelta' in event
            ? -event.wheelDelta
            : 0;
        },
        deltaZ: null,

        // Browsers without "deltaMode" is reporting in raw wheel delta where one
        // notch on the scroll is always +/- 120, roughly equivalent to pixels.
        // A good approximation of DOM_DELTA_LINE (1) is 5% of viewport size or
        // ~40 pixels, for DOM_DELTA_SCREEN (2) it is 87.5% of viewport size.
        deltaMode: null,
      };

      /**
       * @param {object} dispatchConfig Configuration used to dispatch this event.
       * @param {string} dispatchMarker Marker identifying the event target.
       * @param {object} nativeEvent Native browser event.
       * @extends {SyntheticMouseEvent}
       */
      function SyntheticWheelEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
        return SyntheticMouseEvent.call(
          this,
          dispatchConfig,
          dispatchMarker,
          nativeEvent,
          nativeEventTarget
        );
      }

      SyntheticMouseEvent.augmentClass(SyntheticWheelEvent, WheelEventInterface);

      module.exports = SyntheticWheelEvent;

      /***/
    },
    /* 720 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';
      /**
       * Copyright 2013-present, Facebook, Inc.
       * All rights reserved.
       *
       * This source code is licensed under the BSD-style license found in the
       * LICENSE file in the root directory of this source tree. An additional grant
       * of patent rights can be found in the PATENTS file in the same directory.
       *
       *
       */

      var MOD = 65521;

      // adler32 is not cryptographically strong, and is only used to sanity check that
      // markup generated on the server matches the markup generated on the client.
      // This implementation (a modified version of the SheetJS version) has been optimized
      // for our use case, at the expense of conforming to the adler32 specification
      // for non-ascii inputs.
      function adler32(data) {
        var a = 1;
        var b = 0;
        var i = 0;
        var l = data.length;
        var m = l & ~0x3;
        while (i < m) {
          var n = Math.min(i + 4096, m);
          for (; i < n; i += 4) {
            b +=
              (a += data.charCodeAt(i)) +
              (a += data.charCodeAt(i + 1)) +
              (a += data.charCodeAt(i + 2)) +
              (a += data.charCodeAt(i + 3));
          }
          a %= MOD;
          b %= MOD;
        }
        for (; i < l; i++) {
          b += a += data.charCodeAt(i);
        }
        a %= MOD;
        b %= MOD;
        return a | (b << 16);
      }

      module.exports = adler32;

      /***/
    },
    /* 721 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';
      /* WEBPACK VAR INJECTION */ (function (process) {
        /**
         * Copyright 2013-present, Facebook, Inc.
         * All rights reserved.
         *
         * This source code is licensed under the BSD-style license found in the
         * LICENSE file in the root directory of this source tree. An additional grant
         * of patent rights can be found in the PATENTS file in the same directory.
         *
         */

        var _prodInvariant = __webpack_require__(8);

        var ReactPropTypeLocationNames = __webpack_require__(701);
        var ReactPropTypesSecret = __webpack_require__(292);

        var invariant = __webpack_require__(2);
        var warning = __webpack_require__(3);

        var ReactComponentTreeHook;

        if (typeof process !== 'undefined' && process.env && process.env.NODE_ENV === 'test') {
          // Temporary hack.
          // Inline requires don't work well with Jest:
          // https://github.com/facebook/react/issues/7240
          // Remove the inline requires when we don't need them anymore:
          // https://github.com/facebook/react/pull/7178
          ReactComponentTreeHook = __webpack_require__(29);
        }

        var loggedTypeFailures = {};

        /**
         * Assert that the values match with the type specs.
         * Error messages are memorized and will only be shown once.
         *
         * @param {object} typeSpecs Map of name to a ReactPropType
         * @param {object} values Runtime values that need to be type-checked
         * @param {string} location e.g. "prop", "context", "child context"
         * @param {string} componentName Name of the component for error messages.
         * @param {?object} element The React element that is being type-checked
         * @param {?number} debugID The React component instance that is being type-checked
         * @private
         */
        function checkReactTypeSpec(typeSpecs, values, location, componentName, element, debugID) {
          for (var typeSpecName in typeSpecs) {
            if (typeSpecs.hasOwnProperty(typeSpecName)) {
              var error;
              // Prop type validation may throw. In case they do, we don't want to
              // fail the render phase where it didn't fail before. So we log it.
              // After these have been cleaned up, we'll let them throw.
              try {
                // This is intentionally an invariant that gets caught. It's the same
                // behavior as without this statement except with a better message.
                !(typeof typeSpecs[typeSpecName] === 'function')
                  ? process.env.NODE_ENV !== 'production'
                    ? invariant(
                        false,
                        '%s: %s type `%s` is invalid; it must be a function, usually from React.PropTypes.',
                        componentName || 'React class',
                        ReactPropTypeLocationNames[location],
                        typeSpecName
                      )
                    : _prodInvariant(
                        '84',
                        componentName || 'React class',
                        ReactPropTypeLocationNames[location],
                        typeSpecName
                      )
                  : void 0;
                error = typeSpecs[typeSpecName](
                  values,
                  typeSpecName,
                  componentName,
                  location,
                  null,
                  ReactPropTypesSecret
                );
              } catch (ex) {
                error = ex;
              }
              process.env.NODE_ENV !== 'production'
                ? warning(
                    !error || error instanceof Error,
                    '%s: type specification of %s `%s` is invalid; the type checker ' +
                      'function must return `null` or an `Error` but returned a %s. ' +
                      'You may have forgotten to pass an argument to the type checker ' +
                      'creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and ' +
                      'shape all require an argument).',
                    componentName || 'React class',
                    ReactPropTypeLocationNames[location],
                    typeSpecName,
                    typeof error
                  )
                : void 0;
              if (error instanceof Error && !(error.message in loggedTypeFailures)) {
                // Only monitor this failure once because there tends to be a lot of the
                // same error.
                loggedTypeFailures[error.message] = true;

                var componentStackInfo = '';

                if (process.env.NODE_ENV !== 'production') {
                  if (!ReactComponentTreeHook) {
                    ReactComponentTreeHook = __webpack_require__(29);
                  }
                  if (debugID !== null) {
                    componentStackInfo = ReactComponentTreeHook.getStackAddendumByID(debugID);
                  } else if (element !== null) {
                    componentStackInfo = ReactComponentTreeHook.getCurrentStackAddendum(element);
                  }
                }

                process.env.NODE_ENV !== 'production'
                  ? warning(
                      false,
                      'Failed %s type: %s%s',
                      location,
                      error.message,
                      componentStackInfo
                    )
                  : void 0;
              }
            }
          }
        }

        module.exports = checkReactTypeSpec;
        /* WEBPACK VAR INJECTION */
      }.call(exports, __webpack_require__(1)));

      /***/
    },
    /* 722 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';
      /* WEBPACK VAR INJECTION */ (function (process) {
        /**
         * Copyright 2013-present, Facebook, Inc.
         * All rights reserved.
         *
         * This source code is licensed under the BSD-style license found in the
         * LICENSE file in the root directory of this source tree. An additional grant
         * of patent rights can be found in the PATENTS file in the same directory.
         *
         */

        var CSSProperty = __webpack_require__(281);
        var warning = __webpack_require__(3);

        var isUnitlessNumber = CSSProperty.isUnitlessNumber;
        var styleWarnings = {};

        /**
         * Convert a value into the proper css writable value. The style name `name`
         * should be logical (no hyphens), as specified
         * in `CSSProperty.isUnitlessNumber`.
         *
         * @param {string} name CSS property name such as `topMargin`.
         * @param {*} value CSS property value such as `10px`.
         * @param {ReactDOMComponent} component
         * @return {string} Normalized style value with dimensions applied.
         */
        function dangerousStyleValue(name, value, component) {
          // Note that we've removed escapeTextForBrowser() calls here since the
          // whole string will be escaped when the attribute is injected into
          // the markup. If you provide unsafe user data here they can inject
          // arbitrary CSS which may be problematic (I couldn't repro this):
          // https://www.owasp.org/index.php/XSS_Filter_Evasion_Cheat_Sheet
          // http://www.thespanner.co.uk/2007/11/26/ultimate-xss-css-injection/
          // This is not an XSS hole but instead a potential CSS injection issue
          // which has lead to a greater discussion about how we're going to
          // trust URLs moving forward. See #2115901

          var isEmpty = value == null || typeof value === 'boolean' || value === '';
          if (isEmpty) {
            return '';
          }

          var isNonNumeric = isNaN(value);
          if (
            isNonNumeric ||
            value === 0 ||
            (isUnitlessNumber.hasOwnProperty(name) && isUnitlessNumber[name])
          ) {
            return '' + value; // cast to string
          }

          if (typeof value === 'string') {
            if (process.env.NODE_ENV !== 'production') {
              // Allow '0' to pass through without warning. 0 is already special and
              // doesn't require units, so we don't need to warn about it.
              if (component && value !== '0') {
                var owner = component._currentElement._owner;
                var ownerName = owner ? owner.getName() : null;
                if (ownerName && !styleWarnings[ownerName]) {
                  styleWarnings[ownerName] = {};
                }
                var warned = false;
                if (ownerName) {
                  var warnings = styleWarnings[ownerName];
                  warned = warnings[name];
                  if (!warned) {
                    warnings[name] = true;
                  }
                }
                if (!warned) {
                  process.env.NODE_ENV !== 'production'
                    ? warning(
                        false,
                        'a `%s` tag (owner: `%s`) was passed a numeric string value ' +
                          'for CSS property `%s` (value: `%s`) which will be treated ' +
                          'as a unitless number in a future version of React.',
                        component._currentElement.type,
                        ownerName || 'unknown',
                        name,
                        value
                      )
                    : void 0;
                }
              }
            }
            value = value.trim();
          }
          return value + 'px';
        }

        module.exports = dangerousStyleValue;
        /* WEBPACK VAR INJECTION */
      }.call(exports, __webpack_require__(1)));

      /***/
    },
    /* 723 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';
      /* WEBPACK VAR INJECTION */ (function (process) {
        /**
         * Copyright 2013-present, Facebook, Inc.
         * All rights reserved.
         *
         * This source code is licensed under the BSD-style license found in the
         * LICENSE file in the root directory of this source tree. An additional grant
         * of patent rights can be found in the PATENTS file in the same directory.
         *
         */

        var _prodInvariant = __webpack_require__(8);

        var ReactCurrentOwner = __webpack_require__(42);
        var ReactDOMComponentTree = __webpack_require__(15);
        var ReactInstanceMap = __webpack_require__(99);

        var getHostComponentFromComposite = __webpack_require__(296);
        var invariant = __webpack_require__(2);
        var warning = __webpack_require__(3);

        /**
         * Returns the DOM node rendered by this element.
         *
         * See https://facebook.github.io/react/docs/top-level-api.html#reactdom.finddomnode
         *
         * @param {ReactComponent|DOMElement} componentOrElement
         * @return {?DOMElement} The root node of this element.
         */
        function findDOMNode(componentOrElement) {
          if (process.env.NODE_ENV !== 'production') {
            var owner = ReactCurrentOwner.current;
            if (owner !== null) {
              process.env.NODE_ENV !== 'production'
                ? warning(
                    owner._warnedAboutRefsInRender,
                    '%s is accessing findDOMNode inside its render(). ' +
                      'render() should be a pure function of props and state. It should ' +
                      'never access something that requires stale data from the previous ' +
                      'render, such as refs. Move this logic to componentDidMount and ' +
                      'componentDidUpdate instead.',
                    owner.getName() || 'A component'
                  )
                : void 0;
              owner._warnedAboutRefsInRender = true;
            }
          }
          if (componentOrElement == null) {
            return null;
          }
          if (componentOrElement.nodeType === 1) {
            return componentOrElement;
          }

          var inst = ReactInstanceMap.get(componentOrElement);
          if (inst) {
            inst = getHostComponentFromComposite(inst);
            return inst ? ReactDOMComponentTree.getNodeFromInstance(inst) : null;
          }

          if (typeof componentOrElement.render === 'function') {
            true
              ? process.env.NODE_ENV !== 'production'
                ? invariant(false, 'findDOMNode was called on an unmounted component.')
                : _prodInvariant('44')
              : void 0;
          } else {
            true
              ? process.env.NODE_ENV !== 'production'
                ? invariant(
                    false,
                    'Element appears to be neither ReactComponent nor DOMNode (keys: %s)',
                    Object.keys(componentOrElement)
                  )
                : _prodInvariant('45', Object.keys(componentOrElement))
              : void 0;
          }
        }

        module.exports = findDOMNode;
        /* WEBPACK VAR INJECTION */
      }.call(exports, __webpack_require__(1)));

      /***/
    },
    /* 724 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';
      /* WEBPACK VAR INJECTION */ (function (process) {
        /**
         * Copyright 2013-present, Facebook, Inc.
         * All rights reserved.
         *
         * This source code is licensed under the BSD-style license found in the
         * LICENSE file in the root directory of this source tree. An additional grant
         * of patent rights can be found in the PATENTS file in the same directory.
         *
         *
         */

        var KeyEscapeUtils = __webpack_require__(188);
        var traverseAllChildren = __webpack_require__(301);
        var warning = __webpack_require__(3);

        var ReactComponentTreeHook;

        if (typeof process !== 'undefined' && process.env && process.env.NODE_ENV === 'test') {
          // Temporary hack.
          // Inline requires don't work well with Jest:
          // https://github.com/facebook/react/issues/7240
          // Remove the inline requires when we don't need them anymore:
          // https://github.com/facebook/react/pull/7178
          ReactComponentTreeHook = __webpack_require__(29);
        }

        /**
         * @param {function} traverseContext Context passed through traversal.
         * @param {?ReactComponent} child React child component.
         * @param {!string} name String name of key path to child.
         * @param {number=} selfDebugID Optional debugID of the current internal instance.
         */
        function flattenSingleChildIntoContext(traverseContext, child, name, selfDebugID) {
          // We found a component instance.
          if (traverseContext && typeof traverseContext === 'object') {
            var result = traverseContext;
            var keyUnique = result[name] === undefined;
            if (process.env.NODE_ENV !== 'production') {
              if (!ReactComponentTreeHook) {
                ReactComponentTreeHook = __webpack_require__(29);
              }
              if (!keyUnique) {
                process.env.NODE_ENV !== 'production'
                  ? warning(
                      false,
                      'flattenChildren(...): Encountered two children with the same key, ' +
                        '`%s`. Child keys must be unique; when two children share a key, only ' +
                        'the first child will be used.%s',
                      KeyEscapeUtils.unescape(name),
                      ReactComponentTreeHook.getStackAddendumByID(selfDebugID)
                    )
                  : void 0;
              }
            }
            if (keyUnique && child != null) {
              result[name] = child;
            }
          }
        }

        /**
         * Flattens children that are typically specified as `props.children`. Any null
         * children will not be included in the resulting object.
         * @return {!object} flattened children keyed by name.
         */
        function flattenChildren(children, selfDebugID) {
          if (children == null) {
            return children;
          }
          var result = {};

          if (process.env.NODE_ENV !== 'production') {
            traverseAllChildren(
              children,
              function (traverseContext, child, name) {
                return flattenSingleChildIntoContext(traverseContext, child, name, selfDebugID);
              },
              result
            );
          } else {
            traverseAllChildren(children, flattenSingleChildIntoContext, result);
          }
          return result;
        }

        module.exports = flattenChildren;
        /* WEBPACK VAR INJECTION */
      }.call(exports, __webpack_require__(1)));

      /***/
    },
    /* 725 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';
      /**
       * Copyright 2013-present, Facebook, Inc.
       * All rights reserved.
       *
       * This source code is licensed under the BSD-style license found in the
       * LICENSE file in the root directory of this source tree. An additional grant
       * of patent rights can be found in the PATENTS file in the same directory.
       *
       */

      var getEventCharCode = __webpack_require__(194);

      /**
       * Normalization of deprecated HTML5 `key` values
       * @see https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent#Key_names
       */
      var normalizeKey = {
        Esc: 'Escape',
        Spacebar: ' ',
        Left: 'ArrowLeft',
        Up: 'ArrowUp',
        Right: 'ArrowRight',
        Down: 'ArrowDown',
        Del: 'Delete',
        Win: 'OS',
        Menu: 'ContextMenu',
        Apps: 'ContextMenu',
        Scroll: 'ScrollLock',
        MozPrintableKey: 'Unidentified',
      };

      /**
       * Translation from legacy `keyCode` to HTML5 `key`
       * Only special keys supported, all others depend on keyboard layout or browser
       * @see https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent#Key_names
       */
      var translateToKey = {
        8: 'Backspace',
        9: 'Tab',
        12: 'Clear',
        13: 'Enter',
        16: 'Shift',
        17: 'Control',
        18: 'Alt',
        19: 'Pause',
        20: 'CapsLock',
        27: 'Escape',
        32: ' ',
        33: 'PageUp',
        34: 'PageDown',
        35: 'End',
        36: 'Home',
        37: 'ArrowLeft',
        38: 'ArrowUp',
        39: 'ArrowRight',
        40: 'ArrowDown',
        45: 'Insert',
        46: 'Delete',
        112: 'F1',
        113: 'F2',
        114: 'F3',
        115: 'F4',
        116: 'F5',
        117: 'F6',
        118: 'F7',
        119: 'F8',
        120: 'F9',
        121: 'F10',
        122: 'F11',
        123: 'F12',
        144: 'NumLock',
        145: 'ScrollLock',
        224: 'Meta',
      };

      /**
       * @param {object} nativeEvent Native browser event.
       * @return {string} Normalized `key` property.
       */
      function getEventKey(nativeEvent) {
        if (nativeEvent.key) {
          // Normalize inconsistent values reported by browsers due to
          // implementations of a working draft specification.

          // FireFox implements `key` but returns `MozPrintableKey` for all
          // printable characters (normalized to `Unidentified`), ignore it.
          var key = normalizeKey[nativeEvent.key] || nativeEvent.key;
          if (key !== 'Unidentified') {
            return key;
          }
        }

        // Browser does not implement `key`, polyfill as much of it as we can.
        if (nativeEvent.type === 'keypress') {
          var charCode = getEventCharCode(nativeEvent);

          // The enter-key is technically both printable and non-printable and can
          // thus be captured by `keypress`, no other non-printable key should.
          return charCode === 13 ? 'Enter' : String.fromCharCode(charCode);
        }
        if (nativeEvent.type === 'keydown' || nativeEvent.type === 'keyup') {
          // While user keyboard layout determines the actual meaning of each
          // `keyCode` value, almost all function keys have a universal value.
          return translateToKey[nativeEvent.keyCode] || 'Unidentified';
        }
        return '';
      }

      module.exports = getEventKey;

      /***/
    },
    /* 726 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';
      /**
       * Copyright 2013-present, Facebook, Inc.
       * All rights reserved.
       *
       * This source code is licensed under the BSD-style license found in the
       * LICENSE file in the root directory of this source tree. An additional grant
       * of patent rights can be found in the PATENTS file in the same directory.
       *
       *
       */

      /* global Symbol */

      var ITERATOR_SYMBOL = typeof Symbol === 'function' && Symbol.iterator;
      var FAUX_ITERATOR_SYMBOL = '@@iterator'; // Before Symbol spec.

      /**
       * Returns the iterator method function contained on the iterable object.
       *
       * Be sure to invoke the function with the iterable as context:
       *
       *     var iteratorFn = getIteratorFn(myIterable);
       *     if (iteratorFn) {
       *       var iterator = iteratorFn.call(myIterable);
       *       ...
       *     }
       *
       * @param {?object} maybeIterable
       * @return {?function}
       */
      function getIteratorFn(maybeIterable) {
        var iteratorFn =
          maybeIterable &&
          ((ITERATOR_SYMBOL && maybeIterable[ITERATOR_SYMBOL]) ||
            maybeIterable[FAUX_ITERATOR_SYMBOL]);
        if (typeof iteratorFn === 'function') {
          return iteratorFn;
        }
      }

      module.exports = getIteratorFn;

      /***/
    },
    /* 727 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';
      /**
       * Copyright 2013-present, Facebook, Inc.
       * All rights reserved.
       *
       * This source code is licensed under the BSD-style license found in the
       * LICENSE file in the root directory of this source tree. An additional grant
       * of patent rights can be found in the PATENTS file in the same directory.
       *
       *
       */

      var nextDebugID = 1;

      function getNextDebugID() {
        return nextDebugID++;
      }

      module.exports = getNextDebugID;

      /***/
    },
    /* 728 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';
      /**
       * Copyright 2013-present, Facebook, Inc.
       * All rights reserved.
       *
       * This source code is licensed under the BSD-style license found in the
       * LICENSE file in the root directory of this source tree. An additional grant
       * of patent rights can be found in the PATENTS file in the same directory.
       *
       */

      /**
       * Given any node return the first leaf node without children.
       *
       * @param {DOMElement|DOMTextNode} node
       * @return {DOMElement|DOMTextNode}
       */

      function getLeafNode(node) {
        while (node && node.firstChild) {
          node = node.firstChild;
        }
        return node;
      }

      /**
       * Get the next sibling within a container. This will walk up the
       * DOM if a node's siblings have been exhausted.
       *
       * @param {DOMElement|DOMTextNode} node
       * @return {?DOMElement|DOMTextNode}
       */
      function getSiblingNode(node) {
        while (node) {
          if (node.nextSibling) {
            return node.nextSibling;
          }
          node = node.parentNode;
        }
      }

      /**
       * Get object describing the nodes which contain characters at offset.
       *
       * @param {DOMElement|DOMTextNode} root
       * @param {number} offset
       * @return {?object}
       */
      function getNodeForCharacterOffset(root, offset) {
        var node = getLeafNode(root);
        var nodeStart = 0;
        var nodeEnd = 0;

        while (node) {
          if (node.nodeType === 3) {
            nodeEnd = nodeStart + node.textContent.length;

            if (nodeStart <= offset && nodeEnd >= offset) {
              return {
                node: node,
                offset: offset - nodeStart,
              };
            }

            nodeStart = nodeEnd;
          }

          node = getLeafNode(getSiblingNode(node));
        }
      }

      module.exports = getNodeForCharacterOffset;

      /***/
    },
    /* 729 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';
      /**
       * Copyright 2013-present, Facebook, Inc.
       * All rights reserved.
       *
       * This source code is licensed under the BSD-style license found in the
       * LICENSE file in the root directory of this source tree. An additional grant
       * of patent rights can be found in the PATENTS file in the same directory.
       *
       */

      var ExecutionEnvironment = __webpack_require__(18);

      /**
       * Generate a mapping of standard vendor prefixes using the defined style property and event name.
       *
       * @param {string} styleProp
       * @param {string} eventName
       * @returns {object}
       */
      function makePrefixMap(styleProp, eventName) {
        var prefixes = {};

        prefixes[styleProp.toLowerCase()] = eventName.toLowerCase();
        prefixes['Webkit' + styleProp] = 'webkit' + eventName;
        prefixes['Moz' + styleProp] = 'moz' + eventName;
        prefixes['ms' + styleProp] = 'MS' + eventName;
        prefixes['O' + styleProp] = 'o' + eventName.toLowerCase();

        return prefixes;
      }

      /**
       * A list of event names to a configurable list of vendor prefixes.
       */
      var vendorPrefixes = {
        animationend: makePrefixMap('Animation', 'AnimationEnd'),
        animationiteration: makePrefixMap('Animation', 'AnimationIteration'),
        animationstart: makePrefixMap('Animation', 'AnimationStart'),
        transitionend: makePrefixMap('Transition', 'TransitionEnd'),
      };

      /**
       * Event names that have already been detected and prefixed (if applicable).
       */
      var prefixedEventNames = {};

      /**
       * Element to check for prefixes on.
       */
      var style = {};

      /**
       * Bootstrap if a DOM exists.
       */
      if (ExecutionEnvironment.canUseDOM) {
        style = document.createElement('div').style;

        // On some platforms, in particular some releases of Android 4.x,
        // the un-prefixed "animation" and "transition" properties are defined on the
        // style object but the events that fire will still be prefixed, so we need
        // to check if the un-prefixed events are usable, and if not remove them from the map.
        if (!('AnimationEvent' in window)) {
          delete vendorPrefixes.animationend.animation;
          delete vendorPrefixes.animationiteration.animation;
          delete vendorPrefixes.animationstart.animation;
        }

        // Same as above
        if (!('TransitionEvent' in window)) {
          delete vendorPrefixes.transitionend.transition;
        }
      }

      /**
       * Attempts to determine the correct vendor prefixed event name.
       *
       * @param {string} eventName
       * @returns {string}
       */
      function getVendorPrefixedEventName(eventName) {
        if (prefixedEventNames[eventName]) {
          return prefixedEventNames[eventName];
        } else if (!vendorPrefixes[eventName]) {
          return eventName;
        }

        var prefixMap = vendorPrefixes[eventName];

        for (var styleProp in prefixMap) {
          if (prefixMap.hasOwnProperty(styleProp) && styleProp in style) {
            return (prefixedEventNames[eventName] = prefixMap[styleProp]);
          }
        }

        return '';
      }

      module.exports = getVendorPrefixedEventName;

      /***/
    },
    /* 730 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';
      /**
       * Copyright 2013-present, Facebook, Inc.
       * All rights reserved.
       *
       * This source code is licensed under the BSD-style license found in the
       * LICENSE file in the root directory of this source tree. An additional grant
       * of patent rights can be found in the PATENTS file in the same directory.
       *
       */

      var escapeTextContentForBrowser = __webpack_require__(124);

      /**
       * Escapes attribute value to prevent scripting attacks.
       *
       * @param {*} value Value to escape.
       * @return {string} An escaped string.
       */
      function quoteAttributeValueForBrowser(value) {
        return '"' + escapeTextContentForBrowser(value) + '"';
      }

      module.exports = quoteAttributeValueForBrowser;

      /***/
    },
    /* 731 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';
      /**
       * Copyright 2013-present, Facebook, Inc.
       * All rights reserved.
       *
       * This source code is licensed under the BSD-style license found in the
       * LICENSE file in the root directory of this source tree. An additional grant
       * of patent rights can be found in the PATENTS file in the same directory.
       *
       */

      var ReactMount = __webpack_require__(290);

      module.exports = ReactMount.renderSubtreeIntoContainer;

      /***/
    },
    /* 732 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';

      var _extends =
        Object.assign ||
        function (target) {
          for (var i = 1; i < arguments.length; i++) {
            var source = arguments[i];
            for (var key in source) {
              if (Object.prototype.hasOwnProperty.call(source, key)) {
                target[key] = source[key];
              }
            }
          }
          return target;
        };

      var React = __webpack_require__(4);

      var sizerStyle = {
        position: 'absolute',
        top: 0,
        left: 0,
        visibility: 'hidden',
        height: 0,
        overflow: 'scroll',
        whiteSpace: 'pre',
      };

      var AutosizeInput = React.createClass({
        displayName: 'AutosizeInput',

        propTypes: {
          className: React.PropTypes.string, // className for the outer element
          defaultValue: React.PropTypes.any, // default field value
          inputClassName: React.PropTypes.string, // className for the input element
          inputStyle: React.PropTypes.object, // css styles for the input element
          minWidth: React.PropTypes.oneOfType([
            // minimum width for input element
            React.PropTypes.number,
            React.PropTypes.string,
          ]),
          onChange: React.PropTypes.func, // onChange handler: function(newValue) {}
          placeholder: React.PropTypes.string, // placeholder text
          placeholderIsMinWidth: React.PropTypes.bool, // don't collapse size to less than the placeholder
          style: React.PropTypes.object, // css styles for the outer element
          value: React.PropTypes.any,
        },
        // field value
        getDefaultProps: function getDefaultProps() {
          return {
            minWidth: 1,
          };
        },
        getInitialState: function getInitialState() {
          return {
            inputWidth: this.props.minWidth,
          };
        },
        componentDidMount: function componentDidMount() {
          this.copyInputStyles();
          this.updateInputWidth();
        },
        componentDidUpdate: function componentDidUpdate() {
          this.updateInputWidth();
        },
        copyInputStyles: function copyInputStyles() {
          if (!this.isMounted() || !window.getComputedStyle) {
            return;
          }
          var inputStyle = window.getComputedStyle(this.refs.input);
          if (!inputStyle) {
            return;
          }
          var widthNode = this.refs.sizer;
          widthNode.style.fontSize = inputStyle.fontSize;
          widthNode.style.fontFamily = inputStyle.fontFamily;
          widthNode.style.fontWeight = inputStyle.fontWeight;
          widthNode.style.fontStyle = inputStyle.fontStyle;
          widthNode.style.letterSpacing = inputStyle.letterSpacing;
          if (this.props.placeholder) {
            var placeholderNode = this.refs.placeholderSizer;
            placeholderNode.style.fontSize = inputStyle.fontSize;
            placeholderNode.style.fontFamily = inputStyle.fontFamily;
            placeholderNode.style.fontWeight = inputStyle.fontWeight;
            placeholderNode.style.fontStyle = inputStyle.fontStyle;
            placeholderNode.style.letterSpacing = inputStyle.letterSpacing;
          }
        },
        updateInputWidth: function updateInputWidth() {
          if (!this.isMounted() || typeof this.refs.sizer.scrollWidth === 'undefined') {
            return;
          }
          var newInputWidth = undefined;
          if (
            this.props.placeholder &&
            (!this.props.value || (this.props.value && this.props.placeholderIsMinWidth))
          ) {
            newInputWidth =
              Math.max(this.refs.sizer.scrollWidth, this.refs.placeholderSizer.scrollWidth) + 2;
          } else {
            newInputWidth = this.refs.sizer.scrollWidth + 2;
          }
          if (newInputWidth < this.props.minWidth) {
            newInputWidth = this.props.minWidth;
          }
          if (newInputWidth !== this.state.inputWidth) {
            this.setState({
              inputWidth: newInputWidth,
            });
          }
        },
        getInput: function getInput() {
          return this.refs.input;
        },
        focus: function focus() {
          this.refs.input.focus();
        },
        blur: function blur() {
          this.refs.input.blur();
        },
        select: function select() {
          this.refs.input.select();
        },
        render: function render() {
          var sizerValue = this.props.defaultValue || this.props.value || '';
          var wrapperStyle = this.props.style || {};
          if (!wrapperStyle.display) wrapperStyle.display = 'inline-block';
          var inputStyle = _extends({}, this.props.inputStyle);
          inputStyle.width = this.state.inputWidth + 'px';
          inputStyle.boxSizing = 'content-box';
          var inputProps = _extends({}, this.props);
          inputProps.className = this.props.inputClassName;
          inputProps.style = inputStyle;
          // ensure props meant for `AutosizeInput` don't end up on the `input`
          delete inputProps.inputClassName;
          delete inputProps.inputStyle;
          delete inputProps.minWidth;
          delete inputProps.placeholderIsMinWidth;
          return React.createElement(
            'div',
            { className: this.props.className, style: wrapperStyle },
            React.createElement('input', _extends({}, inputProps, { ref: 'input' })),
            React.createElement('div', { ref: 'sizer', style: sizerStyle }, sizerValue),
            this.props.placeholder
              ? React.createElement(
                  'div',
                  { ref: 'placeholderSizer', style: sizerStyle },
                  this.props.placeholder
                )
              : null
          );
        },
      });

      module.exports = AutosizeInput;

      /***/
    },
    /* 733 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true,
      });

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      var _react = __webpack_require__(4);

      var _react2 = _interopRequireDefault(_react);

      var DefaultSpinner = function DefaultSpinner() {
        return _react2['default'].createElement('div', { className: 'defaultSpinner' });
      };

      exports['default'] = DefaultSpinner;
      module.exports = exports['default'];

      /***/
    },
    /* 734 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true,
      });

      var _createClass = (function () {
        function defineProperties(target, props) {
          for (var i = 0; i < props.length; i++) {
            var descriptor = props[i];
            descriptor.enumerable = descriptor.enumerable || false;
            descriptor.configurable = true;
            if ('value' in descriptor) descriptor.writable = true;
            Object.defineProperty(target, descriptor.key, descriptor);
          }
        }
        return function (Constructor, protoProps, staticProps) {
          if (protoProps) defineProperties(Constructor.prototype, protoProps);
          if (staticProps) defineProperties(Constructor, staticProps);
          return Constructor;
        };
      })();

      var _get = function get(_x, _x2, _x3) {
        var _again = true;
        _function: while (_again) {
          var object = _x,
            property = _x2,
            receiver = _x3;
          _again = false;
          if (object === null) object = Function.prototype;
          var desc = Object.getOwnPropertyDescriptor(object, property);
          if (desc === undefined) {
            var parent = Object.getPrototypeOf(object);
            if (parent === null) {
              return undefined;
            } else {
              _x = parent;
              _x2 = property;
              _x3 = receiver;
              _again = true;
              desc = parent = undefined;
              continue _function;
            }
          } else if ('value' in desc) {
            return desc.value;
          } else {
            var getter = desc.get;
            if (getter === undefined) {
              return undefined;
            }
            return getter.call(receiver);
          }
        }
      };

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
          throw new TypeError('Cannot call a class as a function');
        }
      }

      function _inherits(subClass, superClass) {
        if (typeof superClass !== 'function' && superClass !== null) {
          throw new TypeError(
            'Super expression must either be null or a function, not ' + typeof superClass
          );
        }
        subClass.prototype = Object.create(superClass && superClass.prototype, {
          constructor: { value: subClass, enumerable: false, writable: true, configurable: true },
        });
        if (superClass)
          Object.setPrototypeOf
            ? Object.setPrototypeOf(subClass, superClass)
            : (subClass.__proto__ = superClass);
      }

      var _react = __webpack_require__(4);

      var _react2 = _interopRequireDefault(_react);

      var _defaultSpinner = __webpack_require__(733);

      var _defaultSpinner2 = _interopRequireDefault(_defaultSpinner);

      var Loading = (function (_Component) {
        _inherits(Loading, _Component);

        function Loading() {
          _classCallCheck(this, Loading);

          _get(Object.getPrototypeOf(Loading.prototype), 'constructor', this).apply(
            this,
            arguments
          );
        }

        _createClass(Loading, [
          {
            key: 'renderChildrenComponent',
            value: function renderChildrenComponent(children) {
              return children ? children : null;
            },
          },
          {
            key: 'renderCustomSpinner',
            value: function renderCustomSpinner(spinner, loadingClassName) {
              var Spinner = spinner;
              return _react2['default'].createElement(
                'div',
                { className: loadingClassName },
                _react2['default'].createElement(Spinner, null)
              );
            },
          },
          {
            key: 'renderDefaultSpinner',
            value: function renderDefaultSpinner(loadingClassName) {
              return _react2['default'].createElement(
                'div',
                { className: loadingClassName },
                _react2['default'].createElement(_defaultSpinner2['default'], null)
              );
            },
          },
          {
            key: 'renderSpinner',
            value: function renderSpinner(spinner, loadingClassName) {
              return !spinner
                ? this.renderDefaultSpinner(loadingClassName)
                : this.renderCustomSpinner(spinner, loadingClassName);
            },
          },
          {
            key: 'render',
            value: function render() {
              var _props = this.props;
              var isLoading = _props.isLoading;
              var loadingClassName = _props.loadingClassName;
              var spinner = _props.spinner;
              var children = _props.children;

              return isLoading
                ? this.renderSpinner(spinner, loadingClassName)
                : this.renderChildrenComponent(children);
            },
          },
        ]);

        return Loading;
      })(_react.Component);

      exports['default'] = Loading;

      Loading.defaultProps = {
        isLoading: false,
        loadingClassName: 'loadingContiner',
      };
      module.exports = exports['default'];

      /***/
    },
    /* 735 */
    /***/ function (module, __webpack_exports__, __webpack_require__) {
      'use strict';
      /* WEBPACK VAR INJECTION */ (function (process) {
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react__ = __webpack_require__(4);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react___default = __webpack_require__.n(
          __WEBPACK_IMPORTED_MODULE_0_react__
        );
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__utils_Subscription__ = __webpack_require__(
          304
        );
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__utils_storeShape__ = __webpack_require__(
          305
        );
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__utils_warning__ = __webpack_require__(
          200
        );
        /* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, 'a', function () {
          return Provider;
        });
        function _classCallCheck(instance, Constructor) {
          if (!(instance instanceof Constructor)) {
            throw new TypeError('Cannot call a class as a function');
          }
        }

        function _possibleConstructorReturn(self, call) {
          if (!self) {
            throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
          }
          return call && (typeof call === 'object' || typeof call === 'function') ? call : self;
        }

        function _inherits(subClass, superClass) {
          if (typeof superClass !== 'function' && superClass !== null) {
            throw new TypeError(
              'Super expression must either be null or a function, not ' + typeof superClass
            );
          }
          subClass.prototype = Object.create(superClass && superClass.prototype, {
            constructor: { value: subClass, enumerable: false, writable: true, configurable: true },
          });
          if (superClass)
            Object.setPrototypeOf
              ? Object.setPrototypeOf(subClass, superClass)
              : (subClass.__proto__ = superClass);
        }

        var didWarnAboutReceivingStore = false;
        function warnAboutReceivingStore() {
          if (didWarnAboutReceivingStore) {
            return;
          }
          didWarnAboutReceivingStore = true;

          __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_3__utils_warning__['a' /* default */])(
            '<Provider> does not support changing `store` on the fly. ' +
              'It is most likely that you see this error because you updated to ' +
              'Redux 2.x and React Redux 2.x which no longer hot reload reducers ' +
              'automatically. See https://github.com/reactjs/react-redux/releases/' +
              'tag/v2.0.0 for the migration instructions.'
          );
        }

        var Provider = (function (_Component) {
          _inherits(Provider, _Component);

          Provider.prototype.getChildContext = function getChildContext() {
            return { store: this.store, storeSubscription: null };
          };

          function Provider(props, context) {
            _classCallCheck(this, Provider);

            var _this = _possibleConstructorReturn(this, _Component.call(this, props, context));

            _this.store = props.store;
            return _this;
          }

          Provider.prototype.render = function render() {
            return __WEBPACK_IMPORTED_MODULE_0_react__['Children'].only(this.props.children);
          };

          return Provider;
        })(__WEBPACK_IMPORTED_MODULE_0_react__['Component']);

        if (process.env.NODE_ENV !== 'production') {
          Provider.prototype.componentWillReceiveProps = function (nextProps) {
            var store = this.store;
            var nextStore = nextProps.store;

            if (store !== nextStore) {
              warnAboutReceivingStore();
            }
          };
        }

        Provider.propTypes = {
          store: __WEBPACK_IMPORTED_MODULE_2__utils_storeShape__['a' /* default */].isRequired,
          children: __WEBPACK_IMPORTED_MODULE_0_react__['PropTypes'].element.isRequired,
        };
        Provider.childContextTypes = {
          store: __WEBPACK_IMPORTED_MODULE_2__utils_storeShape__['a' /* default */].isRequired,
          storeSubscription: __WEBPACK_IMPORTED_MODULE_0_react__['PropTypes'].instanceOf(
            __WEBPACK_IMPORTED_MODULE_1__utils_Subscription__['a' /* default */]
          ),
        };
        Provider.displayName = 'Provider';
        /* WEBPACK VAR INJECTION */
      }.call(__webpack_exports__, __webpack_require__(1)));

      /***/
    },
    /* 736 */
    /***/ function (module, __webpack_exports__, __webpack_require__) {
      'use strict';
      /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__components_connectAdvanced__ = __webpack_require__(
        302
      );
      /* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__utils_shallowEqual__ = __webpack_require__(
        742
      );
      /* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__mapDispatchToProps__ = __webpack_require__(
        737
      );
      /* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__mapStateToProps__ = __webpack_require__(
        738
      );
      /* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__mergeProps__ = __webpack_require__(739);
      /* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__selectorFactory__ = __webpack_require__(
        740
      );
      /* unused harmony export createConnect */
      var _extends =
        Object.assign ||
        function (target) {
          for (var i = 1; i < arguments.length; i++) {
            var source = arguments[i];
            for (var key in source) {
              if (Object.prototype.hasOwnProperty.call(source, key)) {
                target[key] = source[key];
              }
            }
          }
          return target;
        };

      function _objectWithoutProperties(obj, keys) {
        var target = {};
        for (var i in obj) {
          if (keys.indexOf(i) >= 0) continue;
          if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;
          target[i] = obj[i];
        }
        return target;
      }

      /*
  connect is a facade over connectAdvanced. It turns its args into a compatible
  selectorFactory, which has the signature:

    (dispatch, options) => (nextState, nextOwnProps) => nextFinalProps
  
  connect passes its args to connectAdvanced as options, which will in turn pass them to
  selectorFactory each time a Connect component instance is instantiated or hot reloaded.

  selectorFactory returns a final props selector from its mapStateToProps,
  mapStateToPropsFactories, mapDispatchToProps, mapDispatchToPropsFactories, mergeProps,
  mergePropsFactories, and pure args.

  The resulting final props selector is called by the Connect component instance whenever
  it receives new props or store state.
 */

      function match(arg, factories, name) {
        for (var i = factories.length - 1; i >= 0; i--) {
          var result = factories[i](arg);
          if (result) return result;
        }

        return function (dispatch, options) {
          throw new Error(
            'Invalid value of type ' +
              typeof arg +
              ' for ' +
              name +
              ' argument when connecting component ' +
              options.wrappedComponentName +
              '.'
          );
        };
      }

      function strictEqual(a, b) {
        return a === b;
      }

      // createConnect with default args builds the 'official' connect behavior. Calling it with
      // different options opens up some testing and extensibility scenarios
      function createConnect() {
        var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},
          _ref$connectHOC = _ref.connectHOC,
          connectHOC =
            _ref$connectHOC === undefined
              ? __WEBPACK_IMPORTED_MODULE_0__components_connectAdvanced__['a' /* default */]
              : _ref$connectHOC,
          _ref$mapStateToPropsF = _ref.mapStateToPropsFactories,
          mapStateToPropsFactories =
            _ref$mapStateToPropsF === undefined
              ? __WEBPACK_IMPORTED_MODULE_3__mapStateToProps__['a' /* default */]
              : _ref$mapStateToPropsF,
          _ref$mapDispatchToPro = _ref.mapDispatchToPropsFactories,
          mapDispatchToPropsFactories =
            _ref$mapDispatchToPro === undefined
              ? __WEBPACK_IMPORTED_MODULE_2__mapDispatchToProps__['a' /* default */]
              : _ref$mapDispatchToPro,
          _ref$mergePropsFactor = _ref.mergePropsFactories,
          mergePropsFactories =
            _ref$mergePropsFactor === undefined
              ? __WEBPACK_IMPORTED_MODULE_4__mergeProps__['a' /* default */]
              : _ref$mergePropsFactor,
          _ref$selectorFactory = _ref.selectorFactory,
          selectorFactory =
            _ref$selectorFactory === undefined
              ? __WEBPACK_IMPORTED_MODULE_5__selectorFactory__['a' /* default */]
              : _ref$selectorFactory;

        return function connect(mapStateToProps, mapDispatchToProps, mergeProps) {
          var _ref2 = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {},
            _ref2$pure = _ref2.pure,
            pure = _ref2$pure === undefined ? true : _ref2$pure,
            _ref2$areStatesEqual = _ref2.areStatesEqual,
            areStatesEqual =
              _ref2$areStatesEqual === undefined ? strictEqual : _ref2$areStatesEqual,
            _ref2$areOwnPropsEqua = _ref2.areOwnPropsEqual,
            areOwnPropsEqual =
              _ref2$areOwnPropsEqua === undefined
                ? __WEBPACK_IMPORTED_MODULE_1__utils_shallowEqual__['a' /* default */]
                : _ref2$areOwnPropsEqua,
            _ref2$areStatePropsEq = _ref2.areStatePropsEqual,
            areStatePropsEqual =
              _ref2$areStatePropsEq === undefined
                ? __WEBPACK_IMPORTED_MODULE_1__utils_shallowEqual__['a' /* default */]
                : _ref2$areStatePropsEq,
            _ref2$areMergedPropsE = _ref2.areMergedPropsEqual,
            areMergedPropsEqual =
              _ref2$areMergedPropsE === undefined
                ? __WEBPACK_IMPORTED_MODULE_1__utils_shallowEqual__['a' /* default */]
                : _ref2$areMergedPropsE,
            extraOptions = _objectWithoutProperties(_ref2, [
              'pure',
              'areStatesEqual',
              'areOwnPropsEqual',
              'areStatePropsEqual',
              'areMergedPropsEqual',
            ]);

          var initMapStateToProps = match(
            mapStateToProps,
            mapStateToPropsFactories,
            'mapStateToProps'
          );
          var initMapDispatchToProps = match(
            mapDispatchToProps,
            mapDispatchToPropsFactories,
            'mapDispatchToProps'
          );
          var initMergeProps = match(mergeProps, mergePropsFactories, 'mergeProps');

          return connectHOC(
            selectorFactory,
            _extends(
              {
                // used in error messages
                methodName: 'connect',

                // used to compute Connect's displayName from the wrapped component's displayName.
                getDisplayName: function getDisplayName(name) {
                  return 'Connect(' + name + ')';
                },

                // if mapStateToProps is falsy, the Connect component doesn't subscribe to store state changes
                shouldHandleStateChanges: Boolean(mapStateToProps),

                // passed through to selectorFactory
                initMapStateToProps: initMapStateToProps,
                initMapDispatchToProps: initMapDispatchToProps,
                initMergeProps: initMergeProps,
                pure: pure,
                areStatesEqual: areStatesEqual,
                areOwnPropsEqual: areOwnPropsEqual,
                areStatePropsEqual: areStatePropsEqual,
                areMergedPropsEqual: areMergedPropsEqual,
              },
              extraOptions
            )
          );
        };
      }

      /* harmony default export */ __webpack_exports__['a'] = createConnect();

      /***/
    },
    /* 737 */
    /***/ function (module, __webpack_exports__, __webpack_require__) {
      'use strict';
      /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_redux__ = __webpack_require__(319);
      /* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__wrapMapToProps__ = __webpack_require__(
        303
      );
      /* unused harmony export whenMapDispatchToPropsIsFunction */
      /* unused harmony export whenMapDispatchToPropsIsMissing */
      /* unused harmony export whenMapDispatchToPropsIsObject */

      function whenMapDispatchToPropsIsFunction(mapDispatchToProps) {
        return typeof mapDispatchToProps === 'function'
          ? __webpack_require__.i(
              __WEBPACK_IMPORTED_MODULE_1__wrapMapToProps__['a' /* wrapMapToPropsFunc */]
            )(mapDispatchToProps, 'mapDispatchToProps')
          : undefined;
      }

      function whenMapDispatchToPropsIsMissing(mapDispatchToProps) {
        return !mapDispatchToProps
          ? __webpack_require__.i(
              __WEBPACK_IMPORTED_MODULE_1__wrapMapToProps__['b' /* wrapMapToPropsConstant */]
            )(function (dispatch) {
              return { dispatch: dispatch };
            })
          : undefined;
      }

      function whenMapDispatchToPropsIsObject(mapDispatchToProps) {
        return mapDispatchToProps && typeof mapDispatchToProps === 'object'
          ? __webpack_require__.i(
              __WEBPACK_IMPORTED_MODULE_1__wrapMapToProps__['b' /* wrapMapToPropsConstant */]
            )(function (dispatch) {
              return __webpack_require__.i(
                __WEBPACK_IMPORTED_MODULE_0_redux__['bindActionCreators']
              )(mapDispatchToProps, dispatch);
            })
          : undefined;
      }

      /* harmony default export */ __webpack_exports__['a'] = [
        whenMapDispatchToPropsIsFunction,
        whenMapDispatchToPropsIsMissing,
        whenMapDispatchToPropsIsObject,
      ];

      /***/
    },
    /* 738 */
    /***/ function (module, __webpack_exports__, __webpack_require__) {
      'use strict';
      /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__wrapMapToProps__ = __webpack_require__(
        303
      );
      /* unused harmony export whenMapStateToPropsIsFunction */
      /* unused harmony export whenMapStateToPropsIsMissing */

      function whenMapStateToPropsIsFunction(mapStateToProps) {
        return typeof mapStateToProps === 'function'
          ? __webpack_require__.i(
              __WEBPACK_IMPORTED_MODULE_0__wrapMapToProps__['a' /* wrapMapToPropsFunc */]
            )(mapStateToProps, 'mapStateToProps')
          : undefined;
      }

      function whenMapStateToPropsIsMissing(mapStateToProps) {
        return !mapStateToProps
          ? __webpack_require__.i(
              __WEBPACK_IMPORTED_MODULE_0__wrapMapToProps__['b' /* wrapMapToPropsConstant */]
            )(function () {
              return {};
            })
          : undefined;
      }

      /* harmony default export */ __webpack_exports__['a'] = [
        whenMapStateToPropsIsFunction,
        whenMapStateToPropsIsMissing,
      ];

      /***/
    },
    /* 739 */
    /***/ function (module, __webpack_exports__, __webpack_require__) {
      'use strict';
      /* WEBPACK VAR INJECTION */ (function (process) {
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__utils_verifyPlainObject__ = __webpack_require__(
          306
        );
        /* unused harmony export defaultMergeProps */
        /* unused harmony export wrapMergePropsFunc */
        /* unused harmony export whenMergePropsIsFunction */
        /* unused harmony export whenMergePropsIsOmitted */
        var _extends =
          Object.assign ||
          function (target) {
            for (var i = 1; i < arguments.length; i++) {
              var source = arguments[i];
              for (var key in source) {
                if (Object.prototype.hasOwnProperty.call(source, key)) {
                  target[key] = source[key];
                }
              }
            }
            return target;
          };

        function defaultMergeProps(stateProps, dispatchProps, ownProps) {
          return _extends({}, ownProps, stateProps, dispatchProps);
        }

        function wrapMergePropsFunc(mergeProps) {
          return function initMergePropsProxy(dispatch, _ref) {
            var displayName = _ref.displayName,
              pure = _ref.pure,
              areMergedPropsEqual = _ref.areMergedPropsEqual;

            var hasRunOnce = false;
            var mergedProps = void 0;

            return function mergePropsProxy(stateProps, dispatchProps, ownProps) {
              var nextMergedProps = mergeProps(stateProps, dispatchProps, ownProps);

              if (hasRunOnce) {
                if (!pure || !areMergedPropsEqual(nextMergedProps, mergedProps))
                  mergedProps = nextMergedProps;
              } else {
                hasRunOnce = true;
                mergedProps = nextMergedProps;

                if (process.env.NODE_ENV !== 'production')
                  __webpack_require__.i(
                    __WEBPACK_IMPORTED_MODULE_0__utils_verifyPlainObject__['a' /* default */]
                  )(mergedProps, displayName, 'mergeProps');
              }

              return mergedProps;
            };
          };
        }

        function whenMergePropsIsFunction(mergeProps) {
          return typeof mergeProps === 'function' ? wrapMergePropsFunc(mergeProps) : undefined;
        }

        function whenMergePropsIsOmitted(mergeProps) {
          return !mergeProps
            ? function () {
                return defaultMergeProps;
              }
            : undefined;
        }

        /* harmony default export */ __webpack_exports__['a'] = [
          whenMergePropsIsFunction,
          whenMergePropsIsOmitted,
        ];
        /* WEBPACK VAR INJECTION */
      }.call(__webpack_exports__, __webpack_require__(1)));

      /***/
    },
    /* 740 */
    /***/ function (module, __webpack_exports__, __webpack_require__) {
      'use strict';
      /* WEBPACK VAR INJECTION */ (function (process) {
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__verifySubselectors__ = __webpack_require__(
          741
        );
        /* unused harmony export impureFinalPropsSelectorFactory */
        /* unused harmony export pureFinalPropsSelectorFactory */
        /* harmony export (immutable) */ __webpack_exports__['a'] = finalPropsSelectorFactory;
        function _objectWithoutProperties(obj, keys) {
          var target = {};
          for (var i in obj) {
            if (keys.indexOf(i) >= 0) continue;
            if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;
            target[i] = obj[i];
          }
          return target;
        }

        function impureFinalPropsSelectorFactory(
          mapStateToProps,
          mapDispatchToProps,
          mergeProps,
          dispatch
        ) {
          return function impureFinalPropsSelector(state, ownProps) {
            return mergeProps(
              mapStateToProps(state, ownProps),
              mapDispatchToProps(dispatch, ownProps),
              ownProps
            );
          };
        }

        function pureFinalPropsSelectorFactory(
          mapStateToProps,
          mapDispatchToProps,
          mergeProps,
          dispatch,
          _ref
        ) {
          var areStatesEqual = _ref.areStatesEqual,
            areOwnPropsEqual = _ref.areOwnPropsEqual,
            areStatePropsEqual = _ref.areStatePropsEqual;

          var hasRunAtLeastOnce = false;
          var state = void 0;
          var ownProps = void 0;
          var stateProps = void 0;
          var dispatchProps = void 0;
          var mergedProps = void 0;

          function handleFirstCall(firstState, firstOwnProps) {
            state = firstState;
            ownProps = firstOwnProps;
            stateProps = mapStateToProps(state, ownProps);
            dispatchProps = mapDispatchToProps(dispatch, ownProps);
            mergedProps = mergeProps(stateProps, dispatchProps, ownProps);
            hasRunAtLeastOnce = true;
            return mergedProps;
          }

          function handleNewPropsAndNewState() {
            stateProps = mapStateToProps(state, ownProps);

            if (mapDispatchToProps.dependsOnOwnProps)
              dispatchProps = mapDispatchToProps(dispatch, ownProps);

            mergedProps = mergeProps(stateProps, dispatchProps, ownProps);
            return mergedProps;
          }

          function handleNewProps() {
            if (mapStateToProps.dependsOnOwnProps) stateProps = mapStateToProps(state, ownProps);

            if (mapDispatchToProps.dependsOnOwnProps)
              dispatchProps = mapDispatchToProps(dispatch, ownProps);

            mergedProps = mergeProps(stateProps, dispatchProps, ownProps);
            return mergedProps;
          }

          function handleNewState() {
            var nextStateProps = mapStateToProps(state, ownProps);
            var statePropsChanged = !areStatePropsEqual(nextStateProps, stateProps);
            stateProps = nextStateProps;

            if (statePropsChanged) mergedProps = mergeProps(stateProps, dispatchProps, ownProps);

            return mergedProps;
          }

          function handleSubsequentCalls(nextState, nextOwnProps) {
            var propsChanged = !areOwnPropsEqual(nextOwnProps, ownProps);
            var stateChanged = !areStatesEqual(nextState, state);
            state = nextState;
            ownProps = nextOwnProps;

            if (propsChanged && stateChanged) return handleNewPropsAndNewState();
            if (propsChanged) return handleNewProps();
            if (stateChanged) return handleNewState();
            return mergedProps;
          }

          return function pureFinalPropsSelector(nextState, nextOwnProps) {
            return hasRunAtLeastOnce
              ? handleSubsequentCalls(nextState, nextOwnProps)
              : handleFirstCall(nextState, nextOwnProps);
          };
        }

        // TODO: Add more comments

        // If pure is true, the selector returned by selectorFactory will memoize its results,
        // allowing connectAdvanced's shouldComponentUpdate to return false if final
        // props have not changed. If false, the selector will always return a new
        // object and shouldComponentUpdate will always return true.

        function finalPropsSelectorFactory(dispatch, _ref2) {
          var initMapStateToProps = _ref2.initMapStateToProps,
            initMapDispatchToProps = _ref2.initMapDispatchToProps,
            initMergeProps = _ref2.initMergeProps,
            options = _objectWithoutProperties(_ref2, [
              'initMapStateToProps',
              'initMapDispatchToProps',
              'initMergeProps',
            ]);

          var mapStateToProps = initMapStateToProps(dispatch, options);
          var mapDispatchToProps = initMapDispatchToProps(dispatch, options);
          var mergeProps = initMergeProps(dispatch, options);

          if (process.env.NODE_ENV !== 'production') {
            __webpack_require__.i(
              __WEBPACK_IMPORTED_MODULE_0__verifySubselectors__['a' /* default */]
            )(mapStateToProps, mapDispatchToProps, mergeProps, options.displayName);
          }

          var selectorFactory = options.pure
            ? pureFinalPropsSelectorFactory
            : impureFinalPropsSelectorFactory;

          return selectorFactory(
            mapStateToProps,
            mapDispatchToProps,
            mergeProps,
            dispatch,
            options
          );
        }
        /* WEBPACK VAR INJECTION */
      }.call(__webpack_exports__, __webpack_require__(1)));

      /***/
    },
    /* 741 */
    /***/ function (module, __webpack_exports__, __webpack_require__) {
      'use strict';
      /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__utils_warning__ = __webpack_require__(
        200
      );
      /* harmony export (immutable) */ __webpack_exports__['a'] = verifySubselectors;

      function verify(selector, methodName, displayName) {
        if (!selector) {
          throw new Error('Unexpected value for ' + methodName + ' in ' + displayName + '.');
        } else if (methodName === 'mapStateToProps' || methodName === 'mapDispatchToProps') {
          if (!selector.hasOwnProperty('dependsOnOwnProps')) {
            __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__utils_warning__['a' /* default */])(
              'The selector for ' +
                methodName +
                ' of ' +
                displayName +
                ' did not specify a value for dependsOnOwnProps.'
            );
          }
        }
      }

      function verifySubselectors(mapStateToProps, mapDispatchToProps, mergeProps, displayName) {
        verify(mapStateToProps, 'mapStateToProps', displayName);
        verify(mapDispatchToProps, 'mapDispatchToProps', displayName);
        verify(mergeProps, 'mergeProps', displayName);
      }

      /***/
    },
    /* 742 */
    /***/ function (module, __webpack_exports__, __webpack_require__) {
      'use strict';
      /* harmony export (immutable) */ __webpack_exports__['a'] = shallowEqual;
      var hasOwn = Object.prototype.hasOwnProperty;

      function shallowEqual(a, b) {
        if (a === b) return true;

        var countA = 0;
        var countB = 0;

        for (var key in a) {
          if (hasOwn.call(a, key) && a[key] !== b[key]) return false;
          countA++;
        }

        for (var _key in b) {
          if (hasOwn.call(b, _key)) countB++;
        }

        return countA === countB;
      }

      /***/
    },
    /* 743 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true,
      });

      var _extends =
        Object.assign ||
        function (target) {
          for (var i = 1; i < arguments.length; i++) {
            var source = arguments[i];
            for (var key in source) {
              if (Object.prototype.hasOwnProperty.call(source, key)) {
                target[key] = source[key];
              }
            }
          }
          return target;
        };

      var _createClass = (function () {
        function defineProperties(target, props) {
          for (var i = 0; i < props.length; i++) {
            var descriptor = props[i];
            descriptor.enumerable = descriptor.enumerable || false;
            descriptor.configurable = true;
            if ('value' in descriptor) descriptor.writable = true;
            Object.defineProperty(target, descriptor.key, descriptor);
          }
        }
        return function (Constructor, protoProps, staticProps) {
          if (protoProps) defineProperties(Constructor.prototype, protoProps);
          if (staticProps) defineProperties(Constructor, staticProps);
          return Constructor;
        };
      })();

      var _get = function get(_x, _x2, _x3) {
        var _again = true;
        _function: while (_again) {
          var object = _x,
            property = _x2,
            receiver = _x3;
          _again = false;
          if (object === null) object = Function.prototype;
          var desc = Object.getOwnPropertyDescriptor(object, property);
          if (desc === undefined) {
            var parent = Object.getPrototypeOf(object);
            if (parent === null) {
              return undefined;
            } else {
              _x = parent;
              _x2 = property;
              _x3 = receiver;
              _again = true;
              desc = parent = undefined;
              continue _function;
            }
          } else if ('value' in desc) {
            return desc.value;
          } else {
            var getter = desc.get;
            if (getter === undefined) {
              return undefined;
            }
            return getter.call(receiver);
          }
        }
      };

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      function _defineProperty(obj, key, value) {
        if (key in obj) {
          Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true,
          });
        } else {
          obj[key] = value;
        }
        return obj;
      }

      function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
          throw new TypeError('Cannot call a class as a function');
        }
      }

      function _inherits(subClass, superClass) {
        if (typeof superClass !== 'function' && superClass !== null) {
          throw new TypeError(
            'Super expression must either be null or a function, not ' + typeof superClass
          );
        }
        subClass.prototype = Object.create(superClass && superClass.prototype, {
          constructor: { value: subClass, enumerable: false, writable: true, configurable: true },
        });
        if (superClass)
          Object.setPrototypeOf
            ? Object.setPrototypeOf(subClass, superClass)
            : (subClass.__proto__ = superClass);
      }

      var _react = __webpack_require__(4);

      var _react2 = _interopRequireDefault(_react);

      var _Select = __webpack_require__(101);

      var _Select2 = _interopRequireDefault(_Select);

      var _utilsStripDiacritics = __webpack_require__(309);

      var _utilsStripDiacritics2 = _interopRequireDefault(_utilsStripDiacritics);

      var propTypes = {
        autoload: _react2['default'].PropTypes.bool.isRequired, // automatically call the `loadOptions` prop on-mount; defaults to true
        cache: _react2['default'].PropTypes.any, // object to use to cache results; set to null/false to disable caching
        children: _react2['default'].PropTypes.func.isRequired, // Child function responsible for creating the inner Select component; (props: Object): PropTypes.element
        ignoreAccents: _react2['default'].PropTypes.bool, // strip diacritics when filtering; defaults to true
        ignoreCase: _react2['default'].PropTypes.bool, // perform case-insensitive filtering; defaults to true
        loadingPlaceholder: _react2['default'].PropTypes.oneOfType([
          // replaces the placeholder while options are loading
          _react2['default'].PropTypes.string,
          _react2['default'].PropTypes.node,
        ]),
        loadOptions: _react2['default'].PropTypes.func.isRequired, // callback to load options asynchronously; (inputValue: string, callback: Function): ?Promise
        options: _react.PropTypes.array.isRequired, // array of options
        placeholder: _react2['default'].PropTypes.oneOfType([
          // field placeholder, displayed when there's no value (shared with Select)
          _react2['default'].PropTypes.string,
          _react2['default'].PropTypes.node,
        ]),
        noResultsText: _react2['default'].PropTypes.oneOfType([
          // field noResultsText, displayed when no options come back from the server
          _react2['default'].PropTypes.string,
          _react2['default'].PropTypes.node,
        ]),
        onChange: _react2['default'].PropTypes.func, // onChange handler: function (newValue) {}
        searchPromptText: _react2['default'].PropTypes.oneOfType([
          // label to prompt for search input
          _react2['default'].PropTypes.string,
          _react2['default'].PropTypes.node,
        ]),
        onInputChange: _react2['default'].PropTypes.func, // optional for keeping track of what is being typed
        value: _react2['default'].PropTypes.any,
      };

      // initial field value
      var defaultCache = {};

      var defaultProps = {
        autoload: true,
        cache: defaultCache,
        children: defaultChildren,
        ignoreAccents: true,
        ignoreCase: true,
        loadingPlaceholder: 'Loading...',
        options: [],
        searchPromptText: 'Type to search',
      };

      var Async = (function (_Component) {
        _inherits(Async, _Component);

        function Async(props, context) {
          _classCallCheck(this, Async);

          _get(Object.getPrototypeOf(Async.prototype), 'constructor', this).call(
            this,
            props,
            context
          );

          this._cache = props.cache === defaultCache ? {} : props.cache;

          this.state = {
            isLoading: false,
            options: props.options,
          };

          this._onInputChange = this._onInputChange.bind(this);
        }

        _createClass(Async, [
          {
            key: 'componentDidMount',
            value: function componentDidMount() {
              var autoload = this.props.autoload;

              if (autoload) {
                this.loadOptions('');
              }
            },
          },
          {
            key: 'componentWillUpdate',
            value: function componentWillUpdate(nextProps, nextState) {
              var _this = this;

              var propertiesToSync = ['options'];
              propertiesToSync.forEach(function (prop) {
                if (_this.props[prop] !== nextProps[prop]) {
                  _this.setState(_defineProperty({}, prop, nextProps[prop]));
                }
              });
            },
          },
          {
            key: 'clearOptions',
            value: function clearOptions() {
              this.setState({ options: [] });
            },
          },
          {
            key: 'loadOptions',
            value: function loadOptions(inputValue) {
              var _this2 = this;

              var loadOptions = this.props.loadOptions;

              var cache = this._cache;

              if (cache && cache.hasOwnProperty(inputValue)) {
                this.setState({
                  options: cache[inputValue],
                });

                return;
              }

              var callback = function callback(error, data) {
                if (callback === _this2._callback) {
                  _this2._callback = null;

                  var options = (data && data.options) || [];

                  if (cache) {
                    cache[inputValue] = options;
                  }

                  _this2.setState({
                    isLoading: false,
                    options: options,
                  });
                }
              };

              // Ignore all but the most recent request
              this._callback = callback;

              var promise = loadOptions(inputValue, callback);
              if (promise) {
                promise.then(
                  function (data) {
                    return callback(null, data);
                  },
                  function (error) {
                    return callback(error);
                  }
                );
              }

              if (this._callback && !this.state.isLoading) {
                this.setState({
                  isLoading: true,
                });
              }

              return inputValue;
            },
          },
          {
            key: '_onInputChange',
            value: function _onInputChange(inputValue) {
              var _props = this.props;
              var ignoreAccents = _props.ignoreAccents;
              var ignoreCase = _props.ignoreCase;
              var onInputChange = _props.onInputChange;

              if (ignoreAccents) {
                inputValue = (0, _utilsStripDiacritics2['default'])(inputValue);
              }

              if (ignoreCase) {
                inputValue = inputValue.toLowerCase();
              }

              if (onInputChange) {
                onInputChange(inputValue);
              }

              return this.loadOptions(inputValue);
            },
          },
          {
            key: 'inputValue',
            value: function inputValue() {
              if (this.select) {
                return this.select.state.inputValue;
              }
              return '';
            },
          },
          {
            key: 'noResultsText',
            value: function noResultsText() {
              var _props2 = this.props;
              var loadingPlaceholder = _props2.loadingPlaceholder;
              var noResultsText = _props2.noResultsText;
              var searchPromptText = _props2.searchPromptText;
              var isLoading = this.state.isLoading;

              var inputValue = this.inputValue();

              if (isLoading) {
                return loadingPlaceholder;
              }
              if (inputValue && noResultsText) {
                return noResultsText;
              }
              return searchPromptText;
            },
          },
          {
            key: 'focus',
            value: function focus() {
              this.select.focus();
            },
          },
          {
            key: 'render',
            value: function render() {
              var _this3 = this;

              var _props3 = this.props;
              var children = _props3.children;
              var loadingPlaceholder = _props3.loadingPlaceholder;
              var placeholder = _props3.placeholder;
              var _state = this.state;
              var isLoading = _state.isLoading;
              var options = _state.options;

              var props = {
                noResultsText: this.noResultsText(),
                placeholder: isLoading ? loadingPlaceholder : placeholder,
                options: isLoading && loadingPlaceholder ? [] : options,
                ref: function ref(_ref) {
                  return (_this3.select = _ref);
                },
                onChange: function onChange(newValues) {
                  if (
                    _this3.props.multi &&
                    _this3.props.value &&
                    newValues.length > _this3.props.value.length
                  ) {
                    _this3.clearOptions();
                  }
                  _this3.props.onChange(newValues);
                },
              };

              return children(
                _extends({}, this.props, props, {
                  isLoading: isLoading,
                  onInputChange: this._onInputChange,
                })
              );
            },
          },
        ]);

        return Async;
      })(_react.Component);

      exports['default'] = Async;

      Async.propTypes = propTypes;
      Async.defaultProps = defaultProps;

      function defaultChildren(props) {
        return _react2['default'].createElement(_Select2['default'], props);
      }
      module.exports = exports['default'];

      /***/
    },
    /* 744 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';

      var _extends =
        Object.assign ||
        function (target) {
          for (var i = 1; i < arguments.length; i++) {
            var source = arguments[i];
            for (var key in source) {
              if (Object.prototype.hasOwnProperty.call(source, key)) {
                target[key] = source[key];
              }
            }
          }
          return target;
        };

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      var _react = __webpack_require__(4);

      var _react2 = _interopRequireDefault(_react);

      var _Select = __webpack_require__(101);

      var _Select2 = _interopRequireDefault(_Select);

      function reduce(obj) {
        var props = arguments.length <= 1 || arguments[1] === undefined ? {} : arguments[1];

        return Object.keys(obj).reduce(function (props, key) {
          var value = obj[key];
          if (value !== undefined) props[key] = value;
          return props;
        }, props);
      }

      var AsyncCreatable = _react2['default'].createClass({
        displayName: 'AsyncCreatableSelect',

        render: function render() {
          var _this = this;

          return _react2['default'].createElement(
            _Select2['default'].Async,
            this.props,
            function (asyncProps) {
              return _react2['default'].createElement(
                _Select2['default'].Creatable,
                _this.props,
                function (creatableProps) {
                  return _react2['default'].createElement(
                    _Select2['default'],
                    _extends({}, reduce(asyncProps, reduce(creatableProps, {})), {
                      onInputChange: function (input) {
                        creatableProps.onInputChange(input);
                        return asyncProps.onInputChange(input);
                      },
                      ref: function (ref) {
                        creatableProps.ref(ref);
                        asyncProps.ref(ref);
                      },
                    })
                  );
                }
              );
            }
          );
        },
      });

      module.exports = AsyncCreatable;

      /***/
    },
    /* 745 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';

      var _extends =
        Object.assign ||
        function (target) {
          for (var i = 1; i < arguments.length; i++) {
            var source = arguments[i];
            for (var key in source) {
              if (Object.prototype.hasOwnProperty.call(source, key)) {
                target[key] = source[key];
              }
            }
          }
          return target;
        };

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      function _objectWithoutProperties(obj, keys) {
        var target = {};
        for (var i in obj) {
          if (keys.indexOf(i) >= 0) continue;
          if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;
          target[i] = obj[i];
        }
        return target;
      }

      var _react = __webpack_require__(4);

      var _react2 = _interopRequireDefault(_react);

      var _Select = __webpack_require__(101);

      var _Select2 = _interopRequireDefault(_Select);

      var _utilsDefaultFilterOptions = __webpack_require__(307);

      var _utilsDefaultFilterOptions2 = _interopRequireDefault(_utilsDefaultFilterOptions);

      var _utilsDefaultMenuRenderer = __webpack_require__(308);

      var _utilsDefaultMenuRenderer2 = _interopRequireDefault(_utilsDefaultMenuRenderer);

      var Creatable = _react2['default'].createClass({
        displayName: 'CreatableSelect',

        propTypes: {
          // Child function responsible for creating the inner Select component
          // This component can be used to compose HOCs (eg Creatable and Async)
          // (props: Object): PropTypes.element
          children: _react2['default'].PropTypes.func,

          // See Select.propTypes.filterOptions
          filterOptions: _react2['default'].PropTypes.any,

          // Searches for any matching option within the set of options.
          // This function prevents duplicate options from being created.
          // ({ option: Object, options: Array, labelKey: string, valueKey: string }): boolean
          isOptionUnique: _react2['default'].PropTypes.func,

          // Determines if the current input text represents a valid option.
          // ({ label: string }): boolean
          isValidNewOption: _react2['default'].PropTypes.func,

          // See Select.propTypes.menuRenderer
          menuRenderer: _react2['default'].PropTypes.any,

          // Factory to create new option.
          // ({ label: string, labelKey: string, valueKey: string }): Object
          newOptionCreator: _react2['default'].PropTypes.func,

          // input change handler: function (inputValue) {}
          onInputChange: _react2['default'].PropTypes.func,

          // input keyDown handler: function (event) {}
          onInputKeyDown: _react2['default'].PropTypes.func,

          // new option click handler: function (option) {}
          onNewOptionClick: _react2['default'].PropTypes.func,

          // See Select.propTypes.options
          options: _react2['default'].PropTypes.array,

          // Creates prompt/placeholder option text.
          // (filterText: string): string
          promptTextCreator: _react2['default'].PropTypes.func,

          // Decides if a keyDown event (eg its `keyCode`) should result in the creation of a new option.
          shouldKeyDownEventCreateNewOption: _react2['default'].PropTypes.func,
        },

        // Default prop methods
        statics: {
          isOptionUnique: isOptionUnique,
          isValidNewOption: isValidNewOption,
          newOptionCreator: newOptionCreator,
          promptTextCreator: promptTextCreator,
          shouldKeyDownEventCreateNewOption: shouldKeyDownEventCreateNewOption,
        },

        getDefaultProps: function getDefaultProps() {
          return {
            filterOptions: _utilsDefaultFilterOptions2['default'],
            isOptionUnique: isOptionUnique,
            isValidNewOption: isValidNewOption,
            menuRenderer: _utilsDefaultMenuRenderer2['default'],
            newOptionCreator: newOptionCreator,
            promptTextCreator: promptTextCreator,
            shouldKeyDownEventCreateNewOption: shouldKeyDownEventCreateNewOption,
          };
        },

        createNewOption: function createNewOption() {
          var _props = this.props;
          var isValidNewOption = _props.isValidNewOption;
          var newOptionCreator = _props.newOptionCreator;
          var onNewOptionClick = _props.onNewOptionClick;
          var _props$options = _props.options;
          var options = _props$options === undefined ? [] : _props$options;
          var shouldKeyDownEventCreateNewOption = _props.shouldKeyDownEventCreateNewOption;

          if (isValidNewOption({ label: this.inputValue })) {
            var option = newOptionCreator({
              label: this.inputValue,
              labelKey: this.labelKey,
              valueKey: this.valueKey,
            });
            var _isOptionUnique = this.isOptionUnique({ option: option });

            // Don't add the same option twice.
            if (_isOptionUnique) {
              if (onNewOptionClick) {
                onNewOptionClick(option);
              } else {
                options.unshift(option);

                this.select.selectValue(option);
              }
            }
          }
        },

        filterOptions: function filterOptions() {
          var _props2 = this.props;
          var filterOptions = _props2.filterOptions;
          var isValidNewOption = _props2.isValidNewOption;
          var options = _props2.options;
          var promptTextCreator = _props2.promptTextCreator;

          // TRICKY Check currently selected options as well.
          // Don't display a create-prompt for a value that's selected.
          // This covers async edge-cases where a newly-created Option isn't yet in the async-loaded array.
          var excludeOptions = arguments[2] || [];

          var filteredOptions = filterOptions.apply(undefined, arguments) || [];

          if (isValidNewOption({ label: this.inputValue })) {
            var _newOptionCreator = this.props.newOptionCreator;

            var option = _newOptionCreator({
              label: this.inputValue,
              labelKey: this.labelKey,
              valueKey: this.valueKey,
            });

            // TRICKY Compare to all options (not just filtered options) in case option has already been selected).
            // For multi-selects, this would remove it from the filtered list.
            var _isOptionUnique2 = this.isOptionUnique({
              option: option,
              options: excludeOptions.concat(filteredOptions),
            });

            if (_isOptionUnique2) {
              var _prompt = promptTextCreator(this.inputValue);

              this._createPlaceholderOption = _newOptionCreator({
                label: _prompt,
                labelKey: this.labelKey,
                valueKey: this.valueKey,
              });

              filteredOptions.unshift(this._createPlaceholderOption);
            }
          }

          return filteredOptions;
        },

        isOptionUnique: function isOptionUnique(_ref2) {
          var option = _ref2.option;
          var options = _ref2.options;
          var isOptionUnique = this.props.isOptionUnique;

          options = options || this.select.filterOptions();

          return isOptionUnique({
            labelKey: this.labelKey,
            option: option,
            options: options,
            valueKey: this.valueKey,
          });
        },

        menuRenderer: function menuRenderer(params) {
          var menuRenderer = this.props.menuRenderer;

          return menuRenderer(
            _extends({}, params, {
              onSelect: this.onOptionSelect,
              selectValue: this.onOptionSelect,
            })
          );
        },

        onInputChange: function onInputChange(input) {
          var onInputChange = this.props.onInputChange;

          if (onInputChange) {
            onInputChange(input);
          }

          // This value may be needed in between Select mounts (when this.select is null)
          this.inputValue = input;
        },

        onInputKeyDown: function onInputKeyDown(event) {
          var _props3 = this.props;
          var shouldKeyDownEventCreateNewOption = _props3.shouldKeyDownEventCreateNewOption;
          var onInputKeyDown = _props3.onInputKeyDown;

          var focusedOption = this.select.getFocusedOption();

          if (
            focusedOption &&
            focusedOption === this._createPlaceholderOption &&
            shouldKeyDownEventCreateNewOption({ keyCode: event.keyCode })
          ) {
            this.createNewOption();

            // Prevent decorated Select from doing anything additional with this keyDown event
            event.preventDefault();
          } else if (onInputKeyDown) {
            onInputKeyDown(event);
          }
        },

        onOptionSelect: function onOptionSelect(option, event) {
          if (option === this._createPlaceholderOption) {
            this.createNewOption();
          } else {
            this.select.selectValue(option);
          }
        },

        render: function render() {
          var _this = this;

          var _props4 = this.props;
          var newOptionCreator = _props4.newOptionCreator;
          var shouldKeyDownEventCreateNewOption = _props4.shouldKeyDownEventCreateNewOption;

          var restProps = _objectWithoutProperties(_props4, [
            'newOptionCreator',
            'shouldKeyDownEventCreateNewOption',
          ]);

          var children = this.props.children;

          // We can't use destructuring default values to set the children,
          // because it won't apply work if `children` is null. A falsy check is
          // more reliable in real world use-cases.
          if (!children) {
            children = defaultChildren;
          }

          var props = _extends({}, restProps, {
            allowCreate: true,
            filterOptions: this.filterOptions,
            menuRenderer: this.menuRenderer,
            onInputChange: this.onInputChange,
            onInputKeyDown: this.onInputKeyDown,
            ref: function ref(_ref) {
              _this.select = _ref;

              // These values may be needed in between Select mounts (when this.select is null)
              if (_ref) {
                _this.labelKey = _ref.props.labelKey;
                _this.valueKey = _ref.props.valueKey;
              }
            },
          });

          return children(props);
        },
      });

      function defaultChildren(props) {
        return _react2['default'].createElement(_Select2['default'], props);
      }

      function isOptionUnique(_ref3) {
        var option = _ref3.option;
        var options = _ref3.options;
        var labelKey = _ref3.labelKey;
        var valueKey = _ref3.valueKey;

        return (
          options.filter(function (existingOption) {
            return (
              existingOption[labelKey] === option[labelKey] ||
              existingOption[valueKey] === option[valueKey]
            );
          }).length === 0
        );
      }

      function isValidNewOption(_ref4) {
        var label = _ref4.label;

        return !!label;
      }

      function newOptionCreator(_ref5) {
        var label = _ref5.label;
        var labelKey = _ref5.labelKey;
        var valueKey = _ref5.valueKey;

        var option = {};
        option[valueKey] = label;
        option[labelKey] = label;
        option.className = 'Select-create-option-placeholder';
        return option;
      }

      function promptTextCreator(label) {
        return 'Create option "' + label + '"';
      }

      function shouldKeyDownEventCreateNewOption(_ref6) {
        var keyCode = _ref6.keyCode;

        switch (keyCode) {
          case 9: // TAB
          case 13: // ENTER
          case 188:
            // COMMA
            return true;
        }

        return false;
      }

      module.exports = Creatable;

      /***/
    },
    /* 746 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      var _react = __webpack_require__(4);

      var _react2 = _interopRequireDefault(_react);

      var _classnames = __webpack_require__(72);

      var _classnames2 = _interopRequireDefault(_classnames);

      var Option = _react2['default'].createClass({
        displayName: 'Option',

        propTypes: {
          children: _react2['default'].PropTypes.node,
          className: _react2['default'].PropTypes.string, // className (based on mouse position)
          instancePrefix: _react2['default'].PropTypes.string.isRequired, // unique prefix for the ids (used for aria)
          isDisabled: _react2['default'].PropTypes.bool, // the option is disabled
          isFocused: _react2['default'].PropTypes.bool, // the option is focused
          isSelected: _react2['default'].PropTypes.bool, // the option is selected
          onFocus: _react2['default'].PropTypes.func, // method to handle mouseEnter on option element
          onSelect: _react2['default'].PropTypes.func, // method to handle click on option element
          onUnfocus: _react2['default'].PropTypes.func, // method to handle mouseLeave on option element
          option: _react2['default'].PropTypes.object.isRequired, // object that is base for that option
          optionIndex: _react2['default'].PropTypes.number,
        },
        // index of the option, used to generate unique ids for aria
        blockEvent: function blockEvent(event) {
          event.preventDefault();
          event.stopPropagation();
          if (event.target.tagName !== 'A' || !('href' in event.target)) {
            return;
          }
          if (event.target.target) {
            window.open(event.target.href, event.target.target);
          } else {
            window.location.href = event.target.href;
          }
        },

        handleMouseDown: function handleMouseDown(event) {
          event.preventDefault();
          event.stopPropagation();
          this.props.onSelect(this.props.option, event);
        },

        handleMouseEnter: function handleMouseEnter(event) {
          this.onFocus(event);
        },

        handleMouseMove: function handleMouseMove(event) {
          this.onFocus(event);
        },

        handleTouchEnd: function handleTouchEnd(event) {
          // Check if the view is being dragged, In this case
          // we don't want to fire the click event (because the user only wants to scroll)
          if (this.dragging) return;

          this.handleMouseDown(event);
        },

        handleTouchMove: function handleTouchMove(event) {
          // Set a flag that the view is being dragged
          this.dragging = true;
        },

        handleTouchStart: function handleTouchStart(event) {
          // Set a flag that the view is not being dragged
          this.dragging = false;
        },

        onFocus: function onFocus(event) {
          if (!this.props.isFocused) {
            this.props.onFocus(this.props.option, event);
          }
        },
        render: function render() {
          var _props = this.props;
          var option = _props.option;
          var instancePrefix = _props.instancePrefix;
          var optionIndex = _props.optionIndex;

          var className = (0, _classnames2['default'])(this.props.className, option.className);

          return option.disabled
            ? _react2['default'].createElement(
                'div',
                { className: className, onMouseDown: this.blockEvent, onClick: this.blockEvent },
                this.props.children
              )
            : _react2['default'].createElement(
                'div',
                {
                  className: className,
                  style: option.style,
                  role: 'option',
                  onMouseDown: this.handleMouseDown,
                  onMouseEnter: this.handleMouseEnter,
                  onMouseMove: this.handleMouseMove,
                  onTouchStart: this.handleTouchStart,
                  onTouchMove: this.handleTouchMove,
                  onTouchEnd: this.handleTouchEnd,
                  id: instancePrefix + '-option-' + optionIndex,
                  title: option.title,
                },
                this.props.children
              );
        },
      });

      module.exports = Option;

      /***/
    },
    /* 747 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      var _react = __webpack_require__(4);

      var _react2 = _interopRequireDefault(_react);

      var _classnames = __webpack_require__(72);

      var _classnames2 = _interopRequireDefault(_classnames);

      var Value = _react2['default'].createClass({
        displayName: 'Value',

        propTypes: {
          children: _react2['default'].PropTypes.node,
          disabled: _react2['default'].PropTypes.bool, // disabled prop passed to ReactSelect
          id: _react2['default'].PropTypes.string, // Unique id for the value - used for aria
          onClick: _react2['default'].PropTypes.func, // method to handle click on value label
          onRemove: _react2['default'].PropTypes.func, // method to handle removal of the value
          value: _react2['default'].PropTypes.object.isRequired,
        },

        // the option object for this value
        handleMouseDown: function handleMouseDown(event) {
          if (event.type === 'mousedown' && event.button !== 0) {
            return;
          }
          if (this.props.onClick) {
            event.stopPropagation();
            this.props.onClick(this.props.value, event);
            return;
          }
          if (this.props.value.href) {
            event.stopPropagation();
          }
        },

        onRemove: function onRemove(event) {
          event.preventDefault();
          event.stopPropagation();
          this.props.onRemove(this.props.value);
        },

        handleTouchEndRemove: function handleTouchEndRemove(event) {
          // Check if the view is being dragged, In this case
          // we don't want to fire the click event (because the user only wants to scroll)
          if (this.dragging) return;

          // Fire the mouse events
          this.onRemove(event);
        },

        handleTouchMove: function handleTouchMove(event) {
          // Set a flag that the view is being dragged
          this.dragging = true;
        },

        handleTouchStart: function handleTouchStart(event) {
          // Set a flag that the view is not being dragged
          this.dragging = false;
        },

        renderRemoveIcon: function renderRemoveIcon() {
          if (this.props.disabled || !this.props.onRemove) return;
          return _react2['default'].createElement(
            'span',
            {
              className: 'Select-value-icon',
              'aria-hidden': 'true',
              onMouseDown: this.onRemove,
              onTouchEnd: this.handleTouchEndRemove,
              onTouchStart: this.handleTouchStart,
              onTouchMove: this.handleTouchMove,
            },
            '×'
          );
        },

        renderLabel: function renderLabel() {
          var className = 'Select-value-label';
          return this.props.onClick || this.props.value.href
            ? _react2['default'].createElement(
                'a',
                {
                  className: className,
                  href: this.props.value.href,
                  target: this.props.value.target,
                  onMouseDown: this.handleMouseDown,
                  onTouchEnd: this.handleMouseDown,
                },
                this.props.children
              )
            : _react2['default'].createElement(
                'span',
                {
                  className: className,
                  role: 'option',
                  'aria-selected': 'true',
                  id: this.props.id,
                },
                this.props.children
              );
        },

        render: function render() {
          return _react2['default'].createElement(
            'div',
            {
              className: (0, _classnames2['default'])('Select-value', this.props.value.className),
              style: this.props.value.style,
              title: this.props.value.title,
            },
            this.renderRemoveIcon(),
            this.renderLabel()
          );
        },
      });

      module.exports = Value;

      /***/
    },
    /* 748 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true,
      });
      exports['default'] = arrowRenderer;

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      var _react = __webpack_require__(4);

      var _react2 = _interopRequireDefault(_react);

      function arrowRenderer(_ref) {
        var onMouseDown = _ref.onMouseDown;

        return _react2['default'].createElement('span', {
          className: 'Select-arrow',
          onMouseDown: onMouseDown,
        });
      }

      module.exports = exports['default'];

      /***/
    },
    /* 749 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true,
      });
      exports['default'] = clearRenderer;

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      var _react = __webpack_require__(4);

      var _react2 = _interopRequireDefault(_react);

      function clearRenderer() {
        return _react2['default'].createElement('span', {
          className: 'Select-clear',
          dangerouslySetInnerHTML: { __html: '&times;' },
        });
      }

      module.exports = exports['default'];

      /***/
    },
    /* 750 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true,
      });

      var _extends2 = __webpack_require__(129);

      var _extends3 = _interopRequireDefault(_extends2);

      exports.generateIcon = generateIcon;

      var _react = __webpack_require__(4);

      var _react2 = _interopRequireDefault(_react);

      var _propTypes = __webpack_require__(119);

      var _propTypes2 = _interopRequireDefault(_propTypes);

      var _icons = __webpack_require__(751);

      var _icons2 = _interopRequireDefault(_icons);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      function generateIcon(network) {
        if (!_icons2.default[network.toLowerCase()]) {
          throw new Error('invalid network name for a social icon');
        }

        var iconConfig = _icons2.default[network.toLowerCase()];

        var Icon = function Icon(props) {
          var className = props.className,
            iconBgStyle = props.iconBgStyle,
            logoFillColor = props.logoFillColor,
            round = props.round,
            size = props.size;

          var baseStyle = {
            width: size,
            height: size,
          };

          var classes = 'social-icon social-icon--' + network + ' ' + className;

          var finalIconBgStyle = (0, _extends3.default)({}, iconBgStyle);

          return _react2.default.createElement(
            'div',
            { style: baseStyle },
            _react2.default.createElement(
              'svg',
              {
                viewBox: '0 0 64 64',
                fill: logoFillColor,
                width: size,
                height: size,
                className: classes,
              },
              _react2.default.createElement(
                'g',
                null,
                !round
                  ? _react2.default.createElement('rect', {
                      width: '64',
                      height: '64',
                      fill: iconConfig.color,
                      style: finalIconBgStyle,
                    })
                  : _react2.default.createElement('circle', {
                      cx: '32',
                      cy: '32',
                      r: '31',
                      fill: iconConfig.color,
                      style: finalIconBgStyle,
                    })
              ),
              _react2.default.createElement(
                'g',
                null,
                _react2.default.createElement('path', { d: iconConfig.icon })
              )
            )
          );
        };

        Icon.propTypes = {
          className: _propTypes2.default.string,
          iconBgStyle: _propTypes2.default.object,
          logoFillColor: _propTypes2.default.string,
          round: _propTypes2.default.bool,
          size: _propTypes2.default.number,
        };

        Icon.defaultProps = {
          className: '',
          logoFillColor: 'white',
          size: 64,
        };

        return Icon;
      }

      /***/
    },
    /* 751 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true,
      });
      /* eslint-disable max-len */
      exports.default = {
        facebook: {
          icon:
            'M34.1,47V33.3h4.6l0.7-5.3h-5.3v-3.4c0-1.5,0.4-2.6,2.6-2.6l2.8,0v-4.8c-0.5-0.1-2.2-0.2-4.1-0.2 c-4.1,0-6.9,2.5-6.9,7V28H24v5.3h4.6V47H34.1z',
          mask:
            'M0,0v64h64V0H0z M39.6,22l-2.8,0c-2.2,0-2.6,1.1-2.6,2.6V28h5.3l-0.7,5.3h-4.6V47h-5.5V33.3H24V28h4.6V24 c0-4.6,2.8-7,6.9-7c2,0,3.6,0.1,4.1,0.2V22z',
          color: '#3b5998',
        },
        google: {
          icon:
            'M25.3,30.1v3.8h6.3c-0.3,1.6-1.9,4.8-6.3,4.8c-3.8,0-6.9-3.1-6.9-7s3.1-7,6.9-7c2.2,0,3.6,0.9,4.4,1.7l3-2.9c-1.9-1.8-4.4-2.9-7.4-2.9c-6.1,0-11.1,5-11.1,11.1s5,11.1,11.1,11.1c6.4,0,10.7-4.5,10.7-10.9c0-0.7-0.1-1.3-0.2-1.8H25.3L25.3,30.1z M49.8,28.9h-3.2v-3.2h-3.2v3.2h-3.2v3.2h3.2v3.2h3.2v-3.2h3.2',
          mask:
            'M0,0v64h64V0H0z M31.3,19.1c0.3,0.3,0.6,0.7,0.9,1.2c0.3,0.4,0.5,0.9,0.7,1.5c0.2,0.6,0.3,1.3,0.3,2.1 c0,1.4-0.3,2.6-0.9,3.4c-0.3,0.4-0.6,0.8-0.9,1.2c-0.4,0.4-0.8,0.7-1.2,1.1c-0.2,0.2-0.5,0.5-0.7,0.8c-0.2,0.3-0.4,0.7-0.4,1.1 c0,0.4,0.1,0.8,0.4,1c0.2,0.3,0.4,0.5,0.6,0.7l1.4,1.1c0.8,0.7,1.6,1.5,2.2,2.3c0.6,0.8,0.9,2,0.9,3.3c0,1.9-0.9,3.7-2.6,5.2 c-1.8,1.6-4.3,2.4-7.7,2.4c-2.8,0-4.9-0.6-6.3-1.8c-1.4-1.1-2.1-2.4-2.1-3.9c0-0.7,0.2-1.6,0.7-2.5c0.4-0.9,1.2-1.7,2.4-2.4 c1.3-0.7,2.7-1.2,4.1-1.5c1.4-0.2,2.6-0.3,3.5-0.4c-0.3-0.4-0.5-0.8-0.8-1.2c-0.3-0.4-0.4-0.9-0.4-1.5c0-0.4,0-0.6,0.2-0.9 c0.1-0.2,0.2-0.5,0.2-0.7c-0.5,0.1-0.9,0.1-1.3,0.1c-2.1,0-3.8-0.7-4.9-2c-1.2-1.2-1.8-2.7-1.8-4.3c0-2,0.8-3.8,2.5-5.4 c1.1-0.9,2.3-1.6,3.5-1.8c1.2-0.2,2.3-0.4,3.4-0.4h8L33,18.4h-2.5C30.7,18.6,31,18.8,31.3,19.1z M48,32h-4.3v4.2h-2.5V32H37v-2.5 h4.2v-4.3h2.5v4.3H48V32z M27.1,19.1c-0.6-0.5-1.4-0.7-2.2-0.7c-1.1,0-2,0.5-2.7,1.3c-0.6,0.9-0.9,1.9-0.9,3c0,1.5,0.4,3,1.3,4.5 c0.4,0.7,0.9,1.4,1.6,1.9c0.6,0.5,1.4,0.8,2.2,0.8c1.1,0,1.9-0.4,2.6-1.1c0.3-0.5,0.6-1,0.7-1.6c0.1-0.5,0.1-1,0.1-1.4 c0-1.6-0.4-3.2-1.2-4.8C28.2,20.2,27.7,19.5,27.1,19.1z M26.9,36.2c-0.2,0-0.7,0-1.6,0.1c-0.8,0.1-1.7,0.3-2.5,0.6 c-0.2,0.1-0.5,0.2-0.9,0.4c-0.4,0.2-0.7,0.4-1.1,0.7c-0.4,0.3-0.7,0.7-0.9,1.2c-0.3,0.5-0.4,1.1-0.4,1.8c0,1.4,0.6,2.6,1.9,3.5 c1.2,0.9,2.9,1.4,5,1.4c1.9,0,3.3-0.4,4.3-1.3c1-0.8,1.5-1.8,1.5-3.1c0-1-0.3-1.9-1-2.7c-0.7-0.7-1.8-1.6-3.3-2.6 C27.5,36.2,27.2,36.2,26.9,36.2z',
          color: '#dd4b39',
        },
        linkedin: {
          icon:
            'M20.4,44h5.4V26.6h-5.4V44z M23.1,18c-1.7,0-3.1,1.4-3.1,3.1c0,1.7,1.4,3.1,3.1,3.1 c1.7,0,3.1-1.4,3.1-3.1C26.2,19.4,24.8,18,23.1,18z M39.5,26.2c-2.6,0-4.4,1.4-5.1,2.8h-0.1v-2.4h-5.2V44h5.4v-8.6 c0-2.3,0.4-4.5,3.2-4.5c2.8,0,2.8,2.6,2.8,4.6V44H46v-9.5C46,29.8,45,26.2,39.5,26.2z',
          mask:
            'M0,0v64h64V0H0z M25.8,44h-5.4V26.6h5.4V44z M23.1,24.3c-1.7,0-3.1-1.4-3.1-3.1c0-1.7,1.4-3.1,3.1-3.1 c1.7,0,3.1,1.4,3.1,3.1C26.2,22.9,24.8,24.3,23.1,24.3z M46,44h-5.4v-8.4c0-2,0-4.6-2.8-4.6c-2.8,0-3.2,2.2-3.2,4.5V44h-5.4V26.6 h5.2V29h0.1c0.7-1.4,2.5-2.8,5.1-2.8c5.5,0,6.5,3.6,6.5,8.3V44z',
          color: '#007fb1',
        },
        twitter: {
          icon:
            'M48,22.1c-1.2,0.5-2.4,0.9-3.8,1c1.4-0.8,2.4-2.1,2.9-3.6c-1.3,0.8-2.7,1.3-4.2,1.6 C41.7,19.8,40,19,38.2,19c-3.6,0-6.6,2.9-6.6,6.6c0,0.5,0.1,1,0.2,1.5c-5.5-0.3-10.3-2.9-13.5-6.9c-0.6,1-0.9,2.1-0.9,3.3 c0,2.3,1.2,4.3,2.9,5.5c-1.1,0-2.1-0.3-3-0.8c0,0,0,0.1,0,0.1c0,3.2,2.3,5.8,5.3,6.4c-0.6,0.1-1.1,0.2-1.7,0.2c-0.4,0-0.8,0-1.2-0.1 c0.8,2.6,3.3,4.5,6.1,4.6c-2.2,1.8-5.1,2.8-8.2,2.8c-0.5,0-1.1,0-1.6-0.1c2.9,1.9,6.4,2.9,10.1,2.9c12.1,0,18.7-10,18.7-18.7 c0-0.3,0-0.6,0-0.8C46,24.5,47.1,23.4,48,22.1z',
          mask:
            'M0,0v64h64V0H0z M44.7,25.5c0,0.3,0,0.6,0,0.8C44.7,35,38.1,45,26.1,45c-3.7,0-7.2-1.1-10.1-2.9 c0.5,0.1,1,0.1,1.6,0.1c3.1,0,5.9-1,8.2-2.8c-2.9-0.1-5.3-2-6.1-4.6c0.4,0.1,0.8,0.1,1.2,0.1c0.6,0,1.2-0.1,1.7-0.2 c-3-0.6-5.3-3.3-5.3-6.4c0,0,0-0.1,0-0.1c0.9,0.5,1.9,0.8,3,0.8c-1.8-1.2-2.9-3.2-2.9-5.5c0-1.2,0.3-2.3,0.9-3.3 c3.2,4,8.1,6.6,13.5,6.9c-0.1-0.5-0.2-1-0.2-1.5c0-3.6,2.9-6.6,6.6-6.6c1.9,0,3.6,0.8,4.8,2.1c1.5-0.3,2.9-0.8,4.2-1.6 c-0.5,1.5-1.5,2.8-2.9,3.6c1.3-0.2,2.6-0.5,3.8-1C47.1,23.4,46,24.5,44.7,25.5z',
          color: '#00aced',
        },
        pinterest: {
          icon:
            'M32,16c-8.8,0-16,7.2-16,16c0,6.6,3.9,12.2,9.6,14.7c0-1.1,0-2.5,0.3-3.7 c0.3-1.3,2.1-8.7,2.1-8.7s-0.5-1-0.5-2.5c0-2.4,1.4-4.1,3.1-4.1c1.5,0,2.2,1.1,2.2,2.4c0,1.5-0.9,3.7-1.4,5.7 c-0.4,1.7,0.9,3.1,2.5,3.1c3,0,5.1-3.9,5.1-8.5c0-3.5-2.4-6.1-6.7-6.1c-4.9,0-7.9,3.6-7.9,7.7c0,1.4,0.4,2.4,1.1,3.1 c0.3,0.3,0.3,0.5,0.2,0.9c-0.1,0.3-0.3,1-0.3,1.3c-0.1,0.4-0.4,0.6-0.8,0.4c-2.2-0.9-3.3-3.4-3.3-6.1c0-4.5,3.8-10,11.4-10 c6.1,0,10.1,4.4,10.1,9.2c0,6.3-3.5,11-8.6,11c-1.7,0-3.4-0.9-3.9-2c0,0-0.9,3.7-1.1,4.4c-0.3,1.2-1,2.5-1.6,3.4 c1.4,0.4,3,0.7,4.5,0.7c8.8,0,16-7.2,16-16C48,23.2,40.8,16,32,16z',
          mask:
            'M0,0v64h64V0H0z M32,48c-1.6,0-3.1-0.2-4.5-0.7c0.6-1,1.3-2.2,1.6-3.4c0.2-0.7,1.1-4.4,1.1-4.4 c0.6,1.1,2.2,2,3.9,2c5.1,0,8.6-4.7,8.6-11c0-4.7-4-9.2-10.1-9.2c-7.6,0-11.4,5.5-11.4,10c0,2.8,1,5.2,3.3,6.1 c0.4,0.1,0.7,0,0.8-0.4c0.1-0.3,0.2-1,0.3-1.3c0.1-0.4,0.1-0.5-0.2-0.9c-0.6-0.8-1.1-1.7-1.1-3.1c0-4,3-7.7,7.9-7.7 c4.3,0,6.7,2.6,6.7,6.1c0,4.6-2,8.5-5.1,8.5c-1.7,0-2.9-1.4-2.5-3.1c0.5-2,1.4-4.2,1.4-5.7c0-1.3-0.7-2.4-2.2-2.4 c-1.7,0-3.1,1.8-3.1,4.1c0,1.5,0.5,2.5,0.5,2.5s-1.8,7.4-2.1,8.7c-0.3,1.2-0.3,2.6-0.3,3.7C19.9,44.2,16,38.6,16,32 c0-8.8,7.2-16,16-16c8.8,0,16,7.2,16,16C48,40.8,40.8,48,32,48z',
          color: '#cb2128',
        },
        vk: {
          icon:
            'M44.94,44.84h-0.2c-2.17-.36-3.66-1.92-4.92-3.37C39.1,40.66,38,38.81,36.7,39c-1.85.3-.93,3.52-1.71,4.9-0.62,1.11-3.29.91-5.12,0.71-5.79-.62-8.75-3.77-11.35-7.14A64.13,64.13,0,0,1,11.6,26a10.59,10.59,0,0,1-1.51-4.49C11,20.7,12.56,21,14.11,21c1.31,0,3.36-.29,4.32.2C19,21.46,19.57,23,20,24a37.18,37.18,0,0,0,3.31,5.82c0.56,0.81,1.41,2.35,2.41,2.14s1.06-2.63,1.1-4.18c0-1.77,0-4-.5-4.9S25,22,24.15,21.47c0.73-1.49,2.72-1.63,5.12-1.63,2,0,4.84-.23,5.62,1.12s0.25,3.85.2,5.71c-0.06,2.09-.41,4.25,1,5.21,1.09-.12,1.68-1.2,2.31-2A28,28,0,0,0,41.72,24c0.44-1,.91-2.65,1.71-3,1.21-.47,3.15-0.1,4.92-0.1,1.46,0,4.05-.41,4.52.61,0.39,0.85-.75,3-1.1,3.57a61.88,61.88,0,0,1-4.12,5.61c-0.58.78-1.78,2-1.71,3.27,0.05,0.94,1,1.67,1.71,2.35a33.12,33.12,0,0,1,3.92,4.18c0.47,0.62,1.5,2,1.4,2.76C52.66,45.81,46.88,44.24,44.94,44.84Z',
          mask:
            'M0,0v64h64V0H0z M44.94,44.84h-0.2c-2.17-.36-3.66-1.92-4.92-3.37C39.1,40.66,38,38.81,36.7,39c-1.85.3-.93,3.52-1.71,4.9-0.62,1.11-3.29.91-5.12,0.71-5.79-.62-8.75-3.77-11.35-7.14A64.13,64.13,0,0,1,11.6,26a10.59,10.59,0,0,1-1.51-4.49C11,20.7,12.56,21,14.11,21c1.31,0,3.36-.29,4.32.2C19,21.46,19.57,23,20,24a37.18,37.18,0,0,0,3.31,5.82c0.56,0.81,1.41,2.35,2.41,2.14s1.06-2.63,1.1-4.18c0-1.77,0-4-.5-4.9S25,22,24.15,21.47c0.73-1.49,2.72-1.63,5.12-1.63,2,0,4.84-.23,5.62,1.12s0.25,3.85.2,5.71c-0.06,2.09-.41,4.25,1,5.21,1.09-.12,1.68-1.2,2.31-2A28,28,0,0,0,41.72,24c0.44-1,.91-2.65,1.71-3,1.21-.47,3.15-0.1,4.92-0.1,1.46,0,4.05-.41,4.52.61,0.39,0.85-.75,3-1.1,3.57a61.88,61.88,0,0,1-4.12,5.61c-0.58.78-1.78,2-1.71,3.27,0.05,0.94,1,1.67,1.71,2.35a33.12,33.12,0,0,1,3.92,4.18c0.47,0.62,1.5,2,1.4,2.76C52.66,45.81,46.88,44.24,44.94,44.84Z',
          color: '#45668e',
        },
        ok: {
          icon:
            'M39,30c-1,0-3,2-7,2s-6-2-7-2c-1.1,0-2,0.9-2,2c0,1,0.6,1.5,1,1.7c1.2,0.7,5,2.3,5,2.3l-4.3,5.4   c0,0-0.8,0.9-0.8,1.6c0,1.1,0.9,2,2,2c1,0,1.5-0.7,1.5-0.7S32,39,32,39c0,0,4.5,5.3,4.5,5.3S37,45,38,45c1.1,0,2-0.9,2-2   c0-0.6-0.8-1.6-0.8-1.6L35,36c0,0,3.8-1.6,5-2.3c0.4-0.3,1-0.7,1-1.7C41,30.9,40.1,30,39,30z M32,15c-3.9,0-7,3.1-7,7s3.1,7,7,7c3.9,0,7-3.1,7-7S35.9,15,32,15z M32,25.5   c-1.9,0-3.5-1.6-3.5-3.5c0-1.9,1.6-3.5,3.5-3.5c1.9,0,3.5,1.6,3.5,3.5C35.5,23.9,33.9,22.5,35,22.5z ',
          mask:
            'M45,1H5C2.8,1,1,2.8,1,5v40c0,2.2,1.8,4,4,4h40c2.2,0,4-1.8,4-4V5C49,2.8,47.2,1,45,1z',
          color: '#f2720c',
        },
        telegram: {
          icon:
            'm45.90873,15.44335c-0.6901,-0.0281 -1.37668,0.14048 -1.96142,0.41265c-0.84989,0.32661 -8.63939,3.33986 -16.5237,6.39174c-3.9685,1.53296 -7.93349,3.06593 -10.98537,4.24067c-3.05012,1.1765 -5.34694,2.05098 -5.4681,2.09312c-0.80775,0.28096 -1.89996,0.63566 -2.82712,1.72788c-0.23354,0.27218 -0.46884,0.62161 -0.58825,1.10275c-0.11941,0.48114 -0.06673,1.09222 0.16682,1.5716c0.46533,0.96052 1.25376,1.35737 2.18443,1.71383c3.09051,0.99037 6.28638,1.93508 8.93263,2.8236c0.97632,3.44171 1.91401,6.89571 2.84116,10.34268c0.30554,0.69185 0.97105,0.94823 1.65764,0.95525l-0.00351,0.03512c0,0 0.53908,0.05268 1.06412,-0.07375c0.52679,-0.12292 1.18879,-0.42846 1.79109,-0.99212c0.662,-0.62161 2.45836,-2.38812 3.47683,-3.38552l7.6736,5.66477l0.06146,0.03512c0,0 0.84989,0.59703 2.09312,0.68132c0.62161,0.04214 1.4399,-0.07726 2.14229,-0.59176c0.70766,-0.51626 1.1765,-1.34683 1.396,-2.29506c0.65673,-2.86224 5.00979,-23.57745 5.75257,-27.00686l-0.02107,0.08077c0.51977,-1.93157 0.32837,-3.70159 -0.87096,-4.74991c-0.60054,-0.52152 -1.2924,-0.7498 -1.98425,-0.77965l0,0.00176zm-0.2072,3.29069c0.04741,0.0439 0.0439,0.0439 0.00351,0.04741c-0.01229,-0.00351 0.14048,0.2072 -0.15804,1.32576l-0.01229,0.04214l-0.00878,0.03863c-0.75858,3.50668 -5.15554,24.40802 -5.74203,26.96472c-0.08077,0.34417 -0.11414,0.31959 -0.09482,0.29852c-0.1756,-0.02634 -0.50045,-0.16506 -0.52679,-0.1756l-13.13468,-9.70175c4.4988,-4.33199 9.09945,-8.25307 13.744,-12.43229c0.8218,-0.41265 0.68483,-1.68573 -0.29852,-1.70681c-1.04305,0.24584 -1.92279,0.99564 -2.8798,1.47502c-5.49971,3.2626 -11.11882,6.13186 -16.55882,9.49279c-2.792,-0.97105 -5.57873,-1.77704 -8.15298,-2.57601c2.2336,-0.89555 4.00889,-1.55579 5.75608,-2.23009c3.05188,-1.1765 7.01687,-2.7042 10.98537,-4.24067c7.94051,-3.06944 15.92667,-6.16346 16.62028,-6.43037l0.05619,-0.02283l0.05268,-0.02283c0.19316,-0.0878 0.30378,-0.09658 0.35471,-0.10009c0,0 -0.01756,-0.05795 -0.00351,-0.04566l-0.00176,0zm-20.91715,22.0638l2.16687,1.60145c-0.93418,0.91311 -1.81743,1.77353 -2.45485,2.38812l0.28798,-3.98957',
          mask:
            'M0,0v64h64V0H0z M32,48c-1.6,0-3.1-0.2-4.5-0.7c0.6-1,1.3-2.2,1.6-3.4c0.2-0.7,1.1-4.4,1.1-4.4 c0.6,1.1,2.2,2,3.9,2c5.1,0,8.6-4.7,8.6-11c0-4.7-4-9.2-10.1-9.2c-7.6,0-11.4,5.5-11.4,10c0,2.8,1,5.2,3.3,6.1 c0.4,0.1,0.7,0,0.8-0.4c0.1-0.3,0.2-1,0.3-1.3c0.1-0.4,0.1-0.5-0.2-0.9c-0.6-0.8-1.1-1.7-1.1-3.1c0-4,3-7.7,7.9-7.7 c4.3,0,6.7,2.6,6.7,6.1c0,4.6-2,8.5-5.1,8.5c-1.7,0-2.9-1.4-2.5-3.1c0.5-2,1.4-4.2,1.4-5.7c0-1.3-0.7-2.4-2.2-2.4 c-1.7,0-3.1,1.8-3.1,4.1c0,1.5,0.5,2.5,0.5,2.5s-1.8,7.4-2.1,8.7c-0.3,1.2-0.3,2.6-0.3,3.7C19.9,44.2,16,38.6,16,32 c0-8.8,7.2-16,16-16c8.8,0,16,7.2,16,16C48,40.8,40.8,48,32,48z',
          color: '#37aee2',
        },
        whatsapp: {
          icon:
            'm42.32286,33.93287c-0.5178,-0.2589 -3.04726,-1.49644 -3.52105,-1.66732c-0.4712,-0.17346 -0.81554,-0.2589 -1.15987,0.2589c-0.34175,0.51004 -1.33075,1.66474 -1.63108,2.00648c-0.30032,0.33658 -0.60064,0.36247 -1.11327,0.12945c-0.5178,-0.2589 -2.17994,-0.80259 -4.14759,-2.56312c-1.53269,-1.37217 -2.56312,-3.05503 -2.86603,-3.57283c-0.30033,-0.5178 -0.03366,-0.80259 0.22524,-1.06149c0.23301,-0.23301 0.5178,-0.59547 0.7767,-0.90616c0.25372,-0.31068 0.33657,-0.5178 0.51262,-0.85437c0.17088,-0.36246 0.08544,-0.64725 -0.04402,-0.90615c-0.12945,-0.2589 -1.15987,-2.79613 -1.58964,-3.80584c-0.41424,-1.00971 -0.84142,-0.88027 -1.15987,-0.88027c-0.29773,-0.02588 -0.64208,-0.02588 -0.98382,-0.02588c-0.34693,0 -0.90616,0.12945 -1.37736,0.62136c-0.4712,0.5178 -1.80194,1.76053 -1.80194,4.27186c0,2.51134 1.84596,4.945 2.10227,5.30747c0.2589,0.33657 3.63497,5.51458 8.80262,7.74113c1.23237,0.5178 2.1903,0.82848 2.94111,1.08738c1.23237,0.38836 2.35599,0.33657 3.24402,0.20712c0.99159,-0.15534 3.04985,-1.24272 3.47963,-2.45956c0.44013,-1.21683 0.44013,-2.22654 0.31068,-2.45955c-0.12945,-0.23301 -0.46601,-0.36247 -0.98382,-0.59548m-9.40068,12.84407l-0.02589,0c-3.05503,0 -6.08417,-0.82849 -8.72495,-2.38189l-0.62136,-0.37023l-6.47252,1.68286l1.73463,-6.29129l-0.41424,-0.64725c-1.70875,-2.71846 -2.6149,-5.85116 -2.6149,-9.07706c0,-9.39809 7.68934,-17.06155 17.15993,-17.06155c4.58253,0 8.88029,1.78642 12.11655,5.02268c3.23625,3.21036 5.02267,7.50812 5.02267,12.06476c-0.0078,9.3981 -7.69712,17.06155 -17.14699,17.06155m14.58906,-31.58846c-3.93529,-3.80584 -9.1133,-5.95471 -14.62789,-5.95471c-11.36055,0 -20.60848,9.2065 -20.61625,20.52564c0,3.61684 0.94757,7.14565 2.75211,10.26282l-2.92557,10.63564l10.93337,-2.85309c3.0136,1.63108 6.4052,2.4958 9.85634,2.49839l0.01037,0c11.36574,0 20.61884,-9.2091 20.62403,-20.53082c0,-5.48093 -2.14111,-10.64081 -6.03239,-14.51915',
          mask:
            'M0,0v64h64V0H0z M32,48c-1.6,0-3.1-0.2-4.5-0.7c0.6-1,1.3-2.2,1.6-3.4c0.2-0.7,1.1-4.4,1.1-4.4 c0.6,1.1,2.2,2,3.9,2c5.1,0,8.6-4.7,8.6-11c0-4.7-4-9.2-10.1-9.2c-7.6,0-11.4,5.5-11.4,10c0,2.8,1,5.2,3.3,6.1 c0.4,0.1,0.7,0,0.8-0.4c0.1-0.3,0.2-1,0.3-1.3c0.1-0.4,0.1-0.5-0.2-0.9c-0.6-0.8-1.1-1.7-1.1-3.1c0-4,3-7.7,7.9-7.7 c4.3,0,6.7,2.6,6.7,6.1c0,4.6-2,8.5-5.1,8.5c-1.7,0-2.9-1.4-2.5-3.1c0.5-2,1.4-4.2,1.4-5.7c0-1.3-0.7-2.4-2.2-2.4 c-1.7,0-3.1,1.8-3.1,4.1c0,1.5,0.5,2.5,0.5,2.5s-1.8,7.4-2.1,8.7c-0.3,1.2-0.3,2.6-0.3,3.7C19.9,44.2,16,38.6,16,32 c0-8.8,7.2-16,16-16c8.8,0,16,7.2,16,16C48,40.8,40.8,48,32,48z',
          color: '#2cb742',
        },
        reddit: {
          icon:
            'm 52.8165,31.942362 c 0,-2.4803 -2.0264,-4.4965 -4.5169,-4.4965 -1.2155,0 -2.3171,0.4862 -3.128,1.2682 -3.077,-2.0247 -7.2403,-3.3133 -11.8507,-3.4782 l 2.5211,-7.9373 6.8272,1.5997 -0.0102,0.0986 c 0,2.0281 1.6575,3.6771 3.6958,3.6771 2.0366,0 3.6924,-1.649 3.6924,-3.6771 0,-2.0281 -1.6575,-3.6788 -3.6924,-3.6788 -1.564,0 -2.8968,0.9758 -3.4357,2.3443 l -7.3593,-1.7255 c -0.3213,-0.0782 -0.6477,0.1071 -0.748,0.4233 L 32,25.212062 c -4.8246,0.0578 -9.1953,1.3566 -12.41,3.4425 -0.8058,-0.7446 -1.8751,-1.2104 -3.0583,-1.2104 -2.4905,0 -4.5152,2.0179 -4.5152,4.4982 0,1.649 0.9061,3.0787 2.2389,3.8607 -0.0884,0.4794 -0.1462,0.9639 -0.1462,1.4569 0,6.6487 8.1736,12.0581 18.2223,12.0581 10.0487,0 18.224,-5.4094 18.224,-12.0581 0,-0.4658 -0.0493,-0.9248 -0.1275,-1.377 1.4144,-0.7599 2.3885,-2.2304 2.3885,-3.9406 z m -29.2808,3.0872 c 0,-1.4756 1.207,-2.6775 2.6894,-2.6775 1.4824,0 2.6877,1.2019 2.6877,2.6775 0,1.4756 -1.2053,2.6758 -2.6877,2.6758 -1.4824,0 -2.6894,-1.2002 -2.6894,-2.6758 z m 15.4037,7.9373 c -1.3549,1.3481 -3.4816,2.0043 -6.5008,2.0043 l -0.0221,-0.0051 -0.0221,0.0051 c -3.0209,0 -5.1476,-0.6562 -6.5008,-2.0043 -0.2465,-0.2448 -0.2465,-0.6443 0,-0.8891 0.2465,-0.2465 0.6477,-0.2465 0.8942,0 1.105,1.0999 2.9393,1.6337 5.6066,1.6337 l 0.0221,0.0051 0.0221,-0.0051 c 2.6673,0 4.5016,-0.5355 5.6066,-1.6354 0.2465,-0.2465 0.6477,-0.2448 0.8942,0 0.2465,0.2465 0.2465,0.6443 0,0.8908 z m -0.3213,-5.2615 c -1.4824,0 -2.6877,-1.2002 -2.6877,-2.6758 0,-1.4756 1.2053,-2.6775 2.6877,-2.6775 1.4824,0 2.6877,1.2019 2.6877,2.6775 0,1.4756 -1.2053,2.6758 -2.6877,2.6758 z',
          color: '#5f99cf',
        },
      };
      /* eslint-enable max-len */

      /***/
    },
    /* 752 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true,
      });
      exports.shareLinks = exports.ShareCounts = exports.ShareButtons = exports.generateShareIcon = undefined;

      var _generateIcon = __webpack_require__(750);

      var _shareButtons = __webpack_require__(753);

      var ShareButtons = _interopRequireWildcard(_shareButtons);

      var _shareCounts = __webpack_require__(755);

      var ShareCounts = _interopRequireWildcard(_shareCounts);

      var _socialMediaShareLinks = __webpack_require__(310);

      var shareLinks = _interopRequireWildcard(_socialMediaShareLinks);

      function _interopRequireWildcard(obj) {
        if (obj && obj.__esModule) {
          return obj;
        } else {
          var newObj = {};
          if (obj != null) {
            for (var key in obj) {
              if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key];
            }
          }
          newObj.default = obj;
          return newObj;
        }
      }

      exports.generateShareIcon = _generateIcon.generateIcon;
      exports.ShareButtons = ShareButtons;
      exports.ShareCounts = ShareCounts;
      exports.shareLinks = shareLinks;

      /***/
    },
    /* 753 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true,
      });
      exports.RedditShareButton = exports.OKShareButton = exports.VKShareButton = exports.PinterestShareButton = exports.LinkedinShareButton = exports.GooglePlusShareButton = exports.WhatsappShareButton = exports.TelegramShareButton = exports.TwitterShareButton = exports.FacebookShareButton = undefined;

      var _extends2 = __webpack_require__(129);

      var _extends3 = _interopRequireDefault(_extends2);

      var _getPrototypeOf = __webpack_require__(211);

      var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);

      var _classCallCheck2 = __webpack_require__(213);

      var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

      var _createClass2 = __webpack_require__(214);

      var _createClass3 = _interopRequireDefault(_createClass2);

      var _possibleConstructorReturn2 = __webpack_require__(216);

      var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

      var _inherits2 = __webpack_require__(215);

      var _inherits3 = _interopRequireDefault(_inherits2);

      var _keys = __webpack_require__(212);

      var _keys2 = _interopRequireDefault(_keys);

      var _react = __webpack_require__(4);

      var _react2 = _interopRequireDefault(_react);

      var _propTypes = __webpack_require__(119);

      var _propTypes2 = _interopRequireDefault(_propTypes);

      var _classnames = __webpack_require__(72);

      var _classnames2 = _interopRequireDefault(_classnames);

      var _socialMediaShareLinks = __webpack_require__(310);

      var links = _interopRequireWildcard(_socialMediaShareLinks);

      var _utils = __webpack_require__(201);

      function _interopRequireWildcard(obj) {
        if (obj && obj.__esModule) {
          return obj;
        } else {
          var newObj = {};
          if (obj != null) {
            for (var key in obj) {
              if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key];
            }
          }
          newObj.default = obj;
          return newObj;
        }
      }

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      var supportedNetworks = (0, _keys2.default)(links); /* eslint-disable react/no-multi-comp */

      var ShareButton = (function (_Component) {
        (0, _inherits3.default)(ShareButton, _Component);

        function ShareButton() {
          var _ref;

          var _temp, _this, _ret;

          (0, _classCallCheck3.default)(this, ShareButton);

          for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
            args[_key] = arguments[_key];
          }

          return (
            (_ret =
              ((_temp =
                ((_this = (0, _possibleConstructorReturn3.default)(
                  this,
                  (_ref =
                    ShareButton.__proto__ || (0, _getPrototypeOf2.default)(ShareButton)).call.apply(
                    _ref,
                    [this].concat(args)
                  )
                )),
                _this)),
              (_this.onClick = function (e) {
                var _this$props = _this.props,
                  disabled = _this$props.disabled,
                  windowWidth = _this$props.windowWidth,
                  windowHeight = _this$props.windowHeight,
                  beforeOnClick = _this$props.beforeOnClick;

                if (!disabled) {
                  (function () {
                    e.preventDefault();

                    var windowOptions = {
                      height: windowHeight,
                      width: windowWidth,
                    };

                    var windowOpenBound = function windowOpenBound() {
                      return (0, _utils.windowOpen)(_this.link(), windowOptions);
                    };

                    if (beforeOnClick) {
                      var returnVal = beforeOnClick();

                      if ((0, _utils.isPromise)(returnVal)) {
                        returnVal.then(windowOpenBound);
                      } else {
                        windowOpenBound();
                      }
                    } else {
                      windowOpenBound();
                    }
                  })();
                }
              }),
              _temp)),
            (0, _possibleConstructorReturn3.default)(_this, _ret)
          );
        }

        (0, _createClass3.default)(ShareButton, [
          {
            key: 'link',
            value: function link() {
              var _props = this.props,
                url = _props.url,
                opts = _props.opts,
                network = _props.network;

              return links[network](url, opts);
            },
          },
          {
            key: 'render',
            value: function render() {
              var _props2 = this.props,
                children = _props2.children,
                className = _props2.className,
                disabled = _props2.disabled,
                disabledStyle = _props2.disabledStyle,
                network = _props2.network,
                style = _props2.style;

              var classes = (0, _classnames2.default)(
                'SocialMediaShareButton',
                'SocialMediaShareButton--' + network,
                {
                  'SocialMediaShareButton--disabled': !!disabled,
                  disabled: !!disabled,
                },
                className
              );

              return _react2.default.createElement(
                'div',
                {
                  role: 'button',
                  tabIndex: '0',
                  onClick: this.onClick,
                  className: classes,
                  style: (0, _extends3.default)({}, style, disabled ? disabledStyle : {}),
                },
                children
              );
            },
          },
        ]);
        return ShareButton;
      })(_react.Component);

      /* HOC to ease migration from v1 to v2.
       * To-be-removed in v2.
       */

      ShareButton.propTypes = {
        children: _propTypes2.default.node,
        className: _propTypes2.default.string,
        disabled: _propTypes2.default.bool,
        disabledStyle: _propTypes2.default.object,
        network: _propTypes2.default.oneOf(supportedNetworks),
        opts: _propTypes2.default.object,
        url: _propTypes2.default.string.isRequired,
        style: _propTypes2.default.object,
        windowWidth: _propTypes2.default.number,
        windowHeight: _propTypes2.default.number,
        beforeOnClick: _propTypes2.default.func,
      };
      ShareButton.defaultProps = {
        disabledStyle: {
          opacity: 0.6,
        },
      };
      exports.default = ShareButton;
      function createShareButton(network) {
        var optsMap =
          arguments.length > 1 && arguments[1] !== undefined
            ? arguments[1]
            : function () {
                return {};
              };
        var propTypes = arguments[2];
        var defaultProps = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};

        var CreatedButton = function CreatedButton(props) {
          return _react2.default.createElement(
            ShareButton,
            (0, _extends3.default)({}, props, {
              network: network,
              opts: optsMap(props),
            })
          );
        };

        CreatedButton.propTypes = propTypes;
        CreatedButton.defaultProps = defaultProps;

        return CreatedButton;
      }

      var FacebookShareButton = (exports.FacebookShareButton = createShareButton(
        'facebook',
        function (props) {
          return {
            description: props.description,
            title: props.title,
            picture: props.picture,
            hashtag: props.hashtag,
          };
        },
        {
          description: _propTypes2.default.string,
          title: _propTypes2.default.string,
          picture: _propTypes2.default.string,
          hashtag: _propTypes2.default.string,
        },
        {
          windowWidth: 550,
          windowHeight: 400,
        }
      ));

      var TwitterShareButton = (exports.TwitterShareButton = createShareButton(
        'twitter',
        function (props) {
          return {
            hashtags: props.hashtags,
            title: props.title,
            via: props.via,
          };
        },
        {
          hashtags: _propTypes2.default.arrayOf(_propTypes2.default.string),
          title: _propTypes2.default.string,
          via: _propTypes2.default.string,
        },
        {
          windowWidth: 550,
          windowHeight: 400,
        }
      ));

      var TelegramShareButton = (exports.TelegramShareButton = createShareButton(
        'telegram',
        function (props) {
          return {
            title: props.title,
            via: props.via,
          };
        },
        {
          title: _propTypes2.default.string,
          via: _propTypes2.default.string,
        },
        {
          windowWidth: 550,
          windowHeight: 400,
        }
      ));

      var WhatsappShareButton = (exports.WhatsappShareButton = createShareButton(
        'whatsapp',
        function (props) {
          return {
            title: props.title,
            separator: props.separator,
          };
        },
        {
          title: _propTypes2.default.string,
          separator: _propTypes2.default.string,
        },
        {
          separator: ' ',
          windowWidth: 550,
          windowHeight: 400,
        }
      ));

      var GooglePlusShareButton = (exports.GooglePlusShareButton = createShareButton(
        'googlePlus',
        undefined,
        undefined,
        {
          windowWidth: 550,
          windowHeight: 400,
        }
      ));

      var LinkedinShareButton = (exports.LinkedinShareButton = createShareButton(
        'linkedin',
        function (props) {
          return {
            title: props.title,
            description: props.description,
          };
        },
        {
          title: _propTypes2.default.string,
          description: _propTypes2.default.string,
        },
        {
          windowWidth: 750,
          windowHeight: 600,
        }
      ));

      var PinterestShareButton = (exports.PinterestShareButton = createShareButton(
        'pinterest',
        function (props) {
          return {
            media: props.media,
            description: props.description,
          };
        },
        {
          media: _propTypes2.default.string.isRequired,
          description: _propTypes2.default.string,
        },
        {
          windowWidth: 1000,
          windowHeight: 730,
        }
      ));

      var VKShareButton = (exports.VKShareButton = createShareButton(
        'vk',
        function (props) {
          return {
            title: props.title,
            description: props.description,
            image: props.image,
          };
        },
        {
          title: _propTypes2.default.string,
          description: _propTypes2.default.string,
          image: _propTypes2.default.string,
        },
        {
          windowWidth: 660,
          windowHeight: 460,
        }
      ));

      var OKShareButton = (exports.OKShareButton = createShareButton(
        'ok',
        function (props) {
          return {
            title: props.title,
            description: props.description,
            image: props.image,
          };
        },
        {
          title: _propTypes2.default.string,
          description: _propTypes2.default.string,
          image: _propTypes2.default.string,
        },
        {
          windowWidth: 660,
          windowHeight: 460,
        }
      ));

      var RedditShareButton = (exports.RedditShareButton = createShareButton(
        'reddit',
        function (props) {
          return {
            title: props.title,
          };
        },
        {
          title: _propTypes2.default.string,
        },
        {
          windowWidth: 660,
          windowHeight: 460,
        }
      ));

      /***/
    },
    /* 754 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true,
      });
      exports.getVKShareCount = undefined;

      var _stringify = __webpack_require__(360);

      var _stringify2 = _interopRequireDefault(_stringify);

      exports.getFacebookShareCount = getFacebookShareCount;
      exports.getGooglePlusShareCount = getGooglePlusShareCount;
      exports.getLinkedinShareCount = getLinkedinShareCount;
      exports.getPinterestShareCount = getPinterestShareCount;
      exports.getOKShareCount = getOKShareCount;
      exports.getRedditShareCount = getRedditShareCount;

      var _jsonp = __webpack_require__(628);

      var _jsonp2 = _interopRequireDefault(_jsonp);

      var _platform = __webpack_require__(268);

      var _platform2 = _interopRequireDefault(_platform);

      var _utils = __webpack_require__(201);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      function getFacebookShareCount(shareUrl, callback) {
        var endpoint = 'https://graph.facebook.com/?id=' + shareUrl;

        (0, _jsonp2.default)(endpoint, function (err, data) {
          callback(
            !err && data && data.share && data.share.share_count
              ? data.share.share_count
              : undefined
          );
        });
      }

      function getGooglePlusShareCount(shareUrl, callback) {
        if (_platform2.default.name === 'IE' && parseInt(_platform2.default.version, 10) < 11) {
          /* eslint-disable no-console */
          console.error('Google plus share count is not supported in <=IE10!');
          /* eslint-enable no-console */
          return;
        }

        var xhr = new XMLHttpRequest();

        xhr.open('POST', 'https://clients6.google.com/rpc');
        xhr.setRequestHeader('Accept', 'application/json');
        xhr.setRequestHeader('Content-type', 'application/json;charset=UTF-8');

        xhr.send(
          (0, _stringify2.default)({
            method: 'pos.plusones.get',
            id: 'p',
            params: {
              nolog: true,
              id: shareUrl,
              source: 'widget',
              userId: '@viewer',
              groupId: '@self',
            },
            jsonrpc: '2.0',
            key: 'p',
            apiVersion: 'v1',
          })
        );

        xhr.onload = function onSuccessdata() {
          var data = JSON.parse(this.responseText);
          callback(!!data ? data.result.metadata.globalCounts.count : undefined);
        };

        xhr.onerror = function onErrordata() {};
      }

      function getLinkedinShareCount(shareUrl, callback) {
        var url = 'https://www.linkedin.com/countserv/count/share';

        return (0, _jsonp2.default)(
          url +
            (0, _utils.objectToGetParams)({
              url: shareUrl,
              format: 'jsonp',
            }),
          function (err, data) {
            callback(!!data ? data.count : undefined);
          }
        );
      }

      function getPinterestShareCount(shareUrl, callback) {
        var url = 'https://api.pinterest.com/v1/urls/count.json';

        return (0, _jsonp2.default)(
          url +
            (0, _utils.objectToGetParams)({
              url: shareUrl,
            }),
          function (err, data) {
            callback(!!data ? data.count : undefined);
          }
        );
      }

      function getVKShareCount(shareUrl, callback) {
        if (!window.VK) {
          window.VK = {
            Share: {
              count: function count(index, _count2) {
                return window.VK.callbacks[index](_count2);
              },
            },
            callbacks: [],
          };
        }

        var url = 'https://vk.com/share.php';
        var index = window.VK.callbacks.length;

        window.VK.callbacks.push(callback);

        return (0, _jsonp2.default)(
          url +
            (0, _utils.objectToGetParams)({
              act: 'count',
              index: index,
              url: shareUrl,
            })
        );
      }

      exports.getVKShareCount = getVKShareCount;
      function getOKShareCount(shareUrl, callback) {
        if (!window.OK) {
          window.OK = {
            Share: {
              count: function count(index, _count) {
                return window.OK.callbacks[index](_count);
              },
            },
            callbacks: [],
          };
        }

        var url = 'https://connect.ok.ru/dk';
        var index = window.OK.callbacks.length;

        window.ODKL = {
          updateCount: function updateCount(a, b) {
            window.OK.callbacks[index](b);
          },
        };
        window.OK.callbacks.push(callback);

        return (0, _jsonp2.default)(
          url +
            (0, _utils.objectToGetParams)({
              'st.cmd': 'extLike',
              uid: 'odklcnt0',
              ref: shareUrl,
            })
        );
      }

      function getRedditShareCount(shareUrl, callback) {
        var endpoint = 'https://www.reddit.com/api/info.json?limit=1&url=' + shareUrl;

        (0, _jsonp2.default)(endpoint, { param: 'jsonp' }, function (err, response) {
          callback(
            !err &&
              response &&
              response.data &&
              response.data.children.length > 0 &&
              response.data.children[0].data.score
              ? response.data.children[0].data.score
              : undefined
          );
        });
      }

      /***/
    },
    /* 755 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true,
      });
      exports.TwitterShareCount = exports.RedditShareCount = exports.OKShareCount = exports.VKShareCount = exports.PinterestShareCount = exports.GooglePlusShareCount = exports.LinkedinShareCount = exports.FacebookShareCount = undefined;

      var _extends2 = __webpack_require__(129);

      var _extends3 = _interopRequireDefault(_extends2);

      var _getPrototypeOf = __webpack_require__(211);

      var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);

      var _classCallCheck2 = __webpack_require__(213);

      var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

      var _createClass2 = __webpack_require__(214);

      var _createClass3 = _interopRequireDefault(_createClass2);

      var _possibleConstructorReturn2 = __webpack_require__(216);

      var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

      var _inherits2 = __webpack_require__(215);

      var _inherits3 = _interopRequireDefault(_inherits2);

      var _react = __webpack_require__(4);

      var _react2 = _interopRequireDefault(_react);

      var _propTypes = __webpack_require__(119);

      var _propTypes2 = _interopRequireDefault(_propTypes);

      var _classnames = __webpack_require__(72);

      var _classnames2 = _interopRequireDefault(_classnames);

      var _shareCountGetters = __webpack_require__(754);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      /* eslint-disable react/no-multi-comp */
      var SocialMediaShareCount = (function (_Component) {
        (0, _inherits3.default)(SocialMediaShareCount, _Component);

        function SocialMediaShareCount(props) {
          (0, _classCallCheck3.default)(this, SocialMediaShareCount);

          var _this = (0, _possibleConstructorReturn3.default)(
            this,
            (
              SocialMediaShareCount.__proto__ ||
              (0, _getPrototypeOf2.default)(SocialMediaShareCount)
            ).call(this, props)
          );

          _this._isMounted = false;
          _this.state = { count: 0 };
          return _this;
        }

        (0, _createClass3.default)(SocialMediaShareCount, [
          {
            key: 'componentDidMount',
            value: function componentDidMount() {
              this._isMounted = true;
              this.updateCount(this.props.url);
            },
          },
          {
            key: 'componentWillReceiveProps',
            value: function componentWillReceiveProps(nextProps) {
              if (nextProps.url !== this.props.url) {
                this.updateCount(nextProps.url);
              }
            },
          },
          {
            key: 'componentWillUnmount',
            value: function componentWillUnmount() {
              this._isMounted = false;
            },
          },
          {
            key: 'updateCount',
            value: function updateCount(url) {
              var _this2 = this;

              if (this.props.getCount) {
                this.setState({
                  isLoading: true,
                });

                this.props.getCount(url, function (count) {
                  if (_this2._isMounted) {
                    _this2.setState({
                      count: count,
                      isLoading: false,
                    });
                  }
                });
              }
            },
          },
          {
            key: 'render',
            value: function render() {
              var _state = this.state,
                count = _state.count,
                isLoading = _state.isLoading;
              var _props = this.props,
                children = _props.children,
                className = _props.className;

              return _react2.default.createElement(
                'div',
                { className: (0, _classnames2.default)('SocialMediaShareCount', className) },
                !isLoading && children(count || 0)
              );
            },
          },
        ]);
        return SocialMediaShareCount;
      })(_react.Component);

      SocialMediaShareCount.propTypes = {
        children: _propTypes2.default.func,
        className: _propTypes2.default.string,
        getCount: _propTypes2.default.func,
        url: _propTypes2.default.string.isRequired,
      };

      SocialMediaShareCount.defaultProps = {
        children: function children(shareCount) {
          return shareCount;
        },
      };

      function shareCountFactory(getCount) {
        return function (props) {
          return _react2.default.createElement(
            SocialMediaShareCount,
            (0, _extends3.default)({ getCount: getCount }, props)
          );
        };
      }

      var FacebookShareCount = (exports.FacebookShareCount = shareCountFactory(
        _shareCountGetters.getFacebookShareCount
      ));
      var LinkedinShareCount = (exports.LinkedinShareCount = shareCountFactory(
        _shareCountGetters.getLinkedinShareCount
      ));
      var GooglePlusShareCount = (exports.GooglePlusShareCount = shareCountFactory(
        _shareCountGetters.getGooglePlusShareCount
      ));
      var PinterestShareCount = (exports.PinterestShareCount = shareCountFactory(
        _shareCountGetters.getPinterestShareCount
      ));
      var VKShareCount = (exports.VKShareCount = shareCountFactory(
        _shareCountGetters.getVKShareCount
      ));
      var OKShareCount = (exports.OKShareCount = shareCountFactory(
        _shareCountGetters.getOKShareCount
      ));
      var RedditShareCount = (exports.RedditShareCount = shareCountFactory(
        _shareCountGetters.getRedditShareCount
      ));
      var TwitterShareCount = (exports.TwitterShareCount = function TwitterShareCount() {
        throw new Error(
          'TwitterShareCount was removed in version 1.3.0 because' +
            'the Twitter API was shut down and there is no replacement. Please ' +
            'remove it from your code.'
        );
      });

      /***/
    },
    /* 756 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';

      var _extends =
        Object.assign ||
        function (target) {
          for (var i = 1; i < arguments.length; i++) {
            var source = arguments[i];
            for (var key in source) {
              if (Object.prototype.hasOwnProperty.call(source, key)) {
                target[key] = source[key];
              }
            }
          }
          return target;
        };

      function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
          throw new TypeError('Cannot call a class as a function');
        }
      }

      function _possibleConstructorReturn(self, call) {
        if (!self) {
          throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
        }
        return call && (typeof call === 'object' || typeof call === 'function') ? call : self;
      }

      function _inherits(subClass, superClass) {
        if (typeof superClass !== 'function' && superClass !== null) {
          throw new TypeError(
            'Super expression must either be null or a function, not ' + typeof superClass
          );
        }
        subClass.prototype = Object.create(superClass && superClass.prototype, {
          constructor: { value: subClass, enumerable: false, writable: true, configurable: true },
        });
        if (superClass)
          Object.setPrototypeOf
            ? Object.setPrototypeOf(subClass, superClass)
            : (subClass.__proto__ = superClass);
      }

      var React = __webpack_require__(4);
      var PropTypes = __webpack_require__(119);

      function getInitialState() {
        return {
          x: null,
          y: null,
          swiping: false,
          start: 0,
        };
      }

      function getMovingPosition(e) {
        return 'changedTouches' in e
          ? { x: e.changedTouches[0].clientX, y: e.changedTouches[0].clientY }
          : { x: e.clientX, y: e.clientY };
      }
      function getPosition(e) {
        return 'touches' in e
          ? { x: e.touches[0].clientX, y: e.touches[0].clientY }
          : { x: e.clientX, y: e.clientY };
      }

      function calculatePos(e, state) {
        var _getMovingPosition = getMovingPosition(e),
          x = _getMovingPosition.x,
          y = _getMovingPosition.y;

        var deltaX = state.x - x;
        var deltaY = state.y - y;

        var absX = Math.abs(deltaX);
        var absY = Math.abs(deltaY);

        var time = Date.now() - state.start;
        var velocity = Math.sqrt(absX * absX + absY * absY) / time;

        return { deltaX: deltaX, deltaY: deltaY, absX: absX, absY: absY, velocity: velocity };
      }

      var Swipeable = (function (_React$Component) {
        _inherits(Swipeable, _React$Component);

        function Swipeable(props, context) {
          _classCallCheck(this, Swipeable);

          var _this = _possibleConstructorReturn(this, _React$Component.call(this, props, context));

          _this.eventStart = _this.eventStart.bind(_this);
          _this.eventMove = _this.eventMove.bind(_this);
          _this.eventEnd = _this.eventEnd.bind(_this);
          _this.mouseDown = _this.mouseDown.bind(_this);
          _this.mouseMove = _this.mouseMove.bind(_this);
          _this.mouseUp = _this.mouseUp.bind(_this);
          return _this;
        }

        Swipeable.prototype.componentWillMount = function componentWillMount() {
          this.swipeable = getInitialState();
        };

        Swipeable.prototype.componentWillUnmount = function componentWillUnmount() {
          if (this.props.trackMouse) {
            document.removeEventListener('mousemove', this.mouseMove);
            document.removeEventListener('mouseup', this.mouseUp);
          }
        };

        Swipeable.prototype.mouseDown = function mouseDown(e) {
          if (!this.props.trackMouse || e.type !== 'mousedown') {
            return;
          }

          if (typeof this.props.onMouseDown === 'function') this.props.onMouseDown(e);

          this.eventStart(e);

          document.addEventListener('mousemove', this.mouseMove);
          document.addEventListener('mouseup', this.mouseUp);
        };

        Swipeable.prototype.mouseMove = function mouseMove(e) {
          this.eventMove(e);
        };

        Swipeable.prototype.mouseUp = function mouseUp(e) {
          document.removeEventListener('mousemove', this.mouseMove);
          document.removeEventListener('mouseup', this.mouseUp);

          this.eventEnd(e);
        };

        Swipeable.prototype.eventStart = function eventStart(e) {
          if (e.touches && e.touches.length > 1) return;

          var _getPosition = getPosition(e),
            x = _getPosition.x,
            y = _getPosition.y;

          if (this.props.stopPropagation) e.stopPropagation();

          this.swipeable = { start: Date.now(), x: x, y: y, swiping: false };
        };

        Swipeable.prototype.eventMove = function eventMove(e) {
          var _props = this.props,
            stopPropagation = _props.stopPropagation,
            delta = _props.delta,
            onSwiping = _props.onSwiping,
            onSwipingLeft = _props.onSwipingLeft,
            onSwipedLeft = _props.onSwipedLeft,
            onSwipingRight = _props.onSwipingRight,
            onSwipedRight = _props.onSwipedRight,
            onSwipingUp = _props.onSwipingUp,
            onSwipedUp = _props.onSwipedUp,
            onSwipingDown = _props.onSwipingDown,
            onSwipedDown = _props.onSwipedDown,
            preventDefaultTouchmoveEvent = _props.preventDefaultTouchmoveEvent;

          if (!this.swipeable.x || !this.swipeable.y || (e.touches && e.touches.length > 1)) {
            return;
          }

          var pos = calculatePos(e, this.swipeable);

          if (pos.absX < delta && pos.absY < delta && !this.swipeable.swiping) return;

          if (stopPropagation) e.stopPropagation();

          if (onSwiping) {
            onSwiping(e, pos.deltaX, pos.deltaY, pos.absX, pos.absY, pos.velocity);
          }

          var cancelablePageSwipe = false;
          if (pos.absX > pos.absY) {
            if (pos.deltaX > 0) {
              if (onSwipingLeft || onSwipedLeft) {
                onSwipingLeft && onSwipingLeft(e, pos.absX);
                cancelablePageSwipe = true;
              }
            } else if (onSwipingRight || onSwipedRight) {
              onSwipingRight && onSwipingRight(e, pos.absX);
              cancelablePageSwipe = true;
            }
          } else if (pos.deltaY > 0) {
            if (onSwipingUp || onSwipedUp) {
              onSwipingUp && onSwipingUp(e, pos.absY);
              cancelablePageSwipe = true;
            }
          } else if (onSwipingDown || onSwipedDown) {
            onSwipingDown && onSwipingDown(e, pos.absY);
            cancelablePageSwipe = true;
          }

          this.swipeable.swiping = true;

          if (cancelablePageSwipe && preventDefaultTouchmoveEvent) e.preventDefault();
        };

        Swipeable.prototype.eventEnd = function eventEnd(e) {
          var _props2 = this.props,
            stopPropagation = _props2.stopPropagation,
            flickThreshold = _props2.flickThreshold,
            onSwiped = _props2.onSwiped,
            onSwipedLeft = _props2.onSwipedLeft,
            onSwipedRight = _props2.onSwipedRight,
            onSwipedUp = _props2.onSwipedUp,
            onSwipedDown = _props2.onSwipedDown,
            onTap = _props2.onTap;

          if (this.swipeable.swiping) {
            var pos = calculatePos(e, this.swipeable);

            if (stopPropagation) e.stopPropagation();

            var isFlick = pos.velocity > flickThreshold;

            onSwiped && onSwiped(e, pos.deltaX, pos.deltaY, isFlick, pos.velocity);

            if (pos.absX > pos.absY) {
              if (pos.deltaX > 0) {
                onSwipedLeft && onSwipedLeft(e, pos.deltaX, isFlick);
              } else {
                onSwipedRight && onSwipedRight(e, pos.deltaX, isFlick);
              }
            } else if (pos.deltaY > 0) {
              onSwipedUp && onSwipedUp(e, pos.deltaY, isFlick);
            } else {
              onSwipedDown && onSwipedDown(e, pos.deltaY, isFlick);
            }
          } else {
            onTap && onTap(e);
          }

          this.swipeable = getInitialState();
        };

        Swipeable.prototype.render = function render() {
          var newProps = _extends({}, this.props, {
            onTouchStart: this.eventStart,
            onTouchMove: this.eventMove,
            onTouchEnd: this.eventEnd,
            onMouseDown: this.mouseDown,
          });

          delete newProps.onSwiped;
          delete newProps.onSwiping;
          delete newProps.onSwipingUp;
          delete newProps.onSwipingRight;
          delete newProps.onSwipingDown;
          delete newProps.onSwipingLeft;
          delete newProps.onSwipedUp;
          delete newProps.onSwipedRight;
          delete newProps.onSwipedDown;
          delete newProps.onSwipedLeft;
          delete newProps.onTap;
          delete newProps.flickThreshold;
          delete newProps.delta;
          delete newProps.preventDefaultTouchmoveEvent;
          delete newProps.stopPropagation;
          delete newProps.nodeName;
          delete newProps.children;
          delete newProps.trackMouse;

          return React.createElement(this.props.nodeName, newProps, this.props.children);
        };

        return Swipeable;
      })(React.Component);

      Swipeable.propTypes = {
        onSwiped: PropTypes.func,
        onSwiping: PropTypes.func,
        onSwipingUp: PropTypes.func,
        onSwipingRight: PropTypes.func,
        onSwipingDown: PropTypes.func,
        onSwipingLeft: PropTypes.func,
        onSwipedUp: PropTypes.func,
        onSwipedRight: PropTypes.func,
        onSwipedDown: PropTypes.func,
        onSwipedLeft: PropTypes.func,
        onTap: PropTypes.func,
        flickThreshold: PropTypes.number,
        delta: PropTypes.number,
        preventDefaultTouchmoveEvent: PropTypes.bool,
        stopPropagation: PropTypes.bool,
        nodeName: PropTypes.string,
        trackMouse: PropTypes.bool,
        children: PropTypes.node,
      };

      Swipeable.defaultProps = {
        flickThreshold: 0.6,
        delta: 10,
        preventDefaultTouchmoveEvent: false,
        stopPropagation: false,
        nodeName: 'div',
      };

      module.exports = Swipeable;

      /***/
    },
    /* 757 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';
      /**
       * Copyright 2013-present, Facebook, Inc.
       * All rights reserved.
       *
       * This source code is licensed under the BSD-style license found in the
       * LICENSE file in the root directory of this source tree. An additional grant
       * of patent rights can be found in the PATENTS file in the same directory.
       *
       *
       */

      /**
       * Escape and wrap key so it is safe to use as a reactid
       *
       * @param {string} key to be escaped.
       * @return {string} the escaped key.
       */

      function escape(key) {
        var escapeRegex = /[=:]/g;
        var escaperLookup = {
          '=': '=0',
          ':': '=2',
        };
        var escapedString = ('' + key).replace(escapeRegex, function (match) {
          return escaperLookup[match];
        });

        return '$' + escapedString;
      }

      /**
       * Unescape and unwrap key for human-readable display
       *
       * @param {string} key to unescape.
       * @return {string} the unescaped key.
       */
      function unescape(key) {
        var unescapeRegex = /(=0|=2)/g;
        var unescaperLookup = {
          '=0': '=',
          '=2': ':',
        };
        var keySubstring = key[0] === '.' && key[1] === '$' ? key.substring(2) : key.substring(1);

        return ('' + keySubstring).replace(unescapeRegex, function (match) {
          return unescaperLookup[match];
        });
      }

      var KeyEscapeUtils = {
        escape: escape,
        unescape: unescape,
      };

      module.exports = KeyEscapeUtils;

      /***/
    },
    /* 758 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';
      /* WEBPACK VAR INJECTION */ (function (process) {
        /**
         * Copyright 2013-present, Facebook, Inc.
         * All rights reserved.
         *
         * This source code is licensed under the BSD-style license found in the
         * LICENSE file in the root directory of this source tree. An additional grant
         * of patent rights can be found in the PATENTS file in the same directory.
         *
         *
         */

        var _prodInvariant = __webpack_require__(70);

        var invariant = __webpack_require__(2);

        /**
         * Static poolers. Several custom versions for each potential number of
         * arguments. A completely generic pooler is easy to implement, but would
         * require accessing the `arguments` object. In each of these, `this` refers to
         * the Class itself, not an instance. If any others are needed, simply add them
         * here, or in their own files.
         */
        var oneArgumentPooler = function (copyFieldsFrom) {
          var Klass = this;
          if (Klass.instancePool.length) {
            var instance = Klass.instancePool.pop();
            Klass.call(instance, copyFieldsFrom);
            return instance;
          } else {
            return new Klass(copyFieldsFrom);
          }
        };

        var twoArgumentPooler = function (a1, a2) {
          var Klass = this;
          if (Klass.instancePool.length) {
            var instance = Klass.instancePool.pop();
            Klass.call(instance, a1, a2);
            return instance;
          } else {
            return new Klass(a1, a2);
          }
        };

        var threeArgumentPooler = function (a1, a2, a3) {
          var Klass = this;
          if (Klass.instancePool.length) {
            var instance = Klass.instancePool.pop();
            Klass.call(instance, a1, a2, a3);
            return instance;
          } else {
            return new Klass(a1, a2, a3);
          }
        };

        var fourArgumentPooler = function (a1, a2, a3, a4) {
          var Klass = this;
          if (Klass.instancePool.length) {
            var instance = Klass.instancePool.pop();
            Klass.call(instance, a1, a2, a3, a4);
            return instance;
          } else {
            return new Klass(a1, a2, a3, a4);
          }
        };

        var standardReleaser = function (instance) {
          var Klass = this;
          !(instance instanceof Klass)
            ? process.env.NODE_ENV !== 'production'
              ? invariant(false, 'Trying to release an instance into a pool of a different type.')
              : _prodInvariant('25')
            : void 0;
          instance.destructor();
          if (Klass.instancePool.length < Klass.poolSize) {
            Klass.instancePool.push(instance);
          }
        };

        var DEFAULT_POOL_SIZE = 10;
        var DEFAULT_POOLER = oneArgumentPooler;

        /**
         * Augments `CopyConstructor` to be a poolable class, augmenting only the class
         * itself (statically) not adding any prototypical fields. Any CopyConstructor
         * you give this may have a `poolSize` property, and will look for a
         * prototypical `destructor` on instances.
         *
         * @param {Function} CopyConstructor Constructor that can be used to reset.
         * @param {Function} pooler Customizable pooler.
         */
        var addPoolingTo = function (CopyConstructor, pooler) {
          // Casting as any so that flow ignores the actual implementation and trusts
          // it to match the type we declared
          var NewKlass = CopyConstructor;
          NewKlass.instancePool = [];
          NewKlass.getPooled = pooler || DEFAULT_POOLER;
          if (!NewKlass.poolSize) {
            NewKlass.poolSize = DEFAULT_POOL_SIZE;
          }
          NewKlass.release = standardReleaser;
          return NewKlass;
        };

        var PooledClass = {
          addPoolingTo: addPoolingTo,
          oneArgumentPooler: oneArgumentPooler,
          twoArgumentPooler: twoArgumentPooler,
          threeArgumentPooler: threeArgumentPooler,
          fourArgumentPooler: fourArgumentPooler,
        };

        module.exports = PooledClass;
        /* WEBPACK VAR INJECTION */
      }.call(exports, __webpack_require__(1)));

      /***/
    },
    /* 759 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';
      /**
       * Copyright 2013-present, Facebook, Inc.
       * All rights reserved.
       *
       * This source code is licensed under the BSD-style license found in the
       * LICENSE file in the root directory of this source tree. An additional grant
       * of patent rights can be found in the PATENTS file in the same directory.
       *
       */

      var PooledClass = __webpack_require__(758);
      var ReactElement = __webpack_require__(69);

      var emptyFunction = __webpack_require__(28);
      var traverseAllChildren = __webpack_require__(767);

      var twoArgumentPooler = PooledClass.twoArgumentPooler;
      var fourArgumentPooler = PooledClass.fourArgumentPooler;

      var userProvidedKeyEscapeRegex = /\/+/g;
      function escapeUserProvidedKey(text) {
        return ('' + text).replace(userProvidedKeyEscapeRegex, '$&/');
      }

      /**
       * PooledClass representing the bookkeeping associated with performing a child
       * traversal. Allows avoiding binding callbacks.
       *
       * @constructor ForEachBookKeeping
       * @param {!function} forEachFunction Function to perform traversal with.
       * @param {?*} forEachContext Context to perform context with.
       */
      function ForEachBookKeeping(forEachFunction, forEachContext) {
        this.func = forEachFunction;
        this.context = forEachContext;
        this.count = 0;
      }
      ForEachBookKeeping.prototype.destructor = function () {
        this.func = null;
        this.context = null;
        this.count = 0;
      };
      PooledClass.addPoolingTo(ForEachBookKeeping, twoArgumentPooler);

      function forEachSingleChild(bookKeeping, child, name) {
        var func = bookKeeping.func,
          context = bookKeeping.context;

        func.call(context, child, bookKeeping.count++);
      }

      /**
       * Iterates through children that are typically specified as `props.children`.
       *
       * See https://facebook.github.io/react/docs/top-level-api.html#react.children.foreach
       *
       * The provided forEachFunc(child, index) will be called for each
       * leaf child.
       *
       * @param {?*} children Children tree container.
       * @param {function(*, int)} forEachFunc
       * @param {*} forEachContext Context for forEachContext.
       */
      function forEachChildren(children, forEachFunc, forEachContext) {
        if (children == null) {
          return children;
        }
        var traverseContext = ForEachBookKeeping.getPooled(forEachFunc, forEachContext);
        traverseAllChildren(children, forEachSingleChild, traverseContext);
        ForEachBookKeeping.release(traverseContext);
      }

      /**
       * PooledClass representing the bookkeeping associated with performing a child
       * mapping. Allows avoiding binding callbacks.
       *
       * @constructor MapBookKeeping
       * @param {!*} mapResult Object containing the ordered map of results.
       * @param {!function} mapFunction Function to perform mapping with.
       * @param {?*} mapContext Context to perform mapping with.
       */
      function MapBookKeeping(mapResult, keyPrefix, mapFunction, mapContext) {
        this.result = mapResult;
        this.keyPrefix = keyPrefix;
        this.func = mapFunction;
        this.context = mapContext;
        this.count = 0;
      }
      MapBookKeeping.prototype.destructor = function () {
        this.result = null;
        this.keyPrefix = null;
        this.func = null;
        this.context = null;
        this.count = 0;
      };
      PooledClass.addPoolingTo(MapBookKeeping, fourArgumentPooler);

      function mapSingleChildIntoContext(bookKeeping, child, childKey) {
        var result = bookKeeping.result,
          keyPrefix = bookKeeping.keyPrefix,
          func = bookKeeping.func,
          context = bookKeeping.context;

        var mappedChild = func.call(context, child, bookKeeping.count++);
        if (Array.isArray(mappedChild)) {
          mapIntoWithKeyPrefixInternal(
            mappedChild,
            result,
            childKey,
            emptyFunction.thatReturnsArgument
          );
        } else if (mappedChild != null) {
          if (ReactElement.isValidElement(mappedChild)) {
            mappedChild = ReactElement.cloneAndReplaceKey(
              mappedChild,
              // Keep both the (mapped) and old keys if they differ, just as
              // traverseAllChildren used to do for objects as children
              keyPrefix +
                (mappedChild.key && (!child || child.key !== mappedChild.key)
                  ? escapeUserProvidedKey(mappedChild.key) + '/'
                  : '') +
                childKey
            );
          }
          result.push(mappedChild);
        }
      }

      function mapIntoWithKeyPrefixInternal(children, array, prefix, func, context) {
        var escapedPrefix = '';
        if (prefix != null) {
          escapedPrefix = escapeUserProvidedKey(prefix) + '/';
        }
        var traverseContext = MapBookKeeping.getPooled(array, escapedPrefix, func, context);
        traverseAllChildren(children, mapSingleChildIntoContext, traverseContext);
        MapBookKeeping.release(traverseContext);
      }

      /**
       * Maps children that are typically specified as `props.children`.
       *
       * See https://facebook.github.io/react/docs/top-level-api.html#react.children.map
       *
       * The provided mapFunction(child, key, index) will be called for each
       * leaf child.
       *
       * @param {?*} children Children tree container.
       * @param {function(*, int)} func The map function.
       * @param {*} context Context for mapFunction.
       * @return {object} Object containing the ordered map of results.
       */
      function mapChildren(children, func, context) {
        if (children == null) {
          return children;
        }
        var result = [];
        mapIntoWithKeyPrefixInternal(children, result, null, func, context);
        return result;
      }

      function forEachSingleChildDummy(traverseContext, child, name) {
        return null;
      }

      /**
       * Count the number of children that are typically specified as
       * `props.children`.
       *
       * See https://facebook.github.io/react/docs/top-level-api.html#react.children.count
       *
       * @param {?*} children Children tree container.
       * @return {number} The number of children.
       */
      function countChildren(children, context) {
        return traverseAllChildren(children, forEachSingleChildDummy, null);
      }

      /**
       * Flatten a children object (typically specified as `props.children`) and
       * return an array with appropriately re-keyed children.
       *
       * See https://facebook.github.io/react/docs/top-level-api.html#react.children.toarray
       */
      function toArray(children) {
        var result = [];
        mapIntoWithKeyPrefixInternal(children, result, null, emptyFunction.thatReturnsArgument);
        return result;
      }

      var ReactChildren = {
        forEach: forEachChildren,
        map: mapChildren,
        mapIntoWithKeyPrefixInternal: mapIntoWithKeyPrefixInternal,
        count: countChildren,
        toArray: toArray,
      };

      module.exports = ReactChildren;

      /***/
    },
    /* 760 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';
      /* WEBPACK VAR INJECTION */ (function (process) {
        /**
         * Copyright 2013-present, Facebook, Inc.
         * All rights reserved.
         *
         * This source code is licensed under the BSD-style license found in the
         * LICENSE file in the root directory of this source tree. An additional grant
         * of patent rights can be found in the PATENTS file in the same directory.
         *
         */

        var _prodInvariant = __webpack_require__(70),
          _assign = __webpack_require__(12);

        var ReactComponent = __webpack_require__(202);
        var ReactElement = __webpack_require__(69);
        var ReactPropTypeLocationNames = __webpack_require__(204);
        var ReactNoopUpdateQueue = __webpack_require__(203);

        var emptyObject = __webpack_require__(94);
        var invariant = __webpack_require__(2);
        var warning = __webpack_require__(3);

        var MIXINS_KEY = 'mixins';

        // Helper function to allow the creation of anonymous functions which do not
        // have .name set to the name of the variable being assigned to.
        function identity(fn) {
          return fn;
        }

        /**
         * Policies that describe methods in `ReactClassInterface`.
         */

        var injectedMixins = [];

        /**
         * Composite components are higher-level components that compose other composite
         * or host components.
         *
         * To create a new type of `ReactClass`, pass a specification of
         * your new class to `React.createClass`. The only requirement of your class
         * specification is that you implement a `render` method.
         *
         *   var MyComponent = React.createClass({
         *     render: function() {
         *       return <div>Hello World</div>;
         *     }
         *   });
         *
         * The class specification supports a specific protocol of methods that have
         * special meaning (e.g. `render`). See `ReactClassInterface` for
         * more the comprehensive protocol. Any other properties and methods in the
         * class specification will be available on the prototype.
         *
         * @interface ReactClassInterface
         * @internal
         */
        var ReactClassInterface = {
          /**
           * An array of Mixin objects to include when defining your component.
           *
           * @type {array}
           * @optional
           */
          mixins: 'DEFINE_MANY',

          /**
           * An object containing properties and methods that should be defined on
           * the component's constructor instead of its prototype (static methods).
           *
           * @type {object}
           * @optional
           */
          statics: 'DEFINE_MANY',

          /**
           * Definition of prop types for this component.
           *
           * @type {object}
           * @optional
           */
          propTypes: 'DEFINE_MANY',

          /**
           * Definition of context types for this component.
           *
           * @type {object}
           * @optional
           */
          contextTypes: 'DEFINE_MANY',

          /**
           * Definition of context types this component sets for its children.
           *
           * @type {object}
           * @optional
           */
          childContextTypes: 'DEFINE_MANY',

          // ==== Definition methods ====

          /**
           * Invoked when the component is mounted. Values in the mapping will be set on
           * `this.props` if that prop is not specified (i.e. using an `in` check).
           *
           * This method is invoked before `getInitialState` and therefore cannot rely
           * on `this.state` or use `this.setState`.
           *
           * @return {object}
           * @optional
           */
          getDefaultProps: 'DEFINE_MANY_MERGED',

          /**
           * Invoked once before the component is mounted. The return value will be used
           * as the initial value of `this.state`.
           *
           *   getInitialState: function() {
           *     return {
           *       isOn: false,
           *       fooBaz: new BazFoo()
           *     }
           *   }
           *
           * @return {object}
           * @optional
           */
          getInitialState: 'DEFINE_MANY_MERGED',

          /**
           * @return {object}
           * @optional
           */
          getChildContext: 'DEFINE_MANY_MERGED',

          /**
           * Uses props from `this.props` and state from `this.state` to render the
           * structure of the component.
           *
           * No guarantees are made about when or how often this method is invoked, so
           * it must not have side effects.
           *
           *   render: function() {
           *     var name = this.props.name;
           *     return <div>Hello, {name}!</div>;
           *   }
           *
           * @return {ReactComponent}
           * @nosideeffects
           * @required
           */
          render: 'DEFINE_ONCE',

          // ==== Delegate methods ====

          /**
           * Invoked when the component is initially created and about to be mounted.
           * This may have side effects, but any external subscriptions or data created
           * by this method must be cleaned up in `componentWillUnmount`.
           *
           * @optional
           */
          componentWillMount: 'DEFINE_MANY',

          /**
           * Invoked when the component has been mounted and has a DOM representation.
           * However, there is no guarantee that the DOM node is in the document.
           *
           * Use this as an opportunity to operate on the DOM when the component has
           * been mounted (initialized and rendered) for the first time.
           *
           * @param {DOMElement} rootNode DOM element representing the component.
           * @optional
           */
          componentDidMount: 'DEFINE_MANY',

          /**
           * Invoked before the component receives new props.
           *
           * Use this as an opportunity to react to a prop transition by updating the
           * state using `this.setState`. Current props are accessed via `this.props`.
           *
           *   componentWillReceiveProps: function(nextProps, nextContext) {
           *     this.setState({
           *       likesIncreasing: nextProps.likeCount > this.props.likeCount
           *     });
           *   }
           *
           * NOTE: There is no equivalent `componentWillReceiveState`. An incoming prop
           * transition may cause a state change, but the opposite is not true. If you
           * need it, you are probably looking for `componentWillUpdate`.
           *
           * @param {object} nextProps
           * @optional
           */
          componentWillReceiveProps: 'DEFINE_MANY',

          /**
           * Invoked while deciding if the component should be updated as a result of
           * receiving new props, state and/or context.
           *
           * Use this as an opportunity to `return false` when you're certain that the
           * transition to the new props/state/context will not require a component
           * update.
           *
           *   shouldComponentUpdate: function(nextProps, nextState, nextContext) {
           *     return !equal(nextProps, this.props) ||
           *       !equal(nextState, this.state) ||
           *       !equal(nextContext, this.context);
           *   }
           *
           * @param {object} nextProps
           * @param {?object} nextState
           * @param {?object} nextContext
           * @return {boolean} True if the component should update.
           * @optional
           */
          shouldComponentUpdate: 'DEFINE_ONCE',

          /**
           * Invoked when the component is about to update due to a transition from
           * `this.props`, `this.state` and `this.context` to `nextProps`, `nextState`
           * and `nextContext`.
           *
           * Use this as an opportunity to perform preparation before an update occurs.
           *
           * NOTE: You **cannot** use `this.setState()` in this method.
           *
           * @param {object} nextProps
           * @param {?object} nextState
           * @param {?object} nextContext
           * @param {ReactReconcileTransaction} transaction
           * @optional
           */
          componentWillUpdate: 'DEFINE_MANY',

          /**
           * Invoked when the component's DOM representation has been updated.
           *
           * Use this as an opportunity to operate on the DOM when the component has
           * been updated.
           *
           * @param {object} prevProps
           * @param {?object} prevState
           * @param {?object} prevContext
           * @param {DOMElement} rootNode DOM element representing the component.
           * @optional
           */
          componentDidUpdate: 'DEFINE_MANY',

          /**
           * Invoked when the component is about to be removed from its parent and have
           * its DOM representation destroyed.
           *
           * Use this as an opportunity to deallocate any external resources.
           *
           * NOTE: There is no `componentDidUnmount` since your component will have been
           * destroyed by that point.
           *
           * @optional
           */
          componentWillUnmount: 'DEFINE_MANY',

          // ==== Advanced methods ====

          /**
           * Updates the component's currently mounted DOM representation.
           *
           * By default, this implements React's rendering and reconciliation algorithm.
           * Sophisticated clients may wish to override this.
           *
           * @param {ReactReconcileTransaction} transaction
           * @internal
           * @overridable
           */
          updateComponent: 'OVERRIDE_BASE',
        };

        /**
         * Mapping from class specification keys to special processing functions.
         *
         * Although these are declared like instance properties in the specification
         * when defining classes using `React.createClass`, they are actually static
         * and are accessible on the constructor instead of the prototype. Despite
         * being static, they must be defined outside of the "statics" key under
         * which all other static methods are defined.
         */
        var RESERVED_SPEC_KEYS = {
          displayName: function (Constructor, displayName) {
            Constructor.displayName = displayName;
          },
          mixins: function (Constructor, mixins) {
            if (mixins) {
              for (var i = 0; i < mixins.length; i++) {
                mixSpecIntoComponent(Constructor, mixins[i]);
              }
            }
          },
          childContextTypes: function (Constructor, childContextTypes) {
            if (process.env.NODE_ENV !== 'production') {
              validateTypeDef(Constructor, childContextTypes, 'childContext');
            }
            Constructor.childContextTypes = _assign(
              {},
              Constructor.childContextTypes,
              childContextTypes
            );
          },
          contextTypes: function (Constructor, contextTypes) {
            if (process.env.NODE_ENV !== 'production') {
              validateTypeDef(Constructor, contextTypes, 'context');
            }
            Constructor.contextTypes = _assign({}, Constructor.contextTypes, contextTypes);
          },
          /**
           * Special case getDefaultProps which should move into statics but requires
           * automatic merging.
           */
          getDefaultProps: function (Constructor, getDefaultProps) {
            if (Constructor.getDefaultProps) {
              Constructor.getDefaultProps = createMergedResultFunction(
                Constructor.getDefaultProps,
                getDefaultProps
              );
            } else {
              Constructor.getDefaultProps = getDefaultProps;
            }
          },
          propTypes: function (Constructor, propTypes) {
            if (process.env.NODE_ENV !== 'production') {
              validateTypeDef(Constructor, propTypes, 'prop');
            }
            Constructor.propTypes = _assign({}, Constructor.propTypes, propTypes);
          },
          statics: function (Constructor, statics) {
            mixStaticSpecIntoComponent(Constructor, statics);
          },
          autobind: function () {},
        };

        function validateTypeDef(Constructor, typeDef, location) {
          for (var propName in typeDef) {
            if (typeDef.hasOwnProperty(propName)) {
              // use a warning instead of an invariant so components
              // don't show up in prod but only in __DEV__
              process.env.NODE_ENV !== 'production'
                ? warning(
                    typeof typeDef[propName] === 'function',
                    '%s: %s type `%s` is invalid; it must be a function, usually from ' +
                      'React.PropTypes.',
                    Constructor.displayName || 'ReactClass',
                    ReactPropTypeLocationNames[location],
                    propName
                  )
                : void 0;
            }
          }
        }

        function validateMethodOverride(isAlreadyDefined, name) {
          var specPolicy = ReactClassInterface.hasOwnProperty(name)
            ? ReactClassInterface[name]
            : null;

          // Disallow overriding of base class methods unless explicitly allowed.
          if (ReactClassMixin.hasOwnProperty(name)) {
            !(specPolicy === 'OVERRIDE_BASE')
              ? process.env.NODE_ENV !== 'production'
                ? invariant(
                    false,
                    'ReactClassInterface: You are attempting to override `%s` from your class specification. Ensure that your method names do not overlap with React methods.',
                    name
                  )
                : _prodInvariant('73', name)
              : void 0;
          }

          // Disallow defining methods more than once unless explicitly allowed.
          if (isAlreadyDefined) {
            !(specPolicy === 'DEFINE_MANY' || specPolicy === 'DEFINE_MANY_MERGED')
              ? process.env.NODE_ENV !== 'production'
                ? invariant(
                    false,
                    'ReactClassInterface: You are attempting to define `%s` on your component more than once. This conflict may be due to a mixin.',
                    name
                  )
                : _prodInvariant('74', name)
              : void 0;
          }
        }

        /**
         * Mixin helper which handles policy validation and reserved
         * specification keys when building React classes.
         */
        function mixSpecIntoComponent(Constructor, spec) {
          if (!spec) {
            if (process.env.NODE_ENV !== 'production') {
              var typeofSpec = typeof spec;
              var isMixinValid = typeofSpec === 'object' && spec !== null;

              process.env.NODE_ENV !== 'production'
                ? warning(
                    isMixinValid,
                    "%s: You're attempting to include a mixin that is either null " +
                      'or not an object. Check the mixins included by the component, ' +
                      'as well as any mixins they include themselves. ' +
                      'Expected object but got %s.',
                    Constructor.displayName || 'ReactClass',
                    spec === null ? null : typeofSpec
                  )
                : void 0;
            }

            return;
          }

          !(typeof spec !== 'function')
            ? process.env.NODE_ENV !== 'production'
              ? invariant(
                  false,
                  "ReactClass: You're attempting to use a component class or function as a mixin. Instead, just use a regular object."
                )
              : _prodInvariant('75')
            : void 0;
          !!ReactElement.isValidElement(spec)
            ? process.env.NODE_ENV !== 'production'
              ? invariant(
                  false,
                  "ReactClass: You're attempting to use a component as a mixin. Instead, just use a regular object."
                )
              : _prodInvariant('76')
            : void 0;

          var proto = Constructor.prototype;
          var autoBindPairs = proto.__reactAutoBindPairs;

          // By handling mixins before any other properties, we ensure the same
          // chaining order is applied to methods with DEFINE_MANY policy, whether
          // mixins are listed before or after these methods in the spec.
          if (spec.hasOwnProperty(MIXINS_KEY)) {
            RESERVED_SPEC_KEYS.mixins(Constructor, spec.mixins);
          }

          for (var name in spec) {
            if (!spec.hasOwnProperty(name)) {
              continue;
            }

            if (name === MIXINS_KEY) {
              // We have already handled mixins in a special case above.
              continue;
            }

            var property = spec[name];
            var isAlreadyDefined = proto.hasOwnProperty(name);
            validateMethodOverride(isAlreadyDefined, name);

            if (RESERVED_SPEC_KEYS.hasOwnProperty(name)) {
              RESERVED_SPEC_KEYS[name](Constructor, property);
            } else {
              // Setup methods on prototype:
              // The following member methods should not be automatically bound:
              // 1. Expected ReactClass methods (in the "interface").
              // 2. Overridden methods (that were mixed in).
              var isReactClassMethod = ReactClassInterface.hasOwnProperty(name);
              var isFunction = typeof property === 'function';
              var shouldAutoBind =
                isFunction && !isReactClassMethod && !isAlreadyDefined && spec.autobind !== false;

              if (shouldAutoBind) {
                autoBindPairs.push(name, property);
                proto[name] = property;
              } else {
                if (isAlreadyDefined) {
                  var specPolicy = ReactClassInterface[name];

                  // These cases should already be caught by validateMethodOverride.
                  !(
                    isReactClassMethod &&
                    (specPolicy === 'DEFINE_MANY_MERGED' || specPolicy === 'DEFINE_MANY')
                  )
                    ? process.env.NODE_ENV !== 'production'
                      ? invariant(
                          false,
                          'ReactClass: Unexpected spec policy %s for key %s when mixing in component specs.',
                          specPolicy,
                          name
                        )
                      : _prodInvariant('77', specPolicy, name)
                    : void 0;

                  // For methods which are defined more than once, call the existing
                  // methods before calling the new property, merging if appropriate.
                  if (specPolicy === 'DEFINE_MANY_MERGED') {
                    proto[name] = createMergedResultFunction(proto[name], property);
                  } else if (specPolicy === 'DEFINE_MANY') {
                    proto[name] = createChainedFunction(proto[name], property);
                  }
                } else {
                  proto[name] = property;
                  if (process.env.NODE_ENV !== 'production') {
                    // Add verbose displayName to the function, which helps when looking
                    // at profiling tools.
                    if (typeof property === 'function' && spec.displayName) {
                      proto[name].displayName = spec.displayName + '_' + name;
                    }
                  }
                }
              }
            }
          }
        }

        function mixStaticSpecIntoComponent(Constructor, statics) {
          if (!statics) {
            return;
          }
          for (var name in statics) {
            var property = statics[name];
            if (!statics.hasOwnProperty(name)) {
              continue;
            }

            var isReserved = name in RESERVED_SPEC_KEYS;
            !!isReserved
              ? process.env.NODE_ENV !== 'production'
                ? invariant(
                    false,
                    'ReactClass: You are attempting to define a reserved property, `%s`, that shouldn\'t be on the "statics" key. Define it as an instance property instead; it will still be accessible on the constructor.',
                    name
                  )
                : _prodInvariant('78', name)
              : void 0;

            var isInherited = name in Constructor;
            !!isInherited
              ? process.env.NODE_ENV !== 'production'
                ? invariant(
                    false,
                    'ReactClass: You are attempting to define `%s` on your component more than once. This conflict may be due to a mixin.',
                    name
                  )
                : _prodInvariant('79', name)
              : void 0;
            Constructor[name] = property;
          }
        }

        /**
         * Merge two objects, but throw if both contain the same key.
         *
         * @param {object} one The first object, which is mutated.
         * @param {object} two The second object
         * @return {object} one after it has been mutated to contain everything in two.
         */
        function mergeIntoWithNoDuplicateKeys(one, two) {
          !(one && two && typeof one === 'object' && typeof two === 'object')
            ? process.env.NODE_ENV !== 'production'
              ? invariant(false, 'mergeIntoWithNoDuplicateKeys(): Cannot merge non-objects.')
              : _prodInvariant('80')
            : void 0;

          for (var key in two) {
            if (two.hasOwnProperty(key)) {
              !(one[key] === undefined)
                ? process.env.NODE_ENV !== 'production'
                  ? invariant(
                      false,
                      'mergeIntoWithNoDuplicateKeys(): Tried to merge two objects with the same key: `%s`. This conflict may be due to a mixin; in particular, this may be caused by two getInitialState() or getDefaultProps() methods returning objects with clashing keys.',
                      key
                    )
                  : _prodInvariant('81', key)
                : void 0;
              one[key] = two[key];
            }
          }
          return one;
        }

        /**
         * Creates a function that invokes two functions and merges their return values.
         *
         * @param {function} one Function to invoke first.
         * @param {function} two Function to invoke second.
         * @return {function} Function that invokes the two argument functions.
         * @private
         */
        function createMergedResultFunction(one, two) {
          return function mergedResult() {
            var a = one.apply(this, arguments);
            var b = two.apply(this, arguments);
            if (a == null) {
              return b;
            } else if (b == null) {
              return a;
            }
            var c = {};
            mergeIntoWithNoDuplicateKeys(c, a);
            mergeIntoWithNoDuplicateKeys(c, b);
            return c;
          };
        }

        /**
         * Creates a function that invokes two functions and ignores their return vales.
         *
         * @param {function} one Function to invoke first.
         * @param {function} two Function to invoke second.
         * @return {function} Function that invokes the two argument functions.
         * @private
         */
        function createChainedFunction(one, two) {
          return function chainedFunction() {
            one.apply(this, arguments);
            two.apply(this, arguments);
          };
        }

        /**
         * Binds a method to the component.
         *
         * @param {object} component Component whose method is going to be bound.
         * @param {function} method Method to be bound.
         * @return {function} The bound method.
         */
        function bindAutoBindMethod(component, method) {
          var boundMethod = method.bind(component);
          if (process.env.NODE_ENV !== 'production') {
            boundMethod.__reactBoundContext = component;
            boundMethod.__reactBoundMethod = method;
            boundMethod.__reactBoundArguments = null;
            var componentName = component.constructor.displayName;
            var _bind = boundMethod.bind;
            boundMethod.bind = function (newThis) {
              for (
                var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1;
                _key < _len;
                _key++
              ) {
                args[_key - 1] = arguments[_key];
              }

              // User is trying to bind() an autobound method; we effectively will
              // ignore the value of "this" that the user is trying to use, so
              // let's warn.
              if (newThis !== component && newThis !== null) {
                process.env.NODE_ENV !== 'production'
                  ? warning(
                      false,
                      'bind(): React component methods may only be bound to the ' +
                        'component instance. See %s',
                      componentName
                    )
                  : void 0;
              } else if (!args.length) {
                process.env.NODE_ENV !== 'production'
                  ? warning(
                      false,
                      'bind(): You are binding a component method to the component. ' +
                        'React does this for you automatically in a high-performance ' +
                        'way, so you can safely remove this call. See %s',
                      componentName
                    )
                  : void 0;
                return boundMethod;
              }
              var reboundMethod = _bind.apply(boundMethod, arguments);
              reboundMethod.__reactBoundContext = component;
              reboundMethod.__reactBoundMethod = method;
              reboundMethod.__reactBoundArguments = args;
              return reboundMethod;
            };
          }
          return boundMethod;
        }

        /**
         * Binds all auto-bound methods in a component.
         *
         * @param {object} component Component whose method is going to be bound.
         */
        function bindAutoBindMethods(component) {
          var pairs = component.__reactAutoBindPairs;
          for (var i = 0; i < pairs.length; i += 2) {
            var autoBindKey = pairs[i];
            var method = pairs[i + 1];
            component[autoBindKey] = bindAutoBindMethod(component, method);
          }
        }

        /**
         * Add more to the ReactClass base class. These are all legacy features and
         * therefore not already part of the modern ReactComponent.
         */
        var ReactClassMixin = {
          /**
           * TODO: This will be deprecated because state should always keep a consistent
           * type signature and the only use case for this, is to avoid that.
           */
          replaceState: function (newState, callback) {
            this.updater.enqueueReplaceState(this, newState);
            if (callback) {
              this.updater.enqueueCallback(this, callback, 'replaceState');
            }
          },

          /**
           * Checks whether or not this composite component is mounted.
           * @return {boolean} True if mounted, false otherwise.
           * @protected
           * @final
           */
          isMounted: function () {
            return this.updater.isMounted(this);
          },
        };

        var ReactClassComponent = function () {};
        _assign(ReactClassComponent.prototype, ReactComponent.prototype, ReactClassMixin);

        /**
         * Module for creating composite components.
         *
         * @class ReactClass
         */
        var ReactClass = {
          /**
           * Creates a composite component class given a class specification.
           * See https://facebook.github.io/react/docs/top-level-api.html#react.createclass
           *
           * @param {object} spec Class specification (which must define `render`).
           * @return {function} Component constructor function.
           * @public
           */
          createClass: function (spec) {
            // To keep our warnings more understandable, we'll use a little hack here to
            // ensure that Constructor.name !== 'Constructor'. This makes sure we don't
            // unnecessarily identify a class without displayName as 'Constructor'.
            var Constructor = identity(function (props, context, updater) {
              // This constructor gets overridden by mocks. The argument is used
              // by mocks to assert on what gets mounted.

              if (process.env.NODE_ENV !== 'production') {
                process.env.NODE_ENV !== 'production'
                  ? warning(
                      this instanceof Constructor,
                      'Something is calling a React component directly. Use a factory or ' +
                        'JSX instead. See: https://fb.me/react-legacyfactory'
                    )
                  : void 0;
              }

              // Wire up auto-binding
              if (this.__reactAutoBindPairs.length) {
                bindAutoBindMethods(this);
              }

              this.props = props;
              this.context = context;
              this.refs = emptyObject;
              this.updater = updater || ReactNoopUpdateQueue;

              this.state = null;

              // ReactClasses doesn't have constructors. Instead, they use the
              // getInitialState and componentWillMount methods for initialization.

              var initialState = this.getInitialState ? this.getInitialState() : null;
              if (process.env.NODE_ENV !== 'production') {
                // We allow auto-mocks to proceed as if they're returning null.
                if (initialState === undefined && this.getInitialState._isMockFunction) {
                  // This is probably bad practice. Consider warning here and
                  // deprecating this convenience.
                  initialState = null;
                }
              }
              !(typeof initialState === 'object' && !Array.isArray(initialState))
                ? process.env.NODE_ENV !== 'production'
                  ? invariant(
                      false,
                      '%s.getInitialState(): must return an object or null',
                      Constructor.displayName || 'ReactCompositeComponent'
                    )
                  : _prodInvariant('82', Constructor.displayName || 'ReactCompositeComponent')
                : void 0;

              this.state = initialState;
            });
            Constructor.prototype = new ReactClassComponent();
            Constructor.prototype.constructor = Constructor;
            Constructor.prototype.__reactAutoBindPairs = [];

            injectedMixins.forEach(mixSpecIntoComponent.bind(null, Constructor));

            mixSpecIntoComponent(Constructor, spec);

            // Initialize the defaultProps property after all mixins have been merged.
            if (Constructor.getDefaultProps) {
              Constructor.defaultProps = Constructor.getDefaultProps();
            }

            if (process.env.NODE_ENV !== 'production') {
              // This is a tag to indicate that the use of these method names is ok,
              // since it's used with createClass. If it's not, then it's likely a
              // mistake so we'll warn you to use the static property, property
              // initializer or constructor respectively.
              if (Constructor.getDefaultProps) {
                Constructor.getDefaultProps.isReactClassApproved = {};
              }
              if (Constructor.prototype.getInitialState) {
                Constructor.prototype.getInitialState.isReactClassApproved = {};
              }
            }

            !Constructor.prototype.render
              ? process.env.NODE_ENV !== 'production'
                ? invariant(
                    false,
                    'createClass(...): Class specification must implement a `render` method.'
                  )
                : _prodInvariant('83')
              : void 0;

            if (process.env.NODE_ENV !== 'production') {
              process.env.NODE_ENV !== 'production'
                ? warning(
                    !Constructor.prototype.componentShouldUpdate,
                    '%s has a method called ' +
                      'componentShouldUpdate(). Did you mean shouldComponentUpdate()? ' +
                      'The name is phrased as a question because the function is ' +
                      'expected to return a value.',
                    spec.displayName || 'A component'
                  )
                : void 0;
              process.env.NODE_ENV !== 'production'
                ? warning(
                    !Constructor.prototype.componentWillRecieveProps,
                    '%s has a method called ' +
                      'componentWillRecieveProps(). Did you mean componentWillReceiveProps()?',
                    spec.displayName || 'A component'
                  )
                : void 0;
            }

            // Reduce time spent doing lookups by setting these on the prototype.
            for (var methodName in ReactClassInterface) {
              if (!Constructor.prototype[methodName]) {
                Constructor.prototype[methodName] = null;
              }
            }

            return Constructor;
          },

          injection: {
            injectMixin: function (mixin) {
              injectedMixins.push(mixin);
            },
          },
        };

        module.exports = ReactClass;
        /* WEBPACK VAR INJECTION */
      }.call(exports, __webpack_require__(1)));

      /***/
    },
    /* 761 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';
      /* WEBPACK VAR INJECTION */ (function (process) {
        /**
         * Copyright 2013-present, Facebook, Inc.
         * All rights reserved.
         *
         * This source code is licensed under the BSD-style license found in the
         * LICENSE file in the root directory of this source tree. An additional grant
         * of patent rights can be found in the PATENTS file in the same directory.
         *
         */

        var ReactElement = __webpack_require__(69);

        /**
         * Create a factory that creates HTML tag elements.
         *
         * @private
         */
        var createDOMFactory = ReactElement.createFactory;
        if (process.env.NODE_ENV !== 'production') {
          var ReactElementValidator = __webpack_require__(312);
          createDOMFactory = ReactElementValidator.createFactory;
        }

        /**
         * Creates a mapping from supported HTML tags to `ReactDOMComponent` classes.
         * This is also accessible via `React.DOM`.
         *
         * @public
         */
        var ReactDOMFactories = {
          a: createDOMFactory('a'),
          abbr: createDOMFactory('abbr'),
          address: createDOMFactory('address'),
          area: createDOMFactory('area'),
          article: createDOMFactory('article'),
          aside: createDOMFactory('aside'),
          audio: createDOMFactory('audio'),
          b: createDOMFactory('b'),
          base: createDOMFactory('base'),
          bdi: createDOMFactory('bdi'),
          bdo: createDOMFactory('bdo'),
          big: createDOMFactory('big'),
          blockquote: createDOMFactory('blockquote'),
          body: createDOMFactory('body'),
          br: createDOMFactory('br'),
          button: createDOMFactory('button'),
          canvas: createDOMFactory('canvas'),
          caption: createDOMFactory('caption'),
          cite: createDOMFactory('cite'),
          code: createDOMFactory('code'),
          col: createDOMFactory('col'),
          colgroup: createDOMFactory('colgroup'),
          data: createDOMFactory('data'),
          datalist: createDOMFactory('datalist'),
          dd: createDOMFactory('dd'),
          del: createDOMFactory('del'),
          details: createDOMFactory('details'),
          dfn: createDOMFactory('dfn'),
          dialog: createDOMFactory('dialog'),
          div: createDOMFactory('div'),
          dl: createDOMFactory('dl'),
          dt: createDOMFactory('dt'),
          em: createDOMFactory('em'),
          embed: createDOMFactory('embed'),
          fieldset: createDOMFactory('fieldset'),
          figcaption: createDOMFactory('figcaption'),
          figure: createDOMFactory('figure'),
          footer: createDOMFactory('footer'),
          form: createDOMFactory('form'),
          h1: createDOMFactory('h1'),
          h2: createDOMFactory('h2'),
          h3: createDOMFactory('h3'),
          h4: createDOMFactory('h4'),
          h5: createDOMFactory('h5'),
          h6: createDOMFactory('h6'),
          head: createDOMFactory('head'),
          header: createDOMFactory('header'),
          hgroup: createDOMFactory('hgroup'),
          hr: createDOMFactory('hr'),
          html: createDOMFactory('html'),
          i: createDOMFactory('i'),
          iframe: createDOMFactory('iframe'),
          img: createDOMFactory('img'),
          input: createDOMFactory('input'),
          ins: createDOMFactory('ins'),
          kbd: createDOMFactory('kbd'),
          keygen: createDOMFactory('keygen'),
          label: createDOMFactory('label'),
          legend: createDOMFactory('legend'),
          li: createDOMFactory('li'),
          link: createDOMFactory('link'),
          main: createDOMFactory('main'),
          map: createDOMFactory('map'),
          mark: createDOMFactory('mark'),
          menu: createDOMFactory('menu'),
          menuitem: createDOMFactory('menuitem'),
          meta: createDOMFactory('meta'),
          meter: createDOMFactory('meter'),
          nav: createDOMFactory('nav'),
          noscript: createDOMFactory('noscript'),
          object: createDOMFactory('object'),
          ol: createDOMFactory('ol'),
          optgroup: createDOMFactory('optgroup'),
          option: createDOMFactory('option'),
          output: createDOMFactory('output'),
          p: createDOMFactory('p'),
          param: createDOMFactory('param'),
          picture: createDOMFactory('picture'),
          pre: createDOMFactory('pre'),
          progress: createDOMFactory('progress'),
          q: createDOMFactory('q'),
          rp: createDOMFactory('rp'),
          rt: createDOMFactory('rt'),
          ruby: createDOMFactory('ruby'),
          s: createDOMFactory('s'),
          samp: createDOMFactory('samp'),
          script: createDOMFactory('script'),
          section: createDOMFactory('section'),
          select: createDOMFactory('select'),
          small: createDOMFactory('small'),
          source: createDOMFactory('source'),
          span: createDOMFactory('span'),
          strong: createDOMFactory('strong'),
          style: createDOMFactory('style'),
          sub: createDOMFactory('sub'),
          summary: createDOMFactory('summary'),
          sup: createDOMFactory('sup'),
          table: createDOMFactory('table'),
          tbody: createDOMFactory('tbody'),
          td: createDOMFactory('td'),
          textarea: createDOMFactory('textarea'),
          tfoot: createDOMFactory('tfoot'),
          th: createDOMFactory('th'),
          thead: createDOMFactory('thead'),
          time: createDOMFactory('time'),
          title: createDOMFactory('title'),
          tr: createDOMFactory('tr'),
          track: createDOMFactory('track'),
          u: createDOMFactory('u'),
          ul: createDOMFactory('ul'),
          var: createDOMFactory('var'),
          video: createDOMFactory('video'),
          wbr: createDOMFactory('wbr'),

          // SVG
          circle: createDOMFactory('circle'),
          clipPath: createDOMFactory('clipPath'),
          defs: createDOMFactory('defs'),
          ellipse: createDOMFactory('ellipse'),
          g: createDOMFactory('g'),
          image: createDOMFactory('image'),
          line: createDOMFactory('line'),
          linearGradient: createDOMFactory('linearGradient'),
          mask: createDOMFactory('mask'),
          path: createDOMFactory('path'),
          pattern: createDOMFactory('pattern'),
          polygon: createDOMFactory('polygon'),
          polyline: createDOMFactory('polyline'),
          radialGradient: createDOMFactory('radialGradient'),
          rect: createDOMFactory('rect'),
          stop: createDOMFactory('stop'),
          svg: createDOMFactory('svg'),
          text: createDOMFactory('text'),
          tspan: createDOMFactory('tspan'),
        };

        module.exports = ReactDOMFactories;
        /* WEBPACK VAR INJECTION */
      }.call(exports, __webpack_require__(1)));

      /***/
    },
    /* 762 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';
      /* WEBPACK VAR INJECTION */ (function (process) {
        /**
         * Copyright 2013-present, Facebook, Inc.
         * All rights reserved.
         *
         * This source code is licensed under the BSD-style license found in the
         * LICENSE file in the root directory of this source tree. An additional grant
         * of patent rights can be found in the PATENTS file in the same directory.
         *
         */

        var ReactElement = __webpack_require__(69);
        var ReactPropTypeLocationNames = __webpack_require__(204);
        var ReactPropTypesSecret = __webpack_require__(313);

        var emptyFunction = __webpack_require__(28);
        var getIteratorFn = __webpack_require__(206);
        var warning = __webpack_require__(3);

        /**
         * Collection of methods that allow declaration and validation of props that are
         * supplied to React components. Example usage:
         *
         *   var Props = require('ReactPropTypes');
         *   var MyArticle = React.createClass({
         *     propTypes: {
         *       // An optional string prop named "description".
         *       description: Props.string,
         *
         *       // A required enum prop named "category".
         *       category: Props.oneOf(['News','Photos']).isRequired,
         *
         *       // A prop named "dialog" that requires an instance of Dialog.
         *       dialog: Props.instanceOf(Dialog).isRequired
         *     },
         *     render: function() { ... }
         *   });
         *
         * A more formal specification of how these methods are used:
         *
         *   type := array|bool|func|object|number|string|oneOf([...])|instanceOf(...)
         *   decl := ReactPropTypes.{type}(.isRequired)?
         *
         * Each and every declaration produces a function with the same signature. This
         * allows the creation of custom validation functions. For example:
         *
         *  var MyLink = React.createClass({
         *    propTypes: {
         *      // An optional string or URI prop named "href".
         *      href: function(props, propName, componentName) {
         *        var propValue = props[propName];
         *        if (propValue != null && typeof propValue !== 'string' &&
         *            !(propValue instanceof URI)) {
         *          return new Error(
         *            'Expected a string or an URI for ' + propName + ' in ' +
         *            componentName
         *          );
         *        }
         *      }
         *    },
         *    render: function() {...}
         *  });
         *
         * @internal
         */

        var ANONYMOUS = '<<anonymous>>';

        var ReactPropTypes = {
          array: createPrimitiveTypeChecker('array'),
          bool: createPrimitiveTypeChecker('boolean'),
          func: createPrimitiveTypeChecker('function'),
          number: createPrimitiveTypeChecker('number'),
          object: createPrimitiveTypeChecker('object'),
          string: createPrimitiveTypeChecker('string'),
          symbol: createPrimitiveTypeChecker('symbol'),

          any: createAnyTypeChecker(),
          arrayOf: createArrayOfTypeChecker,
          element: createElementTypeChecker(),
          instanceOf: createInstanceTypeChecker,
          node: createNodeChecker(),
          objectOf: createObjectOfTypeChecker,
          oneOf: createEnumTypeChecker,
          oneOfType: createUnionTypeChecker,
          shape: createShapeTypeChecker,
        };

        /**
         * inlined Object.is polyfill to avoid requiring consumers ship their own
         * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is
         */
        /*eslint-disable no-self-compare*/
        function is(x, y) {
          // SameValue algorithm
          if (x === y) {
            // Steps 1-5, 7-10
            // Steps 6.b-6.e: +0 != -0
            return x !== 0 || 1 / x === 1 / y;
          } else {
            // Step 6.a: NaN == NaN
            return x !== x && y !== y;
          }
        }
        /*eslint-enable no-self-compare*/

        /**
         * We use an Error-like object for backward compatibility as people may call
         * PropTypes directly and inspect their output. However we don't use real
         * Errors anymore. We don't inspect their stack anyway, and creating them
         * is prohibitively expensive if they are created too often, such as what
         * happens in oneOfType() for any type before the one that matched.
         */
        function PropTypeError(message) {
          this.message = message;
          this.stack = '';
        }
        // Make `instanceof Error` still work for returned errors.
        PropTypeError.prototype = Error.prototype;

        function createChainableTypeChecker(validate) {
          if (process.env.NODE_ENV !== 'production') {
            var manualPropTypeCallCache = {};
          }
          function checkType(
            isRequired,
            props,
            propName,
            componentName,
            location,
            propFullName,
            secret
          ) {
            componentName = componentName || ANONYMOUS;
            propFullName = propFullName || propName;
            if (process.env.NODE_ENV !== 'production') {
              if (secret !== ReactPropTypesSecret && typeof console !== 'undefined') {
                var cacheKey = componentName + ':' + propName;
                if (!manualPropTypeCallCache[cacheKey]) {
                  process.env.NODE_ENV !== 'production'
                    ? warning(
                        false,
                        'You are manually calling a React.PropTypes validation ' +
                          'function for the `%s` prop on `%s`. This is deprecated ' +
                          'and will not work in production with the next major version. ' +
                          'You may be seeing this warning due to a third-party PropTypes ' +
                          'library. See https://fb.me/react-warning-dont-call-proptypes ' +
                          'for details.',
                        propFullName,
                        componentName
                      )
                    : void 0;
                  manualPropTypeCallCache[cacheKey] = true;
                }
              }
            }
            if (props[propName] == null) {
              var locationName = ReactPropTypeLocationNames[location];
              if (isRequired) {
                if (props[propName] === null) {
                  return new PropTypeError(
                    'The ' +
                      locationName +
                      ' `' +
                      propFullName +
                      '` is marked as required ' +
                      ('in `' + componentName + '`, but its value is `null`.')
                  );
                }
                return new PropTypeError(
                  'The ' +
                    locationName +
                    ' `' +
                    propFullName +
                    '` is marked as required in ' +
                    ('`' + componentName + '`, but its value is `undefined`.')
                );
              }
              return null;
            } else {
              return validate(props, propName, componentName, location, propFullName);
            }
          }

          var chainedCheckType = checkType.bind(null, false);
          chainedCheckType.isRequired = checkType.bind(null, true);

          return chainedCheckType;
        }

        function createPrimitiveTypeChecker(expectedType) {
          function validate(props, propName, componentName, location, propFullName, secret) {
            var propValue = props[propName];
            var propType = getPropType(propValue);
            if (propType !== expectedType) {
              var locationName = ReactPropTypeLocationNames[location];
              // `propValue` being instance of, say, date/regexp, pass the 'object'
              // check, but we can offer a more precise error message here rather than
              // 'of type `object`'.
              var preciseType = getPreciseType(propValue);

              return new PropTypeError(
                'Invalid ' +
                  locationName +
                  ' `' +
                  propFullName +
                  '` of type ' +
                  ('`' + preciseType + '` supplied to `' + componentName + '`, expected ') +
                  ('`' + expectedType + '`.')
              );
            }
            return null;
          }
          return createChainableTypeChecker(validate);
        }

        function createAnyTypeChecker() {
          return createChainableTypeChecker(emptyFunction.thatReturns(null));
        }

        function createArrayOfTypeChecker(typeChecker) {
          function validate(props, propName, componentName, location, propFullName) {
            if (typeof typeChecker !== 'function') {
              return new PropTypeError(
                'Property `' +
                  propFullName +
                  '` of component `' +
                  componentName +
                  '` has invalid PropType notation inside arrayOf.'
              );
            }
            var propValue = props[propName];
            if (!Array.isArray(propValue)) {
              var locationName = ReactPropTypeLocationNames[location];
              var propType = getPropType(propValue);
              return new PropTypeError(
                'Invalid ' +
                  locationName +
                  ' `' +
                  propFullName +
                  '` of type ' +
                  ('`' + propType + '` supplied to `' + componentName + '`, expected an array.')
              );
            }
            for (var i = 0; i < propValue.length; i++) {
              var error = typeChecker(
                propValue,
                i,
                componentName,
                location,
                propFullName + '[' + i + ']',
                ReactPropTypesSecret
              );
              if (error instanceof Error) {
                return error;
              }
            }
            return null;
          }
          return createChainableTypeChecker(validate);
        }

        function createElementTypeChecker() {
          function validate(props, propName, componentName, location, propFullName) {
            var propValue = props[propName];
            if (!ReactElement.isValidElement(propValue)) {
              var locationName = ReactPropTypeLocationNames[location];
              var propType = getPropType(propValue);
              return new PropTypeError(
                'Invalid ' +
                  locationName +
                  ' `' +
                  propFullName +
                  '` of type ' +
                  ('`' +
                    propType +
                    '` supplied to `' +
                    componentName +
                    '`, expected a single ReactElement.')
              );
            }
            return null;
          }
          return createChainableTypeChecker(validate);
        }

        function createInstanceTypeChecker(expectedClass) {
          function validate(props, propName, componentName, location, propFullName) {
            if (!(props[propName] instanceof expectedClass)) {
              var locationName = ReactPropTypeLocationNames[location];
              var expectedClassName = expectedClass.name || ANONYMOUS;
              var actualClassName = getClassName(props[propName]);
              return new PropTypeError(
                'Invalid ' +
                  locationName +
                  ' `' +
                  propFullName +
                  '` of type ' +
                  ('`' + actualClassName + '` supplied to `' + componentName + '`, expected ') +
                  ('instance of `' + expectedClassName + '`.')
              );
            }
            return null;
          }
          return createChainableTypeChecker(validate);
        }

        function createEnumTypeChecker(expectedValues) {
          if (!Array.isArray(expectedValues)) {
            process.env.NODE_ENV !== 'production'
              ? warning(false, 'Invalid argument supplied to oneOf, expected an instance of array.')
              : void 0;
            return emptyFunction.thatReturnsNull;
          }

          function validate(props, propName, componentName, location, propFullName) {
            var propValue = props[propName];
            for (var i = 0; i < expectedValues.length; i++) {
              if (is(propValue, expectedValues[i])) {
                return null;
              }
            }

            var locationName = ReactPropTypeLocationNames[location];
            var valuesString = JSON.stringify(expectedValues);
            return new PropTypeError(
              'Invalid ' +
                locationName +
                ' `' +
                propFullName +
                '` of value `' +
                propValue +
                '` ' +
                ('supplied to `' + componentName + '`, expected one of ' + valuesString + '.')
            );
          }
          return createChainableTypeChecker(validate);
        }

        function createObjectOfTypeChecker(typeChecker) {
          function validate(props, propName, componentName, location, propFullName) {
            if (typeof typeChecker !== 'function') {
              return new PropTypeError(
                'Property `' +
                  propFullName +
                  '` of component `' +
                  componentName +
                  '` has invalid PropType notation inside objectOf.'
              );
            }
            var propValue = props[propName];
            var propType = getPropType(propValue);
            if (propType !== 'object') {
              var locationName = ReactPropTypeLocationNames[location];
              return new PropTypeError(
                'Invalid ' +
                  locationName +
                  ' `' +
                  propFullName +
                  '` of type ' +
                  ('`' + propType + '` supplied to `' + componentName + '`, expected an object.')
              );
            }
            for (var key in propValue) {
              if (propValue.hasOwnProperty(key)) {
                var error = typeChecker(
                  propValue,
                  key,
                  componentName,
                  location,
                  propFullName + '.' + key,
                  ReactPropTypesSecret
                );
                if (error instanceof Error) {
                  return error;
                }
              }
            }
            return null;
          }
          return createChainableTypeChecker(validate);
        }

        function createUnionTypeChecker(arrayOfTypeCheckers) {
          if (!Array.isArray(arrayOfTypeCheckers)) {
            process.env.NODE_ENV !== 'production'
              ? warning(
                  false,
                  'Invalid argument supplied to oneOfType, expected an instance of array.'
                )
              : void 0;
            return emptyFunction.thatReturnsNull;
          }

          function validate(props, propName, componentName, location, propFullName) {
            for (var i = 0; i < arrayOfTypeCheckers.length; i++) {
              var checker = arrayOfTypeCheckers[i];
              if (
                checker(
                  props,
                  propName,
                  componentName,
                  location,
                  propFullName,
                  ReactPropTypesSecret
                ) == null
              ) {
                return null;
              }
            }

            var locationName = ReactPropTypeLocationNames[location];
            return new PropTypeError(
              'Invalid ' +
                locationName +
                ' `' +
                propFullName +
                '` supplied to ' +
                ('`' + componentName + '`.')
            );
          }
          return createChainableTypeChecker(validate);
        }

        function createNodeChecker() {
          function validate(props, propName, componentName, location, propFullName) {
            if (!isNode(props[propName])) {
              var locationName = ReactPropTypeLocationNames[location];
              return new PropTypeError(
                'Invalid ' +
                  locationName +
                  ' `' +
                  propFullName +
                  '` supplied to ' +
                  ('`' + componentName + '`, expected a ReactNode.')
              );
            }
            return null;
          }
          return createChainableTypeChecker(validate);
        }

        function createShapeTypeChecker(shapeTypes) {
          function validate(props, propName, componentName, location, propFullName) {
            var propValue = props[propName];
            var propType = getPropType(propValue);
            if (propType !== 'object') {
              var locationName = ReactPropTypeLocationNames[location];
              return new PropTypeError(
                'Invalid ' +
                  locationName +
                  ' `' +
                  propFullName +
                  '` of type `' +
                  propType +
                  '` ' +
                  ('supplied to `' + componentName + '`, expected `object`.')
              );
            }
            for (var key in shapeTypes) {
              var checker = shapeTypes[key];
              if (!checker) {
                continue;
              }
              var error = checker(
                propValue,
                key,
                componentName,
                location,
                propFullName + '.' + key,
                ReactPropTypesSecret
              );
              if (error) {
                return error;
              }
            }
            return null;
          }
          return createChainableTypeChecker(validate);
        }

        function isNode(propValue) {
          switch (typeof propValue) {
            case 'number':
            case 'string':
            case 'undefined':
              return true;
            case 'boolean':
              return !propValue;
            case 'object':
              if (Array.isArray(propValue)) {
                return propValue.every(isNode);
              }
              if (propValue === null || ReactElement.isValidElement(propValue)) {
                return true;
              }

              var iteratorFn = getIteratorFn(propValue);
              if (iteratorFn) {
                var iterator = iteratorFn.call(propValue);
                var step;
                if (iteratorFn !== propValue.entries) {
                  while (!(step = iterator.next()).done) {
                    if (!isNode(step.value)) {
                      return false;
                    }
                  }
                } else {
                  // Iterator will provide entry [k,v] tuples rather than values.
                  while (!(step = iterator.next()).done) {
                    var entry = step.value;
                    if (entry) {
                      if (!isNode(entry[1])) {
                        return false;
                      }
                    }
                  }
                }
              } else {
                return false;
              }

              return true;
            default:
              return false;
          }
        }

        function isSymbol(propType, propValue) {
          // Native Symbol.
          if (propType === 'symbol') {
            return true;
          }

          // 19.4.3.5 Symbol.prototype[@@toStringTag] === 'Symbol'
          if (propValue['@@toStringTag'] === 'Symbol') {
            return true;
          }

          // Fallback for non-spec compliant Symbols which are polyfilled.
          if (typeof Symbol === 'function' && propValue instanceof Symbol) {
            return true;
          }

          return false;
        }

        // Equivalent of `typeof` but with special handling for array and regexp.
        function getPropType(propValue) {
          var propType = typeof propValue;
          if (Array.isArray(propValue)) {
            return 'array';
          }
          if (propValue instanceof RegExp) {
            // Old webkits (at least until Android 4.0) return 'function' rather than
            // 'object' for typeof a RegExp. We'll normalize this here so that /bla/
            // passes PropTypes.object.
            return 'object';
          }
          if (isSymbol(propType, propValue)) {
            return 'symbol';
          }
          return propType;
        }

        // This handles more types than `getPropType`. Only used for error messages.
        // See `createPrimitiveTypeChecker`.
        function getPreciseType(propValue) {
          var propType = getPropType(propValue);
          if (propType === 'object') {
            if (propValue instanceof Date) {
              return 'date';
            } else if (propValue instanceof RegExp) {
              return 'regexp';
            }
          }
          return propType;
        }

        // Returns class name of the object, if any.
        function getClassName(propValue) {
          if (!propValue.constructor || !propValue.constructor.name) {
            return ANONYMOUS;
          }
          return propValue.constructor.name;
        }

        module.exports = ReactPropTypes;
        /* WEBPACK VAR INJECTION */
      }.call(exports, __webpack_require__(1)));

      /***/
    },
    /* 763 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';
      /**
       * Copyright 2013-present, Facebook, Inc.
       * All rights reserved.
       *
       * This source code is licensed under the BSD-style license found in the
       * LICENSE file in the root directory of this source tree. An additional grant
       * of patent rights can be found in the PATENTS file in the same directory.
       *
       */

      var _assign = __webpack_require__(12);

      var ReactComponent = __webpack_require__(202);
      var ReactNoopUpdateQueue = __webpack_require__(203);

      var emptyObject = __webpack_require__(94);

      /**
       * Base class helpers for the updating state of a component.
       */
      function ReactPureComponent(props, context, updater) {
        // Duplicated from ReactComponent.
        this.props = props;
        this.context = context;
        this.refs = emptyObject;
        // We initialize the default updater but the real one gets injected by the
        // renderer.
        this.updater = updater || ReactNoopUpdateQueue;
      }

      function ComponentDummy() {}
      ComponentDummy.prototype = ReactComponent.prototype;
      ReactPureComponent.prototype = new ComponentDummy();
      ReactPureComponent.prototype.constructor = ReactPureComponent;
      // Avoid an extra prototype jump for these methods.
      _assign(ReactPureComponent.prototype, ReactComponent.prototype);
      ReactPureComponent.prototype.isPureReactComponent = true;

      module.exports = ReactPureComponent;

      /***/
    },
    /* 764 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';
      /**
       * Copyright 2013-present, Facebook, Inc.
       * All rights reserved.
       *
       * This source code is licensed under the BSD-style license found in the
       * LICENSE file in the root directory of this source tree. An additional grant
       * of patent rights can be found in the PATENTS file in the same directory.
       *
       */

      module.exports = '15.4.2';

      /***/
    },
    /* 765 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';
      /* WEBPACK VAR INJECTION */ (function (process) {
        /**
         * Copyright 2013-present, Facebook, Inc.
         * All rights reserved.
         *
         * This source code is licensed under the BSD-style license found in the
         * LICENSE file in the root directory of this source tree. An additional grant
         * of patent rights can be found in the PATENTS file in the same directory.
         *
         */

        var _prodInvariant = __webpack_require__(70);

        var ReactPropTypeLocationNames = __webpack_require__(204);
        var ReactPropTypesSecret = __webpack_require__(313);

        var invariant = __webpack_require__(2);
        var warning = __webpack_require__(3);

        var ReactComponentTreeHook;

        if (typeof process !== 'undefined' && process.env && process.env.NODE_ENV === 'test') {
          // Temporary hack.
          // Inline requires don't work well with Jest:
          // https://github.com/facebook/react/issues/7240
          // Remove the inline requires when we don't need them anymore:
          // https://github.com/facebook/react/pull/7178
          ReactComponentTreeHook = __webpack_require__(29);
        }

        var loggedTypeFailures = {};

        /**
         * Assert that the values match with the type specs.
         * Error messages are memorized and will only be shown once.
         *
         * @param {object} typeSpecs Map of name to a ReactPropType
         * @param {object} values Runtime values that need to be type-checked
         * @param {string} location e.g. "prop", "context", "child context"
         * @param {string} componentName Name of the component for error messages.
         * @param {?object} element The React element that is being type-checked
         * @param {?number} debugID The React component instance that is being type-checked
         * @private
         */
        function checkReactTypeSpec(typeSpecs, values, location, componentName, element, debugID) {
          for (var typeSpecName in typeSpecs) {
            if (typeSpecs.hasOwnProperty(typeSpecName)) {
              var error;
              // Prop type validation may throw. In case they do, we don't want to
              // fail the render phase where it didn't fail before. So we log it.
              // After these have been cleaned up, we'll let them throw.
              try {
                // This is intentionally an invariant that gets caught. It's the same
                // behavior as without this statement except with a better message.
                !(typeof typeSpecs[typeSpecName] === 'function')
                  ? process.env.NODE_ENV !== 'production'
                    ? invariant(
                        false,
                        '%s: %s type `%s` is invalid; it must be a function, usually from React.PropTypes.',
                        componentName || 'React class',
                        ReactPropTypeLocationNames[location],
                        typeSpecName
                      )
                    : _prodInvariant(
                        '84',
                        componentName || 'React class',
                        ReactPropTypeLocationNames[location],
                        typeSpecName
                      )
                  : void 0;
                error = typeSpecs[typeSpecName](
                  values,
                  typeSpecName,
                  componentName,
                  location,
                  null,
                  ReactPropTypesSecret
                );
              } catch (ex) {
                error = ex;
              }
              process.env.NODE_ENV !== 'production'
                ? warning(
                    !error || error instanceof Error,
                    '%s: type specification of %s `%s` is invalid; the type checker ' +
                      'function must return `null` or an `Error` but returned a %s. ' +
                      'You may have forgotten to pass an argument to the type checker ' +
                      'creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and ' +
                      'shape all require an argument).',
                    componentName || 'React class',
                    ReactPropTypeLocationNames[location],
                    typeSpecName,
                    typeof error
                  )
                : void 0;
              if (error instanceof Error && !(error.message in loggedTypeFailures)) {
                // Only monitor this failure once because there tends to be a lot of the
                // same error.
                loggedTypeFailures[error.message] = true;

                var componentStackInfo = '';

                if (process.env.NODE_ENV !== 'production') {
                  if (!ReactComponentTreeHook) {
                    ReactComponentTreeHook = __webpack_require__(29);
                  }
                  if (debugID !== null) {
                    componentStackInfo = ReactComponentTreeHook.getStackAddendumByID(debugID);
                  } else if (element !== null) {
                    componentStackInfo = ReactComponentTreeHook.getCurrentStackAddendum(element);
                  }
                }

                process.env.NODE_ENV !== 'production'
                  ? warning(
                      false,
                      'Failed %s type: %s%s',
                      location,
                      error.message,
                      componentStackInfo
                    )
                  : void 0;
              }
            }
          }
        }

        module.exports = checkReactTypeSpec;
        /* WEBPACK VAR INJECTION */
      }.call(exports, __webpack_require__(1)));

      /***/
    },
    /* 766 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';
      /* WEBPACK VAR INJECTION */ (function (process) {
        /**
         * Copyright 2013-present, Facebook, Inc.
         * All rights reserved.
         *
         * This source code is licensed under the BSD-style license found in the
         * LICENSE file in the root directory of this source tree. An additional grant
         * of patent rights can be found in the PATENTS file in the same directory.
         *
         */

        var _prodInvariant = __webpack_require__(70);

        var ReactElement = __webpack_require__(69);

        var invariant = __webpack_require__(2);

        /**
         * Returns the first child in a collection of children and verifies that there
         * is only one child in the collection.
         *
         * See https://facebook.github.io/react/docs/top-level-api.html#react.children.only
         *
         * The current implementation of this function assumes that a single child gets
         * passed without a wrapper, but the purpose of this helper function is to
         * abstract away the particular structure of children.
         *
         * @param {?object} children Child collection structure.
         * @return {ReactElement} The first and only `ReactElement` contained in the
         * structure.
         */
        function onlyChild(children) {
          !ReactElement.isValidElement(children)
            ? process.env.NODE_ENV !== 'production'
              ? invariant(
                  false,
                  'React.Children.only expected to receive a single React element child.'
                )
              : _prodInvariant('143')
            : void 0;
          return children;
        }

        module.exports = onlyChild;
        /* WEBPACK VAR INJECTION */
      }.call(exports, __webpack_require__(1)));

      /***/
    },
    /* 767 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';
      /* WEBPACK VAR INJECTION */ (function (process) {
        /**
         * Copyright 2013-present, Facebook, Inc.
         * All rights reserved.
         *
         * This source code is licensed under the BSD-style license found in the
         * LICENSE file in the root directory of this source tree. An additional grant
         * of patent rights can be found in the PATENTS file in the same directory.
         *
         */

        var _prodInvariant = __webpack_require__(70);

        var ReactCurrentOwner = __webpack_require__(42);
        var REACT_ELEMENT_TYPE = __webpack_require__(311);

        var getIteratorFn = __webpack_require__(206);
        var invariant = __webpack_require__(2);
        var KeyEscapeUtils = __webpack_require__(757);
        var warning = __webpack_require__(3);

        var SEPARATOR = '.';
        var SUBSEPARATOR = ':';

        /**
         * This is inlined from ReactElement since this file is shared between
         * isomorphic and renderers. We could extract this to a
         *
         */

        /**
         * TODO: Test that a single child and an array with one item have the same key
         * pattern.
         */

        var didWarnAboutMaps = false;

        /**
         * Generate a key string that identifies a component within a set.
         *
         * @param {*} component A component that could contain a manual key.
         * @param {number} index Index that is used if a manual key is not provided.
         * @return {string}
         */
        function getComponentKey(component, index) {
          // Do some typechecking here since we call this blindly. We want to ensure
          // that we don't block potential future ES APIs.
          if (component && typeof component === 'object' && component.key != null) {
            // Explicit key
            return KeyEscapeUtils.escape(component.key);
          }
          // Implicit key determined by the index in the set
          return index.toString(36);
        }

        /**
         * @param {?*} children Children tree container.
         * @param {!string} nameSoFar Name of the key path so far.
         * @param {!function} callback Callback to invoke with each child found.
         * @param {?*} traverseContext Used to pass information throughout the traversal
         * process.
         * @return {!number} The number of children in this subtree.
         */
        function traverseAllChildrenImpl(children, nameSoFar, callback, traverseContext) {
          var type = typeof children;

          if (type === 'undefined' || type === 'boolean') {
            // All of the above are perceived as null.
            children = null;
          }

          if (
            children === null ||
            type === 'string' ||
            type === 'number' ||
            // The following is inlined from ReactElement. This means we can optimize
            // some checks. React Fiber also inlines this logic for similar purposes.
            (type === 'object' && children.$$typeof === REACT_ELEMENT_TYPE)
          ) {
            callback(
              traverseContext,
              children,
              // If it's the only child, treat the name as if it was wrapped in an array
              // so that it's consistent if the number of children grows.
              nameSoFar === '' ? SEPARATOR + getComponentKey(children, 0) : nameSoFar
            );
            return 1;
          }

          var child;
          var nextName;
          var subtreeCount = 0; // Count of children found in the current subtree.
          var nextNamePrefix = nameSoFar === '' ? SEPARATOR : nameSoFar + SUBSEPARATOR;

          if (Array.isArray(children)) {
            for (var i = 0; i < children.length; i++) {
              child = children[i];
              nextName = nextNamePrefix + getComponentKey(child, i);
              subtreeCount += traverseAllChildrenImpl(child, nextName, callback, traverseContext);
            }
          } else {
            var iteratorFn = getIteratorFn(children);
            if (iteratorFn) {
              var iterator = iteratorFn.call(children);
              var step;
              if (iteratorFn !== children.entries) {
                var ii = 0;
                while (!(step = iterator.next()).done) {
                  child = step.value;
                  nextName = nextNamePrefix + getComponentKey(child, ii++);
                  subtreeCount += traverseAllChildrenImpl(
                    child,
                    nextName,
                    callback,
                    traverseContext
                  );
                }
              } else {
                if (process.env.NODE_ENV !== 'production') {
                  var mapsAsChildrenAddendum = '';
                  if (ReactCurrentOwner.current) {
                    var mapsAsChildrenOwnerName = ReactCurrentOwner.current.getName();
                    if (mapsAsChildrenOwnerName) {
                      mapsAsChildrenAddendum =
                        ' Check the render method of `' + mapsAsChildrenOwnerName + '`.';
                    }
                  }
                  process.env.NODE_ENV !== 'production'
                    ? warning(
                        didWarnAboutMaps,
                        'Using Maps as children is not yet fully supported. It is an ' +
                          'experimental feature that might be removed. Convert it to a ' +
                          'sequence / iterable of keyed ReactElements instead.%s',
                        mapsAsChildrenAddendum
                      )
                    : void 0;
                  didWarnAboutMaps = true;
                }
                // Iterator will provide entry [k,v] tuples rather than values.
                while (!(step = iterator.next()).done) {
                  var entry = step.value;
                  if (entry) {
                    child = entry[1];
                    nextName =
                      nextNamePrefix +
                      KeyEscapeUtils.escape(entry[0]) +
                      SUBSEPARATOR +
                      getComponentKey(child, 0);
                    subtreeCount += traverseAllChildrenImpl(
                      child,
                      nextName,
                      callback,
                      traverseContext
                    );
                  }
                }
              }
            } else if (type === 'object') {
              var addendum = '';
              if (process.env.NODE_ENV !== 'production') {
                addendum =
                  ' If you meant to render a collection of children, use an array ' +
                  'instead or wrap the object using createFragment(object) from the ' +
                  'React add-ons.';
                if (children._isReactElement) {
                  addendum =
                    " It looks like you're using an element created by a different " +
                    'version of React. Make sure to use only one copy of React.';
                }
                if (ReactCurrentOwner.current) {
                  var name = ReactCurrentOwner.current.getName();
                  if (name) {
                    addendum += ' Check the render method of `' + name + '`.';
                  }
                }
              }
              var childrenString = String(children);
              true
                ? process.env.NODE_ENV !== 'production'
                  ? invariant(
                      false,
                      'Objects are not valid as a React child (found: %s).%s',
                      childrenString === '[object Object]'
                        ? 'object with keys {' + Object.keys(children).join(', ') + '}'
                        : childrenString,
                      addendum
                    )
                  : _prodInvariant(
                      '31',
                      childrenString === '[object Object]'
                        ? 'object with keys {' + Object.keys(children).join(', ') + '}'
                        : childrenString,
                      addendum
                    )
                : void 0;
            }
          }

          return subtreeCount;
        }

        /**
         * Traverses children that are typically specified as `props.children`, but
         * might also be specified through attributes:
         *
         * - `traverseAllChildren(this.props.children, ...)`
         * - `traverseAllChildren(this.props.leftPanelChildren, ...)`
         *
         * The `traverseContext` is an optional argument that is passed through the
         * entire traversal. It can be used to store accumulations or anything else that
         * the callback might find relevant.
         *
         * @param {?*} children Children tree object.
         * @param {!function} callback To invoke upon traversing each child.
         * @param {?*} traverseContext Context for traversal.
         * @return {!number} The number of children in this subtree.
         */
        function traverseAllChildren(children, callback, traverseContext) {
          if (children == null) {
            return 0;
          }

          return traverseAllChildrenImpl(children, '', callback, traverseContext);
        }

        module.exports = traverseAllChildren;
        /* WEBPACK VAR INJECTION */
      }.call(exports, __webpack_require__(1)));

      /***/
    },
    /* 768 */
    /***/ function (module, exports, __webpack_require__) {
      module.exports = __webpack_require__(71);

      /***/
    },
    /* 769 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';

      var Buffer = __webpack_require__(43).Buffer;
      /*<replacement>*/
      var bufferShim = __webpack_require__(131);
      /*</replacement>*/

      module.exports = BufferList;

      function BufferList() {
        this.head = null;
        this.tail = null;
        this.length = 0;
      }

      BufferList.prototype.push = function (v) {
        var entry = { data: v, next: null };
        if (this.length > 0) this.tail.next = entry;
        else this.head = entry;
        this.tail = entry;
        ++this.length;
      };

      BufferList.prototype.unshift = function (v) {
        var entry = { data: v, next: this.head };
        if (this.length === 0) this.tail = entry;
        this.head = entry;
        ++this.length;
      };

      BufferList.prototype.shift = function () {
        if (this.length === 0) return;
        var ret = this.head.data;
        if (this.length === 1) this.head = this.tail = null;
        else this.head = this.head.next;
        --this.length;
        return ret;
      };

      BufferList.prototype.clear = function () {
        this.head = this.tail = null;
        this.length = 0;
      };

      BufferList.prototype.join = function (s) {
        if (this.length === 0) return '';
        var p = this.head;
        var ret = '' + p.data;
        while ((p = p.next)) {
          ret += s + p.data;
        }
        return ret;
      };

      BufferList.prototype.concat = function (n) {
        if (this.length === 0) return bufferShim.alloc(0);
        if (this.length === 1) return this.head.data;
        var ret = bufferShim.allocUnsafe(n >>> 0);
        var p = this.head;
        var i = 0;
        while (p) {
          p.data.copy(ret, i);
          i += p.data.length;
          p = p.next;
        }
        return ret;
      };

      /***/
    },
    /* 770 */
    /***/ function (module, exports, __webpack_require__) {
      module.exports = __webpack_require__(314);

      /***/
    },
    /* 771 */
    /***/ function (module, exports, __webpack_require__) {
      /* WEBPACK VAR INJECTION */ (function (process) {
        var Stream = (function () {
          try {
            return __webpack_require__(126); // hack to fix a circular dependency issue when used with browserify
          } catch (_) {}
        })();
        exports = module.exports = __webpack_require__(315);
        exports.Stream = Stream || exports;
        exports.Readable = exports;
        exports.Writable = __webpack_require__(208);
        exports.Duplex = __webpack_require__(71);
        exports.Transform = __webpack_require__(207);
        exports.PassThrough = __webpack_require__(314);

        if (!process.browser && process.env.READABLE_STREAM === 'disable' && Stream) {
          module.exports = Stream;
        }

        /* WEBPACK VAR INJECTION */
      }.call(exports, __webpack_require__(1)));

      /***/
    },
    /* 772 */
    /***/ function (module, exports, __webpack_require__) {
      module.exports = __webpack_require__(207);

      /***/
    },
    /* 773 */
    /***/ function (module, exports, __webpack_require__) {
      module.exports = __webpack_require__(208);

      /***/
    },
    /* 774 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';
      /* WEBPACK VAR INJECTION */ (function (process) {
        Object.defineProperty(exports, '__esModule', {
          value: true,
        });

        var _immutable = __webpack_require__(82);

        var _immutable2 = _interopRequireDefault(_immutable);

        var _utilities = __webpack_require__(777);

        function _interopRequireDefault(obj) {
          return obj && obj.__esModule ? obj : { default: obj };
        }

        exports.default = function (reducers) {
          var getDefaultState =
            arguments.length > 1 && arguments[1] !== undefined
              ? arguments[1]
              : _immutable2.default.Map;

          var reducerKeys = Object.keys(reducers);

          // eslint-disable-next-line space-infix-ops
          return function () {
            var inputState =
              arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : getDefaultState();
            var action = arguments[1];

            // eslint-disable-next-line no-process-env
            if (process.env.NODE_ENV !== 'production') {
              var warningMessage = (0, _utilities.getUnexpectedInvocationParameterMessage)(
                inputState,
                reducers,
                action
              );

              if (warningMessage) {
                // eslint-disable-next-line no-console
                console.error(warningMessage);
              }
            }

            return inputState.withMutations(function (temporaryState) {
              reducerKeys.forEach(function (reducerName) {
                var reducer = reducers[reducerName];
                var currentDomainState = temporaryState.get(reducerName);
                var nextDomainState = reducer(currentDomainState, action);

                (0, _utilities.validateNextState)(nextDomainState, reducerName, action);

                temporaryState.set(reducerName, nextDomainState);
              });
            });
          };
        };

        module.exports = exports['default'];
        //# sourceMappingURL=combineReducers.js.map
        /* WEBPACK VAR INJECTION */
      }.call(exports, __webpack_require__(1)));

      /***/
    },
    /* 775 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true,
      });
      exports.combineReducers = undefined;

      var _combineReducers2 = __webpack_require__(774);

      var _combineReducers3 = _interopRequireDefault(_combineReducers2);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      exports.combineReducers = _combineReducers3.default;
      //# sourceMappingURL=index.js.map

      /***/
    },
    /* 776 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true,
      });

      var _immutable = __webpack_require__(82);

      var _immutable2 = _interopRequireDefault(_immutable);

      var _getStateName = __webpack_require__(316);

      var _getStateName2 = _interopRequireDefault(_getStateName);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      exports.default = function (state, reducers, action) {
        var reducerNames = Object.keys(reducers);

        if (!reducerNames.length) {
          return 'Store does not have a valid reducer. Make sure the argument passed to combineReducers is an object whose values are reducers.';
        }

        var stateName = (0, _getStateName2.default)(action);

        if (!_immutable2.default.Iterable.isIterable(state)) {
          return (
            'The ' +
            stateName +
            ' is of unexpected type. Expected argument to be an instance of Immutable.Iterable with the following properties: "' +
            reducerNames.join('", "') +
            '".'
          );
        }

        var unexpectedStatePropertyNames = state
          .keySeq()
          .toArray()
          .filter(function (name) {
            return !reducers.hasOwnProperty(name);
          });

        if (unexpectedStatePropertyNames.length > 0) {
          return (
            'Unexpected ' +
            (unexpectedStatePropertyNames.length === 1 ? 'property' : 'properties') +
            ' "' +
            unexpectedStatePropertyNames.join('", "') +
            '" found in ' +
            stateName +
            '. Expected to find one of the known reducer property names instead: "' +
            reducerNames.join('", "') +
            '". Unexpected properties will be ignored.'
          );
        }

        return null;
      };

      module.exports = exports['default'];
      //# sourceMappingURL=getUnexpectedInvocationParameterMessage.js.map

      /***/
    },
    /* 777 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true,
      });
      exports.validateNextState = exports.getUnexpectedInvocationParameterMessage = exports.getStateName = undefined;

      var _getStateName2 = __webpack_require__(316);

      var _getStateName3 = _interopRequireDefault(_getStateName2);

      var _getUnexpectedInvocationParameterMessage2 = __webpack_require__(776);

      var _getUnexpectedInvocationParameterMessage3 = _interopRequireDefault(
        _getUnexpectedInvocationParameterMessage2
      );

      var _validateNextState2 = __webpack_require__(778);

      var _validateNextState3 = _interopRequireDefault(_validateNextState2);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      exports.getStateName = _getStateName3.default;
      exports.getUnexpectedInvocationParameterMessage =
        _getUnexpectedInvocationParameterMessage3.default;
      exports.validateNextState = _validateNextState3.default;
      //# sourceMappingURL=index.js.map

      /***/
    },
    /* 778 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true,
      });

      exports.default = function (nextState, reducerName, action) {
        // eslint-disable-next-line no-undefined
        if (nextState === undefined) {
          throw new Error(
            'Reducer "' +
              reducerName +
              '" returned undefined when handling "' +
              action.type +
              '" action. To ignore an action, you must explicitly return the previous state.'
          );
        }
      };

      module.exports = exports['default'];
      //# sourceMappingURL=validateNextState.js.map

      /***/
    },
    /* 779 */
    /***/ function (module, __webpack_exports__, __webpack_require__) {
      'use strict';
      /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__compose__ = __webpack_require__(317);
      /* harmony export (immutable) */ __webpack_exports__['a'] = applyMiddleware;
      var _extends =
        Object.assign ||
        function (target) {
          for (var i = 1; i < arguments.length; i++) {
            var source = arguments[i];
            for (var key in source) {
              if (Object.prototype.hasOwnProperty.call(source, key)) {
                target[key] = source[key];
              }
            }
          }
          return target;
        };

      /**
       * Creates a store enhancer that applies middleware to the dispatch method
       * of the Redux store. This is handy for a variety of tasks, such as expressing
       * asynchronous actions in a concise manner, or logging every action payload.
       *
       * See `redux-thunk` package as an example of the Redux middleware.
       *
       * Because middleware is potentially asynchronous, this should be the first
       * store enhancer in the composition chain.
       *
       * Note that each middleware will be given the `dispatch` and `getState` functions
       * as named arguments.
       *
       * @param {...Function} middlewares The middleware chain to be applied.
       * @returns {Function} A store enhancer applying the middleware.
       */
      function applyMiddleware() {
        for (
          var _len = arguments.length, middlewares = Array(_len), _key = 0;
          _key < _len;
          _key++
        ) {
          middlewares[_key] = arguments[_key];
        }

        return function (createStore) {
          return function (reducer, preloadedState, enhancer) {
            var store = createStore(reducer, preloadedState, enhancer);
            var _dispatch = store.dispatch;
            var chain = [];

            var middlewareAPI = {
              getState: store.getState,
              dispatch: function dispatch(action) {
                return _dispatch(action);
              },
            };
            chain = middlewares.map(function (middleware) {
              return middleware(middlewareAPI);
            });
            _dispatch = __WEBPACK_IMPORTED_MODULE_0__compose__['a' /* default */].apply(
              undefined,
              chain
            )(store.dispatch);

            return _extends({}, store, {
              dispatch: _dispatch,
            });
          };
        };
      }

      /***/
    },
    /* 780 */
    /***/ function (module, __webpack_exports__, __webpack_require__) {
      'use strict';
      /* harmony export (immutable) */ __webpack_exports__['a'] = bindActionCreators;
      function bindActionCreator(actionCreator, dispatch) {
        return function () {
          return dispatch(actionCreator.apply(undefined, arguments));
        };
      }

      /**
       * Turns an object whose values are action creators, into an object with the
       * same keys, but with every function wrapped into a `dispatch` call so they
       * may be invoked directly. This is just a convenience method, as you can call
       * `store.dispatch(MyActionCreators.doSomething())` yourself just fine.
       *
       * For convenience, you can also pass a single function as the first argument,
       * and get a function in return.
       *
       * @param {Function|Object} actionCreators An object whose values are action
       * creator functions. One handy way to obtain it is to use ES6 `import * as`
       * syntax. You may also pass a single function.
       *
       * @param {Function} dispatch The `dispatch` function available on your Redux
       * store.
       *
       * @returns {Function|Object} The object mimicking the original object, but with
       * every action creator wrapped into the `dispatch` call. If you passed a
       * function as `actionCreators`, the return value will also be a single
       * function.
       */
      function bindActionCreators(actionCreators, dispatch) {
        if (typeof actionCreators === 'function') {
          return bindActionCreator(actionCreators, dispatch);
        }

        if (typeof actionCreators !== 'object' || actionCreators === null) {
          throw new Error(
            'bindActionCreators expected an object or a function, instead received ' +
              (actionCreators === null ? 'null' : typeof actionCreators) +
              '. ' +
              'Did you write "import ActionCreators from" instead of "import * as ActionCreators from"?'
          );
        }

        var keys = Object.keys(actionCreators);
        var boundActionCreators = {};
        for (var i = 0; i < keys.length; i++) {
          var key = keys[i];
          var actionCreator = actionCreators[key];
          if (typeof actionCreator === 'function') {
            boundActionCreators[key] = bindActionCreator(actionCreator, dispatch);
          }
        }
        return boundActionCreators;
      }

      /***/
    },
    /* 781 */
    /***/ function (module, __webpack_exports__, __webpack_require__) {
      'use strict';
      /* WEBPACK VAR INJECTION */ (function (process) {
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__createStore__ = __webpack_require__(
          318
        );
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_lodash_es_isPlainObject__ = __webpack_require__(
          174
        );
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__utils_warning__ = __webpack_require__(
          320
        );
        /* harmony export (immutable) */ __webpack_exports__['a'] = combineReducers;

        function getUndefinedStateErrorMessage(key, action) {
          var actionType = action && action.type;
          var actionName = (actionType && '"' + actionType.toString() + '"') || 'an action';

          return (
            'Given action ' +
            actionName +
            ', reducer "' +
            key +
            '" returned undefined. ' +
            'To ignore an action, you must explicitly return the previous state.'
          );
        }

        function getUnexpectedStateShapeWarningMessage(
          inputState,
          reducers,
          action,
          unexpectedKeyCache
        ) {
          var reducerKeys = Object.keys(reducers);
          var argumentName =
            action &&
            action.type === __WEBPACK_IMPORTED_MODULE_0__createStore__['b' /* ActionTypes */].INIT
              ? 'preloadedState argument passed to createStore'
              : 'previous state received by the reducer';

          if (reducerKeys.length === 0) {
            return (
              'Store does not have a valid reducer. Make sure the argument passed ' +
              'to combineReducers is an object whose values are reducers.'
            );
          }

          if (
            !__webpack_require__.i(
              __WEBPACK_IMPORTED_MODULE_1_lodash_es_isPlainObject__['a' /* default */]
            )(inputState)
          ) {
            return (
              'The ' +
              argumentName +
              ' has unexpected type of "' +
              {}.toString.call(inputState).match(/\s([a-z|A-Z]+)/)[1] +
              '". Expected argument to be an object with the following ' +
              ('keys: "' + reducerKeys.join('", "') + '"')
            );
          }

          var unexpectedKeys = Object.keys(inputState).filter(function (key) {
            return !reducers.hasOwnProperty(key) && !unexpectedKeyCache[key];
          });

          unexpectedKeys.forEach(function (key) {
            unexpectedKeyCache[key] = true;
          });

          if (unexpectedKeys.length > 0) {
            return (
              'Unexpected ' +
              (unexpectedKeys.length > 1 ? 'keys' : 'key') +
              ' ' +
              ('"' + unexpectedKeys.join('", "') + '" found in ' + argumentName + '. ') +
              'Expected to find one of the known reducer keys instead: ' +
              ('"' + reducerKeys.join('", "') + '". Unexpected keys will be ignored.')
            );
          }
        }

        function assertReducerSanity(reducers) {
          Object.keys(reducers).forEach(function (key) {
            var reducer = reducers[key];
            var initialState = reducer(undefined, {
              type: __WEBPACK_IMPORTED_MODULE_0__createStore__['b' /* ActionTypes */].INIT,
            });

            if (typeof initialState === 'undefined') {
              throw new Error(
                'Reducer "' +
                  key +
                  '" returned undefined during initialization. ' +
                  'If the state passed to the reducer is undefined, you must ' +
                  'explicitly return the initial state. The initial state may ' +
                  'not be undefined.'
              );
            }

            var type =
              '@@redux/PROBE_UNKNOWN_ACTION_' +
              Math.random().toString(36).substring(7).split('').join('.');
            if (typeof reducer(undefined, { type: type }) === 'undefined') {
              throw new Error(
                'Reducer "' +
                  key +
                  '" returned undefined when probed with a random type. ' +
                  ("Don't try to handle " +
                    __WEBPACK_IMPORTED_MODULE_0__createStore__['b' /* ActionTypes */].INIT +
                    ' or other actions in "redux/*" ') +
                  'namespace. They are considered private. Instead, you must return the ' +
                  'current state for any unknown actions, unless it is undefined, ' +
                  'in which case you must return the initial state, regardless of the ' +
                  'action type. The initial state may not be undefined.'
              );
            }
          });
        }

        /**
         * Turns an object whose values are different reducer functions, into a single
         * reducer function. It will call every child reducer, and gather their results
         * into a single state object, whose keys correspond to the keys of the passed
         * reducer functions.
         *
         * @param {Object} reducers An object whose values correspond to different
         * reducer functions that need to be combined into one. One handy way to obtain
         * it is to use ES6 `import * as reducers` syntax. The reducers may never return
         * undefined for any action. Instead, they should return their initial state
         * if the state passed to them was undefined, and the current state for any
         * unrecognized action.
         *
         * @returns {Function} A reducer function that invokes every reducer inside the
         * passed object, and builds a state object with the same shape.
         */
        function combineReducers(reducers) {
          var reducerKeys = Object.keys(reducers);
          var finalReducers = {};
          for (var i = 0; i < reducerKeys.length; i++) {
            var key = reducerKeys[i];

            if (process.env.NODE_ENV !== 'production') {
              if (typeof reducers[key] === 'undefined') {
                __webpack_require__.i(
                  __WEBPACK_IMPORTED_MODULE_2__utils_warning__['a' /* default */]
                )('No reducer provided for key "' + key + '"');
              }
            }

            if (typeof reducers[key] === 'function') {
              finalReducers[key] = reducers[key];
            }
          }
          var finalReducerKeys = Object.keys(finalReducers);

          if (process.env.NODE_ENV !== 'production') {
            var unexpectedKeyCache = {};
          }

          var sanityError;
          try {
            assertReducerSanity(finalReducers);
          } catch (e) {
            sanityError = e;
          }

          return function combination() {
            var state = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];
            var action = arguments[1];

            if (sanityError) {
              throw sanityError;
            }

            if (process.env.NODE_ENV !== 'production') {
              var warningMessage = getUnexpectedStateShapeWarningMessage(
                state,
                finalReducers,
                action,
                unexpectedKeyCache
              );
              if (warningMessage) {
                __webpack_require__.i(
                  __WEBPACK_IMPORTED_MODULE_2__utils_warning__['a' /* default */]
                )(warningMessage);
              }
            }

            var hasChanged = false;
            var nextState = {};
            for (var i = 0; i < finalReducerKeys.length; i++) {
              var key = finalReducerKeys[i];
              var reducer = finalReducers[key];
              var previousStateForKey = state[key];
              var nextStateForKey = reducer(previousStateForKey, action);
              if (typeof nextStateForKey === 'undefined') {
                var errorMessage = getUndefinedStateErrorMessage(key, action);
                throw new Error(errorMessage);
              }
              nextState[key] = nextStateForKey;
              hasChanged = hasChanged || nextStateForKey !== previousStateForKey;
            }
            return hasChanged ? nextState : state;
          };
        }
        /* WEBPACK VAR INJECTION */
      }.call(__webpack_exports__, __webpack_require__(1)));

      /***/
    },
    /* 782 */
    /***/ function (module, exports, __webpack_require__) {
      /* WEBPACK VAR INJECTION */ (function (global, process) {
        /**
         * Copyright (c) 2014, Facebook, Inc.
         * All rights reserved.
         *
         * This source code is licensed under the BSD-style license found in the
         * https://raw.github.com/facebook/regenerator/master/LICENSE file. An
         * additional grant of patent rights can be found in the PATENTS file in
         * the same directory.
         */

        !(function (global) {
          'use strict';

          var Op = Object.prototype;
          var hasOwn = Op.hasOwnProperty;
          var undefined; // More compressible than void 0.
          var $Symbol = typeof Symbol === 'function' ? Symbol : {};
          var iteratorSymbol = $Symbol.iterator || '@@iterator';
          var toStringTagSymbol = $Symbol.toStringTag || '@@toStringTag';

          var inModule = typeof module === 'object';
          var runtime = global.regeneratorRuntime;
          if (runtime) {
            if (inModule) {
              // If regeneratorRuntime is defined globally and we're in a module,
              // make the exports object identical to regeneratorRuntime.
              module.exports = runtime;
            }
            // Don't bother evaluating the rest of this file if the runtime was
            // already defined globally.
            return;
          }

          // Define the runtime globally (as expected by generated code) as either
          // module.exports (if we're in a module) or a new, empty object.
          runtime = global.regeneratorRuntime = inModule ? module.exports : {};

          function wrap(innerFn, outerFn, self, tryLocsList) {
            // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.
            var protoGenerator =
              outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;
            var generator = Object.create(protoGenerator.prototype);
            var context = new Context(tryLocsList || []);

            // The ._invoke method unifies the implementations of the .next,
            // .throw, and .return methods.
            generator._invoke = makeInvokeMethod(innerFn, self, context);

            return generator;
          }
          runtime.wrap = wrap;

          // Try/catch helper to minimize deoptimizations. Returns a completion
          // record like context.tryEntries[i].completion. This interface could
          // have been (and was previously) designed to take a closure to be
          // invoked without arguments, but in all the cases we care about we
          // already have an existing method we want to call, so there's no need
          // to create a new function object. We can even get away with assuming
          // the method takes exactly one argument, since that happens to be true
          // in every case, so we don't have to touch the arguments object. The
          // only additional allocation required is the completion record, which
          // has a stable shape and so hopefully should be cheap to allocate.
          function tryCatch(fn, obj, arg) {
            try {
              return { type: 'normal', arg: fn.call(obj, arg) };
            } catch (err) {
              return { type: 'throw', arg: err };
            }
          }

          var GenStateSuspendedStart = 'suspendedStart';
          var GenStateSuspendedYield = 'suspendedYield';
          var GenStateExecuting = 'executing';
          var GenStateCompleted = 'completed';

          // Returning this object from the innerFn has the same effect as
          // breaking out of the dispatch switch statement.
          var ContinueSentinel = {};

          // Dummy constructor functions that we use as the .constructor and
          // .constructor.prototype properties for functions that return Generator
          // objects. For full spec compliance, you may wish to configure your
          // minifier not to mangle the names of these two functions.
          function Generator() {}
          function GeneratorFunction() {}
          function GeneratorFunctionPrototype() {}

          // This is a polyfill for %IteratorPrototype% for environments that
          // don't natively support it.
          var IteratorPrototype = {};
          IteratorPrototype[iteratorSymbol] = function () {
            return this;
          };

          var getProto = Object.getPrototypeOf;
          var NativeIteratorPrototype = getProto && getProto(getProto(values([])));
          if (
            NativeIteratorPrototype &&
            NativeIteratorPrototype !== Op &&
            hasOwn.call(NativeIteratorPrototype, iteratorSymbol)
          ) {
            // This environment has a native %IteratorPrototype%; use it instead
            // of the polyfill.
            IteratorPrototype = NativeIteratorPrototype;
          }

          var Gp = (GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(
            IteratorPrototype
          ));
          GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;
          GeneratorFunctionPrototype.constructor = GeneratorFunction;
          GeneratorFunctionPrototype[toStringTagSymbol] = GeneratorFunction.displayName =
            'GeneratorFunction';

          // Helper for defining the .next, .throw, and .return methods of the
          // Iterator interface in terms of a single ._invoke method.
          function defineIteratorMethods(prototype) {
            ['next', 'throw', 'return'].forEach(function (method) {
              prototype[method] = function (arg) {
                return this._invoke(method, arg);
              };
            });
          }

          runtime.isGeneratorFunction = function (genFun) {
            var ctor = typeof genFun === 'function' && genFun.constructor;
            return ctor
              ? ctor === GeneratorFunction ||
                  // For the native GeneratorFunction constructor, the best we can
                  // do is to check its .name property.
                  (ctor.displayName || ctor.name) === 'GeneratorFunction'
              : false;
          };

          runtime.mark = function (genFun) {
            if (Object.setPrototypeOf) {
              Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);
            } else {
              genFun.__proto__ = GeneratorFunctionPrototype;
              if (!(toStringTagSymbol in genFun)) {
                genFun[toStringTagSymbol] = 'GeneratorFunction';
              }
            }
            genFun.prototype = Object.create(Gp);
            return genFun;
          };

          // Within the body of any async function, `await x` is transformed to
          // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test
          // `hasOwn.call(value, "__await")` to determine if the yielded value is
          // meant to be awaited.
          runtime.awrap = function (arg) {
            return { __await: arg };
          };

          function AsyncIterator(generator) {
            function invoke(method, arg, resolve, reject) {
              var record = tryCatch(generator[method], generator, arg);
              if (record.type === 'throw') {
                reject(record.arg);
              } else {
                var result = record.arg;
                var value = result.value;
                if (value && typeof value === 'object' && hasOwn.call(value, '__await')) {
                  return Promise.resolve(value.__await).then(
                    function (value) {
                      invoke('next', value, resolve, reject);
                    },
                    function (err) {
                      invoke('throw', err, resolve, reject);
                    }
                  );
                }

                return Promise.resolve(value).then(function (unwrapped) {
                  // When a yielded Promise is resolved, its final value becomes
                  // the .value of the Promise<{value,done}> result for the
                  // current iteration. If the Promise is rejected, however, the
                  // result for this iteration will be rejected with the same
                  // reason. Note that rejections of yielded Promises are not
                  // thrown back into the generator function, as is the case
                  // when an awaited Promise is rejected. This difference in
                  // behavior between yield and await is important, because it
                  // allows the consumer to decide what to do with the yielded
                  // rejection (swallow it and continue, manually .throw it back
                  // into the generator, abandon iteration, whatever). With
                  // await, by contrast, there is no opportunity to examine the
                  // rejection reason outside the generator function, so the
                  // only option is to throw it from the await expression, and
                  // let the generator function handle the exception.
                  result.value = unwrapped;
                  resolve(result);
                }, reject);
              }
            }

            if (typeof process === 'object' && process.domain) {
              invoke = process.domain.bind(invoke);
            }

            var previousPromise;

            function enqueue(method, arg) {
              function callInvokeWithMethodAndArg() {
                return new Promise(function (resolve, reject) {
                  invoke(method, arg, resolve, reject);
                });
              }

              return (previousPromise =
                // If enqueue has been called before, then we want to wait until
                // all previous Promises have been resolved before calling invoke,
                // so that results are always delivered in the correct order. If
                // enqueue has not been called before, then it is important to
                // call invoke immediately, without waiting on a callback to fire,
                // so that the async generator function has the opportunity to do
                // any necessary setup in a predictable way. This predictability
                // is why the Promise constructor synchronously invokes its
                // executor callback, and why async functions synchronously
                // execute code before the first await. Since we implement simple
                // async functions in terms of async generators, it is especially
                // important to get this right, even though it requires care.
                previousPromise
                  ? previousPromise.then(
                      callInvokeWithMethodAndArg,
                      // Avoid propagating failures to Promises returned by later
                      // invocations of the iterator.
                      callInvokeWithMethodAndArg
                    )
                  : callInvokeWithMethodAndArg());
            }

            // Define the unified helper method that is used to implement .next,
            // .throw, and .return (see defineIteratorMethods).
            this._invoke = enqueue;
          }

          defineIteratorMethods(AsyncIterator.prototype);
          runtime.AsyncIterator = AsyncIterator;

          // Note that simple async functions are implemented on top of
          // AsyncIterator objects; they just return a Promise for the value of
          // the final result produced by the iterator.
          runtime.async = function (innerFn, outerFn, self, tryLocsList) {
            var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList));

            return runtime.isGeneratorFunction(outerFn)
              ? iter // If outerFn is a generator, return the full iterator.
              : iter.next().then(function (result) {
                  return result.done ? result.value : iter.next();
                });
          };

          function makeInvokeMethod(innerFn, self, context) {
            var state = GenStateSuspendedStart;

            return function invoke(method, arg) {
              if (state === GenStateExecuting) {
                throw new Error('Generator is already running');
              }

              if (state === GenStateCompleted) {
                if (method === 'throw') {
                  throw arg;
                }

                // Be forgiving, per 25.3.3.3.3 of the spec:
                // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume
                return doneResult();
              }

              while (true) {
                var delegate = context.delegate;
                if (delegate) {
                  if (
                    method === 'return' ||
                    (method === 'throw' && delegate.iterator[method] === undefined)
                  ) {
                    // A return or throw (when the delegate iterator has no throw
                    // method) always terminates the yield* loop.
                    context.delegate = null;

                    // If the delegate iterator has a return method, give it a
                    // chance to clean up.
                    var returnMethod = delegate.iterator['return'];
                    if (returnMethod) {
                      var record = tryCatch(returnMethod, delegate.iterator, arg);
                      if (record.type === 'throw') {
                        // If the return method threw an exception, let that
                        // exception prevail over the original return or throw.
                        method = 'throw';
                        arg = record.arg;
                        continue;
                      }
                    }

                    if (method === 'return') {
                      // Continue with the outer return, now that the delegate
                      // iterator has been terminated.
                      continue;
                    }
                  }

                  var record = tryCatch(delegate.iterator[method], delegate.iterator, arg);

                  if (record.type === 'throw') {
                    context.delegate = null;

                    // Like returning generator.throw(uncaught), but without the
                    // overhead of an extra function call.
                    method = 'throw';
                    arg = record.arg;
                    continue;
                  }

                  // Delegate generator ran and handled its own exceptions so
                  // regardless of what the method was, we continue as if it is
                  // "next" with an undefined arg.
                  method = 'next';
                  arg = undefined;

                  var info = record.arg;
                  if (info.done) {
                    context[delegate.resultName] = info.value;
                    context.next = delegate.nextLoc;
                  } else {
                    state = GenStateSuspendedYield;
                    return info;
                  }

                  context.delegate = null;
                }

                if (method === 'next') {
                  // Setting context._sent for legacy support of Babel's
                  // function.sent implementation.
                  context.sent = context._sent = arg;
                } else if (method === 'throw') {
                  if (state === GenStateSuspendedStart) {
                    state = GenStateCompleted;
                    throw arg;
                  }

                  if (context.dispatchException(arg)) {
                    // If the dispatched exception was caught by a catch block,
                    // then let that catch block handle the exception normally.
                    method = 'next';
                    arg = undefined;
                  }
                } else if (method === 'return') {
                  context.abrupt('return', arg);
                }

                state = GenStateExecuting;

                var record = tryCatch(innerFn, self, context);
                if (record.type === 'normal') {
                  // If an exception is thrown from innerFn, we leave state ===
                  // GenStateExecuting and loop back for another invocation.
                  state = context.done ? GenStateCompleted : GenStateSuspendedYield;

                  var info = {
                    value: record.arg,
                    done: context.done,
                  };

                  if (record.arg === ContinueSentinel) {
                    if (context.delegate && method === 'next') {
                      // Deliberately forget the last sent value so that we don't
                      // accidentally pass it on to the delegate.
                      arg = undefined;
                    }
                  } else {
                    return info;
                  }
                } else if (record.type === 'throw') {
                  state = GenStateCompleted;
                  // Dispatch the exception by looping back around to the
                  // context.dispatchException(arg) call above.
                  method = 'throw';
                  arg = record.arg;
                }
              }
            };
          }

          // Define Generator.prototype.{next,throw,return} in terms of the
          // unified ._invoke helper method.
          defineIteratorMethods(Gp);

          Gp[toStringTagSymbol] = 'Generator';

          Gp.toString = function () {
            return '[object Generator]';
          };

          function pushTryEntry(locs) {
            var entry = { tryLoc: locs[0] };

            if (1 in locs) {
              entry.catchLoc = locs[1];
            }

            if (2 in locs) {
              entry.finallyLoc = locs[2];
              entry.afterLoc = locs[3];
            }

            this.tryEntries.push(entry);
          }

          function resetTryEntry(entry) {
            var record = entry.completion || {};
            record.type = 'normal';
            delete record.arg;
            entry.completion = record;
          }

          function Context(tryLocsList) {
            // The root entry object (effectively a try statement without a catch
            // or a finally block) gives us a place to store values thrown from
            // locations where there is no enclosing try statement.
            this.tryEntries = [{ tryLoc: 'root' }];
            tryLocsList.forEach(pushTryEntry, this);
            this.reset(true);
          }

          runtime.keys = function (object) {
            var keys = [];
            for (var key in object) {
              keys.push(key);
            }
            keys.reverse();

            // Rather than returning an object with a next method, we keep
            // things simple and return the next function itself.
            return function next() {
              while (keys.length) {
                var key = keys.pop();
                if (key in object) {
                  next.value = key;
                  next.done = false;
                  return next;
                }
              }

              // To avoid creating an additional object, we just hang the .value
              // and .done properties off the next function object itself. This
              // also ensures that the minifier will not anonymize the function.
              next.done = true;
              return next;
            };
          };

          function values(iterable) {
            if (iterable) {
              var iteratorMethod = iterable[iteratorSymbol];
              if (iteratorMethod) {
                return iteratorMethod.call(iterable);
              }

              if (typeof iterable.next === 'function') {
                return iterable;
              }

              if (!isNaN(iterable.length)) {
                var i = -1,
                  next = function next() {
                    while (++i < iterable.length) {
                      if (hasOwn.call(iterable, i)) {
                        next.value = iterable[i];
                        next.done = false;
                        return next;
                      }
                    }

                    next.value = undefined;
                    next.done = true;

                    return next;
                  };

                return (next.next = next);
              }
            }

            // Return an iterator with no values.
            return { next: doneResult };
          }
          runtime.values = values;

          function doneResult() {
            return { value: undefined, done: true };
          }

          Context.prototype = {
            constructor: Context,

            reset: function (skipTempReset) {
              this.prev = 0;
              this.next = 0;
              // Resetting context._sent for legacy support of Babel's
              // function.sent implementation.
              this.sent = this._sent = undefined;
              this.done = false;
              this.delegate = null;

              this.tryEntries.forEach(resetTryEntry);

              if (!skipTempReset) {
                for (var name in this) {
                  // Not sure about the optimal order of these conditions:
                  if (name.charAt(0) === 't' && hasOwn.call(this, name) && !isNaN(+name.slice(1))) {
                    this[name] = undefined;
                  }
                }
              }
            },

            stop: function () {
              this.done = true;

              var rootEntry = this.tryEntries[0];
              var rootRecord = rootEntry.completion;
              if (rootRecord.type === 'throw') {
                throw rootRecord.arg;
              }

              return this.rval;
            },

            dispatchException: function (exception) {
              if (this.done) {
                throw exception;
              }

              var context = this;
              function handle(loc, caught) {
                record.type = 'throw';
                record.arg = exception;
                context.next = loc;
                return !!caught;
              }

              for (var i = this.tryEntries.length - 1; i >= 0; --i) {
                var entry = this.tryEntries[i];
                var record = entry.completion;

                if (entry.tryLoc === 'root') {
                  // Exception thrown outside of any try block that could handle
                  // it, so set the completion value of the entire function to
                  // throw the exception.
                  return handle('end');
                }

                if (entry.tryLoc <= this.prev) {
                  var hasCatch = hasOwn.call(entry, 'catchLoc');
                  var hasFinally = hasOwn.call(entry, 'finallyLoc');

                  if (hasCatch && hasFinally) {
                    if (this.prev < entry.catchLoc) {
                      return handle(entry.catchLoc, true);
                    } else if (this.prev < entry.finallyLoc) {
                      return handle(entry.finallyLoc);
                    }
                  } else if (hasCatch) {
                    if (this.prev < entry.catchLoc) {
                      return handle(entry.catchLoc, true);
                    }
                  } else if (hasFinally) {
                    if (this.prev < entry.finallyLoc) {
                      return handle(entry.finallyLoc);
                    }
                  } else {
                    throw new Error('try statement without catch or finally');
                  }
                }
              }
            },

            abrupt: function (type, arg) {
              for (var i = this.tryEntries.length - 1; i >= 0; --i) {
                var entry = this.tryEntries[i];
                if (
                  entry.tryLoc <= this.prev &&
                  hasOwn.call(entry, 'finallyLoc') &&
                  this.prev < entry.finallyLoc
                ) {
                  var finallyEntry = entry;
                  break;
                }
              }

              if (
                finallyEntry &&
                (type === 'break' || type === 'continue') &&
                finallyEntry.tryLoc <= arg &&
                arg <= finallyEntry.finallyLoc
              ) {
                // Ignore the finally entry if control is not jumping to a
                // location outside the try/catch block.
                finallyEntry = null;
              }

              var record = finallyEntry ? finallyEntry.completion : {};
              record.type = type;
              record.arg = arg;

              if (finallyEntry) {
                this.next = finallyEntry.finallyLoc;
              } else {
                this.complete(record);
              }

              return ContinueSentinel;
            },

            complete: function (record, afterLoc) {
              if (record.type === 'throw') {
                throw record.arg;
              }

              if (record.type === 'break' || record.type === 'continue') {
                this.next = record.arg;
              } else if (record.type === 'return') {
                this.rval = record.arg;
                this.next = 'end';
              } else if (record.type === 'normal' && afterLoc) {
                this.next = afterLoc;
              }
            },

            finish: function (finallyLoc) {
              for (var i = this.tryEntries.length - 1; i >= 0; --i) {
                var entry = this.tryEntries[i];
                if (entry.finallyLoc === finallyLoc) {
                  this.complete(entry.completion, entry.afterLoc);
                  resetTryEntry(entry);
                  return ContinueSentinel;
                }
              }
            },

            catch: function (tryLoc) {
              for (var i = this.tryEntries.length - 1; i >= 0; --i) {
                var entry = this.tryEntries[i];
                if (entry.tryLoc === tryLoc) {
                  var record = entry.completion;
                  if (record.type === 'throw') {
                    var thrown = record.arg;
                    resetTryEntry(entry);
                  }
                  return thrown;
                }
              }

              // The context.catch method must only be called with a location
              // argument that corresponds to a known catch block.
              throw new Error('illegal catch attempt');
            },

            delegateYield: function (iterable, resultName, nextLoc) {
              this.delegate = {
                iterator: values(iterable),
                resultName: resultName,
                nextLoc: nextLoc,
              };

              return ContinueSentinel;
            },
          };
        })(
          // Among the various tricks for obtaining a reference to the global
          // object, this seems to be the most reliable technique that does not
          // use indirect eval (which violates Content Security Policy).
          typeof global === 'object'
            ? global
            : typeof window === 'object'
            ? window
            : typeof self === 'object'
            ? self
            : this
        );

        /* WEBPACK VAR INJECTION */
      }.call(exports, __webpack_require__(20), __webpack_require__(1)));

      /***/
    },
    /* 783 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';

      var htmlparser = __webpack_require__(95);
      var extend = __webpack_require__(795);
      var quoteRegexp = __webpack_require__(638);
      var cloneDeep = __webpack_require__(637);
      var mergeWith = __webpack_require__(639);
      var srcset = __webpack_require__(785);
      var postcss = __webpack_require__(644);

      function each(obj, cb) {
        if (obj)
          Object.keys(obj).forEach(function (key) {
            cb(obj[key], key);
          });
      }

      // Avoid false positives with .__proto__, .hasOwnProperty, etc.
      function has(obj, key) {
        return {}.hasOwnProperty.call(obj, key);
      }

      // Returns those elements of `a` for which `cb(a)` returns truthy
      function filter(a, cb) {
        var n = [];
        each(a, function (v) {
          if (cb(v)) {
            n.push(v);
          }
        });
        return n;
      }

      module.exports = sanitizeHtml;

      // A valid attribute name.
      // We use a tolerant definition based on the set of strings defined by
      // html.spec.whatwg.org/multipage/parsing.html#before-attribute-name-state
      // and html.spec.whatwg.org/multipage/parsing.html#attribute-name-state .
      // The characters accepted are ones which can be appended to the attribute
      // name buffer without triggering a parse error:
      //   * unexpected-equals-sign-before-attribute-name
      //   * unexpected-null-character
      //   * unexpected-character-in-attribute-name
      // We exclude the empty string because it's impossible to get to the after
      // attribute name state with an empty attribute name buffer.
      var VALID_HTML_ATTRIBUTE_NAME = /^[^\0\t\n\f\r /<=>]+$/;

      // Ignore the _recursing flag; it's there for recursive
      // invocation as a guard against this exploit:
      // https://github.com/fb55/htmlparser2/issues/105

      function sanitizeHtml(html, options, _recursing) {
        var result = '';

        function Frame(tag, attribs) {
          var that = this;
          this.tag = tag;
          this.attribs = attribs || {};
          this.tagPosition = result.length;
          this.text = ''; // Node inner text

          this.updateParentNodeText = function () {
            if (stack.length) {
              var parentFrame = stack[stack.length - 1];
              parentFrame.text += that.text;
            }
          };
        }

        if (!options) {
          options = sanitizeHtml.defaults;
          options.parser = htmlParserDefaults;
        } else {
          options = extend(sanitizeHtml.defaults, options);
          if (options.parser) {
            options.parser = extend(htmlParserDefaults, options.parser);
          } else {
            options.parser = htmlParserDefaults;
          }
        }

        // Tags that contain something other than HTML, or where discarding
        // the text when the tag is disallowed makes sense for other reasons.
        // If we are not allowing these tags, we should drop their content too.
        // For other tags you would drop the tag but keep its content.
        var nonTextTagsArray = options.nonTextTags || ['script', 'style', 'textarea'];
        var allowedAttributesMap;
        var allowedAttributesGlobMap;
        if (options.allowedAttributes) {
          allowedAttributesMap = {};
          allowedAttributesGlobMap = {};
          each(options.allowedAttributes, function (attributes, tag) {
            allowedAttributesMap[tag] = [];
            var globRegex = [];
            attributes.forEach(function (name) {
              if (name.indexOf('*') >= 0) {
                globRegex.push(quoteRegexp(name).replace(/\\\*/g, '.*'));
              } else {
                allowedAttributesMap[tag].push(name);
              }
            });
            allowedAttributesGlobMap[tag] = new RegExp('^(' + globRegex.join('|') + ')$');
          });
        }
        var allowedClassesMap = {};
        each(options.allowedClasses, function (classes, tag) {
          // Implicitly allows the class attribute
          if (allowedAttributesMap) {
            if (!has(allowedAttributesMap, tag)) {
              allowedAttributesMap[tag] = [];
            }
            allowedAttributesMap[tag].push('class');
          }

          allowedClassesMap[tag] = classes;
        });

        var transformTagsMap = {};
        var transformTagsAll;
        each(options.transformTags, function (transform, tag) {
          var transFun;
          if (typeof transform === 'function') {
            transFun = transform;
          } else if (typeof transform === 'string') {
            transFun = sanitizeHtml.simpleTransform(transform);
          }
          if (tag === '*') {
            transformTagsAll = transFun;
          } else {
            transformTagsMap[tag] = transFun;
          }
        });

        var depth = 0;
        var stack = [];
        var skipMap = {};
        var transformMap = {};
        var skipText = false;
        var skipTextDepth = 0;

        var parser = new htmlparser.Parser(
          {
            onopentag: function onopentag(name, attribs) {
              if (skipText) {
                skipTextDepth++;
                return;
              }
              var frame = new Frame(name, attribs);
              stack.push(frame);

              var skip = false;
              var hasText = frame.text ? true : false;
              var transformedTag;
              if (has(transformTagsMap, name)) {
                transformedTag = transformTagsMap[name](name, attribs);

                frame.attribs = attribs = transformedTag.attribs;

                if (transformedTag.text !== undefined) {
                  frame.innerText = transformedTag.text;
                }

                if (name !== transformedTag.tagName) {
                  frame.name = name = transformedTag.tagName;
                  transformMap[depth] = transformedTag.tagName;
                }
              }
              if (transformTagsAll) {
                transformedTag = transformTagsAll(name, attribs);

                frame.attribs = attribs = transformedTag.attribs;
                if (name !== transformedTag.tagName) {
                  frame.name = name = transformedTag.tagName;
                  transformMap[depth] = transformedTag.tagName;
                }
              }

              if (options.allowedTags && options.allowedTags.indexOf(name) === -1) {
                skip = true;
                if (nonTextTagsArray.indexOf(name) !== -1) {
                  skipText = true;
                  skipTextDepth = 1;
                }
                skipMap[depth] = true;
              }
              depth++;
              if (skip) {
                // We want the contents but not this tag
                return;
              }
              result += '<' + name;
              if (
                !allowedAttributesMap ||
                has(allowedAttributesMap, name) ||
                allowedAttributesMap['*']
              ) {
                each(attribs, function (value, a) {
                  if (!VALID_HTML_ATTRIBUTE_NAME.test(a)) {
                    // This prevents part of an attribute name in the output from being
                    // interpreted as the end of an attribute, or end of a tag.
                    delete frame.attribs[a];
                    return;
                  }
                  var parsed;
                  if (
                    !allowedAttributesMap ||
                    (has(allowedAttributesMap, name) &&
                      allowedAttributesMap[name].indexOf(a) !== -1) ||
                    (allowedAttributesMap['*'] && allowedAttributesMap['*'].indexOf(a) !== -1) ||
                    (has(allowedAttributesGlobMap, name) &&
                      allowedAttributesGlobMap[name].test(a)) ||
                    (allowedAttributesGlobMap['*'] && allowedAttributesGlobMap['*'].test(a))
                  ) {
                    if (a === 'href' || a === 'src') {
                      if (naughtyHref(name, value)) {
                        delete frame.attribs[a];
                        return;
                      }
                    }

                    if (a === 'srcset') {
                      try {
                        var parsed = srcset.parse(value);
                        each(parsed, function (value) {
                          if (naughtyHref('srcset', value.url)) {
                            value.evil = true;
                          }
                        });
                        parsed = filter(parsed, function (v) {
                          return !v.evil;
                        });
                        if (!parsed.length) {
                          delete frame.attribs[a];
                          return;
                        } else {
                          value = srcset.stringify(
                            filter(parsed, function (v) {
                              return !v.evil;
                            })
                          );
                          frame.attribs[a] = value;
                        }
                      } catch (e) {
                        // Unparseable srcset
                        delete frame.attribs[a];
                        return;
                      }
                    }

                    if (a === 'class') {
                      value = filterClasses(value, allowedClassesMap[name]);
                      if (!value.length) {
                        delete frame.attribs[a];
                        return;
                      }
                    }
                    if (a === 'style') {
                      try {
                        var abstractSyntaxTree = postcss.parse(name + ' {' + value + '}');
                        var filteredAST = filterCss(abstractSyntaxTree, options.allowedStyles);

                        value = stringifyStyleAttributes(filteredAST);

                        if (value.length === 0) {
                          delete frame.attribs[a];
                          return;
                        }
                      } catch (e) {
                        delete frame.attribs[a];
                        return;
                      }
                    }
                    result += ' ' + a;
                    if (value.length) {
                      result += '="' + escapeHtml(value) + '"';
                    }
                  } else {
                    delete frame.attribs[a];
                  }
                });
              }
              if (options.selfClosing.indexOf(name) !== -1) {
                result += ' />';
              } else {
                result += '>';
                if (frame.innerText && !hasText && !options.textFilter) {
                  result += frame.innerText;
                }
              }
            },
            ontext: function ontext(text) {
              if (skipText) {
                return;
              }
              var lastFrame = stack[stack.length - 1];
              var tag;

              if (lastFrame) {
                tag = lastFrame.tag;
                // If inner text was set by transform function then let's use it
                text = lastFrame.innerText !== undefined ? lastFrame.innerText : text;
              }

              if (tag === 'script' || tag === 'style') {
                // htmlparser2 gives us these as-is. Escaping them ruins the content. Allowing
                // script tags is, by definition, game over for XSS protection, so if that's
                // your concern, don't allow them. The same is essentially true for style tags
                // which have their own collection of XSS vectors.
                result += text;
              } else {
                var escaped = escapeHtml(text);
                if (options.textFilter) {
                  result += options.textFilter(escaped);
                } else {
                  result += escaped;
                }
              }
              if (stack.length) {
                var frame = stack[stack.length - 1];
                frame.text += text;
              }
            },
            onclosetag: function onclosetag(name) {
              if (skipText) {
                skipTextDepth--;
                if (!skipTextDepth) {
                  skipText = false;
                } else {
                  return;
                }
              }

              var frame = stack.pop();
              if (!frame) {
                // Do not crash on bad markup
                return;
              }
              skipText = false;
              depth--;
              if (skipMap[depth]) {
                delete skipMap[depth];
                frame.updateParentNodeText();
                return;
              }

              if (transformMap[depth]) {
                name = transformMap[depth];
                delete transformMap[depth];
              }

              if (options.exclusiveFilter && options.exclusiveFilter(frame)) {
                result = result.substr(0, frame.tagPosition);
                return;
              }

              frame.updateParentNodeText();

              if (options.selfClosing.indexOf(name) !== -1) {
                // Already output />
                return;
              }

              result += '</' + name + '>';
            },
          },
          options.parser
        );
        parser.write(html);
        parser.end();

        return result;

        function escapeHtml(s) {
          if (typeof s !== 'string') {
            s = s + '';
          }
          return s
            .replace(/\&/g, '&amp;')
            .replace(/</g, '&lt;')
            .replace(/\>/g, '&gt;')
            .replace(/\"/g, '&quot;');
        }

        function naughtyHref(name, href) {
          // Browsers ignore character codes of 32 (space) and below in a surprising
          // number of situations. Start reading here:
          // https://www.owasp.org/index.php/XSS_Filter_Evasion_Cheat_Sheet#Embedded_tab
          href = href.replace(/[\x00-\x20]+/g, '');
          // Clobber any comments in URLs, which the browser might
          // interpret inside an XML data island, allowing
          // a javascript: URL to be snuck through
          href = href.replace(/<\!\-\-.*?\-\-\>/g, '');
          // Case insensitive so we don't get faked out by JAVASCRIPT #1
          var matches = href.match(/^([a-zA-Z]+)\:/);
          if (!matches) {
            // Protocol-relative URL starting with any combination of '/' and '\'
            if (href.match(/^[\/\\]{2}/)) {
              return !options.allowProtocolRelative;
            }

            // No scheme
            return false;
          }
          var scheme = matches[1].toLowerCase();

          if (has(options.allowedSchemesByTag, name)) {
            return options.allowedSchemesByTag[name].indexOf(scheme) === -1;
          }

          return !options.allowedSchemes || options.allowedSchemes.indexOf(scheme) === -1;
        }

        /**
         * Filters user input css properties by whitelisted regex attributes.
         *
         * @param {object} abstractSyntaxTree  - Object representation of CSS attributes.
         * @property {array[Declaration]} abstractSyntaxTree.nodes[0] - Each object cointains prop and value key, i.e { prop: 'color', value: 'red' }.
         * @param {object} allowedStyles       - Keys are properties (i.e color), value is list of permitted regex rules (i.e /green/i).
         * @return {object}                    - Abstract Syntax Tree with filtered style attributes.
         */
        function filterCss(abstractSyntaxTree, allowedStyles) {
          if (!allowedStyles) {
            return abstractSyntaxTree;
          }

          var filteredAST = cloneDeep(abstractSyntaxTree);
          var astRules = abstractSyntaxTree.nodes[0];
          var selectedRule;

          // Merge global and tag-specific styles into new AST.
          if (allowedStyles[astRules.selector] && allowedStyles['*']) {
            selectedRule = mergeWith(
              cloneDeep(allowedStyles[astRules.selector]),
              allowedStyles['*'],
              function (objValue, srcValue) {
                if (Array.isArray(objValue)) {
                  return objValue.concat(srcValue);
                }
              }
            );
          } else {
            selectedRule = allowedStyles[astRules.selector] || allowedStyles['*'];
          }

          if (selectedRule) {
            filteredAST.nodes[0].nodes = astRules.nodes.reduce(
              filterDeclarations(selectedRule),
              []
            );
          }

          return filteredAST;
        }

        /**
         * Extracts the style attribues from an AbstractSyntaxTree and formats those
         * values in the inline style attribute format.
         *
         * @param  {AbstractSyntaxTree} filteredAST
         * @return {string}             - Example: "color:yellow;text-align:center;font-family:helvetica;"
         */
        function stringifyStyleAttributes(filteredAST) {
          return filteredAST.nodes[0].nodes
            .reduce(function (extractedAttributes, attributeObject) {
              extractedAttributes.push(attributeObject.prop + ':' + attributeObject.value + ';');
              return extractedAttributes;
            }, [])
            .join('');
        }

        /**
         * Filters the existing attributes for the given property. Discards any attributes
         * which don't match the whitelist.
         *
         * @param  {object} selectedRule             - Example: { color: red, font-family: helvetica }
         * @param  {array} allowedDeclarationsList   - List of declarations which pass whitelisting.
         * @param  {object} attributeObject          - Object representing the current css property.
         * @property {string} attributeObject.type   - Typically 'declaration'.
         * @property {string} attributeObject.prop   - The CSS property, i.e 'color'.
         * @property {string} attributeObject.value  - The corresponding value to the css property, i.e 'red'.
         * @return {function}                        - When used in Array.reduce, will return an array of Declaration objects
         */
        function filterDeclarations(selectedRule) {
          return function (allowedDeclarationsList, attributeObject) {
            // If this property is whitelisted...
            if (selectedRule.hasOwnProperty(attributeObject.prop)) {
              var matchesRegex = selectedRule[attributeObject.prop].some(function (
                regularExpression
              ) {
                return regularExpression.test(attributeObject.value);
              });

              if (matchesRegex) {
                allowedDeclarationsList.push(attributeObject);
              }
            }
            return allowedDeclarationsList;
          };
        }

        function filterClasses(classes, allowed) {
          if (!allowed) {
            // The class attribute is allowed without filtering on this tag
            return classes;
          }
          classes = classes.split(/\s+/);
          return classes
            .filter(function (clss) {
              return allowed.indexOf(clss) !== -1;
            })
            .join(' ');
        }
      }

      // Defaults are accessible to you so that you can use them as a starting point
      // programmatically if you wish

      var htmlParserDefaults = {
        decodeEntities: true,
      };
      sanitizeHtml.defaults = {
        allowedTags: [
          'h3',
          'h4',
          'h5',
          'h6',
          'blockquote',
          'p',
          'a',
          'ul',
          'ol',
          'nl',
          'li',
          'b',
          'i',
          'strong',
          'em',
          'strike',
          'code',
          'hr',
          'br',
          'div',
          'table',
          'thead',
          'caption',
          'tbody',
          'tr',
          'th',
          'td',
          'pre',
        ],
        allowedAttributes: {
          a: ['href', 'name', 'target'],
          // We don't currently allow img itself by default, but this
          // would make sense if we did. You could add srcset here,
          // and if you do the URL is checked for safety
          img: ['src'],
        },
        // Lots of these won't come up by default because we don't allow them
        selfClosing: ['img', 'br', 'hr', 'area', 'base', 'basefont', 'input', 'link', 'meta'],
        // URL schemes we permit
        allowedSchemes: ['http', 'https', 'ftp', 'mailto'],
        allowedSchemesByTag: {},
        allowProtocolRelative: true,
      };

      sanitizeHtml.simpleTransform = function (newTagName, newAttribs, merge) {
        merge = merge === undefined ? true : merge;
        newAttribs = newAttribs || {};

        return function (tagName, attribs) {
          var attrib;
          if (merge) {
            for (attrib in newAttribs) {
              attribs[attrib] = newAttribs[attrib];
            }
          } else {
            attribs = newAttribs;
          }

          return {
            tagName: newTagName,
            attribs: attribs,
          };
        };
      };

      /***/
    },
    /* 784 */
    /***/ function (module, exports, __webpack_require__) {
      /* WEBPACK VAR INJECTION */ (function (global, process) {
        (function (global, undefined) {
          'use strict';

          if (global.setImmediate) {
            return;
          }

          var nextHandle = 1; // Spec says greater than zero
          var tasksByHandle = {};
          var currentlyRunningATask = false;
          var doc = global.document;
          var registerImmediate;

          function setImmediate(callback) {
            // Callback can either be a function or a string
            if (typeof callback !== 'function') {
              callback = new Function('' + callback);
            }
            // Copy function arguments
            var args = new Array(arguments.length - 1);
            for (var i = 0; i < args.length; i++) {
              args[i] = arguments[i + 1];
            }
            // Store and register the task
            var task = { callback: callback, args: args };
            tasksByHandle[nextHandle] = task;
            registerImmediate(nextHandle);
            return nextHandle++;
          }

          function clearImmediate(handle) {
            delete tasksByHandle[handle];
          }

          function run(task) {
            var callback = task.callback;
            var args = task.args;
            switch (args.length) {
              case 0:
                callback();
                break;
              case 1:
                callback(args[0]);
                break;
              case 2:
                callback(args[0], args[1]);
                break;
              case 3:
                callback(args[0], args[1], args[2]);
                break;
              default:
                callback.apply(undefined, args);
                break;
            }
          }

          function runIfPresent(handle) {
            // From the spec: "Wait until any invocations of this algorithm started before this one have completed."
            // So if we're currently running a task, we'll need to delay this invocation.
            if (currentlyRunningATask) {
              // Delay by doing a setTimeout. setImmediate was tried instead, but in Firefox 7 it generated a
              // "too much recursion" error.
              setTimeout(runIfPresent, 0, handle);
            } else {
              var task = tasksByHandle[handle];
              if (task) {
                currentlyRunningATask = true;
                try {
                  run(task);
                } finally {
                  clearImmediate(handle);
                  currentlyRunningATask = false;
                }
              }
            }
          }

          function installNextTickImplementation() {
            registerImmediate = function (handle) {
              process.nextTick(function () {
                runIfPresent(handle);
              });
            };
          }

          function canUsePostMessage() {
            // The test against `importScripts` prevents this implementation from being installed inside a web worker,
            // where `global.postMessage` means something completely different and can't be used for this purpose.
            if (global.postMessage && !global.importScripts) {
              var postMessageIsAsynchronous = true;
              var oldOnMessage = global.onmessage;
              global.onmessage = function () {
                postMessageIsAsynchronous = false;
              };
              global.postMessage('', '*');
              global.onmessage = oldOnMessage;
              return postMessageIsAsynchronous;
            }
          }

          function installPostMessageImplementation() {
            // Installs an event handler on `global` for the `message` event: see
            // * https://developer.mozilla.org/en/DOM/window.postMessage
            // * http://www.whatwg.org/specs/web-apps/current-work/multipage/comms.html#crossDocumentMessages

            var messagePrefix = 'setImmediate$' + Math.random() + '$';
            var onGlobalMessage = function (event) {
              if (
                event.source === global &&
                typeof event.data === 'string' &&
                event.data.indexOf(messagePrefix) === 0
              ) {
                runIfPresent(+event.data.slice(messagePrefix.length));
              }
            };

            if (global.addEventListener) {
              global.addEventListener('message', onGlobalMessage, false);
            } else {
              global.attachEvent('onmessage', onGlobalMessage);
            }

            registerImmediate = function (handle) {
              global.postMessage(messagePrefix + handle, '*');
            };
          }

          function installMessageChannelImplementation() {
            var channel = new MessageChannel();
            channel.port1.onmessage = function (event) {
              var handle = event.data;
              runIfPresent(handle);
            };

            registerImmediate = function (handle) {
              channel.port2.postMessage(handle);
            };
          }

          function installReadyStateChangeImplementation() {
            var html = doc.documentElement;
            registerImmediate = function (handle) {
              // Create a <script> element; its readystatechange event will be fired asynchronously once it is inserted
              // into the document. Do so, thus queuing up the task. Remember to clean up once it's been called.
              var script = doc.createElement('script');
              script.onreadystatechange = function () {
                runIfPresent(handle);
                script.onreadystatechange = null;
                html.removeChild(script);
                script = null;
              };
              html.appendChild(script);
            };
          }

          function installSetTimeoutImplementation() {
            registerImmediate = function (handle) {
              setTimeout(runIfPresent, 0, handle);
            };
          }

          // If supported, we should attach to the prototype of global, since that is where setTimeout et al. live.
          var attachTo = Object.getPrototypeOf && Object.getPrototypeOf(global);
          attachTo = attachTo && attachTo.setTimeout ? attachTo : global;

          // Don't get fooled by e.g. browserify environments.
          if ({}.toString.call(global.process) === '[object process]') {
            // For Node.js before 0.9
            installNextTickImplementation();
          } else if (canUsePostMessage()) {
            // For non-IE10 modern browsers
            installPostMessageImplementation();
          } else if (global.MessageChannel) {
            // For web workers, where supported
            installMessageChannelImplementation();
          } else if (doc && 'onreadystatechange' in doc.createElement('script')) {
            // For IE 6–8
            installReadyStateChangeImplementation();
          } else {
            // For older browsers
            installSetTimeoutImplementation();
          }

          attachTo.setImmediate = setImmediate;
          attachTo.clearImmediate = clearImmediate;
        })(typeof self === 'undefined' ? (typeof global === 'undefined' ? this : global) : self);

        /* WEBPACK VAR INJECTION */
      }.call(exports, __webpack_require__(20), __webpack_require__(1)));

      /***/
    },
    /* 785 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';

      var numberIsNan = __webpack_require__(641);
      var arrayUniq = __webpack_require__(322);
      var reInt = /^\d+$/;

      function deepUnique(arr) {
        return arr.sort().filter(function (el, i) {
          return JSON.stringify(el) !== JSON.stringify(arr[i - 1]);
        });
      }

      exports.parse = function (str) {
        return deepUnique(
          str.split(',').map(function (el) {
            var ret = {};

            el.trim()
              .split(/\s+/)
              .forEach(function (el, i) {
                if (i === 0) {
                  return (ret.url = el);
                }

                var value = el.substring(0, el.length - 1);
                var postfix = el[el.length - 1];
                var intVal = parseInt(value, 10);
                var floatVal = parseFloat(value);

                if (postfix === 'w' && reInt.test(value)) {
                  ret.width = intVal;
                } else if (postfix === 'h' && reInt.test(value)) {
                  ret.height = intVal;
                } else if (postfix === 'x' && !numberIsNan(floatVal)) {
                  ret.density = floatVal;
                } else {
                  throw new Error('Invalid srcset descriptor: ' + el + '.');
                }
              });

            return ret;
          })
        );
      };

      exports.stringify = function (arr) {
        return arrayUniq(
          arr.map(function (el) {
            if (!el.url) {
              throw new Error('URL is required.');
            }

            var ret = [el.url];

            if (el.width) {
              ret.push(el.width + 'w');
            }

            if (el.height) {
              ret.push(el.height + 'h');
            }

            if (el.density) {
              ret.push(el.density + 'x');
            }

            return ret.join(' ');
          })
        ).join(', ');
      };

      /***/
    },
    /* 786 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';

      module.exports = function (str) {
        return encodeURIComponent(str).replace(/[!'()*]/g, function (c) {
          return '%' + c.charCodeAt(0).toString(16).toUpperCase();
        });
      };

      /***/
    },
    /* 787 */
    /***/ function (module, exports, __webpack_require__) {
      module.exports = __webpack_require__(788);

      /***/
    },
    /* 788 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';
      /* WEBPACK VAR INJECTION */ (function (global, module) {
        Object.defineProperty(exports, '__esModule', {
          value: true,
        });

        var _ponyfill = __webpack_require__(789);

        var _ponyfill2 = _interopRequireDefault(_ponyfill);

        function _interopRequireDefault(obj) {
          return obj && obj.__esModule ? obj : { default: obj };
        }

        var root; /* global window */

        if (typeof self !== 'undefined') {
          root = self;
        } else if (typeof window !== 'undefined') {
          root = window;
        } else if (typeof global !== 'undefined') {
          root = global;
        } else if (true) {
          root = module;
        } else {
          root = Function('return this')();
        }

        var result = (0, _ponyfill2['default'])(root);
        exports['default'] = result;
        /* WEBPACK VAR INJECTION */
      }.call(exports, __webpack_require__(20), __webpack_require__(127)(module)));

      /***/
    },
    /* 789 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true,
      });
      exports['default'] = symbolObservablePonyfill;
      function symbolObservablePonyfill(root) {
        var result;
        var _Symbol = root.Symbol;

        if (typeof _Symbol === 'function') {
          if (_Symbol.observable) {
            result = _Symbol.observable;
          } else {
            result = _Symbol('observable');
            _Symbol.observable = result;
          }
        } else {
          result = '@@observable';
        }

        return result;
      }

      /***/
    },
    /* 790 */
    /***/ function (module, exports, __webpack_require__) {
      var apply = Function.prototype.apply;

      // DOM APIs, for completeness

      exports.setTimeout = function () {
        return new Timeout(apply.call(setTimeout, window, arguments), clearTimeout);
      };
      exports.setInterval = function () {
        return new Timeout(apply.call(setInterval, window, arguments), clearInterval);
      };
      exports.clearTimeout = exports.clearInterval = function (timeout) {
        if (timeout) {
          timeout.close();
        }
      };

      function Timeout(id, clearFn) {
        this._id = id;
        this._clearFn = clearFn;
      }
      Timeout.prototype.unref = Timeout.prototype.ref = function () {};
      Timeout.prototype.close = function () {
        this._clearFn.call(window, this._id);
      };

      // Does not start the time, just sets up the members needed.
      exports.enroll = function (item, msecs) {
        clearTimeout(item._idleTimeoutId);
        item._idleTimeout = msecs;
      };

      exports.unenroll = function (item) {
        clearTimeout(item._idleTimeoutId);
        item._idleTimeout = -1;
      };

      exports._unrefActive = exports.active = function (item) {
        clearTimeout(item._idleTimeoutId);

        var msecs = item._idleTimeout;
        if (msecs >= 0) {
          item._idleTimeoutId = setTimeout(function onTimeout() {
            if (item._onTimeout) item._onTimeout();
          }, msecs);
        }
      };

      // setimmediate attaches itself to the global object
      __webpack_require__(784);
      exports.setImmediate = setImmediate;
      exports.clearImmediate = clearImmediate;

      /***/
    },
    /* 791 */
    /***/ function (module, exports, __webpack_require__) {
      /* WEBPACK VAR INJECTION */ (function (global) {
        /**
         * Module exports.
         */

        module.exports = deprecate;

        /**
         * Mark that a method should not be used.
         * Returns a modified function which warns once by default.
         *
         * If `localStorage.noDeprecation = true` is set, then it is a no-op.
         *
         * If `localStorage.throwDeprecation = true` is set, then deprecated functions
         * will throw an Error when invoked.
         *
         * If `localStorage.traceDeprecation = true` is set, then deprecated functions
         * will invoke `console.trace()` instead of `console.error()`.
         *
         * @param {Function} fn - the function to deprecate
         * @param {String} msg - the string to print to the console when `fn` is invoked
         * @returns {Function} a new "deprecated" version of `fn`
         * @api public
         */

        function deprecate(fn, msg) {
          if (config('noDeprecation')) {
            return fn;
          }

          var warned = false;
          function deprecated() {
            if (!warned) {
              if (config('throwDeprecation')) {
                throw new Error(msg);
              } else if (config('traceDeprecation')) {
                console.trace(msg);
              } else {
                console.warn(msg);
              }
              warned = true;
            }
            return fn.apply(this, arguments);
          }

          return deprecated;
        }

        /**
         * Checks `localStorage` for boolean values for the given `name`.
         *
         * @param {String} name
         * @returns {Boolean}
         * @api private
         */

        function config(name) {
          // accessing global.localStorage can trigger a DOMException in sandboxed iframes
          try {
            if (!global.localStorage) return false;
          } catch (_) {
            return false;
          }
          var val = global.localStorage[name];
          if (null == val) return false;
          return String(val).toLowerCase() === 'true';
        }

        /* WEBPACK VAR INJECTION */
      }.call(exports, __webpack_require__(20)));

      /***/
    },
    /* 792 */
    /***/ function (module, exports) {
      if (typeof Object.create === 'function') {
        // implementation from standard node.js 'util' module
        module.exports = function inherits(ctor, superCtor) {
          ctor.super_ = superCtor;
          ctor.prototype = Object.create(superCtor.prototype, {
            constructor: {
              value: ctor,
              enumerable: false,
              writable: true,
              configurable: true,
            },
          });
        };
      } else {
        // old school shim for old browsers
        module.exports = function inherits(ctor, superCtor) {
          ctor.super_ = superCtor;
          var TempCtor = function () {};
          TempCtor.prototype = superCtor.prototype;
          ctor.prototype = new TempCtor();
          ctor.prototype.constructor = ctor;
        };
      }

      /***/
    },
    /* 793 */
    /***/ function (module, exports) {
      module.exports = function isBuffer(arg) {
        return (
          arg &&
          typeof arg === 'object' &&
          typeof arg.copy === 'function' &&
          typeof arg.fill === 'function' &&
          typeof arg.readUInt8 === 'function'
        );
      };

      /***/
    },
    /* 794 */
    /***/ function (module, exports, __webpack_require__) {
      /* WEBPACK VAR INJECTION */ (function (global, process) {
        // Copyright Joyent, Inc. and other Node contributors.
        //
        // Permission is hereby granted, free of charge, to any person obtaining a
        // copy of this software and associated documentation files (the
        // "Software"), to deal in the Software without restriction, including
        // without limitation the rights to use, copy, modify, merge, publish,
        // distribute, sublicense, and/or sell copies of the Software, and to permit
        // persons to whom the Software is furnished to do so, subject to the
        // following conditions:
        //
        // The above copyright notice and this permission notice shall be included
        // in all copies or substantial portions of the Software.
        //
        // THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
        // OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
        // MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
        // NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
        // DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
        // OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
        // USE OR OTHER DEALINGS IN THE SOFTWARE.

        var formatRegExp = /%[sdj%]/g;
        exports.format = function (f) {
          if (!isString(f)) {
            var objects = [];
            for (var i = 0; i < arguments.length; i++) {
              objects.push(inspect(arguments[i]));
            }
            return objects.join(' ');
          }

          var i = 1;
          var args = arguments;
          var len = args.length;
          var str = String(f).replace(formatRegExp, function (x) {
            if (x === '%%') return '%';
            if (i >= len) return x;
            switch (x) {
              case '%s':
                return String(args[i++]);
              case '%d':
                return Number(args[i++]);
              case '%j':
                try {
                  return JSON.stringify(args[i++]);
                } catch (_) {
                  return '[Circular]';
                }
              default:
                return x;
            }
          });
          for (var x = args[i]; i < len; x = args[++i]) {
            if (isNull(x) || !isObject(x)) {
              str += ' ' + x;
            } else {
              str += ' ' + inspect(x);
            }
          }
          return str;
        };

        // Mark that a method should not be used.
        // Returns a modified function which warns once by default.
        // If --no-deprecation is set, then it is a no-op.
        exports.deprecate = function (fn, msg) {
          // Allow for deprecating things in the process of starting up.
          if (isUndefined(global.process)) {
            return function () {
              return exports.deprecate(fn, msg).apply(this, arguments);
            };
          }

          if (process.noDeprecation === true) {
            return fn;
          }

          var warned = false;
          function deprecated() {
            if (!warned) {
              if (process.throwDeprecation) {
                throw new Error(msg);
              } else if (process.traceDeprecation) {
                console.trace(msg);
              } else {
                console.error(msg);
              }
              warned = true;
            }
            return fn.apply(this, arguments);
          }

          return deprecated;
        };

        var debugs = {};
        var debugEnviron;
        exports.debuglog = function (set) {
          if (isUndefined(debugEnviron)) debugEnviron = process.env.NODE_DEBUG || '';
          set = set.toUpperCase();
          if (!debugs[set]) {
            if (new RegExp('\\b' + set + '\\b', 'i').test(debugEnviron)) {
              var pid = process.pid;
              debugs[set] = function () {
                var msg = exports.format.apply(exports, arguments);
                console.error('%s %d: %s', set, pid, msg);
              };
            } else {
              debugs[set] = function () {};
            }
          }
          return debugs[set];
        };

        /**
         * Echos the value of a value. Trys to print the value out
         * in the best way possible given the different types.
         *
         * @param {Object} obj The object to print out.
         * @param {Object} opts Optional options object that alters the output.
         */
        /* legacy: obj, showHidden, depth, colors*/
        function inspect(obj, opts) {
          // default options
          var ctx = {
            seen: [],
            stylize: stylizeNoColor,
          };
          // legacy...
          if (arguments.length >= 3) ctx.depth = arguments[2];
          if (arguments.length >= 4) ctx.colors = arguments[3];
          if (isBoolean(opts)) {
            // legacy...
            ctx.showHidden = opts;
          } else if (opts) {
            // got an "options" object
            exports._extend(ctx, opts);
          }
          // set default options
          if (isUndefined(ctx.showHidden)) ctx.showHidden = false;
          if (isUndefined(ctx.depth)) ctx.depth = 2;
          if (isUndefined(ctx.colors)) ctx.colors = false;
          if (isUndefined(ctx.customInspect)) ctx.customInspect = true;
          if (ctx.colors) ctx.stylize = stylizeWithColor;
          return formatValue(ctx, obj, ctx.depth);
        }
        exports.inspect = inspect;

        // http://en.wikipedia.org/wiki/ANSI_escape_code#graphics
        inspect.colors = {
          bold: [1, 22],
          italic: [3, 23],
          underline: [4, 24],
          inverse: [7, 27],
          white: [37, 39],
          grey: [90, 39],
          black: [30, 39],
          blue: [34, 39],
          cyan: [36, 39],
          green: [32, 39],
          magenta: [35, 39],
          red: [31, 39],
          yellow: [33, 39],
        };

        // Don't use 'blue' not visible on cmd.exe
        inspect.styles = {
          special: 'cyan',
          number: 'yellow',
          boolean: 'yellow',
          undefined: 'grey',
          null: 'bold',
          string: 'green',
          date: 'magenta',
          // "name": intentionally not styling
          regexp: 'red',
        };

        function stylizeWithColor(str, styleType) {
          var style = inspect.styles[styleType];

          if (style) {
            return (
              '\u001b[' +
              inspect.colors[style][0] +
              'm' +
              str +
              '\u001b[' +
              inspect.colors[style][1] +
              'm'
            );
          } else {
            return str;
          }
        }

        function stylizeNoColor(str, styleType) {
          return str;
        }

        function arrayToHash(array) {
          var hash = {};

          array.forEach(function (val, idx) {
            hash[val] = true;
          });

          return hash;
        }

        function formatValue(ctx, value, recurseTimes) {
          // Provide a hook for user-specified inspect functions.
          // Check that value is an object with an inspect function on it
          if (
            ctx.customInspect &&
            value &&
            isFunction(value.inspect) &&
            // Filter out the util module, it's inspect function is special
            value.inspect !== exports.inspect &&
            // Also filter out any prototype objects using the circular check.
            !(value.constructor && value.constructor.prototype === value)
          ) {
            var ret = value.inspect(recurseTimes, ctx);
            if (!isString(ret)) {
              ret = formatValue(ctx, ret, recurseTimes);
            }
            return ret;
          }

          // Primitive types cannot have properties
          var primitive = formatPrimitive(ctx, value);
          if (primitive) {
            return primitive;
          }

          // Look up the keys of the object.
          var keys = Object.keys(value);
          var visibleKeys = arrayToHash(keys);

          if (ctx.showHidden) {
            keys = Object.getOwnPropertyNames(value);
          }

          // IE doesn't make error fields non-enumerable
          // http://msdn.microsoft.com/en-us/library/ie/dww52sbt(v=vs.94).aspx
          if (
            isError(value) &&
            (keys.indexOf('message') >= 0 || keys.indexOf('description') >= 0)
          ) {
            return formatError(value);
          }

          // Some type of object without properties can be shortcutted.
          if (keys.length === 0) {
            if (isFunction(value)) {
              var name = value.name ? ': ' + value.name : '';
              return ctx.stylize('[Function' + name + ']', 'special');
            }
            if (isRegExp(value)) {
              return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');
            }
            if (isDate(value)) {
              return ctx.stylize(Date.prototype.toString.call(value), 'date');
            }
            if (isError(value)) {
              return formatError(value);
            }
          }

          var base = '',
            array = false,
            braces = ['{', '}'];

          // Make Array say that they are Array
          if (isArray(value)) {
            array = true;
            braces = ['[', ']'];
          }

          // Make functions say that they are functions
          if (isFunction(value)) {
            var n = value.name ? ': ' + value.name : '';
            base = ' [Function' + n + ']';
          }

          // Make RegExps say that they are RegExps
          if (isRegExp(value)) {
            base = ' ' + RegExp.prototype.toString.call(value);
          }

          // Make dates with properties first say the date
          if (isDate(value)) {
            base = ' ' + Date.prototype.toUTCString.call(value);
          }

          // Make error with message first say the error
          if (isError(value)) {
            base = ' ' + formatError(value);
          }

          if (keys.length === 0 && (!array || value.length == 0)) {
            return braces[0] + base + braces[1];
          }

          if (recurseTimes < 0) {
            if (isRegExp(value)) {
              return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');
            } else {
              return ctx.stylize('[Object]', 'special');
            }
          }

          ctx.seen.push(value);

          var output;
          if (array) {
            output = formatArray(ctx, value, recurseTimes, visibleKeys, keys);
          } else {
            output = keys.map(function (key) {
              return formatProperty(ctx, value, recurseTimes, visibleKeys, key, array);
            });
          }

          ctx.seen.pop();

          return reduceToSingleString(output, base, braces);
        }

        function formatPrimitive(ctx, value) {
          if (isUndefined(value)) return ctx.stylize('undefined', 'undefined');
          if (isString(value)) {
            var simple =
              "'" +
              JSON.stringify(value)
                .replace(/^"|"$/g, '')
                .replace(/'/g, "\\'")
                .replace(/\\"/g, '"') +
              "'";
            return ctx.stylize(simple, 'string');
          }
          if (isNumber(value)) return ctx.stylize('' + value, 'number');
          if (isBoolean(value)) return ctx.stylize('' + value, 'boolean');
          // For some reason typeof null is "object", so special case here.
          if (isNull(value)) return ctx.stylize('null', 'null');
        }

        function formatError(value) {
          return '[' + Error.prototype.toString.call(value) + ']';
        }

        function formatArray(ctx, value, recurseTimes, visibleKeys, keys) {
          var output = [];
          for (var i = 0, l = value.length; i < l; ++i) {
            if (hasOwnProperty(value, String(i))) {
              output.push(formatProperty(ctx, value, recurseTimes, visibleKeys, String(i), true));
            } else {
              output.push('');
            }
          }
          keys.forEach(function (key) {
            if (!key.match(/^\d+$/)) {
              output.push(formatProperty(ctx, value, recurseTimes, visibleKeys, key, true));
            }
          });
          return output;
        }

        function formatProperty(ctx, value, recurseTimes, visibleKeys, key, array) {
          var name, str, desc;
          desc = Object.getOwnPropertyDescriptor(value, key) || { value: value[key] };
          if (desc.get) {
            if (desc.set) {
              str = ctx.stylize('[Getter/Setter]', 'special');
            } else {
              str = ctx.stylize('[Getter]', 'special');
            }
          } else {
            if (desc.set) {
              str = ctx.stylize('[Setter]', 'special');
            }
          }
          if (!hasOwnProperty(visibleKeys, key)) {
            name = '[' + key + ']';
          }
          if (!str) {
            if (ctx.seen.indexOf(desc.value) < 0) {
              if (isNull(recurseTimes)) {
                str = formatValue(ctx, desc.value, null);
              } else {
                str = formatValue(ctx, desc.value, recurseTimes - 1);
              }
              if (str.indexOf('\n') > -1) {
                if (array) {
                  str = str
                    .split('\n')
                    .map(function (line) {
                      return '  ' + line;
                    })
                    .join('\n')
                    .substr(2);
                } else {
                  str =
                    '\n' +
                    str
                      .split('\n')
                      .map(function (line) {
                        return '   ' + line;
                      })
                      .join('\n');
                }
              }
            } else {
              str = ctx.stylize('[Circular]', 'special');
            }
          }
          if (isUndefined(name)) {
            if (array && key.match(/^\d+$/)) {
              return str;
            }
            name = JSON.stringify('' + key);
            if (name.match(/^"([a-zA-Z_][a-zA-Z_0-9]*)"$/)) {
              name = name.substr(1, name.length - 2);
              name = ctx.stylize(name, 'name');
            } else {
              name = name
                .replace(/'/g, "\\'")
                .replace(/\\"/g, '"')
                .replace(/(^"|"$)/g, "'");
              name = ctx.stylize(name, 'string');
            }
          }

          return name + ': ' + str;
        }

        function reduceToSingleString(output, base, braces) {
          var numLinesEst = 0;
          var length = output.reduce(function (prev, cur) {
            numLinesEst++;
            if (cur.indexOf('\n') >= 0) numLinesEst++;
            return prev + cur.replace(/\u001b\[\d\d?m/g, '').length + 1;
          }, 0);

          if (length > 60) {
            return (
              braces[0] +
              (base === '' ? '' : base + '\n ') +
              ' ' +
              output.join(',\n  ') +
              ' ' +
              braces[1]
            );
          }

          return braces[0] + base + ' ' + output.join(', ') + ' ' + braces[1];
        }

        // NOTE: These type checking functions intentionally don't use `instanceof`
        // because it is fragile and can be easily faked with `Object.create()`.
        function isArray(ar) {
          return Array.isArray(ar);
        }
        exports.isArray = isArray;

        function isBoolean(arg) {
          return typeof arg === 'boolean';
        }
        exports.isBoolean = isBoolean;

        function isNull(arg) {
          return arg === null;
        }
        exports.isNull = isNull;

        function isNullOrUndefined(arg) {
          return arg == null;
        }
        exports.isNullOrUndefined = isNullOrUndefined;

        function isNumber(arg) {
          return typeof arg === 'number';
        }
        exports.isNumber = isNumber;

        function isString(arg) {
          return typeof arg === 'string';
        }
        exports.isString = isString;

        function isSymbol(arg) {
          return typeof arg === 'symbol';
        }
        exports.isSymbol = isSymbol;

        function isUndefined(arg) {
          return arg === void 0;
        }
        exports.isUndefined = isUndefined;

        function isRegExp(re) {
          return isObject(re) && objectToString(re) === '[object RegExp]';
        }
        exports.isRegExp = isRegExp;

        function isObject(arg) {
          return typeof arg === 'object' && arg !== null;
        }
        exports.isObject = isObject;

        function isDate(d) {
          return isObject(d) && objectToString(d) === '[object Date]';
        }
        exports.isDate = isDate;

        function isError(e) {
          return isObject(e) && (objectToString(e) === '[object Error]' || e instanceof Error);
        }
        exports.isError = isError;

        function isFunction(arg) {
          return typeof arg === 'function';
        }
        exports.isFunction = isFunction;

        function isPrimitive(arg) {
          return (
            arg === null ||
            typeof arg === 'boolean' ||
            typeof arg === 'number' ||
            typeof arg === 'string' ||
            typeof arg === 'symbol' || // ES6 symbol
            typeof arg === 'undefined'
          );
        }
        exports.isPrimitive = isPrimitive;

        exports.isBuffer = __webpack_require__(793);

        function objectToString(o) {
          return Object.prototype.toString.call(o);
        }

        function pad(n) {
          return n < 10 ? '0' + n.toString(10) : n.toString(10);
        }

        var months = [
          'Jan',
          'Feb',
          'Mar',
          'Apr',
          'May',
          'Jun',
          'Jul',
          'Aug',
          'Sep',
          'Oct',
          'Nov',
          'Dec',
        ];

        // 26 Feb 16:19:34
        function timestamp() {
          var d = new Date();
          var time = [pad(d.getHours()), pad(d.getMinutes()), pad(d.getSeconds())].join(':');
          return [d.getDate(), months[d.getMonth()], time].join(' ');
        }

        // log is just a thin wrapper to console.log that prepends a timestamp
        exports.log = function () {
          console.log('%s - %s', timestamp(), exports.format.apply(exports, arguments));
        };

        /**
         * Inherit the prototype methods from one constructor into another.
         *
         * The Function.prototype.inherits from lang.js rewritten as a standalone
         * function (not on Function.prototype). NOTE: If this file is to be loaded
         * during bootstrapping this function needs to be rewritten using some native
         * functions as prototype setup using normal JavaScript does not work as
         * expected during bootstrapping (see mirror.js in r114903).
         *
         * @param {function} ctor Constructor function which needs to inherit the
         *     prototype.
         * @param {function} superCtor Constructor function to inherit prototype from.
         */
        exports.inherits = __webpack_require__(792);

        exports._extend = function (origin, add) {
          // Don't do anything if add isn't an object
          if (!add || !isObject(add)) return origin;

          var keys = Object.keys(add);
          var i = keys.length;
          while (i--) {
            origin[keys[i]] = add[keys[i]];
          }
          return origin;
        };

        function hasOwnProperty(obj, prop) {
          return Object.prototype.hasOwnProperty.call(obj, prop);
        }

        /* WEBPACK VAR INJECTION */
      }.call(exports, __webpack_require__(20), __webpack_require__(1)));

      /***/
    },
    /* 795 */
    /***/ function (module, exports) {
      module.exports = extend;

      var hasOwnProperty = Object.prototype.hasOwnProperty;

      function extend() {
        var target = {};

        for (var i = 0; i < arguments.length; i++) {
          var source = arguments[i];

          for (var key in source) {
            if (hasOwnProperty.call(source, key)) {
              target[key] = source[key];
            }
          }
        }

        return target;
      }

      /***/
    },
    /* 796 */
    /***/ function (module, exports) {
      /* (ignored) */
      /***/
    },
    /* 797 */
    /***/ function (module, exports) {
      /* (ignored) */
      /***/
    },
    /* 798 */
    /***/ function (module, exports) {
      /* (ignored) */
      /***/
    },
    /* 799 */
    /***/ function (module, exports) {
      /* (ignored) */
      /***/
    },
    /* 800 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';

      __webpack_require__(210);

      __webpack_require__(588);

      var _react = __webpack_require__(4);

      var _react2 = _interopRequireDefault(_react);

      var _reactDom = __webpack_require__(280);

      var _reactDom2 = _interopRequireDefault(_reactDom);

      var _reduxImmutable = __webpack_require__(775);

      var _redux = __webpack_require__(319);

      var _reactRedux = __webpack_require__(22);

      var _productDataReducer = __webpack_require__(358);

      var _productDataReducer2 = _interopRequireDefault(_productDataReducer);

      var _specsDataReducer = __webpack_require__(359);

      var _specsDataReducer2 = _interopRequireDefault(_specsDataReducer);

      var _compareDataReducer = __webpack_require__(357);

      var _compareDataReducer2 = _interopRequireDefault(_compareDataReducer);

      var _app2 = __webpack_require__(11);

      var _app = _interopRequireWildcard(_app2);

      var _app3 = __webpack_require__(341);

      var _app4 = _interopRequireDefault(_app3);

      var _actions = __webpack_require__(16);

      var _rulesMiddleware = __webpack_require__(356);

      var _analyticsMiddleware = __webpack_require__(354);

      var _compareMiddleware = __webpack_require__(355);

      var _queryString = __webpack_require__(660);

      var _queryString2 = _interopRequireDefault(_queryString);

      function _interopRequireWildcard(obj) {
        if (obj && obj.__esModule) {
          return obj;
        } else {
          var newObj = {};
          if (obj != null) {
            for (var key in obj) {
              if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key];
            }
          }
          newObj.default = obj;
          return newObj;
        }
      }

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      var builders = document.getElementsByClassName('builder-instance'); // Store
      // The Store is the object that brings Actiona and Reducers together
      // @SEE http://redux.js.org/docs/basics/Store.html

      var queries = _queryString2.default.parse(window.location.search);

      var stores = [];

      var reducers = (0, _reduxImmutable.combineReducers)({
        productData: _productDataReducer2.default, //static data
        specsData: _specsDataReducer2.default, //static data
        compareData: _compareDataReducer2.default,
      });

      var json = void 0,
        inlinequeries = void 0,
        restrictions = void 0,
        hideprods = void 0,
        region = void 0,
        frameonly = void 0,
        linkRoot = void 0,
        requestData = void 0,
        translations = void 0;

      for (var i = 0; i < builders.length; i++) {
        json = JSON.parse(builders[i].dataset.json);
        try {
          inlinequeries = JSON.parse(builders[i].dataset.queries);
        } catch (err) {
          inlinequeries = null;
        }

        try {
          restrictions = JSON.parse(builders[i].dataset.restrictions);
        } catch (err) {
          restrictions = [];
        }

        try {
          hideprods = JSON.parse(builders[i].dataset.hideprods);
        } catch (err) {
          hideprods = [];
        }

        try {
          region = builders[i].dataset.region;
        } catch (err) {
          region = 'us';
        }

        try {
          frameonly = builders[i].dataset.frameonly;
        } catch (err) {
          frameonly = '';
        }

        try {
          linkRoot = builders[i].dataset.linkroot;
        } catch (err) {
          linkRoot = '';
        }

        try {
          requestData = builders[i].dataset;
        } catch (err) {
          requestData = null;
        }

        try {
          translations = builders[i].dataset.translations;
        } catch (err) {
          translations = ''
        }

        stores[i] = (0, _redux.createStore)(
          reducers,
          (0, _redux.applyMiddleware)(
            _rulesMiddleware.RuleMiddleware,
            _analyticsMiddleware.AnalyticsMiddleware,
            _compareMiddleware.CompareMiddleware
          )
        );

        stores[i].dispatch((0, _actions.initData)(requestData));
        stores[i].dispatch(
          (0, _actions.loadData)(
            json.payload,
            inlinequeries ? inlinequeries : queries,
            restrictions,
            hideprods,
            region,
            frameonly,
            linkRoot,
          )
        );
        stores[i].dispatch((0, _actions.applyRules)());

        _reactDom2.default.render(
          _react2.default.createElement(
            _reactRedux.Provider,
            { store: stores[i] },
            _react2.default.createElement(_app4.default, null)
          ),
          builders[i]
        );
      }

      /***/
    },
    ,
    /* 801 */ /* 802 */
    /***/ function (module, exports, __webpack_require__) {
      __webpack_require__(210);
      module.exports = __webpack_require__(800);

      /***/
    },
    /******/
  ]
);
